/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * SilenceStatus silence status
 * @export
 * @interface SilenceStatus
 */
export interface SilenceStatus {
    /**
     * state
     * @type {string}
     * @memberof SilenceStatus
     */
    state: SilenceStatusStateEnum;
}


/**
 * @export
 */
export const SilenceStatusStateEnum = {
    ExpiredActivePending: '[expired active pending]'
} as const;
export type SilenceStatusStateEnum = typeof SilenceStatusStateEnum[keyof typeof SilenceStatusStateEnum];


/**
 * Check if a given object implements the SilenceStatus interface.
 */
export function instanceOfSilenceStatus(value: object): value is SilenceStatus {
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function SilenceStatusFromJSON(json: any): SilenceStatus {
    return SilenceStatusFromJSONTyped(json, false);
}

export function SilenceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): SilenceStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'state': json['state'],
    };
}

export function SilenceStatusToJSON(json: any): SilenceStatus {
    return SilenceStatusToJSONTyped(json, false);
}

export function SilenceStatusToJSONTyped(value?: SilenceStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': value['state'],
    };
}

