/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface CookiePreferences
 */
export interface CookiePreferences {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    analytics?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    functional?: { [key: string]: object; };
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    performance?: { [key: string]: object; };
}

/**
 * Check if a given object implements the CookiePreferences interface.
 */
export function instanceOfCookiePreferences(value: object): value is CookiePreferences {
    return true;
}

export function CookiePreferencesFromJSON(json: any): CookiePreferences {
    return CookiePreferencesFromJSONTyped(json, false);
}

export function CookiePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CookiePreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'analytics': json['analytics'] == null ? undefined : json['analytics'],
        'functional': json['functional'] == null ? undefined : json['functional'],
        'performance': json['performance'] == null ? undefined : json['performance'],
    };
}

export function CookiePreferencesToJSON(json: any): CookiePreferences {
    return CookiePreferencesToJSONTyped(json, false);
}

export function CookiePreferencesToJSONTyped(value?: CookiePreferences | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'analytics': value['analytics'],
        'functional': value['functional'],
        'performance': value['performance'],
    };
}

