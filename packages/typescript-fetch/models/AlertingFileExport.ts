/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ContactPointExport } from './ContactPointExport.js';
import {
    ContactPointExportFromJSON,
    ContactPointExportFromJSONTyped,
    ContactPointExportToJSON,
    ContactPointExportToJSONTyped,
} from './ContactPointExport.js';
import type { NotificationPolicyExport } from './NotificationPolicyExport.js';
import {
    NotificationPolicyExportFromJSON,
    NotificationPolicyExportFromJSONTyped,
    NotificationPolicyExportToJSON,
    NotificationPolicyExportToJSONTyped,
} from './NotificationPolicyExport.js';
import type { MuteTimeIntervalExport } from './MuteTimeIntervalExport.js';
import {
    MuteTimeIntervalExportFromJSON,
    MuteTimeIntervalExportFromJSONTyped,
    MuteTimeIntervalExportToJSON,
    MuteTimeIntervalExportToJSONTyped,
} from './MuteTimeIntervalExport.js';
import type { AlertRuleGroupExport } from './AlertRuleGroupExport.js';
import {
    AlertRuleGroupExportFromJSON,
    AlertRuleGroupExportFromJSONTyped,
    AlertRuleGroupExportToJSON,
    AlertRuleGroupExportToJSONTyped,
} from './AlertRuleGroupExport.js';

/**
 * 
 * @export
 * @interface AlertingFileExport
 */
export interface AlertingFileExport {
    /**
     * 
     * @type {number}
     * @memberof AlertingFileExport
     */
    apiVersion?: number;
    /**
     * 
     * @type {Array<ContactPointExport>}
     * @memberof AlertingFileExport
     */
    contactPoints?: Array<ContactPointExport>;
    /**
     * 
     * @type {Array<AlertRuleGroupExport>}
     * @memberof AlertingFileExport
     */
    groups?: Array<AlertRuleGroupExport>;
    /**
     * 
     * @type {Array<MuteTimeIntervalExport>}
     * @memberof AlertingFileExport
     */
    muteTimes?: Array<MuteTimeIntervalExport>;
    /**
     * 
     * @type {Array<NotificationPolicyExport>}
     * @memberof AlertingFileExport
     */
    policies?: Array<NotificationPolicyExport>;
}

/**
 * Check if a given object implements the AlertingFileExport interface.
 */
export function instanceOfAlertingFileExport(value: object): value is AlertingFileExport {
    return true;
}

export function AlertingFileExportFromJSON(json: any): AlertingFileExport {
    return AlertingFileExportFromJSONTyped(json, false);
}

export function AlertingFileExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingFileExport {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'contactPoints': json['contactPoints'] == null ? undefined : ((json['contactPoints'] as Array<any>).map(ContactPointExportFromJSON)),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(AlertRuleGroupExportFromJSON)),
        'muteTimes': json['muteTimes'] == null ? undefined : ((json['muteTimes'] as Array<any>).map(MuteTimeIntervalExportFromJSON)),
        'policies': json['policies'] == null ? undefined : ((json['policies'] as Array<any>).map(NotificationPolicyExportFromJSON)),
    };
}

export function AlertingFileExportToJSON(json: any): AlertingFileExport {
    return AlertingFileExportToJSONTyped(json, false);
}

export function AlertingFileExportToJSONTyped(value?: AlertingFileExport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiVersion': value['apiVersion'],
        'contactPoints': value['contactPoints'] == null ? undefined : ((value['contactPoints'] as Array<any>).map(ContactPointExportToJSON)),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(AlertRuleGroupExportToJSON)),
        'muteTimes': value['muteTimes'] == null ? undefined : ((value['muteTimes'] as Array<any>).map(MuteTimeIntervalExportToJSON)),
        'policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(NotificationPolicyExportToJSON)),
    };
}

