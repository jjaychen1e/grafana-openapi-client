/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlertManager } from './AlertManager';
import {
    AlertManagerFromJSON,
    AlertManagerFromJSONTyped,
    AlertManagerToJSON,
    AlertManagerToJSONTyped,
} from './AlertManager';

/**
 * 
 * @export
 * @interface AlertManagersResult
 */
export interface AlertManagersResult {
    /**
     * 
     * @type {Array<AlertManager>}
     * @memberof AlertManagersResult
     */
    activeAlertManagers?: Array<AlertManager>;
    /**
     * 
     * @type {Array<AlertManager>}
     * @memberof AlertManagersResult
     */
    droppedAlertManagers?: Array<AlertManager>;
}

/**
 * Check if a given object implements the AlertManagersResult interface.
 */
export function instanceOfAlertManagersResult(value: object): value is AlertManagersResult {
    return true;
}

export function AlertManagersResultFromJSON(json: any): AlertManagersResult {
    return AlertManagersResultFromJSONTyped(json, false);
}

export function AlertManagersResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertManagersResult {
    if (json == null) {
        return json;
    }
    return {
        
        'activeAlertManagers': json['activeAlertManagers'] == null ? undefined : ((json['activeAlertManagers'] as Array<any>).map(AlertManagerFromJSON)),
        'droppedAlertManagers': json['droppedAlertManagers'] == null ? undefined : ((json['droppedAlertManagers'] as Array<any>).map(AlertManagerFromJSON)),
    };
}

export function AlertManagersResultToJSON(json: any): AlertManagersResult {
    return AlertManagersResultToJSONTyped(json, false);
}

export function AlertManagersResultToJSONTyped(value?: AlertManagersResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeAlertManagers': value['activeAlertManagers'] == null ? undefined : ((value['activeAlertManagers'] as Array<any>).map(AlertManagerToJSON)),
        'droppedAlertManagers': value['droppedAlertManagers'] == null ? undefined : ((value['droppedAlertManagers'] as Array<any>).map(AlertManagerToJSON)),
    };
}

