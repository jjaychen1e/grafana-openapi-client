/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Hit
 */
export interface Hit {
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof Hit
     */
    folderId?: number;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    folderTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    folderUid?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    folderUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof Hit
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Hit
     */
    isStarred?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    slug?: string;
    /**
     * 
     * @type {number}
     * @memberof Hit
     */
    sortMeta?: number;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    sortMetaName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Hit
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    uid?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    uri?: string;
    /**
     * 
     * @type {string}
     * @memberof Hit
     */
    url?: string;
}

/**
 * Check if a given object implements the Hit interface.
 */
export function instanceOfHit(value: object): value is Hit {
    return true;
}

export function HitFromJSON(json: any): Hit {
    return HitFromJSONTyped(json, false);
}

export function HitFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hit {
    if (json == null) {
        return json;
    }
    return {
        
        'folderId': json['folderId'] == null ? undefined : json['folderId'],
        'folderTitle': json['folderTitle'] == null ? undefined : json['folderTitle'],
        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],
        'folderUrl': json['folderUrl'] == null ? undefined : json['folderUrl'],
        'id': json['id'] == null ? undefined : json['id'],
        'isStarred': json['isStarred'] == null ? undefined : json['isStarred'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'sortMeta': json['sortMeta'] == null ? undefined : json['sortMeta'],
        'sortMetaName': json['sortMetaName'] == null ? undefined : json['sortMetaName'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'] == null ? undefined : json['type'],
        'uid': json['uid'] == null ? undefined : json['uid'],
        'uri': json['uri'] == null ? undefined : json['uri'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function HitToJSON(json: any): Hit {
    return HitToJSONTyped(json, false);
}

export function HitToJSONTyped(value?: Hit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'folderId': value['folderId'],
        'folderTitle': value['folderTitle'],
        'folderUid': value['folderUid'],
        'folderUrl': value['folderUrl'],
        'id': value['id'],
        'isStarred': value['isStarred'],
        'slug': value['slug'],
        'sortMeta': value['sortMeta'],
        'sortMetaName': value['sortMetaName'],
        'tags': value['tags'],
        'title': value['title'],
        'type': value['type'],
        'uid': value['uid'],
        'uri': value['uri'],
        'url': value['url'],
    };
}

