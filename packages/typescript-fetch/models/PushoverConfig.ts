/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HTTPClientConfig } from './HTTPClientConfig';
import {
    HTTPClientConfigFromJSON,
    HTTPClientConfigFromJSONTyped,
    HTTPClientConfigToJSON,
    HTTPClientConfigToJSONTyped,
} from './HTTPClientConfig';

/**
 * 
 * @export
 * @interface PushoverConfig
 */
export interface PushoverConfig {
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    device?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    expire?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PushoverConfig
     */
    html?: boolean;
    /**
     * 
     * @type {HTTPClientConfig}
     * @memberof PushoverConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    priority?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    retry?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PushoverConfig
     */
    sendResolved?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    sound?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    token?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    tokenFile?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    ttl?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    urlTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    userKey?: string;
    /**
     * 
     * @type {string}
     * @memberof PushoverConfig
     */
    userKeyFile?: string;
}

/**
 * Check if a given object implements the PushoverConfig interface.
 */
export function instanceOfPushoverConfig(value: object): value is PushoverConfig {
    return true;
}

export function PushoverConfigFromJSON(json: any): PushoverConfig {
    return PushoverConfigFromJSONTyped(json, false);
}

export function PushoverConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PushoverConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'device': json['device'] == null ? undefined : json['device'],
        'expire': json['expire'] == null ? undefined : json['expire'],
        'html': json['html'] == null ? undefined : json['html'],
        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),
        'message': json['message'] == null ? undefined : json['message'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'retry': json['retry'] == null ? undefined : json['retry'],
        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],
        'sound': json['sound'] == null ? undefined : json['sound'],
        'title': json['title'] == null ? undefined : json['title'],
        'token': json['token'] == null ? undefined : json['token'],
        'tokenFile': json['token_file'] == null ? undefined : json['token_file'],
        'ttl': json['ttl'] == null ? undefined : json['ttl'],
        'url': json['url'] == null ? undefined : json['url'],
        'urlTitle': json['url_title'] == null ? undefined : json['url_title'],
        'userKey': json['user_key'] == null ? undefined : json['user_key'],
        'userKeyFile': json['user_key_file'] == null ? undefined : json['user_key_file'],
    };
}

export function PushoverConfigToJSON(json: any): PushoverConfig {
    return PushoverConfigToJSONTyped(json, false);
}

export function PushoverConfigToJSONTyped(value?: PushoverConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device': value['device'],
        'expire': value['expire'],
        'html': value['html'],
        'http_config': HTTPClientConfigToJSON(value['httpConfig']),
        'message': value['message'],
        'priority': value['priority'],
        'retry': value['retry'],
        'send_resolved': value['sendResolved'],
        'sound': value['sound'],
        'title': value['title'],
        'token': value['token'],
        'token_file': value['tokenFile'],
        'ttl': value['ttl'],
        'url': value['url'],
        'url_title': value['urlTitle'],
        'user_key': value['userKey'],
        'user_key_file': value['userKeyFile'],
    };
}

