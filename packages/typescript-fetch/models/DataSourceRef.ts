/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Ref to a DataSource instance
 * @export
 * @interface DataSourceRef
 */
export interface DataSourceRef {
    /**
     * The plugin type-id
     * @type {string}
     * @memberof DataSourceRef
     */
    type?: string;
    /**
     * Specific datasource instance
     * @type {string}
     * @memberof DataSourceRef
     */
    uid?: string;
}

/**
 * Check if a given object implements the DataSourceRef interface.
 */
export function instanceOfDataSourceRef(value: object): value is DataSourceRef {
    return true;
}

export function DataSourceRefFromJSON(json: any): DataSourceRef {
    return DataSourceRefFromJSONTyped(json, false);
}

export function DataSourceRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceRef {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function DataSourceRefToJSON(json: any): DataSourceRef {
    return DataSourceRefToJSONTyped(json, false);
}

export function DataSourceRefToJSONTyped(value?: DataSourceRef | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'uid': value['uid'],
    };
}

