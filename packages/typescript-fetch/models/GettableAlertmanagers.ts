/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlertManagersResult } from './AlertManagersResult';
import {
    AlertManagersResultFromJSON,
    AlertManagersResultFromJSONTyped,
    AlertManagersResultToJSON,
    AlertManagersResultToJSONTyped,
} from './AlertManagersResult';

/**
 * 
 * @export
 * @interface GettableAlertmanagers
 */
export interface GettableAlertmanagers {
    /**
     * 
     * @type {AlertManagersResult}
     * @memberof GettableAlertmanagers
     */
    data?: AlertManagersResult;
    /**
     * 
     * @type {string}
     * @memberof GettableAlertmanagers
     */
    status?: string;
}

/**
 * Check if a given object implements the GettableAlertmanagers interface.
 */
export function instanceOfGettableAlertmanagers(value: object): value is GettableAlertmanagers {
    return true;
}

export function GettableAlertmanagersFromJSON(json: any): GettableAlertmanagers {
    return GettableAlertmanagersFromJSONTyped(json, false);
}

export function GettableAlertmanagersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableAlertmanagers {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : AlertManagersResultFromJSON(json['data']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function GettableAlertmanagersToJSON(json: any): GettableAlertmanagers {
    return GettableAlertmanagersToJSONTyped(json, false);
}

export function GettableAlertmanagersToJSONTyped(value?: GettableAlertmanagers | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': AlertManagersResultToJSON(value['data']),
        'status': value['status'],
    };
}

