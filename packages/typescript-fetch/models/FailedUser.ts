/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * FailedUser holds the information of an user that failed
 * @export
 * @interface FailedUser
 */
export interface FailedUser {
    /**
     * 
     * @type {string}
     * @memberof FailedUser
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof FailedUser
     */
    login?: string;
}

/**
 * Check if a given object implements the FailedUser interface.
 */
export function instanceOfFailedUser(value: object): value is FailedUser {
    return true;
}

export function FailedUserFromJSON(json: any): FailedUser {
    return FailedUserFromJSONTyped(json, false);
}

export function FailedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): FailedUser {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['Error'] == null ? undefined : json['Error'],
        'login': json['Login'] == null ? undefined : json['Login'],
    };
}

export function FailedUserToJSON(json: any): FailedUser {
    return FailedUserToJSONTyped(json, false);
}

export function FailedUserToJSONTyped(value?: FailedUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Error': value['error'],
        'Login': value['login'],
    };
}

