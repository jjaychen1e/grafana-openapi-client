/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HTTPClientConfig } from './HTTPClientConfig';
import {
    HTTPClientConfigFromJSON,
    HTTPClientConfigFromJSONTyped,
    HTTPClientConfigToJSON,
    HTTPClientConfigToJSONTyped,
} from './HTTPClientConfig';
import type { URL } from './URL';
import {
    URLFromJSON,
    URLFromJSONTyped,
    URLToJSON,
    URLToJSONTyped,
} from './URL';

/**
 * 
 * @export
 * @interface VictorOpsConfig
 */
export interface VictorOpsConfig {
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    apiKey?: string;
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    apiKeyFile?: string;
    /**
     * 
     * @type {URL}
     * @memberof VictorOpsConfig
     */
    apiUrl?: URL;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof VictorOpsConfig
     */
    customFields?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    entityDisplayName?: string;
    /**
     * 
     * @type {HTTPClientConfig}
     * @memberof VictorOpsConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    messageType?: string;
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    monitoringTool?: string;
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    routingKey?: string;
    /**
     * 
     * @type {boolean}
     * @memberof VictorOpsConfig
     */
    sendResolved?: boolean;
    /**
     * 
     * @type {string}
     * @memberof VictorOpsConfig
     */
    stateMessage?: string;
}

/**
 * Check if a given object implements the VictorOpsConfig interface.
 */
export function instanceOfVictorOpsConfig(value: object): value is VictorOpsConfig {
    return true;
}

export function VictorOpsConfigFromJSON(json: any): VictorOpsConfig {
    return VictorOpsConfigFromJSONTyped(json, false);
}

export function VictorOpsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): VictorOpsConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'apiKey': json['api_key'] == null ? undefined : json['api_key'],
        'apiKeyFile': json['api_key_file'] == null ? undefined : json['api_key_file'],
        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),
        'customFields': json['custom_fields'] == null ? undefined : json['custom_fields'],
        'entityDisplayName': json['entity_display_name'] == null ? undefined : json['entity_display_name'],
        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),
        'messageType': json['message_type'] == null ? undefined : json['message_type'],
        'monitoringTool': json['monitoring_tool'] == null ? undefined : json['monitoring_tool'],
        'routingKey': json['routing_key'] == null ? undefined : json['routing_key'],
        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],
        'stateMessage': json['state_message'] == null ? undefined : json['state_message'],
    };
}

export function VictorOpsConfigToJSON(json: any): VictorOpsConfig {
    return VictorOpsConfigToJSONTyped(json, false);
}

export function VictorOpsConfigToJSONTyped(value?: VictorOpsConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'api_key': value['apiKey'],
        'api_key_file': value['apiKeyFile'],
        'api_url': URLToJSON(value['apiUrl']),
        'custom_fields': value['customFields'],
        'entity_display_name': value['entityDisplayName'],
        'http_config': HTTPClientConfigToJSON(value['httpConfig']),
        'message_type': value['messageType'],
        'monitoring_tool': value['monitoringTool'],
        'routing_key': value['routingKey'],
        'send_resolved': value['sendResolved'],
        'state_message': value['stateMessage'],
    };
}

