/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlertRuleNotificationSettingsExport
 */
export interface AlertRuleNotificationSettingsExport {
    /**
     * 
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupBy?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupInterval?: string;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupWait?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettingsExport
     */
    muteTimeIntervals?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    receiver?: string;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    repeatInterval?: string;
}

/**
 * Check if a given object implements the AlertRuleNotificationSettingsExport interface.
 */
export function instanceOfAlertRuleNotificationSettingsExport(value: object): value is AlertRuleNotificationSettingsExport {
    return true;
}

export function AlertRuleNotificationSettingsExportFromJSON(json: any): AlertRuleNotificationSettingsExport {
    return AlertRuleNotificationSettingsExportFromJSONTyped(json, false);
}

export function AlertRuleNotificationSettingsExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleNotificationSettingsExport {
    if (json == null) {
        return json;
    }
    return {
        
        'groupBy': json['group_by'] == null ? undefined : json['group_by'],
        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],
        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],
        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],
        'receiver': json['receiver'] == null ? undefined : json['receiver'],
        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],
    };
}

export function AlertRuleNotificationSettingsExportToJSON(json: any): AlertRuleNotificationSettingsExport {
    return AlertRuleNotificationSettingsExportToJSONTyped(json, false);
}

export function AlertRuleNotificationSettingsExportToJSONTyped(value?: AlertRuleNotificationSettingsExport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group_by': value['groupBy'],
        'group_interval': value['groupInterval'],
        'group_wait': value['groupWait'],
        'mute_time_intervals': value['muteTimeIntervals'],
        'receiver': value['receiver'],
        'repeat_interval': value['repeatInterval'],
    };
}

