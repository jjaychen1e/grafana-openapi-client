/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Base snapshot without results
 * @export
 * @interface SnapshotDTO
 */
export interface SnapshotDTO {
    /**
     * 
     * @type {Date}
     * @memberof SnapshotDTO
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof SnapshotDTO
     */
    finished?: Date;
    /**
     * 
     * @type {string}
     * @memberof SnapshotDTO
     */
    sessionUid?: string;
    /**
     * 
     * @type {string}
     * @memberof SnapshotDTO
     */
    status?: SnapshotDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof SnapshotDTO
     */
    uid?: string;
}


/**
 * @export
 */
export const SnapshotDTOStatusEnum = {
    Initializing: 'INITIALIZING',
    Creating: 'CREATING',
    PendingUpload: 'PENDING_UPLOAD',
    Uploading: 'UPLOADING',
    PendingProcessing: 'PENDING_PROCESSING',
    Processing: 'PROCESSING',
    Finished: 'FINISHED',
    Canceled: 'CANCELED',
    Error: 'ERROR',
    Unknown: 'UNKNOWN'
} as const;
export type SnapshotDTOStatusEnum = typeof SnapshotDTOStatusEnum[keyof typeof SnapshotDTOStatusEnum];


/**
 * Check if a given object implements the SnapshotDTO interface.
 */
export function instanceOfSnapshotDTO(value: object): value is SnapshotDTO {
    return true;
}

export function SnapshotDTOFromJSON(json: any): SnapshotDTO {
    return SnapshotDTOFromJSONTyped(json, false);
}

export function SnapshotDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'finished': json['finished'] == null ? undefined : (new Date(json['finished'])),
        'sessionUid': json['sessionUid'] == null ? undefined : json['sessionUid'],
        'status': json['status'] == null ? undefined : json['status'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function SnapshotDTOToJSON(json: any): SnapshotDTO {
    return SnapshotDTOToJSONTyped(json, false);
}

export function SnapshotDTOToJSONTyped(value?: SnapshotDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'finished': value['finished'] == null ? undefined : ((value['finished']).toISOString()),
        'sessionUid': value['sessionUid'],
        'status': value['status'],
        'uid': value['uid'],
    };
}

