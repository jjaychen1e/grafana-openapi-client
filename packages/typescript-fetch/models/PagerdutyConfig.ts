/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PagerdutyImage } from './PagerdutyImage';
import {
    PagerdutyImageFromJSON,
    PagerdutyImageFromJSONTyped,
    PagerdutyImageToJSON,
    PagerdutyImageToJSONTyped,
} from './PagerdutyImage';
import type { PagerdutyLink } from './PagerdutyLink';
import {
    PagerdutyLinkFromJSON,
    PagerdutyLinkFromJSONTyped,
    PagerdutyLinkToJSON,
    PagerdutyLinkToJSONTyped,
} from './PagerdutyLink';
import type { HTTPClientConfig } from './HTTPClientConfig';
import {
    HTTPClientConfigFromJSON,
    HTTPClientConfigFromJSONTyped,
    HTTPClientConfigToJSON,
    HTTPClientConfigToJSONTyped,
} from './HTTPClientConfig';
import type { URL } from './URL';
import {
    URLFromJSON,
    URLFromJSONTyped,
    URLToJSON,
    URLToJSONTyped,
} from './URL';

/**
 * 
 * @export
 * @interface PagerdutyConfig
 */
export interface PagerdutyConfig {
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    _class?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    client?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    clientUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    component?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    description?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PagerdutyConfig
     */
    details?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    group?: string;
    /**
     * 
     * @type {HTTPClientConfig}
     * @memberof PagerdutyConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     * 
     * @type {Array<PagerdutyImage>}
     * @memberof PagerdutyConfig
     */
    images?: Array<PagerdutyImage>;
    /**
     * 
     * @type {Array<PagerdutyLink>}
     * @memberof PagerdutyConfig
     */
    links?: Array<PagerdutyLink>;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    routingKey?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    routingKeyFile?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PagerdutyConfig
     */
    sendResolved?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    serviceKey?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    serviceKeyFile?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    severity?: string;
    /**
     * 
     * @type {string}
     * @memberof PagerdutyConfig
     */
    source?: string;
    /**
     * 
     * @type {URL}
     * @memberof PagerdutyConfig
     */
    url?: URL;
}

/**
 * Check if a given object implements the PagerdutyConfig interface.
 */
export function instanceOfPagerdutyConfig(value: object): value is PagerdutyConfig {
    return true;
}

export function PagerdutyConfigFromJSON(json: any): PagerdutyConfig {
    return PagerdutyConfigFromJSONTyped(json, false);
}

export function PagerdutyConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyConfig {
    if (json == null) {
        return json;
    }
    return {
        
        '_class': json['class'] == null ? undefined : json['class'],
        'client': json['client'] == null ? undefined : json['client'],
        'clientUrl': json['client_url'] == null ? undefined : json['client_url'],
        'component': json['component'] == null ? undefined : json['component'],
        'description': json['description'] == null ? undefined : json['description'],
        'details': json['details'] == null ? undefined : json['details'],
        'group': json['group'] == null ? undefined : json['group'],
        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(PagerdutyImageFromJSON)),
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(PagerdutyLinkFromJSON)),
        'routingKey': json['routing_key'] == null ? undefined : json['routing_key'],
        'routingKeyFile': json['routing_key_file'] == null ? undefined : json['routing_key_file'],
        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],
        'serviceKey': json['service_key'] == null ? undefined : json['service_key'],
        'serviceKeyFile': json['service_key_file'] == null ? undefined : json['service_key_file'],
        'severity': json['severity'] == null ? undefined : json['severity'],
        'source': json['source'] == null ? undefined : json['source'],
        'url': json['url'] == null ? undefined : URLFromJSON(json['url']),
    };
}

export function PagerdutyConfigToJSON(json: any): PagerdutyConfig {
    return PagerdutyConfigToJSONTyped(json, false);
}

export function PagerdutyConfigToJSONTyped(value?: PagerdutyConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'class': value['_class'],
        'client': value['client'],
        'client_url': value['clientUrl'],
        'component': value['component'],
        'description': value['description'],
        'details': value['details'],
        'group': value['group'],
        'http_config': HTTPClientConfigToJSON(value['httpConfig']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(PagerdutyImageToJSON)),
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(PagerdutyLinkToJSON)),
        'routing_key': value['routingKey'],
        'routing_key_file': value['routingKeyFile'],
        'send_resolved': value['sendResolved'],
        'service_key': value['serviceKey'],
        'service_key_file': value['serviceKeyFile'],
        'severity': value['severity'],
        'source': value['source'],
        'url': URLToJSON(value['url']),
    };
}

