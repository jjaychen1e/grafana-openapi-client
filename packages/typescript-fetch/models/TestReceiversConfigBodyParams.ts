/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostableApiReceiver } from './PostableApiReceiver';
import {
    PostableApiReceiverFromJSON,
    PostableApiReceiverFromJSONTyped,
    PostableApiReceiverToJSON,
    PostableApiReceiverToJSONTyped,
} from './PostableApiReceiver';
import type { TestReceiversConfigAlertParams } from './TestReceiversConfigAlertParams';
import {
    TestReceiversConfigAlertParamsFromJSON,
    TestReceiversConfigAlertParamsFromJSONTyped,
    TestReceiversConfigAlertParamsToJSON,
    TestReceiversConfigAlertParamsToJSONTyped,
} from './TestReceiversConfigAlertParams';

/**
 * 
 * @export
 * @interface TestReceiversConfigBodyParams
 */
export interface TestReceiversConfigBodyParams {
    /**
     * 
     * @type {TestReceiversConfigAlertParams}
     * @memberof TestReceiversConfigBodyParams
     */
    alert?: TestReceiversConfigAlertParams;
    /**
     * 
     * @type {Array<PostableApiReceiver>}
     * @memberof TestReceiversConfigBodyParams
     */
    receivers?: Array<PostableApiReceiver>;
}

/**
 * Check if a given object implements the TestReceiversConfigBodyParams interface.
 */
export function instanceOfTestReceiversConfigBodyParams(value: object): value is TestReceiversConfigBodyParams {
    return true;
}

export function TestReceiversConfigBodyParamsFromJSON(json: any): TestReceiversConfigBodyParams {
    return TestReceiversConfigBodyParamsFromJSONTyped(json, false);
}

export function TestReceiversConfigBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversConfigBodyParams {
    if (json == null) {
        return json;
    }
    return {
        
        'alert': json['alert'] == null ? undefined : TestReceiversConfigAlertParamsFromJSON(json['alert']),
        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(PostableApiReceiverFromJSON)),
    };
}

export function TestReceiversConfigBodyParamsToJSON(json: any): TestReceiversConfigBodyParams {
    return TestReceiversConfigBodyParamsToJSONTyped(json, false);
}

export function TestReceiversConfigBodyParamsToJSONTyped(value?: TestReceiversConfigBodyParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alert': TestReceiversConfigAlertParamsToJSON(value['alert']),
        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(PostableApiReceiverToJSON)),
    };
}

