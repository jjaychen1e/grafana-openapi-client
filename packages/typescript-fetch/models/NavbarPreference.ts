/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NavbarPreference
 */
export interface NavbarPreference {
    /**
     * 
     * @type {Array<string>}
     * @memberof NavbarPreference
     */
    bookmarkUrls?: Array<string>;
}

/**
 * Check if a given object implements the NavbarPreference interface.
 */
export function instanceOfNavbarPreference(value: object): value is NavbarPreference {
    return true;
}

export function NavbarPreferenceFromJSON(json: any): NavbarPreference {
    return NavbarPreferenceFromJSONTyped(json, false);
}

export function NavbarPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NavbarPreference {
    if (json == null) {
        return json;
    }
    return {
        
        'bookmarkUrls': json['bookmarkUrls'] == null ? undefined : json['bookmarkUrls'],
    };
}

export function NavbarPreferenceToJSON(json: any): NavbarPreference {
    return NavbarPreferenceToJSONTyped(json, false);
}

export function NavbarPreferenceToJSONTyped(value?: NavbarPreference | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bookmarkUrls': value['bookmarkUrls'],
    };
}

