/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface SnapshotResourceStats
 */
export interface SnapshotResourceStats {
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof SnapshotResourceStats
     */
    statuses?: { [key: string]: number; };
    /**
     * 
     * @type {number}
     * @memberof SnapshotResourceStats
     */
    total?: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof SnapshotResourceStats
     */
    types?: { [key: string]: number; };
}

/**
 * Check if a given object implements the SnapshotResourceStats interface.
 */
export function instanceOfSnapshotResourceStats(value: object): value is SnapshotResourceStats {
    return true;
}

export function SnapshotResourceStatsFromJSON(json: any): SnapshotResourceStats {
    return SnapshotResourceStatsFromJSONTyped(json, false);
}

export function SnapshotResourceStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotResourceStats {
    if (json == null) {
        return json;
    }
    return {
        
        'statuses': json['statuses'] == null ? undefined : json['statuses'],
        'total': json['total'] == null ? undefined : json['total'],
        'types': json['types'] == null ? undefined : json['types'],
    };
}

export function SnapshotResourceStatsToJSON(json: any): SnapshotResourceStats {
    return SnapshotResourceStatsToJSONTyped(json, false);
}

export function SnapshotResourceStatsToJSONTyped(value?: SnapshotResourceStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'statuses': value['statuses'],
        'total': value['total'],
        'types': value['types'],
    };
}

