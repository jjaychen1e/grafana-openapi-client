/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface UpdateServiceAccountForm
 */
export interface UpdateServiceAccountForm {
    /**
     * 
     * @type {boolean}
     * @memberof UpdateServiceAccountForm
     */
    isDisabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UpdateServiceAccountForm
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateServiceAccountForm
     */
    role?: UpdateServiceAccountFormRoleEnum;
    /**
     * 
     * @type {number}
     * @memberof UpdateServiceAccountForm
     */
    serviceAccountId?: number;
}


/**
 * @export
 */
export const UpdateServiceAccountFormRoleEnum = {
    None: 'None',
    Viewer: 'Viewer',
    Editor: 'Editor',
    Admin: 'Admin'
} as const;
export type UpdateServiceAccountFormRoleEnum = typeof UpdateServiceAccountFormRoleEnum[keyof typeof UpdateServiceAccountFormRoleEnum];


/**
 * Check if a given object implements the UpdateServiceAccountForm interface.
 */
export function instanceOfUpdateServiceAccountForm(value: object): value is UpdateServiceAccountForm {
    return true;
}

export function UpdateServiceAccountFormFromJSON(json: any): UpdateServiceAccountForm {
    return UpdateServiceAccountFormFromJSONTyped(json, false);
}

export function UpdateServiceAccountFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccountForm {
    if (json == null) {
        return json;
    }
    return {
        
        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],
        'name': json['name'] == null ? undefined : json['name'],
        'role': json['role'] == null ? undefined : json['role'],
        'serviceAccountId': json['serviceAccountId'] == null ? undefined : json['serviceAccountId'],
    };
}

export function UpdateServiceAccountFormToJSON(json: any): UpdateServiceAccountForm {
    return UpdateServiceAccountFormToJSONTyped(json, false);
}

export function UpdateServiceAccountFormToJSONTyped(value?: UpdateServiceAccountForm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isDisabled': value['isDisabled'],
        'name': value['name'],
        'role': value['role'],
        'serviceAccountId': value['serviceAccountId'],
    };
}

