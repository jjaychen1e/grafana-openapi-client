/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface HealthResponse
 */
export interface HealthResponse {
    /**
     * 
     * @type {string}
     * @memberof HealthResponse
     */
    commit?: string;
    /**
     * 
     * @type {string}
     * @memberof HealthResponse
     */
    database?: string;
    /**
     * 
     * @type {string}
     * @memberof HealthResponse
     */
    enterpriseCommit?: string;
    /**
     * 
     * @type {string}
     * @memberof HealthResponse
     */
    version?: string;
}

/**
 * Check if a given object implements the HealthResponse interface.
 */
export function instanceOfHealthResponse(value: object): value is HealthResponse {
    return true;
}

export function HealthResponseFromJSON(json: any): HealthResponse {
    return HealthResponseFromJSONTyped(json, false);
}

export function HealthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'commit': json['commit'] == null ? undefined : json['commit'],
        'database': json['database'] == null ? undefined : json['database'],
        'enterpriseCommit': json['enterpriseCommit'] == null ? undefined : json['enterpriseCommit'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function HealthResponseToJSON(json: any): HealthResponse {
    return HealthResponseToJSONTyped(json, false);
}

export function HealthResponseToJSONTyped(value?: HealthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'commit': value['commit'],
        'database': value['database'],
        'enterpriseCommit': value['enterpriseCommit'],
        'version': value['version'],
    };
}

