/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlertingStatus
 */
export interface AlertingStatus {
    /**
     * 
     * @type {string}
     * @memberof AlertingStatus
     */
    alertmanagersChoice?: AlertingStatusAlertmanagersChoiceEnum;
    /**
     * 
     * @type {number}
     * @memberof AlertingStatus
     */
    numExternalAlertmanagers?: number;
}


/**
 * @export
 */
export const AlertingStatusAlertmanagersChoiceEnum = {
    All: 'all',
    Internal: 'internal',
    External: 'external'
} as const;
export type AlertingStatusAlertmanagersChoiceEnum = typeof AlertingStatusAlertmanagersChoiceEnum[keyof typeof AlertingStatusAlertmanagersChoiceEnum];


/**
 * Check if a given object implements the AlertingStatus interface.
 */
export function instanceOfAlertingStatus(value: object): value is AlertingStatus {
    return true;
}

export function AlertingStatusFromJSON(json: any): AlertingStatus {
    return AlertingStatusFromJSONTyped(json, false);
}

export function AlertingStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'alertmanagersChoice': json['alertmanagersChoice'] == null ? undefined : json['alertmanagersChoice'],
        'numExternalAlertmanagers': json['numExternalAlertmanagers'] == null ? undefined : json['numExternalAlertmanagers'],
    };
}

export function AlertingStatusToJSON(json: any): AlertingStatus {
    return AlertingStatusToJSONTyped(json, false);
}

export function AlertingStatusToJSONTyped(value?: AlertingStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alertmanagersChoice': value['alertmanagersChoice'],
        'numExternalAlertmanagers': value['numExternalAlertmanagers'],
    };
}

