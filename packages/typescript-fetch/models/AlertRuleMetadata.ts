/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AlertRuleEditorSettings } from './AlertRuleEditorSettings.js';
import {
    AlertRuleEditorSettingsFromJSON,
    AlertRuleEditorSettingsFromJSONTyped,
    AlertRuleEditorSettingsToJSON,
    AlertRuleEditorSettingsToJSONTyped,
} from './AlertRuleEditorSettings.js';

/**
 * 
 * @export
 * @interface AlertRuleMetadata
 */
export interface AlertRuleMetadata {
    /**
     * 
     * @type {AlertRuleEditorSettings}
     * @memberof AlertRuleMetadata
     */
    editorSettings?: AlertRuleEditorSettings;
}

/**
 * Check if a given object implements the AlertRuleMetadata interface.
 */
export function instanceOfAlertRuleMetadata(value: object): value is AlertRuleMetadata {
    return true;
}

export function AlertRuleMetadataFromJSON(json: any): AlertRuleMetadata {
    return AlertRuleMetadataFromJSONTyped(json, false);
}

export function AlertRuleMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'editorSettings': json['editor_settings'] == null ? undefined : AlertRuleEditorSettingsFromJSON(json['editor_settings']),
    };
}

export function AlertRuleMetadataToJSON(json: any): AlertRuleMetadata {
    return AlertRuleMetadataToJSONTyped(json, false);
}

export function AlertRuleMetadataToJSONTyped(value?: AlertRuleMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'editor_settings': AlertRuleEditorSettingsToJSON(value['editorSettings']),
    };
}

