/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TimeIntervalTimeRange } from './TimeIntervalTimeRange.js';
import {
    TimeIntervalTimeRangeFromJSON,
    TimeIntervalTimeRangeFromJSONTyped,
    TimeIntervalTimeRangeToJSON,
    TimeIntervalTimeRangeToJSONTyped,
} from './TimeIntervalTimeRange.js';

/**
 * 
 * @export
 * @interface TimeIntervalItem
 */
export interface TimeIntervalItem {
    /**
     * 
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    daysOfMonth?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TimeIntervalItem
     */
    location?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    months?: Array<string>;
    /**
     * 
     * @type {Array<TimeIntervalTimeRange>}
     * @memberof TimeIntervalItem
     */
    times?: Array<TimeIntervalTimeRange>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    weekdays?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    years?: Array<string>;
}

/**
 * Check if a given object implements the TimeIntervalItem interface.
 */
export function instanceOfTimeIntervalItem(value: object): value is TimeIntervalItem {
    return true;
}

export function TimeIntervalItemFromJSON(json: any): TimeIntervalItem {
    return TimeIntervalItemFromJSONTyped(json, false);
}

export function TimeIntervalItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeIntervalItem {
    if (json == null) {
        return json;
    }
    return {
        
        'daysOfMonth': json['days_of_month'] == null ? undefined : json['days_of_month'],
        'location': json['location'] == null ? undefined : json['location'],
        'months': json['months'] == null ? undefined : json['months'],
        'times': json['times'] == null ? undefined : ((json['times'] as Array<any>).map(TimeIntervalTimeRangeFromJSON)),
        'weekdays': json['weekdays'] == null ? undefined : json['weekdays'],
        'years': json['years'] == null ? undefined : json['years'],
    };
}

export function TimeIntervalItemToJSON(json: any): TimeIntervalItem {
    return TimeIntervalItemToJSONTyped(json, false);
}

export function TimeIntervalItemToJSONTyped(value?: TimeIntervalItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'days_of_month': value['daysOfMonth'],
        'location': value['location'],
        'months': value['months'],
        'times': value['times'] == null ? undefined : ((value['times'] as Array<any>).map(TimeIntervalTimeRangeToJSON)),
        'weekdays': value['weekdays'],
        'years': value['years'],
    };
}

