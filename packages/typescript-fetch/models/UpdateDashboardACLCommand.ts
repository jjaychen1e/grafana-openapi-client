/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DashboardACLUpdateItem } from './DashboardACLUpdateItem';
import {
    DashboardACLUpdateItemFromJSON,
    DashboardACLUpdateItemFromJSONTyped,
    DashboardACLUpdateItemToJSON,
    DashboardACLUpdateItemToJSONTyped,
} from './DashboardACLUpdateItem';

/**
 * 
 * @export
 * @interface UpdateDashboardACLCommand
 */
export interface UpdateDashboardACLCommand {
    /**
     * 
     * @type {Array<DashboardACLUpdateItem>}
     * @memberof UpdateDashboardACLCommand
     */
    items?: Array<DashboardACLUpdateItem>;
}

/**
 * Check if a given object implements the UpdateDashboardACLCommand interface.
 */
export function instanceOfUpdateDashboardACLCommand(value: object): value is UpdateDashboardACLCommand {
    return true;
}

export function UpdateDashboardACLCommandFromJSON(json: any): UpdateDashboardACLCommand {
    return UpdateDashboardACLCommandFromJSONTyped(json, false);
}

export function UpdateDashboardACLCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDashboardACLCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(DashboardACLUpdateItemFromJSON)),
    };
}

export function UpdateDashboardACLCommandToJSON(json: any): UpdateDashboardACLCommand {
    return UpdateDashboardACLCommandToJSONTyped(json, false);
}

export function UpdateDashboardACLCommandToJSONTyped(value?: UpdateDashboardACLCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(DashboardACLUpdateItemToJSON)),
    };
}

