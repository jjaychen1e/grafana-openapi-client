/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * CreateLibraryElementCommand is the command for adding a LibraryElement
 * @export
 * @interface CreateLibraryElementCommand
 */
export interface CreateLibraryElementCommand {
    /**
     * ID of the folder where the library element is stored.
     * 
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof CreateLibraryElementCommand
     */
    folderId?: number;
    /**
     * UID of the folder where the library element is stored.
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    folderUid?: string;
    /**
     * Kind of element to create, Use 1 for library panels or 2 for c.
     * Description:
     * 1 - library panels
     * 2 - library variables
     * @type {number}
     * @memberof CreateLibraryElementCommand
     */
    kind?: CreateLibraryElementCommandKindEnum;
    /**
     * The JSON model for the library element.
     * @type {object}
     * @memberof CreateLibraryElementCommand
     */
    model?: object;
    /**
     * Name of the library element.
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    uid?: string;
}


/**
 * @export
 */
export const CreateLibraryElementCommandKindEnum = {
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;
export type CreateLibraryElementCommandKindEnum = typeof CreateLibraryElementCommandKindEnum[keyof typeof CreateLibraryElementCommandKindEnum];


/**
 * Check if a given object implements the CreateLibraryElementCommand interface.
 */
export function instanceOfCreateLibraryElementCommand(value: object): value is CreateLibraryElementCommand {
    return true;
}

export function CreateLibraryElementCommandFromJSON(json: any): CreateLibraryElementCommand {
    return CreateLibraryElementCommandFromJSONTyped(json, false);
}

export function CreateLibraryElementCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLibraryElementCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'folderId': json['folderId'] == null ? undefined : json['folderId'],
        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'model': json['model'] == null ? undefined : json['model'],
        'name': json['name'] == null ? undefined : json['name'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function CreateLibraryElementCommandToJSON(json: any): CreateLibraryElementCommand {
    return CreateLibraryElementCommandToJSONTyped(json, false);
}

export function CreateLibraryElementCommandToJSONTyped(value?: CreateLibraryElementCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'folderId': value['folderId'],
        'folderUid': value['folderUid'],
        'kind': value['kind'],
        'model': value['model'],
        'name': value['name'],
        'uid': value['uid'],
    };
}

