/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TeamMemberDTO
 */
export interface TeamMemberDTO {
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    authModule?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    avatarUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    email?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof TeamMemberDTO
     */
    labels?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    login?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof TeamMemberDTO
     */
    orgId?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamMemberDTO
     */
    permission?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamMemberDTO
     */
    teamId?: number;
    /**
     * 
     * @type {string}
     * @memberof TeamMemberDTO
     */
    teamUID?: string;
    /**
     * 
     * @type {number}
     * @memberof TeamMemberDTO
     */
    userId?: number;
}

/**
 * Check if a given object implements the TeamMemberDTO interface.
 */
export function instanceOfTeamMemberDTO(value: object): value is TeamMemberDTO {
    return true;
}

export function TeamMemberDTOFromJSON(json: any): TeamMemberDTO {
    return TeamMemberDTOFromJSONTyped(json, false);
}

export function TeamMemberDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamMemberDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'authModule': json['auth_module'] == null ? undefined : json['auth_module'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
        'email': json['email'] == null ? undefined : json['email'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'login': json['login'] == null ? undefined : json['login'],
        'name': json['name'] == null ? undefined : json['name'],
        'orgId': json['orgId'] == null ? undefined : json['orgId'],
        'permission': json['permission'] == null ? undefined : json['permission'],
        'teamId': json['teamId'] == null ? undefined : json['teamId'],
        'teamUID': json['teamUID'] == null ? undefined : json['teamUID'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function TeamMemberDTOToJSON(json: any): TeamMemberDTO {
    return TeamMemberDTOToJSONTyped(json, false);
}

export function TeamMemberDTOToJSONTyped(value?: TeamMemberDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'auth_module': value['authModule'],
        'avatarUrl': value['avatarUrl'],
        'email': value['email'],
        'labels': value['labels'],
        'login': value['login'],
        'name': value['name'],
        'orgId': value['orgId'],
        'permission': value['permission'],
        'teamId': value['teamId'],
        'teamUID': value['teamUID'],
        'userId': value['userId'],
    };
}

