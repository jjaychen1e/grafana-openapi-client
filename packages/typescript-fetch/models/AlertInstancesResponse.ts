/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AlertInstancesResponse
 */
export interface AlertInstancesResponse {
    /**
     * Instances is an array of arrow encoded dataframes
     * each frame has a single row, and a column for each instance (alert identified by unique labels) with a boolean value (firing/not firing)
     * @type {Array<Array<number>>}
     * @memberof AlertInstancesResponse
     */
    instances?: Array<Array<number>>;
}

/**
 * Check if a given object implements the AlertInstancesResponse interface.
 */
export function instanceOfAlertInstancesResponse(value: object): value is AlertInstancesResponse {
    return true;
}

export function AlertInstancesResponseFromJSON(json: any): AlertInstancesResponse {
    return AlertInstancesResponseFromJSONTyped(json, false);
}

export function AlertInstancesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertInstancesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'instances': json['instances'] == null ? undefined : json['instances'],
    };
}

export function AlertInstancesResponseToJSON(json: any): AlertInstancesResponse {
    return AlertInstancesResponseToJSONTyped(json, false);
}

export function AlertInstancesResponseToJSONTyped(value?: AlertInstancesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'instances': value['instances'],
    };
}

