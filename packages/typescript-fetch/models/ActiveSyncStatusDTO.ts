/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SyncResult } from './SyncResult.js';
import {
    SyncResultFromJSON,
    SyncResultFromJSONTyped,
    SyncResultToJSON,
    SyncResultToJSONTyped,
} from './SyncResult.js';

/**
 * ActiveSyncStatusDTO holds the information for LDAP background Sync
 * @export
 * @interface ActiveSyncStatusDTO
 */
export interface ActiveSyncStatusDTO {
    /**
     * 
     * @type {boolean}
     * @memberof ActiveSyncStatusDTO
     */
    enabled?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ActiveSyncStatusDTO
     */
    nextSync?: Date;
    /**
     * 
     * @type {SyncResult}
     * @memberof ActiveSyncStatusDTO
     */
    prevSync?: SyncResult;
    /**
     * 
     * @type {string}
     * @memberof ActiveSyncStatusDTO
     */
    schedule?: string;
}

/**
 * Check if a given object implements the ActiveSyncStatusDTO interface.
 */
export function instanceOfActiveSyncStatusDTO(value: object): value is ActiveSyncStatusDTO {
    return true;
}

export function ActiveSyncStatusDTOFromJSON(json: any): ActiveSyncStatusDTO {
    return ActiveSyncStatusDTOFromJSONTyped(json, false);
}

export function ActiveSyncStatusDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveSyncStatusDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'nextSync': json['nextSync'] == null ? undefined : (new Date(json['nextSync'])),
        'prevSync': json['prevSync'] == null ? undefined : SyncResultFromJSON(json['prevSync']),
        'schedule': json['schedule'] == null ? undefined : json['schedule'],
    };
}

export function ActiveSyncStatusDTOToJSON(json: any): ActiveSyncStatusDTO {
    return ActiveSyncStatusDTOToJSONTyped(json, false);
}

export function ActiveSyncStatusDTOToJSONTyped(value?: ActiveSyncStatusDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
        'nextSync': value['nextSync'] == null ? undefined : ((value['nextSync']).toISOString()),
        'prevSync': SyncResultToJSON(value['prevSync']),
        'schedule': value['schedule'],
    };
}

