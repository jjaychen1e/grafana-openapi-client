/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Record
 */
export interface Record {
    /**
     * Which expression node should be used as the input for the recorded metric.
     * @type {string}
     * @memberof Record
     */
    from: string;
    /**
     * Name of the recorded metric.
     * @type {string}
     * @memberof Record
     */
    metric: string;
}

/**
 * Check if a given object implements the Record interface.
 */
export function instanceOfRecord(value: object): value is Record {
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('metric' in value) || value['metric'] === undefined) return false;
    return true;
}

export function RecordFromJSON(json: any): Record {
    return RecordFromJSONTyped(json, false);
}

export function RecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Record {
    if (json == null) {
        return json;
    }
    return {
        
        'from': json['from'],
        'metric': json['metric'],
    };
}

export function RecordToJSON(json: any): Record {
    return RecordToJSONTyped(json, false);
}

export function RecordToJSONTyped(value?: Record | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'from': value['from'],
        'metric': value['metric'],
    };
}

