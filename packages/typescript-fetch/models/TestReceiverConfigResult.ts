/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestReceiverConfigResult
 */
export interface TestReceiverConfigResult {
    /**
     * 
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    error?: string;
    /**
     * 
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    uid?: string;
}

/**
 * Check if a given object implements the TestReceiverConfigResult interface.
 */
export function instanceOfTestReceiverConfigResult(value: object): value is TestReceiverConfigResult {
    return true;
}

export function TestReceiverConfigResultFromJSON(json: any): TestReceiverConfigResult {
    return TestReceiverConfigResultFromJSONTyped(json, false);
}

export function TestReceiverConfigResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiverConfigResult {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'] == null ? undefined : json['error'],
        'name': json['name'] == null ? undefined : json['name'],
        'status': json['status'] == null ? undefined : json['status'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function TestReceiverConfigResultToJSON(json: any): TestReceiverConfigResult {
    return TestReceiverConfigResultToJSONTyped(json, false);
}

export function TestReceiverConfigResultToJSONTyped(value?: TestReceiverConfigResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'name': value['name'],
        'status': value['status'],
        'uid': value['uid'],
    };
}

