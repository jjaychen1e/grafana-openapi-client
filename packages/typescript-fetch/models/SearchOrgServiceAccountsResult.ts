/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ServiceAccountDTO } from './ServiceAccountDTO.js';
import {
    ServiceAccountDTOFromJSON,
    ServiceAccountDTOFromJSONTyped,
    ServiceAccountDTOToJSON,
    ServiceAccountDTOToJSONTyped,
} from './ServiceAccountDTO.js';

/**
 * swagger: model
 * @export
 * @interface SearchOrgServiceAccountsResult
 */
export interface SearchOrgServiceAccountsResult {
    /**
     * 
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    perPage?: number;
    /**
     * 
     * @type {Array<ServiceAccountDTO>}
     * @memberof SearchOrgServiceAccountsResult
     */
    serviceAccounts?: Array<ServiceAccountDTO>;
    /**
     * It can be used for pagination of the user list
     * E.g. if totalCount is equal to 100 users and
     * the perpage parameter is set to 10 then there are 10 pages of users.
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    totalCount?: number;
}

/**
 * Check if a given object implements the SearchOrgServiceAccountsResult interface.
 */
export function instanceOfSearchOrgServiceAccountsResult(value: object): value is SearchOrgServiceAccountsResult {
    return true;
}

export function SearchOrgServiceAccountsResultFromJSON(json: any): SearchOrgServiceAccountsResult {
    return SearchOrgServiceAccountsResultFromJSONTyped(json, false);
}

export function SearchOrgServiceAccountsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgServiceAccountsResult {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'] == null ? undefined : json['page'],
        'perPage': json['perPage'] == null ? undefined : json['perPage'],
        'serviceAccounts': json['serviceAccounts'] == null ? undefined : ((json['serviceAccounts'] as Array<any>).map(ServiceAccountDTOFromJSON)),
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
    };
}

export function SearchOrgServiceAccountsResultToJSON(json: any): SearchOrgServiceAccountsResult {
    return SearchOrgServiceAccountsResultToJSONTyped(json, false);
}

export function SearchOrgServiceAccountsResultToJSONTyped(value?: SearchOrgServiceAccountsResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': value['page'],
        'perPage': value['perPage'],
        'serviceAccounts': value['serviceAccounts'] == null ? undefined : ((value['serviceAccounts'] as Array<any>).map(ServiceAccountDTOToJSON)),
        'totalCount': value['totalCount'],
    };
}

