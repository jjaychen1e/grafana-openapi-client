/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PublicError } from './PublicError.js';
import {
    PublicErrorFromJSON,
    PublicErrorFromJSONTyped,
    PublicErrorToJSON,
    PublicErrorToJSONTyped,
} from './PublicError.js';

/**
 * 
 * @export
 * @interface ForbiddenError
 */
export interface ForbiddenError {
    /**
     * 
     * @type {PublicError}
     * @memberof ForbiddenError
     */
    body?: PublicError;
}

/**
 * Check if a given object implements the ForbiddenError interface.
 */
export function instanceOfForbiddenError(value: object): value is ForbiddenError {
    return true;
}

export function ForbiddenErrorFromJSON(json: any): ForbiddenError {
    return ForbiddenErrorFromJSONTyped(json, false);
}

export function ForbiddenErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForbiddenError {
    if (json == null) {
        return json;
    }
    return {
        
        'body': json['body'] == null ? undefined : PublicErrorFromJSON(json['body']),
    };
}

export function ForbiddenErrorToJSON(json: any): ForbiddenError {
    return ForbiddenErrorToJSONTyped(json, false);
}

export function ForbiddenErrorToJSONTyped(value?: ForbiddenError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'body': PublicErrorToJSON(value['body']),
    };
}

