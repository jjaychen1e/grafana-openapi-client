/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Unstructured } from './Unstructured.js';
import {
    UnstructuredFromJSON,
    UnstructuredFromJSONTyped,
    UnstructuredToJSON,
    UnstructuredToJSONTyped,
} from './Unstructured.js';

/**
 * These are the values expected to be sent from an end user
 * +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
 * @export
 * @interface DashboardCreateCommand
 */
export interface DashboardCreateCommand {
    /**
     * APIVersion defines the versioned schema of this representation of an object.
     * Servers should convert recognized schemas to the latest internal value, and
     * may reject unrecognized values.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * +optional
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    apiVersion?: string;
    /**
     * 
     * @type {Unstructured}
     * @memberof DashboardCreateCommand
     */
    dashboard: Unstructured;
    /**
     * When the snapshot should expire in seconds in seconds. Default is never to expire.
     * @type {number}
     * @memberof DashboardCreateCommand
     */
    expires?: number;
    /**
     * these are passed when storing an external snapshot ref
     * Save the snapshot on an external server rather than locally.
     * @type {boolean}
     * @memberof DashboardCreateCommand
     */
    external?: boolean;
    /**
     * Kind is a string value representing the REST resource this object represents.
     * Servers may infer this from the endpoint the client submits requests to.
     * Cannot be updated.
     * In CamelCase.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * +optional
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    kind?: string;
    /**
     * Snapshot name
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    name?: string;
}

/**
 * Check if a given object implements the DashboardCreateCommand interface.
 */
export function instanceOfDashboardCreateCommand(value: object): value is DashboardCreateCommand {
    if (!('dashboard' in value) || value['dashboard'] === undefined) return false;
    return true;
}

export function DashboardCreateCommandFromJSON(json: any): DashboardCreateCommand {
    return DashboardCreateCommandFromJSONTyped(json, false);
}

export function DashboardCreateCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardCreateCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'dashboard': UnstructuredFromJSON(json['dashboard']),
        'expires': json['expires'] == null ? undefined : json['expires'],
        'external': json['external'] == null ? undefined : json['external'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function DashboardCreateCommandToJSON(json: any): DashboardCreateCommand {
    return DashboardCreateCommandToJSONTyped(json, false);
}

export function DashboardCreateCommandToJSONTyped(value?: DashboardCreateCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiVersion': value['apiVersion'],
        'dashboard': UnstructuredToJSON(value['dashboard']),
        'expires': value['expires'],
        'external': value['external'],
        'kind': value['kind'],
        'name': value['name'],
    };
}

