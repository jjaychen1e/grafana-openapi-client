/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { LibraryElementDTOMetaUser } from './LibraryElementDTOMetaUser.js';
import {
    LibraryElementDTOMetaUserFromJSON,
    LibraryElementDTOMetaUserFromJSONTyped,
    LibraryElementDTOMetaUserToJSON,
    LibraryElementDTOMetaUserToJSONTyped,
} from './LibraryElementDTOMetaUser.js';

/**
 * 
 * @export
 * @interface LibraryElementConnectionDTO
 */
export interface LibraryElementConnectionDTO {
    /**
     * 
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    connectionId?: number;
    /**
     * 
     * @type {string}
     * @memberof LibraryElementConnectionDTO
     */
    connectionUid?: string;
    /**
     * 
     * @type {Date}
     * @memberof LibraryElementConnectionDTO
     */
    created?: Date;
    /**
     * 
     * @type {LibraryElementDTOMetaUser}
     * @memberof LibraryElementConnectionDTO
     */
    createdBy?: LibraryElementDTOMetaUser;
    /**
     * 
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    elementId?: number;
    /**
     * 
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    kind?: number;
}

/**
 * Check if a given object implements the LibraryElementConnectionDTO interface.
 */
export function instanceOfLibraryElementConnectionDTO(value: object): value is LibraryElementConnectionDTO {
    return true;
}

export function LibraryElementConnectionDTOFromJSON(json: any): LibraryElementConnectionDTO {
    return LibraryElementConnectionDTOFromJSONTyped(json, false);
}

export function LibraryElementConnectionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'connectionId': json['connectionId'] == null ? undefined : json['connectionId'],
        'connectionUid': json['connectionUid'] == null ? undefined : json['connectionUid'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'createdBy': json['createdBy'] == null ? undefined : LibraryElementDTOMetaUserFromJSON(json['createdBy']),
        'elementId': json['elementId'] == null ? undefined : json['elementId'],
        'id': json['id'] == null ? undefined : json['id'],
        'kind': json['kind'] == null ? undefined : json['kind'],
    };
}

export function LibraryElementConnectionDTOToJSON(json: any): LibraryElementConnectionDTO {
    return LibraryElementConnectionDTOToJSONTyped(json, false);
}

export function LibraryElementConnectionDTOToJSONTyped(value?: LibraryElementConnectionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'connectionId': value['connectionId'],
        'connectionUid': value['connectionUid'],
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'createdBy': LibraryElementDTOMetaUserToJSON(value['createdBy']),
        'elementId': value['elementId'],
        'id': value['id'],
        'kind': value['kind'],
    };
}

