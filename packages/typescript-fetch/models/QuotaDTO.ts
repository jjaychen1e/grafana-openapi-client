/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QuotaDTO
 */
export interface QuotaDTO {
    /**
     * 
     * @type {number}
     * @memberof QuotaDTO
     */
    limit?: number;
    /**
     * 
     * @type {number}
     * @memberof QuotaDTO
     */
    orgId?: number;
    /**
     * 
     * @type {string}
     * @memberof QuotaDTO
     */
    target?: string;
    /**
     * 
     * @type {number}
     * @memberof QuotaDTO
     */
    used?: number;
    /**
     * 
     * @type {number}
     * @memberof QuotaDTO
     */
    userId?: number;
}

/**
 * Check if a given object implements the QuotaDTO interface.
 */
export function instanceOfQuotaDTO(value: object): value is QuotaDTO {
    return true;
}

export function QuotaDTOFromJSON(json: any): QuotaDTO {
    return QuotaDTOFromJSONTyped(json, false);
}

export function QuotaDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotaDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'limit': json['limit'] == null ? undefined : json['limit'],
        'orgId': json['org_id'] == null ? undefined : json['org_id'],
        'target': json['target'] == null ? undefined : json['target'],
        'used': json['used'] == null ? undefined : json['used'],
        'userId': json['user_id'] == null ? undefined : json['user_id'],
    };
}

export function QuotaDTOToJSON(json: any): QuotaDTO {
    return QuotaDTOToJSONTyped(json, false);
}

export function QuotaDTOToJSONTyped(value?: QuotaDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'limit': value['limit'],
        'org_id': value['orgId'],
        'target': value['target'],
        'used': value['used'],
        'user_id': value['userId'],
    };
}

