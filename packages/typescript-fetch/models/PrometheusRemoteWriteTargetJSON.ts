/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface PrometheusRemoteWriteTargetJSON
 */
export interface PrometheusRemoteWriteTargetJSON {
    /**
     * 
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    dataSourceUid?: string;
    /**
     * 
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    remoteWritePath?: string;
}

/**
 * Check if a given object implements the PrometheusRemoteWriteTargetJSON interface.
 */
export function instanceOfPrometheusRemoteWriteTargetJSON(value: object): value is PrometheusRemoteWriteTargetJSON {
    return true;
}

export function PrometheusRemoteWriteTargetJSONFromJSON(json: any): PrometheusRemoteWriteTargetJSON {
    return PrometheusRemoteWriteTargetJSONFromJSONTyped(json, false);
}

export function PrometheusRemoteWriteTargetJSONFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrometheusRemoteWriteTargetJSON {
    if (json == null) {
        return json;
    }
    return {
        
        'dataSourceUid': json['data_source_uid'] == null ? undefined : json['data_source_uid'],
        'id': json['id'] == null ? undefined : json['id'],
        'remoteWritePath': json['remote_write_path'] == null ? undefined : json['remote_write_path'],
    };
}

export function PrometheusRemoteWriteTargetJSONToJSON(json: any): PrometheusRemoteWriteTargetJSON {
    return PrometheusRemoteWriteTargetJSONToJSONTyped(json, false);
}

export function PrometheusRemoteWriteTargetJSONToJSONTyped(value?: PrometheusRemoteWriteTargetJSON | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data_source_uid': value['dataSourceUid'],
        'id': value['id'],
        'remote_write_path': value['remoteWritePath'],
    };
}

