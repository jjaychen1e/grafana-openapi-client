/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GettableNGalertConfig
 */
export interface GettableNGalertConfig {
    /**
     * 
     * @type {string}
     * @memberof GettableNGalertConfig
     */
    alertmanagersChoice?: GettableNGalertConfigAlertmanagersChoiceEnum;
}


/**
 * @export
 */
export const GettableNGalertConfigAlertmanagersChoiceEnum = {
    All: 'all',
    Internal: 'internal',
    External: 'external'
} as const;
export type GettableNGalertConfigAlertmanagersChoiceEnum = typeof GettableNGalertConfigAlertmanagersChoiceEnum[keyof typeof GettableNGalertConfigAlertmanagersChoiceEnum];


/**
 * Check if a given object implements the GettableNGalertConfig interface.
 */
export function instanceOfGettableNGalertConfig(value: object): value is GettableNGalertConfig {
    return true;
}

export function GettableNGalertConfigFromJSON(json: any): GettableNGalertConfig {
    return GettableNGalertConfigFromJSONTyped(json, false);
}

export function GettableNGalertConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableNGalertConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'alertmanagersChoice': json['alertmanagersChoice'] == null ? undefined : json['alertmanagersChoice'],
    };
}

export function GettableNGalertConfigToJSON(json: any): GettableNGalertConfig {
    return GettableNGalertConfigToJSONTyped(json, false);
}

export function GettableNGalertConfigToJSONTyped(value?: GettableNGalertConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alertmanagersChoice': value['alertmanagersChoice'],
    };
}

