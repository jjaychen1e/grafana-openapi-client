/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { QueryHistorySearchResult } from './QueryHistorySearchResult.js';
import {
    QueryHistorySearchResultFromJSON,
    QueryHistorySearchResultFromJSONTyped,
    QueryHistorySearchResultToJSON,
    QueryHistorySearchResultToJSONTyped,
} from './QueryHistorySearchResult.js';

/**
 * 
 * @export
 * @interface QueryHistorySearchResponse
 */
export interface QueryHistorySearchResponse {
    /**
     * 
     * @type {QueryHistorySearchResult}
     * @memberof QueryHistorySearchResponse
     */
    result?: QueryHistorySearchResult;
}

/**
 * Check if a given object implements the QueryHistorySearchResponse interface.
 */
export function instanceOfQueryHistorySearchResponse(value: object): value is QueryHistorySearchResponse {
    return true;
}

export function QueryHistorySearchResponseFromJSON(json: any): QueryHistorySearchResponse {
    return QueryHistorySearchResponseFromJSONTyped(json, false);
}

export function QueryHistorySearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistorySearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : QueryHistorySearchResultFromJSON(json['result']),
    };
}

export function QueryHistorySearchResponseToJSON(json: any): QueryHistorySearchResponse {
    return QueryHistorySearchResponseToJSONTyped(json, false);
}

export function QueryHistorySearchResponseToJSONTyped(value?: QueryHistorySearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': QueryHistorySearchResultToJSON(value['result']),
    };
}

