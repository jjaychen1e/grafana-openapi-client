/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeRange } from './TimeRange';
import {
    TimeRangeFromJSON,
    TimeRangeFromJSONTyped,
    TimeRangeToJSON,
    TimeRangeToJSONTyped,
} from './TimeRange';
import type { LinkTransformationConfig } from './LinkTransformationConfig';
import {
    LinkTransformationConfigFromJSON,
    LinkTransformationConfigFromJSONTyped,
    LinkTransformationConfigToJSON,
    LinkTransformationConfigToJSONTyped,
} from './LinkTransformationConfig';

/**
 * InternalDataLink definition to allow Explore links to be constructed in the backend
 * @export
 * @interface InternalDataLink
 */
export interface InternalDataLink {
    /**
     * 
     * @type {string}
     * @memberof InternalDataLink
     */
    datasourceName?: string;
    /**
     * 
     * @type {string}
     * @memberof InternalDataLink
     */
    datasourceUid?: string;
    /**
     * This is an object constructed with the keys as the values of the enum VisType and the value being a bag of properties
     * @type {object}
     * @memberof InternalDataLink
     */
    panelsState?: object;
    /**
     * 
     * @type {object}
     * @memberof InternalDataLink
     */
    query?: object;
    /**
     * 
     * @type {TimeRange}
     * @memberof InternalDataLink
     */
    timeRange?: TimeRange;
    /**
     * 
     * @type {Array<LinkTransformationConfig>}
     * @memberof InternalDataLink
     */
    transformations?: Array<LinkTransformationConfig>;
}

/**
 * Check if a given object implements the InternalDataLink interface.
 */
export function instanceOfInternalDataLink(value: object): value is InternalDataLink {
    return true;
}

export function InternalDataLinkFromJSON(json: any): InternalDataLink {
    return InternalDataLinkFromJSONTyped(json, false);
}

export function InternalDataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalDataLink {
    if (json == null) {
        return json;
    }
    return {
        
        'datasourceName': json['datasourceName'] == null ? undefined : json['datasourceName'],
        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],
        'panelsState': json['panelsState'] == null ? undefined : json['panelsState'],
        'query': json['query'] == null ? undefined : json['query'],
        'timeRange': json['timeRange'] == null ? undefined : TimeRangeFromJSON(json['timeRange']),
        'transformations': json['transformations'] == null ? undefined : ((json['transformations'] as Array<any>).map(LinkTransformationConfigFromJSON)),
    };
}

export function InternalDataLinkToJSON(json: any): InternalDataLink {
    return InternalDataLinkToJSONTyped(json, false);
}

export function InternalDataLinkToJSONTyped(value?: InternalDataLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'datasourceName': value['datasourceName'],
        'datasourceUid': value['datasourceUid'],
        'panelsState': value['panelsState'],
        'query': value['query'],
        'timeRange': TimeRangeToJSON(value['timeRange']),
        'transformations': value['transformations'] == null ? undefined : ((value['transformations'] as Array<any>).map(LinkTransformationConfigToJSON)),
    };
}

