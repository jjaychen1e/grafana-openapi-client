/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface PlaylistDashboard
 */
export interface PlaylistDashboard {
    /**
     * 
     * @type {number}
     * @memberof PlaylistDashboard
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof PlaylistDashboard
     */
    order?: number;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDashboard
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDashboard
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDashboard
     */
    uri?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaylistDashboard
     */
    url?: string;
}

/**
 * Check if a given object implements the PlaylistDashboard interface.
 */
export function instanceOfPlaylistDashboard(value: object): value is PlaylistDashboard {
    return true;
}

export function PlaylistDashboardFromJSON(json: any): PlaylistDashboard {
    return PlaylistDashboardFromJSONTyped(json, false);
}

export function PlaylistDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDashboard {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'order': json['order'] == null ? undefined : json['order'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'title': json['title'] == null ? undefined : json['title'],
        'uri': json['uri'] == null ? undefined : json['uri'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function PlaylistDashboardToJSON(json: any): PlaylistDashboard {
    return PlaylistDashboardToJSONTyped(json, false);
}

export function PlaylistDashboardToJSONTyped(value?: PlaylistDashboard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'order': value['order'],
        'slug': value['slug'],
        'title': value['title'],
        'uri': value['uri'],
        'url': value['url'],
    };
}

