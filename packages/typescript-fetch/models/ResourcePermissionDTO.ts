/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface ResourcePermissionDTO
 */
export interface ResourcePermissionDTO {
    /**
     * 
     * @type {Array<string>}
     * @memberof ResourcePermissionDTO
     */
    actions?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    builtInRole?: string;
    /**
     * 
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isInherited?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isManaged?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isServiceAccount?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    permission?: string;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    roleName?: string;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    team?: string;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    teamAvatarUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    teamId?: number;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    userAvatarUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    userLogin?: string;
}

/**
 * Check if a given object implements the ResourcePermissionDTO interface.
 */
export function instanceOfResourcePermissionDTO(value: object): value is ResourcePermissionDTO {
    return true;
}

export function ResourcePermissionDTOFromJSON(json: any): ResourcePermissionDTO {
    return ResourcePermissionDTOFromJSONTyped(json, false);
}

export function ResourcePermissionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourcePermissionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'actions': json['actions'] == null ? undefined : json['actions'],
        'builtInRole': json['builtInRole'] == null ? undefined : json['builtInRole'],
        'id': json['id'] == null ? undefined : json['id'],
        'isInherited': json['isInherited'] == null ? undefined : json['isInherited'],
        'isManaged': json['isManaged'] == null ? undefined : json['isManaged'],
        'isServiceAccount': json['isServiceAccount'] == null ? undefined : json['isServiceAccount'],
        'permission': json['permission'] == null ? undefined : json['permission'],
        'roleName': json['roleName'] == null ? undefined : json['roleName'],
        'team': json['team'] == null ? undefined : json['team'],
        'teamAvatarUrl': json['teamAvatarUrl'] == null ? undefined : json['teamAvatarUrl'],
        'teamId': json['teamId'] == null ? undefined : json['teamId'],
        'userAvatarUrl': json['userAvatarUrl'] == null ? undefined : json['userAvatarUrl'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'userLogin': json['userLogin'] == null ? undefined : json['userLogin'],
    };
}

export function ResourcePermissionDTOToJSON(json: any): ResourcePermissionDTO {
    return ResourcePermissionDTOToJSONTyped(json, false);
}

export function ResourcePermissionDTOToJSONTyped(value?: ResourcePermissionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actions': value['actions'],
        'builtInRole': value['builtInRole'],
        'id': value['id'],
        'isInherited': value['isInherited'],
        'isManaged': value['isManaged'],
        'isServiceAccount': value['isServiceAccount'],
        'permission': value['permission'],
        'roleName': value['roleName'],
        'team': value['team'],
        'teamAvatarUrl': value['teamAvatarUrl'],
        'teamId': value['teamId'],
        'userAvatarUrl': value['userAvatarUrl'],
        'userId': value['userId'],
        'userLogin': value['userLogin'],
    };
}

