/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiKeyDTO
 */
export interface ApiKeyDTO {
    /**
     * Metadata contains user accesses for a given resource
     * Ex: map[string]bool{"create":true, "delete": true}
     * @type {{ [key: string]: boolean; }}
     * @memberof ApiKeyDTO
     */
    accessControl?: { [key: string]: boolean; };
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyDTO
     */
    expiration?: Date;
    /**
     * 
     * @type {number}
     * @memberof ApiKeyDTO
     */
    id?: number;
    /**
     * 
     * @type {Date}
     * @memberof ApiKeyDTO
     */
    lastUsedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ApiKeyDTO
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiKeyDTO
     */
    role?: ApiKeyDTORoleEnum;
}


/**
 * @export
 */
export const ApiKeyDTORoleEnum = {
    None: 'None',
    Viewer: 'Viewer',
    Editor: 'Editor',
    Admin: 'Admin'
} as const;
export type ApiKeyDTORoleEnum = typeof ApiKeyDTORoleEnum[keyof typeof ApiKeyDTORoleEnum];


/**
 * Check if a given object implements the ApiKeyDTO interface.
 */
export function instanceOfApiKeyDTO(value: object): value is ApiKeyDTO {
    return true;
}

export function ApiKeyDTOFromJSON(json: any): ApiKeyDTO {
    return ApiKeyDTOFromJSONTyped(json, false);
}

export function ApiKeyDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],
        'expiration': json['expiration'] == null ? undefined : (new Date(json['expiration'])),
        'id': json['id'] == null ? undefined : json['id'],
        'lastUsedAt': json['lastUsedAt'] == null ? undefined : (new Date(json['lastUsedAt'])),
        'name': json['name'] == null ? undefined : json['name'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function ApiKeyDTOToJSON(json: any): ApiKeyDTO {
    return ApiKeyDTOToJSONTyped(json, false);
}

export function ApiKeyDTOToJSONTyped(value?: ApiKeyDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accessControl': value['accessControl'],
        'expiration': value['expiration'] == null ? undefined : ((value['expiration']).toISOString()),
        'id': value['id'],
        'lastUsedAt': value['lastUsedAt'] == null ? undefined : ((value['lastUsedAt']).toISOString()),
        'name': value['name'],
        'role': value['role'],
    };
}

