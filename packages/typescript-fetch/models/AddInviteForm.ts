/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface AddInviteForm
 */
export interface AddInviteForm {
    /**
     * 
     * @type {string}
     * @memberof AddInviteForm
     */
    loginOrEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof AddInviteForm
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AddInviteForm
     */
    role?: AddInviteFormRoleEnum;
    /**
     * 
     * @type {boolean}
     * @memberof AddInviteForm
     */
    sendEmail?: boolean;
}


/**
 * @export
 */
export const AddInviteFormRoleEnum = {
    None: 'None',
    Viewer: 'Viewer',
    Editor: 'Editor',
    Admin: 'Admin'
} as const;
export type AddInviteFormRoleEnum = typeof AddInviteFormRoleEnum[keyof typeof AddInviteFormRoleEnum];


/**
 * Check if a given object implements the AddInviteForm interface.
 */
export function instanceOfAddInviteForm(value: object): value is AddInviteForm {
    return true;
}

export function AddInviteFormFromJSON(json: any): AddInviteForm {
    return AddInviteFormFromJSONTyped(json, false);
}

export function AddInviteFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddInviteForm {
    if (json == null) {
        return json;
    }
    return {
        
        'loginOrEmail': json['loginOrEmail'] == null ? undefined : json['loginOrEmail'],
        'name': json['name'] == null ? undefined : json['name'],
        'role': json['role'] == null ? undefined : json['role'],
        'sendEmail': json['sendEmail'] == null ? undefined : json['sendEmail'],
    };
}

export function AddInviteFormToJSON(json: any): AddInviteForm {
    return AddInviteFormToJSONTyped(json, false);
}

export function AddInviteFormToJSONTyped(value?: AddInviteForm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'loginOrEmail': value['loginOrEmail'],
        'name': value['name'],
        'role': value['role'],
        'sendEmail': value['sendEmail'],
    };
}

