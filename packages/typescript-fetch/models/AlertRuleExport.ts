/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlertRuleRecordExport } from './AlertRuleRecordExport';
import {
    AlertRuleRecordExportFromJSON,
    AlertRuleRecordExportFromJSONTyped,
    AlertRuleRecordExportToJSON,
    AlertRuleRecordExportToJSONTyped,
} from './AlertRuleRecordExport';
import type { AlertQueryExport } from './AlertQueryExport';
import {
    AlertQueryExportFromJSON,
    AlertQueryExportFromJSONTyped,
    AlertQueryExportToJSON,
    AlertQueryExportToJSONTyped,
} from './AlertQueryExport';
import type { AlertRuleNotificationSettingsExport } from './AlertRuleNotificationSettingsExport';
import {
    AlertRuleNotificationSettingsExportFromJSON,
    AlertRuleNotificationSettingsExportFromJSONTyped,
    AlertRuleNotificationSettingsExportToJSON,
    AlertRuleNotificationSettingsExportToJSONTyped,
} from './AlertRuleNotificationSettingsExport';

/**
 * 
 * @export
 * @interface AlertRuleExport
 */
export interface AlertRuleExport {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AlertRuleExport
     */
    annotations?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    condition?: string;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    dashboardUid?: string;
    /**
     * 
     * @type {Array<AlertQueryExport>}
     * @memberof AlertRuleExport
     */
    data?: Array<AlertQueryExport>;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    execErrState?: AlertRuleExportExecErrStateEnum;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof AlertRuleExport
     */
    _for?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AlertRuleExport
     */
    isPaused?: boolean;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof AlertRuleExport
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    noDataState?: AlertRuleExportNoDataStateEnum;
    /**
     * 
     * @type {AlertRuleNotificationSettingsExport}
     * @memberof AlertRuleExport
     */
    notificationSettings?: AlertRuleNotificationSettingsExport;
    /**
     * 
     * @type {number}
     * @memberof AlertRuleExport
     */
    panelId?: number;
    /**
     * 
     * @type {AlertRuleRecordExport}
     * @memberof AlertRuleExport
     */
    record?: AlertRuleRecordExport;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleExport
     */
    uid?: string;
}


/**
 * @export
 */
export const AlertRuleExportExecErrStateEnum = {
    Ok: 'OK',
    Alerting: 'Alerting',
    Error: 'Error'
} as const;
export type AlertRuleExportExecErrStateEnum = typeof AlertRuleExportExecErrStateEnum[keyof typeof AlertRuleExportExecErrStateEnum];

/**
 * @export
 */
export const AlertRuleExportNoDataStateEnum = {
    Alerting: 'Alerting',
    NoData: 'NoData',
    Ok: 'OK'
} as const;
export type AlertRuleExportNoDataStateEnum = typeof AlertRuleExportNoDataStateEnum[keyof typeof AlertRuleExportNoDataStateEnum];


/**
 * Check if a given object implements the AlertRuleExport interface.
 */
export function instanceOfAlertRuleExport(value: object): value is AlertRuleExport {
    return true;
}

export function AlertRuleExportFromJSON(json: any): AlertRuleExport {
    return AlertRuleExportFromJSONTyped(json, false);
}

export function AlertRuleExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleExport {
    if (json == null) {
        return json;
    }
    return {
        
        'annotations': json['annotations'] == null ? undefined : json['annotations'],
        'condition': json['condition'] == null ? undefined : json['condition'],
        'dashboardUid': json['dashboardUid'] == null ? undefined : json['dashboardUid'],
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryExportFromJSON)),
        'execErrState': json['execErrState'] == null ? undefined : json['execErrState'],
        '_for': json['for'] == null ? undefined : json['for'],
        'isPaused': json['isPaused'] == null ? undefined : json['isPaused'],
        'labels': json['labels'] == null ? undefined : json['labels'],
        'noDataState': json['noDataState'] == null ? undefined : json['noDataState'],
        'notificationSettings': json['notification_settings'] == null ? undefined : AlertRuleNotificationSettingsExportFromJSON(json['notification_settings']),
        'panelId': json['panelId'] == null ? undefined : json['panelId'],
        'record': json['record'] == null ? undefined : AlertRuleRecordExportFromJSON(json['record']),
        'title': json['title'] == null ? undefined : json['title'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function AlertRuleExportToJSON(json: any): AlertRuleExport {
    return AlertRuleExportToJSONTyped(json, false);
}

export function AlertRuleExportToJSONTyped(value?: AlertRuleExport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'annotations': value['annotations'],
        'condition': value['condition'],
        'dashboardUid': value['dashboardUid'],
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryExportToJSON)),
        'execErrState': value['execErrState'],
        'for': value['_for'],
        'isPaused': value['isPaused'],
        'labels': value['labels'],
        'noDataState': value['noDataState'],
        'notification_settings': AlertRuleNotificationSettingsExportToJSON(value['notificationSettings']),
        'panelId': value['panelId'],
        'record': AlertRuleRecordExportToJSON(value['record']),
        'title': value['title'],
        'uid': value['uid'],
    };
}

