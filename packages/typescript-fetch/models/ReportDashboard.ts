/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ReportDashboardID } from './ReportDashboardID.js';
import {
    ReportDashboardIDFromJSON,
    ReportDashboardIDFromJSONTyped,
    ReportDashboardIDToJSON,
    ReportDashboardIDToJSONTyped,
} from './ReportDashboardID.js';
import type { ReportTimeRange } from './ReportTimeRange.js';
import {
    ReportTimeRangeFromJSON,
    ReportTimeRangeFromJSONTyped,
    ReportTimeRangeToJSON,
    ReportTimeRangeToJSONTyped,
} from './ReportTimeRange.js';

/**
 * 
 * @export
 * @interface ReportDashboard
 */
export interface ReportDashboard {
    /**
     * 
     * @type {ReportDashboardID}
     * @memberof ReportDashboard
     */
    dashboard?: ReportDashboardID;
    /**
     * 
     * @type {object}
     * @memberof ReportDashboard
     */
    reportVariables?: object;
    /**
     * 
     * @type {ReportTimeRange}
     * @memberof ReportDashboard
     */
    timeRange?: ReportTimeRange;
}

/**
 * Check if a given object implements the ReportDashboard interface.
 */
export function instanceOfReportDashboard(value: object): value is ReportDashboard {
    return true;
}

export function ReportDashboardFromJSON(json: any): ReportDashboard {
    return ReportDashboardFromJSONTyped(json, false);
}

export function ReportDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDashboard {
    if (json == null) {
        return json;
    }
    return {
        
        'dashboard': json['dashboard'] == null ? undefined : ReportDashboardIDFromJSON(json['dashboard']),
        'reportVariables': json['reportVariables'] == null ? undefined : json['reportVariables'],
        'timeRange': json['timeRange'] == null ? undefined : ReportTimeRangeFromJSON(json['timeRange']),
    };
}

export function ReportDashboardToJSON(json: any): ReportDashboard {
    return ReportDashboardToJSONTyped(json, false);
}

export function ReportDashboardToJSONTyped(value?: ReportDashboard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dashboard': ReportDashboardIDToJSON(value['dashboard']),
        'reportVariables': value['reportVariables'],
        'timeRange': ReportTimeRangeToJSON(value['timeRange']),
    };
}

