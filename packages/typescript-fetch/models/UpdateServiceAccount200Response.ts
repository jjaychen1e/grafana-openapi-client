/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ServiceAccountProfileDTO } from './ServiceAccountProfileDTO.js';
import {
    ServiceAccountProfileDTOFromJSON,
    ServiceAccountProfileDTOFromJSONTyped,
    ServiceAccountProfileDTOToJSON,
    ServiceAccountProfileDTOToJSONTyped,
} from './ServiceAccountProfileDTO.js';

/**
 * 
 * @export
 * @interface UpdateServiceAccount200Response
 */
export interface UpdateServiceAccount200Response {
    /**
     * 
     * @type {number}
     * @memberof UpdateServiceAccount200Response
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateServiceAccount200Response
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateServiceAccount200Response
     */
    name?: string;
    /**
     * 
     * @type {ServiceAccountProfileDTO}
     * @memberof UpdateServiceAccount200Response
     */
    serviceaccount?: ServiceAccountProfileDTO;
}

/**
 * Check if a given object implements the UpdateServiceAccount200Response interface.
 */
export function instanceOfUpdateServiceAccount200Response(value: object): value is UpdateServiceAccount200Response {
    return true;
}

export function UpdateServiceAccount200ResponseFromJSON(json: any): UpdateServiceAccount200Response {
    return UpdateServiceAccount200ResponseFromJSONTyped(json, false);
}

export function UpdateServiceAccount200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccount200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'] == null ? undefined : json['name'],
        'serviceaccount': json['serviceaccount'] == null ? undefined : ServiceAccountProfileDTOFromJSON(json['serviceaccount']),
    };
}

export function UpdateServiceAccount200ResponseToJSON(json: any): UpdateServiceAccount200Response {
    return UpdateServiceAccount200ResponseToJSONTyped(json, false);
}

export function UpdateServiceAccount200ResponseToJSONTyped(value?: UpdateServiceAccount200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'message': value['message'],
        'name': value['name'],
        'serviceaccount': ServiceAccountProfileDTOToJSON(value['serviceaccount']),
    };
}

