/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { InternalDataLink } from './InternalDataLink.js';
import {
    InternalDataLinkFromJSON,
    InternalDataLinkFromJSONTyped,
    InternalDataLinkToJSON,
    InternalDataLinkToJSONTyped,
} from './InternalDataLink.js';

/**
 * DataLink define what
 * @export
 * @interface DataLink
 */
export interface DataLink {
    /**
     * 
     * @type {InternalDataLink}
     * @memberof DataLink
     */
    internal?: InternalDataLink;
    /**
     * 
     * @type {boolean}
     * @memberof DataLink
     */
    targetBlank?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DataLink
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof DataLink
     */
    url?: string;
}

/**
 * Check if a given object implements the DataLink interface.
 */
export function instanceOfDataLink(value: object): value is DataLink {
    return true;
}

export function DataLinkFromJSON(json: any): DataLink {
    return DataLinkFromJSONTyped(json, false);
}

export function DataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataLink {
    if (json == null) {
        return json;
    }
    return {
        
        'internal': json['internal'] == null ? undefined : InternalDataLinkFromJSON(json['internal']),
        'targetBlank': json['targetBlank'] == null ? undefined : json['targetBlank'],
        'title': json['title'] == null ? undefined : json['title'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function DataLinkToJSON(json: any): DataLink {
    return DataLinkToJSONTyped(json, false);
}

export function DataLinkToJSONTyped(value?: DataLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'internal': InternalDataLinkToJSON(value['internal']),
        'targetBlank': value['targetBlank'],
        'title': value['title'],
        'url': value['url'],
    };
}

