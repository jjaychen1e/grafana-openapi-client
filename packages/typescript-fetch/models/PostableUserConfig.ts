/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PostableApiAlertingConfig } from './PostableApiAlertingConfig.js';
import {
    PostableApiAlertingConfigFromJSON,
    PostableApiAlertingConfigFromJSONTyped,
    PostableApiAlertingConfigToJSON,
    PostableApiAlertingConfigToJSONTyped,
} from './PostableApiAlertingConfig.js';

/**
 * 
 * @export
 * @interface PostableUserConfig
 */
export interface PostableUserConfig {
    /**
     * 
     * @type {PostableApiAlertingConfig}
     * @memberof PostableUserConfig
     */
    alertmanagerConfig?: PostableApiAlertingConfig;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PostableUserConfig
     */
    templateFiles?: { [key: string]: string; };
}

/**
 * Check if a given object implements the PostableUserConfig interface.
 */
export function instanceOfPostableUserConfig(value: object): value is PostableUserConfig {
    return true;
}

export function PostableUserConfigFromJSON(json: any): PostableUserConfig {
    return PostableUserConfigFromJSONTyped(json, false);
}

export function PostableUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableUserConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'alertmanagerConfig': json['alertmanager_config'] == null ? undefined : PostableApiAlertingConfigFromJSON(json['alertmanager_config']),
        'templateFiles': json['template_files'] == null ? undefined : json['template_files'],
    };
}

export function PostableUserConfigToJSON(json: any): PostableUserConfig {
    return PostableUserConfigToJSONTyped(json, false);
}

export function PostableUserConfigToJSONTyped(value?: PostableUserConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alertmanager_config': PostableApiAlertingConfigToJSON(value['alertmanagerConfig']),
        'template_files': value['templateFiles'],
    };
}

