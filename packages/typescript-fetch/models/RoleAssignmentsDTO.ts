/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface RoleAssignmentsDTO
 */
export interface RoleAssignmentsDTO {
    /**
     * 
     * @type {string}
     * @memberof RoleAssignmentsDTO
     */
    roleUid?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    serviceAccounts?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    teams?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    users?: Array<number>;
}

/**
 * Check if a given object implements the RoleAssignmentsDTO interface.
 */
export function instanceOfRoleAssignmentsDTO(value: object): value is RoleAssignmentsDTO {
    return true;
}

export function RoleAssignmentsDTOFromJSON(json: any): RoleAssignmentsDTO {
    return RoleAssignmentsDTOFromJSONTyped(json, false);
}

export function RoleAssignmentsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAssignmentsDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'roleUid': json['role_uid'] == null ? undefined : json['role_uid'],
        'serviceAccounts': json['service_accounts'] == null ? undefined : json['service_accounts'],
        'teams': json['teams'] == null ? undefined : json['teams'],
        'users': json['users'] == null ? undefined : json['users'],
    };
}

export function RoleAssignmentsDTOToJSON(json: any): RoleAssignmentsDTO {
    return RoleAssignmentsDTOToJSONTyped(json, false);
}

export function RoleAssignmentsDTOToJSONTyped(value?: RoleAssignmentsDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'role_uid': value['roleUid'],
        'service_accounts': value['serviceAccounts'],
        'teams': value['teams'],
        'users': value['users'],
    };
}

