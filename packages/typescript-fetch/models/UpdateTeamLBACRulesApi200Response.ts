/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TeamLBACRules } from './TeamLBACRules';
import {
    TeamLBACRulesFromJSON,
    TeamLBACRulesFromJSONTyped,
    TeamLBACRulesToJSON,
    TeamLBACRulesToJSONTyped,
} from './TeamLBACRules';

/**
 * 
 * @export
 * @interface UpdateTeamLBACRulesApi200Response
 */
export interface UpdateTeamLBACRulesApi200Response {
    /**
     * 
     * @type {number}
     * @memberof UpdateTeamLBACRulesApi200Response
     */
    id?: number;
    /**
     * 
     * @type {TeamLBACRules}
     * @memberof UpdateTeamLBACRulesApi200Response
     */
    lbacRules?: TeamLBACRules;
    /**
     * 
     * @type {string}
     * @memberof UpdateTeamLBACRulesApi200Response
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateTeamLBACRulesApi200Response
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateTeamLBACRulesApi200Response
     */
    uid?: string;
}

/**
 * Check if a given object implements the UpdateTeamLBACRulesApi200Response interface.
 */
export function instanceOfUpdateTeamLBACRulesApi200Response(value: object): value is UpdateTeamLBACRulesApi200Response {
    return true;
}

export function UpdateTeamLBACRulesApi200ResponseFromJSON(json: any): UpdateTeamLBACRulesApi200Response {
    return UpdateTeamLBACRulesApi200ResponseFromJSONTyped(json, false);
}

export function UpdateTeamLBACRulesApi200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamLBACRulesApi200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lbacRules': json['lbacRules'] == null ? undefined : TeamLBACRulesFromJSON(json['lbacRules']),
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'] == null ? undefined : json['name'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function UpdateTeamLBACRulesApi200ResponseToJSON(json: any): UpdateTeamLBACRulesApi200Response {
    return UpdateTeamLBACRulesApi200ResponseToJSONTyped(json, false);
}

export function UpdateTeamLBACRulesApi200ResponseToJSONTyped(value?: UpdateTeamLBACRulesApi200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lbacRules': TeamLBACRulesToJSON(value['lbacRules']),
        'message': value['message'],
        'name': value['name'],
        'uid': value['uid'],
    };
}

