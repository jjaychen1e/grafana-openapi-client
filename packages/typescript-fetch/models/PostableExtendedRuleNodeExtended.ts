/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { PostableExtendedRuleNode } from './PostableExtendedRuleNode.js';
import {
    PostableExtendedRuleNodeFromJSON,
    PostableExtendedRuleNodeFromJSONTyped,
    PostableExtendedRuleNodeToJSON,
    PostableExtendedRuleNodeToJSONTyped,
} from './PostableExtendedRuleNode.js';

/**
 * 
 * @export
 * @interface PostableExtendedRuleNodeExtended
 */
export interface PostableExtendedRuleNodeExtended {
    /**
     * 
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    folderTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    folderUid?: string;
    /**
     * 
     * @type {PostableExtendedRuleNode}
     * @memberof PostableExtendedRuleNodeExtended
     */
    rule: PostableExtendedRuleNode;
    /**
     * 
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    ruleGroup?: string;
}

/**
 * Check if a given object implements the PostableExtendedRuleNodeExtended interface.
 */
export function instanceOfPostableExtendedRuleNodeExtended(value: object): value is PostableExtendedRuleNodeExtended {
    if (!('rule' in value) || value['rule'] === undefined) return false;
    return true;
}

export function PostableExtendedRuleNodeExtendedFromJSON(json: any): PostableExtendedRuleNodeExtended {
    return PostableExtendedRuleNodeExtendedFromJSONTyped(json, false);
}

export function PostableExtendedRuleNodeExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableExtendedRuleNodeExtended {
    if (json == null) {
        return json;
    }
    return {
        
        'folderTitle': json['folderTitle'] == null ? undefined : json['folderTitle'],
        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],
        'rule': PostableExtendedRuleNodeFromJSON(json['rule']),
        'ruleGroup': json['ruleGroup'] == null ? undefined : json['ruleGroup'],
    };
}

export function PostableExtendedRuleNodeExtendedToJSON(json: any): PostableExtendedRuleNodeExtended {
    return PostableExtendedRuleNodeExtendedToJSONTyped(json, false);
}

export function PostableExtendedRuleNodeExtendedToJSONTyped(value?: PostableExtendedRuleNodeExtended | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'folderTitle': value['folderTitle'],
        'folderUid': value['folderUid'],
        'rule': PostableExtendedRuleNodeToJSON(value['rule']),
        'ruleGroup': value['ruleGroup'],
    };
}

