/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TeamDTO
 */
export interface TeamDTO {
    /**
     * 
     * @type {{ [key: string]: boolean; }}
     * @memberof TeamDTO
     */
    accessControl?: { [key: string]: boolean; };
    /**
     * 
     * @type {string}
     * @memberof TeamDTO
     */
    avatarUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamDTO
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof TeamDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamDTO
     */
    memberCount?: number;
    /**
     * 
     * @type {string}
     * @memberof TeamDTO
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof TeamDTO
     */
    orgId?: number;
    /**
     * 
     * @type {number}
     * @memberof TeamDTO
     */
    permission?: number;
    /**
     * 
     * @type {string}
     * @memberof TeamDTO
     */
    uid?: string;
}

/**
 * Check if a given object implements the TeamDTO interface.
 */
export function instanceOfTeamDTO(value: object): value is TeamDTO {
    return true;
}

export function TeamDTOFromJSON(json: any): TeamDTO {
    return TeamDTOFromJSONTyped(json, false);
}

export function TeamDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],
        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],
        'email': json['email'] == null ? undefined : json['email'],
        'id': json['id'] == null ? undefined : json['id'],
        'memberCount': json['memberCount'] == null ? undefined : json['memberCount'],
        'name': json['name'] == null ? undefined : json['name'],
        'orgId': json['orgId'] == null ? undefined : json['orgId'],
        'permission': json['permission'] == null ? undefined : json['permission'],
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function TeamDTOToJSON(json: any): TeamDTO {
    return TeamDTOToJSONTyped(json, false);
}

export function TeamDTOToJSONTyped(value?: TeamDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accessControl': value['accessControl'],
        'avatarUrl': value['avatarUrl'],
        'email': value['email'],
        'id': value['id'],
        'memberCount': value['memberCount'],
        'name': value['name'],
        'orgId': value['orgId'],
        'permission': value['permission'],
        'uid': value['uid'],
    };
}

