/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MigrateDataResponseItemDTO } from './MigrateDataResponseItemDTO';
import {
    MigrateDataResponseItemDTOFromJSON,
    MigrateDataResponseItemDTOFromJSONTyped,
    MigrateDataResponseItemDTOToJSON,
    MigrateDataResponseItemDTOToJSONTyped,
} from './MigrateDataResponseItemDTO';

/**
 * 
 * @export
 * @interface MigrateDataResponseDTO
 */
export interface MigrateDataResponseDTO {
    /**
     * 
     * @type {Array<MigrateDataResponseItemDTO>}
     * @memberof MigrateDataResponseDTO
     */
    items?: Array<MigrateDataResponseItemDTO>;
    /**
     * 
     * @type {string}
     * @memberof MigrateDataResponseDTO
     */
    uid?: string;
}

/**
 * Check if a given object implements the MigrateDataResponseDTO interface.
 */
export function instanceOfMigrateDataResponseDTO(value: object): value is MigrateDataResponseDTO {
    return true;
}

export function MigrateDataResponseDTOFromJSON(json: any): MigrateDataResponseDTO {
    return MigrateDataResponseDTOFromJSONTyped(json, false);
}

export function MigrateDataResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(MigrateDataResponseItemDTOFromJSON)),
        'uid': json['uid'] == null ? undefined : json['uid'],
    };
}

export function MigrateDataResponseDTOToJSON(json: any): MigrateDataResponseDTO {
    return MigrateDataResponseDTOToJSONTyped(json, false);
}

export function MigrateDataResponseDTOToJSONTyped(value?: MigrateDataResponseDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(MigrateDataResponseItemDTOToJSON)),
        'uid': value['uid'],
    };
}

