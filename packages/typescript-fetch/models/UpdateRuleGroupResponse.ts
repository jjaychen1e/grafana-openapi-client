/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface UpdateRuleGroupResponse
 */
export interface UpdateRuleGroupResponse {
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    created?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    deleted?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UpdateRuleGroupResponse
     */
    message?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    updated?: Array<string>;
}

/**
 * Check if a given object implements the UpdateRuleGroupResponse interface.
 */
export function instanceOfUpdateRuleGroupResponse(value: object): value is UpdateRuleGroupResponse {
    return true;
}

export function UpdateRuleGroupResponseFromJSON(json: any): UpdateRuleGroupResponse {
    return UpdateRuleGroupResponseFromJSONTyped(json, false);
}

export function UpdateRuleGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRuleGroupResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : json['created'],
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
        'message': json['message'] == null ? undefined : json['message'],
        'updated': json['updated'] == null ? undefined : json['updated'],
    };
}

export function UpdateRuleGroupResponseToJSON(json: any): UpdateRuleGroupResponse {
    return UpdateRuleGroupResponseToJSONTyped(json, false);
}

export function UpdateRuleGroupResponseToJSONTyped(value?: UpdateRuleGroupResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created': value['created'],
        'deleted': value['deleted'],
        'message': value['message'],
        'updated': value['updated'],
    };
}

