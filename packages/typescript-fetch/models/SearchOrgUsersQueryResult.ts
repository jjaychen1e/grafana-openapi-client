/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { OrgUserDTO } from './OrgUserDTO.js';
import {
    OrgUserDTOFromJSON,
    OrgUserDTOFromJSONTyped,
    OrgUserDTOToJSON,
    OrgUserDTOToJSONTyped,
} from './OrgUserDTO.js';

/**
 * 
 * @export
 * @interface SearchOrgUsersQueryResult
 */
export interface SearchOrgUsersQueryResult {
    /**
     * 
     * @type {Array<OrgUserDTO>}
     * @memberof SearchOrgUsersQueryResult
     */
    orgUsers?: Array<OrgUserDTO>;
    /**
     * 
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    perPage?: number;
    /**
     * 
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    totalCount?: number;
}

/**
 * Check if a given object implements the SearchOrgUsersQueryResult interface.
 */
export function instanceOfSearchOrgUsersQueryResult(value: object): value is SearchOrgUsersQueryResult {
    return true;
}

export function SearchOrgUsersQueryResultFromJSON(json: any): SearchOrgUsersQueryResult {
    return SearchOrgUsersQueryResultFromJSONTyped(json, false);
}

export function SearchOrgUsersQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgUsersQueryResult {
    if (json == null) {
        return json;
    }
    return {
        
        'orgUsers': json['orgUsers'] == null ? undefined : ((json['orgUsers'] as Array<any>).map(OrgUserDTOFromJSON)),
        'page': json['page'] == null ? undefined : json['page'],
        'perPage': json['perPage'] == null ? undefined : json['perPage'],
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
    };
}

export function SearchOrgUsersQueryResultToJSON(json: any): SearchOrgUsersQueryResult {
    return SearchOrgUsersQueryResultToJSONTyped(json, false);
}

export function SearchOrgUsersQueryResultToJSONTyped(value?: SearchOrgUsersQueryResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'orgUsers': value['orgUsers'] == null ? undefined : ((value['orgUsers'] as Array<any>).map(OrgUserDTOToJSON)),
        'page': value['page'],
        'perPage': value['perPage'],
        'totalCount': value['totalCount'],
    };
}

