/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { SlackConfig } from './SlackConfig.js';
import {
    SlackConfigFromJSON,
    SlackConfigFromJSONTyped,
    SlackConfigToJSON,
    SlackConfigToJSONTyped,
} from './SlackConfig.js';
import type { PostableGrafanaReceiver } from './PostableGrafanaReceiver.js';
import {
    PostableGrafanaReceiverFromJSON,
    PostableGrafanaReceiverFromJSONTyped,
    PostableGrafanaReceiverToJSON,
    PostableGrafanaReceiverToJSONTyped,
} from './PostableGrafanaReceiver.js';
import type { WebhookConfig } from './WebhookConfig.js';
import {
    WebhookConfigFromJSON,
    WebhookConfigFromJSONTyped,
    WebhookConfigToJSON,
    WebhookConfigToJSONTyped,
} from './WebhookConfig.js';
import type { VictorOpsConfig } from './VictorOpsConfig.js';
import {
    VictorOpsConfigFromJSON,
    VictorOpsConfigFromJSONTyped,
    VictorOpsConfigToJSON,
    VictorOpsConfigToJSONTyped,
} from './VictorOpsConfig.js';
import type { EmailConfig } from './EmailConfig.js';
import {
    EmailConfigFromJSON,
    EmailConfigFromJSONTyped,
    EmailConfigToJSON,
    EmailConfigToJSONTyped,
} from './EmailConfig.js';
import type { OpsGenieConfig } from './OpsGenieConfig.js';
import {
    OpsGenieConfigFromJSON,
    OpsGenieConfigFromJSONTyped,
    OpsGenieConfigToJSON,
    OpsGenieConfigToJSONTyped,
} from './OpsGenieConfig.js';
import type { PushoverConfig } from './PushoverConfig.js';
import {
    PushoverConfigFromJSON,
    PushoverConfigFromJSONTyped,
    PushoverConfigToJSON,
    PushoverConfigToJSONTyped,
} from './PushoverConfig.js';
import type { PagerdutyConfig } from './PagerdutyConfig.js';
import {
    PagerdutyConfigFromJSON,
    PagerdutyConfigFromJSONTyped,
    PagerdutyConfigToJSON,
    PagerdutyConfigToJSONTyped,
} from './PagerdutyConfig.js';
import type { WechatConfig } from './WechatConfig.js';
import {
    WechatConfigFromJSON,
    WechatConfigFromJSONTyped,
    WechatConfigToJSON,
    WechatConfigToJSONTyped,
} from './WechatConfig.js';

/**
 * 
 * @export
 * @interface ExtendedReceiver
 */
export interface ExtendedReceiver {
    /**
     * 
     * @type {EmailConfig}
     * @memberof ExtendedReceiver
     */
    emailConfigs?: EmailConfig;
    /**
     * 
     * @type {PostableGrafanaReceiver}
     * @memberof ExtendedReceiver
     */
    grafanaManagedReceiver?: PostableGrafanaReceiver;
    /**
     * 
     * @type {OpsGenieConfig}
     * @memberof ExtendedReceiver
     */
    opsgenieConfigs?: OpsGenieConfig;
    /**
     * 
     * @type {PagerdutyConfig}
     * @memberof ExtendedReceiver
     */
    pagerdutyConfigs?: PagerdutyConfig;
    /**
     * 
     * @type {PushoverConfig}
     * @memberof ExtendedReceiver
     */
    pushoverConfigs?: PushoverConfig;
    /**
     * 
     * @type {SlackConfig}
     * @memberof ExtendedReceiver
     */
    slackConfigs?: SlackConfig;
    /**
     * 
     * @type {VictorOpsConfig}
     * @memberof ExtendedReceiver
     */
    victoropsConfigs?: VictorOpsConfig;
    /**
     * 
     * @type {WebhookConfig}
     * @memberof ExtendedReceiver
     */
    webhookConfigs?: WebhookConfig;
    /**
     * 
     * @type {WechatConfig}
     * @memberof ExtendedReceiver
     */
    wechatConfigs?: WechatConfig;
}

/**
 * Check if a given object implements the ExtendedReceiver interface.
 */
export function instanceOfExtendedReceiver(value: object): value is ExtendedReceiver {
    return true;
}

export function ExtendedReceiverFromJSON(json: any): ExtendedReceiver {
    return ExtendedReceiverFromJSONTyped(json, false);
}

export function ExtendedReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedReceiver {
    if (json == null) {
        return json;
    }
    return {
        
        'emailConfigs': json['email_configs'] == null ? undefined : EmailConfigFromJSON(json['email_configs']),
        'grafanaManagedReceiver': json['grafana_managed_receiver'] == null ? undefined : PostableGrafanaReceiverFromJSON(json['grafana_managed_receiver']),
        'opsgenieConfigs': json['opsgenie_configs'] == null ? undefined : OpsGenieConfigFromJSON(json['opsgenie_configs']),
        'pagerdutyConfigs': json['pagerduty_configs'] == null ? undefined : PagerdutyConfigFromJSON(json['pagerduty_configs']),
        'pushoverConfigs': json['pushover_configs'] == null ? undefined : PushoverConfigFromJSON(json['pushover_configs']),
        'slackConfigs': json['slack_configs'] == null ? undefined : SlackConfigFromJSON(json['slack_configs']),
        'victoropsConfigs': json['victorops_configs'] == null ? undefined : VictorOpsConfigFromJSON(json['victorops_configs']),
        'webhookConfigs': json['webhook_configs'] == null ? undefined : WebhookConfigFromJSON(json['webhook_configs']),
        'wechatConfigs': json['wechat_configs'] == null ? undefined : WechatConfigFromJSON(json['wechat_configs']),
    };
}

export function ExtendedReceiverToJSON(json: any): ExtendedReceiver {
    return ExtendedReceiverToJSONTyped(json, false);
}

export function ExtendedReceiverToJSONTyped(value?: ExtendedReceiver | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email_configs': EmailConfigToJSON(value['emailConfigs']),
        'grafana_managed_receiver': PostableGrafanaReceiverToJSON(value['grafanaManagedReceiver']),
        'opsgenie_configs': OpsGenieConfigToJSON(value['opsgenieConfigs']),
        'pagerduty_configs': PagerdutyConfigToJSON(value['pagerdutyConfigs']),
        'pushover_configs': PushoverConfigToJSON(value['pushoverConfigs']),
        'slack_configs': SlackConfigToJSON(value['slackConfigs']),
        'victorops_configs': VictorOpsConfigToJSON(value['victoropsConfigs']),
        'webhook_configs': WebhookConfigToJSON(value['webhookConfigs']),
        'wechat_configs': WechatConfigToJSON(value['wechatConfigs']),
    };
}

