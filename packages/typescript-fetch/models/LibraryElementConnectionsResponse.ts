/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { LibraryElementConnectionDTO } from './LibraryElementConnectionDTO.js';
import {
    LibraryElementConnectionDTOFromJSON,
    LibraryElementConnectionDTOFromJSONTyped,
    LibraryElementConnectionDTOToJSON,
    LibraryElementConnectionDTOToJSONTyped,
} from './LibraryElementConnectionDTO.js';

/**
 * 
 * @export
 * @interface LibraryElementConnectionsResponse
 */
export interface LibraryElementConnectionsResponse {
    /**
     * 
     * @type {Array<LibraryElementConnectionDTO>}
     * @memberof LibraryElementConnectionsResponse
     */
    result?: Array<LibraryElementConnectionDTO>;
}

/**
 * Check if a given object implements the LibraryElementConnectionsResponse interface.
 */
export function instanceOfLibraryElementConnectionsResponse(value: object): value is LibraryElementConnectionsResponse {
    return true;
}

export function LibraryElementConnectionsResponseFromJSON(json: any): LibraryElementConnectionsResponse {
    return LibraryElementConnectionsResponseFromJSONTyped(json, false);
}

export function LibraryElementConnectionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : ((json['result'] as Array<any>).map(LibraryElementConnectionDTOFromJSON)),
    };
}

export function LibraryElementConnectionsResponseToJSON(json: any): LibraryElementConnectionsResponse {
    return LibraryElementConnectionsResponseToJSONTyped(json, false);
}

export function LibraryElementConnectionsResponseToJSONTyped(value?: LibraryElementConnectionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': value['result'] == null ? undefined : ((value['result'] as Array<any>).map(LibraryElementConnectionDTOToJSON)),
    };
}

