/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { RelativeTimeRangeExport } from './RelativeTimeRangeExport.js';
import {
    RelativeTimeRangeExportFromJSON,
    RelativeTimeRangeExportFromJSONTyped,
    RelativeTimeRangeExportToJSON,
    RelativeTimeRangeExportToJSONTyped,
} from './RelativeTimeRangeExport.js';

/**
 * 
 * @export
 * @interface AlertQueryExport
 */
export interface AlertQueryExport {
    /**
     * 
     * @type {string}
     * @memberof AlertQueryExport
     */
    datasourceUid?: string;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof AlertQueryExport
     */
    model?: { [key: string]: object; };
    /**
     * 
     * @type {string}
     * @memberof AlertQueryExport
     */
    queryType?: string;
    /**
     * 
     * @type {string}
     * @memberof AlertQueryExport
     */
    refId?: string;
    /**
     * 
     * @type {RelativeTimeRangeExport}
     * @memberof AlertQueryExport
     */
    relativeTimeRange?: RelativeTimeRangeExport;
}

/**
 * Check if a given object implements the AlertQueryExport interface.
 */
export function instanceOfAlertQueryExport(value: object): value is AlertQueryExport {
    return true;
}

export function AlertQueryExportFromJSON(json: any): AlertQueryExport {
    return AlertQueryExportFromJSONTyped(json, false);
}

export function AlertQueryExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertQueryExport {
    if (json == null) {
        return json;
    }
    return {
        
        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],
        'model': json['model'] == null ? undefined : json['model'],
        'queryType': json['queryType'] == null ? undefined : json['queryType'],
        'refId': json['refId'] == null ? undefined : json['refId'],
        'relativeTimeRange': json['relativeTimeRange'] == null ? undefined : RelativeTimeRangeExportFromJSON(json['relativeTimeRange']),
    };
}

export function AlertQueryExportToJSON(json: any): AlertQueryExport {
    return AlertQueryExportToJSONTyped(json, false);
}

export function AlertQueryExportToJSONTyped(value?: AlertQueryExport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'datasourceUid': value['datasourceUid'],
        'model': value['model'],
        'queryType': value['queryType'],
        'refId': value['refId'],
        'relativeTimeRange': RelativeTimeRangeExportToJSON(value['relativeTimeRange']),
    };
}

