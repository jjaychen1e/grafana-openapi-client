/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpsGenieConfigResponder } from './OpsGenieConfigResponder';
import {
    OpsGenieConfigResponderFromJSON,
    OpsGenieConfigResponderFromJSONTyped,
    OpsGenieConfigResponderToJSON,
    OpsGenieConfigResponderToJSONTyped,
} from './OpsGenieConfigResponder';
import type { HTTPClientConfig } from './HTTPClientConfig';
import {
    HTTPClientConfigFromJSON,
    HTTPClientConfigFromJSONTyped,
    HTTPClientConfigToJSON,
    HTTPClientConfigToJSONTyped,
} from './HTTPClientConfig';
import type { URL } from './URL';
import {
    URLFromJSON,
    URLFromJSONTyped,
    URLToJSON,
    URLToJSONTyped,
} from './URL';

/**
 * 
 * @export
 * @interface OpsGenieConfig
 */
export interface OpsGenieConfig {
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    actions?: string;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    apiKey?: string;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    apiKeyFile?: string;
    /**
     * 
     * @type {URL}
     * @memberof OpsGenieConfig
     */
    apiUrl?: URL;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    description?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof OpsGenieConfig
     */
    details?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    entity?: string;
    /**
     * 
     * @type {HTTPClientConfig}
     * @memberof OpsGenieConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    note?: string;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    priority?: string;
    /**
     * 
     * @type {Array<OpsGenieConfigResponder>}
     * @memberof OpsGenieConfig
     */
    responders?: Array<OpsGenieConfigResponder>;
    /**
     * 
     * @type {boolean}
     * @memberof OpsGenieConfig
     */
    sendResolved?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof OpsGenieConfig
     */
    tags?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OpsGenieConfig
     */
    updateAlerts?: boolean;
}

/**
 * Check if a given object implements the OpsGenieConfig interface.
 */
export function instanceOfOpsGenieConfig(value: object): value is OpsGenieConfig {
    return true;
}

export function OpsGenieConfigFromJSON(json: any): OpsGenieConfig {
    return OpsGenieConfigFromJSONTyped(json, false);
}

export function OpsGenieConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpsGenieConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'actions': json['actions'] == null ? undefined : json['actions'],
        'apiKey': json['api_key'] == null ? undefined : json['api_key'],
        'apiKeyFile': json['api_key_file'] == null ? undefined : json['api_key_file'],
        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),
        'description': json['description'] == null ? undefined : json['description'],
        'details': json['details'] == null ? undefined : json['details'],
        'entity': json['entity'] == null ? undefined : json['entity'],
        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),
        'message': json['message'] == null ? undefined : json['message'],
        'note': json['note'] == null ? undefined : json['note'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'responders': json['responders'] == null ? undefined : ((json['responders'] as Array<any>).map(OpsGenieConfigResponderFromJSON)),
        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],
        'source': json['source'] == null ? undefined : json['source'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'updateAlerts': json['update_alerts'] == null ? undefined : json['update_alerts'],
    };
}

export function OpsGenieConfigToJSON(json: any): OpsGenieConfig {
    return OpsGenieConfigToJSONTyped(json, false);
}

export function OpsGenieConfigToJSONTyped(value?: OpsGenieConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actions': value['actions'],
        'api_key': value['apiKey'],
        'api_key_file': value['apiKeyFile'],
        'api_url': URLToJSON(value['apiUrl']),
        'description': value['description'],
        'details': value['details'],
        'entity': value['entity'],
        'http_config': HTTPClientConfigToJSON(value['httpConfig']),
        'message': value['message'],
        'note': value['note'],
        'priority': value['priority'],
        'responders': value['responders'] == null ? undefined : ((value['responders'] as Array<any>).map(OpsGenieConfigResponderToJSON)),
        'send_resolved': value['sendResolved'],
        'source': value['source'],
        'tags': value['tags'],
        'update_alerts': value['updateAlerts'],
    };
}

