/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Extension represents the ASN.1 structure of the same name. See RFC
 * 5280, section 4.2.
 * @export
 * @interface Extension
 */
export interface Extension {
    /**
     * 
     * @type {boolean}
     * @memberof Extension
     */
    critical?: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof Extension
     */
    id?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Extension
     */
    value?: Array<number>;
}

/**
 * Check if a given object implements the Extension interface.
 */
export function instanceOfExtension(value: object): value is Extension {
    return true;
}

export function ExtensionFromJSON(json: any): Extension {
    return ExtensionFromJSONTyped(json, false);
}

export function ExtensionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Extension {
    if (json == null) {
        return json;
    }
    return {
        
        'critical': json['Critical'] == null ? undefined : json['Critical'],
        'id': json['Id'] == null ? undefined : json['Id'],
        'value': json['Value'] == null ? undefined : json['Value'],
    };
}

export function ExtensionToJSON(json: any): Extension {
    return ExtensionToJSONTyped(json, false);
}

export function ExtensionToJSONTyped(value?: Extension | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Critical': value['critical'],
        'Id': value['id'],
        'Value': value['value'],
    };
}

