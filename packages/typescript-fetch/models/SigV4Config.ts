/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * SigV4Config is the configuration for signing remote write requests with
 * AWS's SigV4 verification process. Empty values will be retrieved using the
 * AWS default credentials chain.
 * @export
 * @interface SigV4Config
 */
export interface SigV4Config {
    /**
     * 
     * @type {string}
     * @memberof SigV4Config
     */
    accessKey?: string;
    /**
     * 
     * @type {string}
     * @memberof SigV4Config
     */
    profile?: string;
    /**
     * 
     * @type {string}
     * @memberof SigV4Config
     */
    region?: string;
    /**
     * 
     * @type {string}
     * @memberof SigV4Config
     */
    roleARN?: string;
    /**
     * 
     * @type {string}
     * @memberof SigV4Config
     */
    secretKey?: string;
}

/**
 * Check if a given object implements the SigV4Config interface.
 */
export function instanceOfSigV4Config(value: object): value is SigV4Config {
    return true;
}

export function SigV4ConfigFromJSON(json: any): SigV4Config {
    return SigV4ConfigFromJSONTyped(json, false);
}

export function SigV4ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SigV4Config {
    if (json == null) {
        return json;
    }
    return {
        
        'accessKey': json['AccessKey'] == null ? undefined : json['AccessKey'],
        'profile': json['Profile'] == null ? undefined : json['Profile'],
        'region': json['Region'] == null ? undefined : json['Region'],
        'roleARN': json['RoleARN'] == null ? undefined : json['RoleARN'],
        'secretKey': json['SecretKey'] == null ? undefined : json['SecretKey'],
    };
}

export function SigV4ConfigToJSON(json: any): SigV4Config {
    return SigV4ConfigToJSONTyped(json, false);
}

export function SigV4ConfigToJSONTyped(value?: SigV4Config | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'AccessKey': value['accessKey'],
        'Profile': value['profile'],
        'Region': value['region'],
        'RoleARN': value['roleARN'],
        'SecretKey': value['secretKey'],
    };
}

