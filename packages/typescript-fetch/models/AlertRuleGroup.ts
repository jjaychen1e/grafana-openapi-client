/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProvisionedAlertRule } from './ProvisionedAlertRule';
import {
    ProvisionedAlertRuleFromJSON,
    ProvisionedAlertRuleFromJSONTyped,
    ProvisionedAlertRuleToJSON,
    ProvisionedAlertRuleToJSONTyped,
} from './ProvisionedAlertRule';

/**
 * 
 * @export
 * @interface AlertRuleGroup
 */
export interface AlertRuleGroup {
    /**
     * 
     * @type {string}
     * @memberof AlertRuleGroup
     */
    folderUid?: string;
    /**
     * 
     * @type {number}
     * @memberof AlertRuleGroup
     */
    interval?: number;
    /**
     * 
     * @type {Array<ProvisionedAlertRule>}
     * @memberof AlertRuleGroup
     */
    rules?: Array<ProvisionedAlertRule>;
    /**
     * 
     * @type {string}
     * @memberof AlertRuleGroup
     */
    title?: string;
}

/**
 * Check if a given object implements the AlertRuleGroup interface.
 */
export function instanceOfAlertRuleGroup(value: object): value is AlertRuleGroup {
    return true;
}

export function AlertRuleGroupFromJSON(json: any): AlertRuleGroup {
    return AlertRuleGroupFromJSONTyped(json, false);
}

export function AlertRuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroup {
    if (json == null) {
        return json;
    }
    return {
        
        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],
        'interval': json['interval'] == null ? undefined : json['interval'],
        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(ProvisionedAlertRuleFromJSON)),
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function AlertRuleGroupToJSON(json: any): AlertRuleGroup {
    return AlertRuleGroupToJSONTyped(json, false);
}

export function AlertRuleGroupToJSONTyped(value?: AlertRuleGroup | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'folderUid': value['folderUid'],
        'interval': value['interval'],
        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(ProvisionedAlertRuleToJSON)),
        'title': value['title'],
    };
}

