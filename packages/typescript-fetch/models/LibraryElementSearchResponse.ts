/* tslint:disable */
/* eslint-disable */
/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LibraryElementSearchResult } from './LibraryElementSearchResult';
import {
    LibraryElementSearchResultFromJSON,
    LibraryElementSearchResultFromJSONTyped,
    LibraryElementSearchResultToJSON,
    LibraryElementSearchResultToJSONTyped,
} from './LibraryElementSearchResult';

/**
 * 
 * @export
 * @interface LibraryElementSearchResponse
 */
export interface LibraryElementSearchResponse {
    /**
     * 
     * @type {LibraryElementSearchResult}
     * @memberof LibraryElementSearchResponse
     */
    result?: LibraryElementSearchResult;
}

/**
 * Check if a given object implements the LibraryElementSearchResponse interface.
 */
export function instanceOfLibraryElementSearchResponse(value: object): value is LibraryElementSearchResponse {
    return true;
}

export function LibraryElementSearchResponseFromJSON(json: any): LibraryElementSearchResponse {
    return LibraryElementSearchResponseFromJSONTyped(json, false);
}

export function LibraryElementSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementSearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : LibraryElementSearchResultFromJSON(json['result']),
    };
}

export function LibraryElementSearchResponseToJSON(json: any): LibraryElementSearchResponse {
    return LibraryElementSearchResponseToJSONTyped(json, false);
}

export function LibraryElementSearchResponseToJSONTyped(value?: LibraryElementSearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': LibraryElementSearchResultToJSON(value['result']),
    };
}

