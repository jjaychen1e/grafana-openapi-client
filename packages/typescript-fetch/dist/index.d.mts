/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
declare const BASE_PATH: string;
interface ConfigurationParameters {
    basePath?: string;
    fetchApi?: FetchAPI;
    middleware?: Middleware[];
    queryParamsStringify?: (params: HTTPQuery) => string;
    username?: string;
    password?: string;
    apiKey?: string | Promise<string> | ((name: string) => string | Promise<string>);
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>);
    headers?: HTTPHeaders;
    credentials?: RequestCredentials;
}
declare class Configuration {
    private configuration;
    constructor(configuration?: ConfigurationParameters);
    set config(configuration: Configuration);
    get basePath(): string;
    get fetchApi(): FetchAPI | undefined;
    get middleware(): Middleware[];
    get queryParamsStringify(): (params: HTTPQuery) => string;
    get username(): string | undefined;
    get password(): string | undefined;
    get apiKey(): ((name: string) => string | Promise<string>) | undefined;
    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined;
    get headers(): HTTPHeaders | undefined;
    get credentials(): RequestCredentials | undefined;
}
declare const DefaultConfig: Configuration;
/**
 * This is the base class for all generated API classes.
 */
declare class BaseAPI {
    protected configuration: Configuration;
    private static readonly jsonRegex;
    private middleware;
    constructor(configuration?: Configuration);
    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]): T;
    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>): T;
    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>): T;
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    protected isJsonMime(mime: string | null | undefined): boolean;
    protected request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response>;
    private createFetchParams;
    private fetchApi;
    /**
     * Create a shallow clone of `this` by constructing a new instance
     * and then shallow cloning data members.
     */
    private clone;
}
declare class ResponseError extends Error {
    response: Response;
    name: "ResponseError";
    constructor(response: Response, msg?: string);
}
declare class FetchError extends Error {
    cause: Error;
    name: "FetchError";
    constructor(cause: Error, msg?: string);
}
declare class RequiredError extends Error {
    field: string;
    name: "RequiredError";
    constructor(field: string, msg?: string);
}
declare const COLLECTION_FORMATS: {
    csv: string;
    ssv: string;
    tsv: string;
    pipes: string;
};
type FetchAPI = WindowOrWorkerGlobalScope['fetch'];
type Json = any;
type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
type HTTPHeaders = {
    [key: string]: string;
};
type HTTPQuery = {
    [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery;
};
type HTTPBody = Json | FormData | URLSearchParams;
type HTTPRequestInit = {
    headers?: HTTPHeaders;
    method: HTTPMethod;
    credentials?: RequestCredentials;
    body?: HTTPBody;
};
type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';
type InitOverrideFunction = (requestContext: {
    init: HTTPRequestInit;
    context: RequestOpts;
}) => Promise<RequestInit>;
interface FetchParams {
    url: string;
    init: RequestInit;
}
interface RequestOpts {
    path: string;
    method: HTTPMethod;
    headers: HTTPHeaders;
    query?: HTTPQuery;
    body?: HTTPBody;
}
declare function querystring(params: HTTPQuery, prefix?: string): string;
declare function exists(json: any, key: string): boolean;
declare function mapValues(data: any, fn: (item: any) => any): {};
declare function canConsumeForm(consumes: Consume[]): boolean;
interface Consume {
    contentType: string;
}
interface RequestContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
}
interface ResponseContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
    response: Response;
}
interface ErrorContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
    error: unknown;
    response?: Response;
}
interface Middleware {
    pre?(context: RequestContext): Promise<FetchParams | void>;
    post?(context: ResponseContext): Promise<Response | void>;
    onError?(context: ErrorContext): Promise<Response | void>;
}
interface ApiResponse<T> {
    raw: Response;
    value(): Promise<T>;
}
interface ResponseTransformer<T> {
    (json: any): T;
}
declare class JSONApiResponse<T> {
    raw: Response;
    private transformer;
    constructor(raw: Response, transformer?: ResponseTransformer<T>);
    value(): Promise<T>;
}
declare class VoidApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<void>;
}
declare class BlobApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<Blob>;
}
declare class TextApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<string>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * FailedUser holds the information of an user that failed
 * @export
 * @interface FailedUser
 */
interface FailedUser {
    /**
     *
     * @type {string}
     * @memberof FailedUser
     */
    error?: string;
    /**
     *
     * @type {string}
     * @memberof FailedUser
     */
    login?: string;
}
/**
 * Check if a given object implements the FailedUser interface.
 */
declare function instanceOfFailedUser(value: object): value is FailedUser;
declare function FailedUserFromJSON(json: any): FailedUser;
declare function FailedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): FailedUser;
declare function FailedUserToJSON(json: any): FailedUser;
declare function FailedUserToJSONTyped(value?: FailedUser | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SyncResult
 */
interface SyncResult {
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof SyncResult
     */
    elapsed?: number;
    /**
     *
     * @type {Array<FailedUser>}
     * @memberof SyncResult
     */
    failedUsers?: Array<FailedUser>;
    /**
     *
     * @type {Array<number>}
     * @memberof SyncResult
     */
    missingUserIds?: Array<number>;
    /**
     *
     * @type {Date}
     * @memberof SyncResult
     */
    started?: Date;
    /**
     *
     * @type {Array<number>}
     * @memberof SyncResult
     */
    updatedUserIds?: Array<number>;
}
/**
 * Check if a given object implements the SyncResult interface.
 */
declare function instanceOfSyncResult(value: object): value is SyncResult;
declare function SyncResultFromJSON(json: any): SyncResult;
declare function SyncResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncResult;
declare function SyncResultToJSON(json: any): SyncResult;
declare function SyncResultToJSONTyped(value?: SyncResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * ActiveSyncStatusDTO holds the information for LDAP background Sync
 * @export
 * @interface ActiveSyncStatusDTO
 */
interface ActiveSyncStatusDTO {
    /**
     *
     * @type {boolean}
     * @memberof ActiveSyncStatusDTO
     */
    enabled?: boolean;
    /**
     *
     * @type {Date}
     * @memberof ActiveSyncStatusDTO
     */
    nextSync?: Date;
    /**
     *
     * @type {SyncResult}
     * @memberof ActiveSyncStatusDTO
     */
    prevSync?: SyncResult;
    /**
     *
     * @type {string}
     * @memberof ActiveSyncStatusDTO
     */
    schedule?: string;
}
/**
 * Check if a given object implements the ActiveSyncStatusDTO interface.
 */
declare function instanceOfActiveSyncStatusDTO(value: object): value is ActiveSyncStatusDTO;
declare function ActiveSyncStatusDTOFromJSON(json: any): ActiveSyncStatusDTO;
declare function ActiveSyncStatusDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveSyncStatusDTO;
declare function ActiveSyncStatusDTOToJSON(json: any): ActiveSyncStatusDTO;
declare function ActiveSyncStatusDTOToJSONTyped(value?: ActiveSyncStatusDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ActiveUserStats
 */
interface ActiveUserStats {
    /**
     *
     * @type {number}
     * @memberof ActiveUserStats
     */
    activeAdminsAndEditors?: number;
    /**
     *
     * @type {number}
     * @memberof ActiveUserStats
     */
    activeAnonymousDevices?: number;
    /**
     *
     * @type {number}
     * @memberof ActiveUserStats
     */
    activeUsers?: number;
    /**
     *
     * @type {number}
     * @memberof ActiveUserStats
     */
    activeViewers?: number;
}
/**
 * Check if a given object implements the ActiveUserStats interface.
 */
declare function instanceOfActiveUserStats(value: object): value is ActiveUserStats;
declare function ActiveUserStatsFromJSON(json: any): ActiveUserStats;
declare function ActiveUserStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveUserStats;
declare function ActiveUserStatsToJSON(json: any): ActiveUserStats;
declare function ActiveUserStatsToJSONTyped(value?: ActiveUserStats | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddAPIKeyCommand
 */
interface AddAPIKeyCommand {
    /**
     *
     * @type {string}
     * @memberof AddAPIKeyCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof AddAPIKeyCommand
     */
    role?: AddAPIKeyCommandRoleEnum;
    /**
     *
     * @type {number}
     * @memberof AddAPIKeyCommand
     */
    secondsToLive?: number;
}
/**
 * @export
 */
declare const AddAPIKeyCommandRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type AddAPIKeyCommandRoleEnum = typeof AddAPIKeyCommandRoleEnum[keyof typeof AddAPIKeyCommandRoleEnum];
/**
 * Check if a given object implements the AddAPIKeyCommand interface.
 */
declare function instanceOfAddAPIKeyCommand(value: object): value is AddAPIKeyCommand;
declare function AddAPIKeyCommandFromJSON(json: any): AddAPIKeyCommand;
declare function AddAPIKeyCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddAPIKeyCommand;
declare function AddAPIKeyCommandToJSON(json: any): AddAPIKeyCommand;
declare function AddAPIKeyCommandToJSONTyped(value?: AddAPIKeyCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DataSource
 */
interface DataSource {
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    access?: string;
    /**
     * Metadata contains user accesses for a given resource
     * Ex: map[string]bool{"create":true, "delete": true}
     * @type {{ [key: string]: boolean; }}
     * @memberof DataSource
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {boolean}
     * @memberof DataSource
     */
    basicAuth?: boolean;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    basicAuthUser?: string;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    database?: string;
    /**
     *
     * @type {number}
     * @memberof DataSource
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof DataSource
     */
    isDefault?: boolean;
    /**
     *
     * @type {object}
     * @memberof DataSource
     */
    jsonData?: object;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof DataSource
     */
    orgId?: number;
    /**
     *
     * @type {boolean}
     * @memberof DataSource
     */
    readOnly?: boolean;
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof DataSource
     */
    secureJsonFields?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    typeLogoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    uid?: string;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof DataSource
     */
    user?: string;
    /**
     *
     * @type {number}
     * @memberof DataSource
     */
    version?: number;
    /**
     *
     * @type {boolean}
     * @memberof DataSource
     */
    withCredentials?: boolean;
}
/**
 * Check if a given object implements the DataSource interface.
 */
declare function instanceOfDataSource(value: object): value is DataSource;
declare function DataSourceFromJSON(json: any): DataSource;
declare function DataSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSource;
declare function DataSourceToJSON(json: any): DataSource;
declare function DataSourceToJSONTyped(value?: DataSource | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AddDataSource200Response
 */
interface AddDataSource200Response {
    /**
     *
     * @type {DataSource}
     * @memberof AddDataSource200Response
     */
    datasource: DataSource;
    /**
     * ID Identifier of the new data source.
     * @type {number}
     * @memberof AddDataSource200Response
     */
    id: number;
    /**
     * Message Message of the deleted dashboard.
     * @type {string}
     * @memberof AddDataSource200Response
     */
    message: string;
    /**
     * Name of the new data source.
     * @type {string}
     * @memberof AddDataSource200Response
     */
    name: string;
}
/**
 * Check if a given object implements the AddDataSource200Response interface.
 */
declare function instanceOfAddDataSource200Response(value: object): value is AddDataSource200Response;
declare function AddDataSource200ResponseFromJSON(json: any): AddDataSource200Response;
declare function AddDataSource200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddDataSource200Response;
declare function AddDataSource200ResponseToJSON(json: any): AddDataSource200Response;
declare function AddDataSource200ResponseToJSONTyped(value?: AddDataSource200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Also acts as api DTO
 * @export
 * @interface AddDataSourceCommand
 */
interface AddDataSourceCommand {
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    access?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddDataSourceCommand
     */
    basicAuth?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    basicAuthUser?: string;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    database?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddDataSourceCommand
     */
    isDefault?: boolean;
    /**
     *
     * @type {object}
     * @memberof AddDataSourceCommand
     */
    jsonData?: object;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    name?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof AddDataSourceCommand
     */
    secureJsonData?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    uid?: string;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof AddDataSourceCommand
     */
    user?: string;
    /**
     *
     * @type {boolean}
     * @memberof AddDataSourceCommand
     */
    withCredentials?: boolean;
}
/**
 * Check if a given object implements the AddDataSourceCommand interface.
 */
declare function instanceOfAddDataSourceCommand(value: object): value is AddDataSourceCommand;
declare function AddDataSourceCommandFromJSON(json: any): AddDataSourceCommand;
declare function AddDataSourceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddDataSourceCommand;
declare function AddDataSourceCommandToJSON(json: any): AddDataSourceCommand;
declare function AddDataSourceCommandToJSONTyped(value?: AddDataSourceCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddInviteForm
 */
interface AddInviteForm {
    /**
     *
     * @type {string}
     * @memberof AddInviteForm
     */
    loginOrEmail?: string;
    /**
     *
     * @type {string}
     * @memberof AddInviteForm
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof AddInviteForm
     */
    role?: AddInviteFormRoleEnum;
    /**
     *
     * @type {boolean}
     * @memberof AddInviteForm
     */
    sendEmail?: boolean;
}
/**
 * @export
 */
declare const AddInviteFormRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type AddInviteFormRoleEnum = typeof AddInviteFormRoleEnum[keyof typeof AddInviteFormRoleEnum];
/**
 * Check if a given object implements the AddInviteForm interface.
 */
declare function instanceOfAddInviteForm(value: object): value is AddInviteForm;
declare function AddInviteFormFromJSON(json: any): AddInviteForm;
declare function AddInviteFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddInviteForm;
declare function AddInviteFormToJSON(json: any): AddInviteForm;
declare function AddInviteFormToJSONTyped(value?: AddInviteForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddOrgUserCommand
 */
interface AddOrgUserCommand {
    /**
     *
     * @type {string}
     * @memberof AddOrgUserCommand
     */
    loginOrEmail?: string;
    /**
     *
     * @type {string}
     * @memberof AddOrgUserCommand
     */
    role?: AddOrgUserCommandRoleEnum;
}
/**
 * @export
 */
declare const AddOrgUserCommandRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type AddOrgUserCommandRoleEnum = typeof AddOrgUserCommandRoleEnum[keyof typeof AddOrgUserCommandRoleEnum];
/**
 * Check if a given object implements the AddOrgUserCommand interface.
 */
declare function instanceOfAddOrgUserCommand(value: object): value is AddOrgUserCommand;
declare function AddOrgUserCommandFromJSON(json: any): AddOrgUserCommand;
declare function AddOrgUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOrgUserCommand;
declare function AddOrgUserCommandToJSON(json: any): AddOrgUserCommand;
declare function AddOrgUserCommandToJSONTyped(value?: AddOrgUserCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddServiceAccountTokenCommand
 */
interface AddServiceAccountTokenCommand {
    /**
     *
     * @type {string}
     * @memberof AddServiceAccountTokenCommand
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof AddServiceAccountTokenCommand
     */
    secondsToLive?: number;
}
/**
 * Check if a given object implements the AddServiceAccountTokenCommand interface.
 */
declare function instanceOfAddServiceAccountTokenCommand(value: object): value is AddServiceAccountTokenCommand;
declare function AddServiceAccountTokenCommandFromJSON(json: any): AddServiceAccountTokenCommand;
declare function AddServiceAccountTokenCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddServiceAccountTokenCommand;
declare function AddServiceAccountTokenCommandToJSON(json: any): AddServiceAccountTokenCommand;
declare function AddServiceAccountTokenCommandToJSONTyped(value?: AddServiceAccountTokenCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddTeamMemberCommand
 */
interface AddTeamMemberCommand {
    /**
     *
     * @type {number}
     * @memberof AddTeamMemberCommand
     */
    userId?: number;
}
/**
 * Check if a given object implements the AddTeamMemberCommand interface.
 */
declare function instanceOfAddTeamMemberCommand(value: object): value is AddTeamMemberCommand;
declare function AddTeamMemberCommandFromJSON(json: any): AddTeamMemberCommand;
declare function AddTeamMemberCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddTeamMemberCommand;
declare function AddTeamMemberCommandToJSON(json: any): AddTeamMemberCommand;
declare function AddTeamMemberCommandToJSONTyped(value?: AddTeamMemberCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddTeamRoleCommand
 */
interface AddTeamRoleCommand {
    /**
     *
     * @type {string}
     * @memberof AddTeamRoleCommand
     */
    roleUid?: string;
}
/**
 * Check if a given object implements the AddTeamRoleCommand interface.
 */
declare function instanceOfAddTeamRoleCommand(value: object): value is AddTeamRoleCommand;
declare function AddTeamRoleCommandFromJSON(json: any): AddTeamRoleCommand;
declare function AddTeamRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddTeamRoleCommand;
declare function AddTeamRoleCommandToJSON(json: any): AddTeamRoleCommand;
declare function AddTeamRoleCommandToJSONTyped(value?: AddTeamRoleCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AddUserRoleCommand
 */
interface AddUserRoleCommand {
    /**
     *
     * @type {boolean}
     * @memberof AddUserRoleCommand
     */
    global?: boolean;
    /**
     *
     * @type {string}
     * @memberof AddUserRoleCommand
     */
    roleUid?: string;
}
/**
 * Check if a given object implements the AddUserRoleCommand interface.
 */
declare function instanceOfAddUserRoleCommand(value: object): value is AddUserRoleCommand;
declare function AddUserRoleCommandFromJSON(json: any): AddUserRoleCommand;
declare function AddUserRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddUserRoleCommand;
declare function AddUserRoleCommandToJSON(json: any): AddUserRoleCommand;
declare function AddUserRoleCommandToJSONTyped(value?: AddUserRoleCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Address
 */
interface Address {
    /**
     *
     * @type {string}
     * @memberof Address
     */
    address1?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    address2?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    zipCode?: string;
}
/**
 * Check if a given object implements the Address interface.
 */
declare function instanceOfAddress(value: object): value is Address;
declare function AddressFromJSON(json: any): Address;
declare function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address;
declare function AddressToJSON(json: any): Address;
declare function AddressToJSONTyped(value?: Address | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdminCreateUserForm
 */
interface AdminCreateUserForm {
    /**
     *
     * @type {string}
     * @memberof AdminCreateUserForm
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof AdminCreateUserForm
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof AdminCreateUserForm
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof AdminCreateUserForm
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof AdminCreateUserForm
     */
    password?: string;
}
/**
 * Check if a given object implements the AdminCreateUserForm interface.
 */
declare function instanceOfAdminCreateUserForm(value: object): value is AdminCreateUserForm;
declare function AdminCreateUserFormFromJSON(json: any): AdminCreateUserForm;
declare function AdminCreateUserFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminCreateUserForm;
declare function AdminCreateUserFormToJSON(json: any): AdminCreateUserForm;
declare function AdminCreateUserFormToJSONTyped(value?: AdminCreateUserForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdminCreateUserResponse
 */
interface AdminCreateUserResponse {
    /**
     *
     * @type {number}
     * @memberof AdminCreateUserResponse
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof AdminCreateUserResponse
     */
    message?: string;
}
/**
 * Check if a given object implements the AdminCreateUserResponse interface.
 */
declare function instanceOfAdminCreateUserResponse(value: object): value is AdminCreateUserResponse;
declare function AdminCreateUserResponseFromJSON(json: any): AdminCreateUserResponse;
declare function AdminCreateUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminCreateUserResponse;
declare function AdminCreateUserResponseToJSON(json: any): AdminCreateUserResponse;
declare function AdminCreateUserResponseToJSONTyped(value?: AdminCreateUserResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdminStats
 */
interface AdminStats {
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeAdmins?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeDevices?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeEditors?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeSessions?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeUsers?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    activeViewers?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    admins?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    alerts?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dailyActiveAdmins?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dailyActiveEditors?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dailyActiveSessions?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dailyActiveUsers?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dailyActiveViewers?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    dashboards?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    datasources?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    editors?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    monthlyActiveUsers?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    orgs?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    playlists?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    snapshots?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    stars?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    tags?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    users?: number;
    /**
     *
     * @type {number}
     * @memberof AdminStats
     */
    viewers?: number;
}
/**
 * Check if a given object implements the AdminStats interface.
 */
declare function instanceOfAdminStats(value: object): value is AdminStats;
declare function AdminStatsFromJSON(json: any): AdminStats;
declare function AdminStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminStats;
declare function AdminStatsToJSON(json: any): AdminStats;
declare function AdminStatsToJSONTyped(value?: AdminStats | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdminUpdateUserPasswordForm
 */
interface AdminUpdateUserPasswordForm {
    /**
     *
     * @type {string}
     * @memberof AdminUpdateUserPasswordForm
     */
    password?: string;
}
/**
 * Check if a given object implements the AdminUpdateUserPasswordForm interface.
 */
declare function instanceOfAdminUpdateUserPasswordForm(value: object): value is AdminUpdateUserPasswordForm;
declare function AdminUpdateUserPasswordFormFromJSON(json: any): AdminUpdateUserPasswordForm;
declare function AdminUpdateUserPasswordFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUpdateUserPasswordForm;
declare function AdminUpdateUserPasswordFormToJSON(json: any): AdminUpdateUserPasswordForm;
declare function AdminUpdateUserPasswordFormToJSONTyped(value?: AdminUpdateUserPasswordForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AdminUpdateUserPermissionsForm
 */
interface AdminUpdateUserPermissionsForm {
    /**
     *
     * @type {boolean}
     * @memberof AdminUpdateUserPermissionsForm
     */
    isGrafanaAdmin?: boolean;
}
/**
 * Check if a given object implements the AdminUpdateUserPermissionsForm interface.
 */
declare function instanceOfAdminUpdateUserPermissionsForm(value: object): value is AdminUpdateUserPermissionsForm;
declare function AdminUpdateUserPermissionsFormFromJSON(json: any): AdminUpdateUserPermissionsForm;
declare function AdminUpdateUserPermissionsFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUpdateUserPermissionsForm;
declare function AdminUpdateUserPermissionsFormToJSON(json: any): AdminUpdateUserPermissionsForm;
declare function AdminUpdateUserPermissionsFormToJSONTyped(value?: AdminUpdateUserPermissionsForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Alert alert
 * @export
 * @interface Alert
 */
interface Alert {
    /**
     * generator URL
     * Format: uri
     * @type {string}
     * @memberof Alert
     */
    generatorURL?: string;
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof Alert
     */
    labels: {
        [key: string]: string;
    };
}
/**
 * Check if a given object implements the Alert interface.
 */
declare function instanceOfAlert(value: object): value is Alert;
declare function AlertFromJSON(json: any): Alert;
declare function AlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alert;
declare function AlertToJSON(json: any): Alert;
declare function AlertToJSONTyped(value?: Alert | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertDiscovery
 */
interface AlertDiscovery {
    /**
     *
     * @type {Array<Alert>}
     * @memberof AlertDiscovery
     */
    alerts: Array<Alert>;
}
/**
 * Check if a given object implements the AlertDiscovery interface.
 */
declare function instanceOfAlertDiscovery(value: object): value is AlertDiscovery;
declare function AlertDiscoveryFromJSON(json: any): AlertDiscovery;
declare function AlertDiscoveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertDiscovery;
declare function AlertDiscoveryToJSON(json: any): AlertDiscovery;
declare function AlertDiscoveryToJSONTyped(value?: AlertDiscovery | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * AlertStatus alert status
 * @export
 * @interface AlertStatus
 */
interface AlertStatus {
    /**
     * inhibited by
     * @type {Array<string>}
     * @memberof AlertStatus
     */
    inhibitedBy: Array<string>;
    /**
     * silenced by
     * @type {Array<string>}
     * @memberof AlertStatus
     */
    silencedBy: Array<string>;
    /**
     * state
     * @type {string}
     * @memberof AlertStatus
     */
    state: AlertStatusStateEnum;
}
/**
 * @export
 */
declare const AlertStatusStateEnum: {
    readonly UnprocessedActiveSuppressed: "[unprocessed active suppressed]";
};
type AlertStatusStateEnum = typeof AlertStatusStateEnum[keyof typeof AlertStatusStateEnum];
/**
 * Check if a given object implements the AlertStatus interface.
 */
declare function instanceOfAlertStatus(value: object): value is AlertStatus;
declare function AlertStatusFromJSON(json: any): AlertStatus;
declare function AlertStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertStatus;
declare function AlertStatusToJSON(json: any): AlertStatus;
declare function AlertStatusToJSONTyped(value?: AlertStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Receiver receiver
 * @export
 * @interface Receiver
 */
interface Receiver {
    /**
     * name
     * @type {string}
     * @memberof Receiver
     */
    name: string;
}
/**
 * Check if a given object implements the Receiver interface.
 */
declare function instanceOfReceiver(value: object): value is Receiver;
declare function ReceiverFromJSON(json: any): Receiver;
declare function ReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): Receiver;
declare function ReceiverToJSON(json: any): Receiver;
declare function ReceiverToJSONTyped(value?: Receiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * GettableAlert gettable alert
 * @export
 * @interface GettableAlert
 */
interface GettableAlert {
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof GettableAlert
     */
    annotations: {
        [key: string]: string;
    };
    /**
     * ends at
     * @type {Date}
     * @memberof GettableAlert
     */
    endsAt: Date;
    /**
     * fingerprint
     * @type {string}
     * @memberof GettableAlert
     */
    fingerprint: string;
    /**
     * generator URL
     * Format: uri
     * @type {string}
     * @memberof GettableAlert
     */
    generatorURL?: string;
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof GettableAlert
     */
    labels: {
        [key: string]: string;
    };
    /**
     * receivers
     * @type {Array<Receiver>}
     * @memberof GettableAlert
     */
    receivers: Array<Receiver>;
    /**
     * starts at
     * @type {Date}
     * @memberof GettableAlert
     */
    startsAt: Date;
    /**
     *
     * @type {AlertStatus}
     * @memberof GettableAlert
     */
    status: AlertStatus;
    /**
     * updated at
     * @type {Date}
     * @memberof GettableAlert
     */
    updatedAt: Date;
}
/**
 * Check if a given object implements the GettableAlert interface.
 */
declare function instanceOfGettableAlert(value: object): value is GettableAlert;
declare function GettableAlertFromJSON(json: any): GettableAlert;
declare function GettableAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableAlert;
declare function GettableAlertToJSON(json: any): GettableAlert;
declare function GettableAlertToJSONTyped(value?: GettableAlert | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * AlertGroup alert group
 * @export
 * @interface AlertGroup
 */
interface AlertGroup {
    /**
     * alerts
     * @type {Array<GettableAlert>}
     * @memberof AlertGroup
     */
    alerts: Array<GettableAlert>;
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof AlertGroup
     */
    labels: {
        [key: string]: string;
    };
    /**
     *
     * @type {Receiver}
     * @memberof AlertGroup
     */
    receiver: Receiver;
}
/**
 * Check if a given object implements the AlertGroup interface.
 */
declare function instanceOfAlertGroup(value: object): value is AlertGroup;
declare function AlertGroupFromJSON(json: any): AlertGroup;
declare function AlertGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertGroup;
declare function AlertGroupToJSON(json: any): AlertGroup;
declare function AlertGroupToJSONTyped(value?: AlertGroup | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertInstancesResponse
 */
interface AlertInstancesResponse {
    /**
     * Instances is an array of arrow encoded dataframes
     * each frame has a single row, and a column for each instance (alert identified by unique labels) with a boolean value (firing/not firing)
     * @type {Array<Array<number>>}
     * @memberof AlertInstancesResponse
     */
    instances?: Array<Array<number>>;
}
/**
 * Check if a given object implements the AlertInstancesResponse interface.
 */
declare function instanceOfAlertInstancesResponse(value: object): value is AlertInstancesResponse;
declare function AlertInstancesResponseFromJSON(json: any): AlertInstancesResponse;
declare function AlertInstancesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertInstancesResponse;
declare function AlertInstancesResponseToJSON(json: any): AlertInstancesResponse;
declare function AlertInstancesResponseToJSONTyped(value?: AlertInstancesResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertManager
 */
interface AlertManager {
    /**
     *
     * @type {string}
     * @memberof AlertManager
     */
    url?: string;
}
/**
 * Check if a given object implements the AlertManager interface.
 */
declare function instanceOfAlertManager(value: object): value is AlertManager;
declare function AlertManagerFromJSON(json: any): AlertManager;
declare function AlertManagerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertManager;
declare function AlertManagerToJSON(json: any): AlertManager;
declare function AlertManagerToJSONTyped(value?: AlertManager | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertManagersResult
 */
interface AlertManagersResult {
    /**
     *
     * @type {Array<AlertManager>}
     * @memberof AlertManagersResult
     */
    activeAlertManagers?: Array<AlertManager>;
    /**
     *
     * @type {Array<AlertManager>}
     * @memberof AlertManagersResult
     */
    droppedAlertManagers?: Array<AlertManager>;
}
/**
 * Check if a given object implements the AlertManagersResult interface.
 */
declare function instanceOfAlertManagersResult(value: object): value is AlertManagersResult;
declare function AlertManagersResultFromJSON(json: any): AlertManagersResult;
declare function AlertManagersResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertManagersResult;
declare function AlertManagersResultToJSON(json: any): AlertManagersResult;
declare function AlertManagersResultToJSONTyped(value?: AlertManagersResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * RelativeTimeRange is the per query start and end time
 * for requests.
 * @export
 * @interface RelativeTimeRange
 */
interface RelativeTimeRange {
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof RelativeTimeRange
     */
    from?: number;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof RelativeTimeRange
     */
    to?: number;
}
/**
 * Check if a given object implements the RelativeTimeRange interface.
 */
declare function instanceOfRelativeTimeRange(value: object): value is RelativeTimeRange;
declare function RelativeTimeRangeFromJSON(json: any): RelativeTimeRange;
declare function RelativeTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelativeTimeRange;
declare function RelativeTimeRangeToJSON(json: any): RelativeTimeRange;
declare function RelativeTimeRangeToJSONTyped(value?: RelativeTimeRange | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertQuery
 */
interface AlertQuery {
    /**
     * Grafana data source unique identifier; it should be '__expr__' for a Server Side Expression operation.
     * @type {string}
     * @memberof AlertQuery
     */
    datasourceUid?: string;
    /**
     * JSON is the raw JSON query and includes the above properties as well as custom properties.
     * @type {object}
     * @memberof AlertQuery
     */
    model?: object;
    /**
     * QueryType is an optional identifier for the type of query.
     * It can be used to distinguish different types of queries.
     * @type {string}
     * @memberof AlertQuery
     */
    queryType?: string;
    /**
     * RefID is the unique identifier of the query, set by the frontend call.
     * @type {string}
     * @memberof AlertQuery
     */
    refId?: string;
    /**
     *
     * @type {RelativeTimeRange}
     * @memberof AlertQuery
     */
    relativeTimeRange?: RelativeTimeRange;
}
/**
 * Check if a given object implements the AlertQuery interface.
 */
declare function instanceOfAlertQuery(value: object): value is AlertQuery;
declare function AlertQueryFromJSON(json: any): AlertQuery;
declare function AlertQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertQuery;
declare function AlertQueryToJSON(json: any): AlertQuery;
declare function AlertQueryToJSONTyped(value?: AlertQuery | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RelativeTimeRangeExport
 */
interface RelativeTimeRangeExport {
    /**
     *
     * @type {number}
     * @memberof RelativeTimeRangeExport
     */
    from?: number;
    /**
     *
     * @type {number}
     * @memberof RelativeTimeRangeExport
     */
    to?: number;
}
/**
 * Check if a given object implements the RelativeTimeRangeExport interface.
 */
declare function instanceOfRelativeTimeRangeExport(value: object): value is RelativeTimeRangeExport;
declare function RelativeTimeRangeExportFromJSON(json: any): RelativeTimeRangeExport;
declare function RelativeTimeRangeExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelativeTimeRangeExport;
declare function RelativeTimeRangeExportToJSON(json: any): RelativeTimeRangeExport;
declare function RelativeTimeRangeExportToJSONTyped(value?: RelativeTimeRangeExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertQueryExport
 */
interface AlertQueryExport {
    /**
     *
     * @type {string}
     * @memberof AlertQueryExport
     */
    datasourceUid?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof AlertQueryExport
     */
    model?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof AlertQueryExport
     */
    queryType?: string;
    /**
     *
     * @type {string}
     * @memberof AlertQueryExport
     */
    refId?: string;
    /**
     *
     * @type {RelativeTimeRangeExport}
     * @memberof AlertQueryExport
     */
    relativeTimeRange?: RelativeTimeRangeExport;
}
/**
 * Check if a given object implements the AlertQueryExport interface.
 */
declare function instanceOfAlertQueryExport(value: object): value is AlertQueryExport;
declare function AlertQueryExportFromJSON(json: any): AlertQueryExport;
declare function AlertQueryExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertQueryExport;
declare function AlertQueryExportToJSON(json: any): AlertQueryExport;
declare function AlertQueryExportToJSONTyped(value?: AlertQueryExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertResponse
 */
interface AlertResponse {
    /**
     *
     * @type {AlertDiscovery}
     * @memberof AlertResponse
     */
    data?: AlertDiscovery;
    /**
     *
     * @type {string}
     * @memberof AlertResponse
     */
    error?: string;
    /**
     *
     * @type {string}
     * @memberof AlertResponse
     */
    errorType?: string;
    /**
     *
     * @type {string}
     * @memberof AlertResponse
     */
    status: string;
}
/**
 * Check if a given object implements the AlertResponse interface.
 */
declare function instanceOfAlertResponse(value: object): value is AlertResponse;
declare function AlertResponseFromJSON(json: any): AlertResponse;
declare function AlertResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertResponse;
declare function AlertResponseToJSON(json: any): AlertResponse;
declare function AlertResponseToJSONTyped(value?: AlertResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertRuleRecordExport
 */
interface AlertRuleRecordExport {
    /**
     *
     * @type {string}
     * @memberof AlertRuleRecordExport
     */
    from?: string;
    /**
     *
     * @type {string}
     * @memberof AlertRuleRecordExport
     */
    metric?: string;
}
/**
 * Check if a given object implements the AlertRuleRecordExport interface.
 */
declare function instanceOfAlertRuleRecordExport(value: object): value is AlertRuleRecordExport;
declare function AlertRuleRecordExportFromJSON(json: any): AlertRuleRecordExport;
declare function AlertRuleRecordExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleRecordExport;
declare function AlertRuleRecordExportToJSON(json: any): AlertRuleRecordExport;
declare function AlertRuleRecordExportToJSONTyped(value?: AlertRuleRecordExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertRuleNotificationSettingsExport
 */
interface AlertRuleNotificationSettingsExport {
    /**
     *
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupBy?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupInterval?: string;
    /**
     *
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    groupWait?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettingsExport
     */
    muteTimeIntervals?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    receiver?: string;
    /**
     *
     * @type {string}
     * @memberof AlertRuleNotificationSettingsExport
     */
    repeatInterval?: string;
}
/**
 * Check if a given object implements the AlertRuleNotificationSettingsExport interface.
 */
declare function instanceOfAlertRuleNotificationSettingsExport(value: object): value is AlertRuleNotificationSettingsExport;
declare function AlertRuleNotificationSettingsExportFromJSON(json: any): AlertRuleNotificationSettingsExport;
declare function AlertRuleNotificationSettingsExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleNotificationSettingsExport;
declare function AlertRuleNotificationSettingsExportToJSON(json: any): AlertRuleNotificationSettingsExport;
declare function AlertRuleNotificationSettingsExportToJSONTyped(value?: AlertRuleNotificationSettingsExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertRuleExport
 */
interface AlertRuleExport {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof AlertRuleExport
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    condition?: string;
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    dashboardUid?: string;
    /**
     *
     * @type {Array<AlertQueryExport>}
     * @memberof AlertRuleExport
     */
    data?: Array<AlertQueryExport>;
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    execErrState?: AlertRuleExportExecErrStateEnum;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof AlertRuleExport
     */
    _for?: number;
    /**
     *
     * @type {boolean}
     * @memberof AlertRuleExport
     */
    isPaused?: boolean;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof AlertRuleExport
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    noDataState?: AlertRuleExportNoDataStateEnum;
    /**
     *
     * @type {AlertRuleNotificationSettingsExport}
     * @memberof AlertRuleExport
     */
    notificationSettings?: AlertRuleNotificationSettingsExport;
    /**
     *
     * @type {number}
     * @memberof AlertRuleExport
     */
    panelId?: number;
    /**
     *
     * @type {AlertRuleRecordExport}
     * @memberof AlertRuleExport
     */
    record?: AlertRuleRecordExport;
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof AlertRuleExport
     */
    uid?: string;
}
/**
 * @export
 */
declare const AlertRuleExportExecErrStateEnum: {
    readonly Ok: "OK";
    readonly Alerting: "Alerting";
    readonly Error: "Error";
};
type AlertRuleExportExecErrStateEnum = typeof AlertRuleExportExecErrStateEnum[keyof typeof AlertRuleExportExecErrStateEnum];
/**
 * @export
 */
declare const AlertRuleExportNoDataStateEnum: {
    readonly Alerting: "Alerting";
    readonly NoData: "NoData";
    readonly Ok: "OK";
};
type AlertRuleExportNoDataStateEnum = typeof AlertRuleExportNoDataStateEnum[keyof typeof AlertRuleExportNoDataStateEnum];
/**
 * Check if a given object implements the AlertRuleExport interface.
 */
declare function instanceOfAlertRuleExport(value: object): value is AlertRuleExport;
declare function AlertRuleExportFromJSON(json: any): AlertRuleExport;
declare function AlertRuleExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleExport;
declare function AlertRuleExportToJSON(json: any): AlertRuleExport;
declare function AlertRuleExportToJSONTyped(value?: AlertRuleExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertRuleNotificationSettings
 */
interface AlertRuleNotificationSettings {
    /**
     * Override the labels by which incoming alerts are grouped together. For example, multiple alerts coming in for
     * cluster=A and alertname=LatencyHigh would be batched into a single group. To aggregate by all possible labels
     * use the special value '...' as the sole label name.
     * This effectively disables aggregation entirely, passing through all alerts as-is. This is unlikely to be what
     * you want, unless you have a very low alert volume or your upstream notification system performs its own grouping.
     * Must include 'alertname' and 'grafana_folder' if not using '...'.
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettings
     */
    groupBy?: Array<string>;
    /**
     * Override how long to wait before sending a notification about new alerts that are added to a group of alerts for
     * which an initial notification has already been sent. (Usually ~5m or more.)
     * @type {string}
     * @memberof AlertRuleNotificationSettings
     */
    groupInterval?: string;
    /**
     * Override how long to initially wait to send a notification for a group of alerts. Allows to wait for an
     * inhibiting alert to arrive or collect more initial alerts for the same group. (Usually ~0s to few minutes.)
     * @type {string}
     * @memberof AlertRuleNotificationSettings
     */
    groupWait?: string;
    /**
     * Override the times when notifications should be muted. These must match the name of a mute time interval defined
     * in the alertmanager configuration mute_time_intervals section. When muted it will not send any notifications, but
     * otherwise acts normally.
     * @type {Array<string>}
     * @memberof AlertRuleNotificationSettings
     */
    muteTimeIntervals?: Array<string>;
    /**
     * Name of the receiver to send notifications to.
     * @type {string}
     * @memberof AlertRuleNotificationSettings
     */
    receiver: string;
    /**
     * Override how long to wait before sending a notification again if it has already been sent successfully for an
     * alert. (Usually ~3h or more).
     * Note that this parameter is implicitly bound by Alertmanager's `--data.retention` configuration flag.
     * Notifications will be resent after either repeat_interval or the data retention period have passed, whichever
     * occurs first. `repeat_interval` should not be less than `group_interval`.
     * @type {string}
     * @memberof AlertRuleNotificationSettings
     */
    repeatInterval?: string;
}
/**
 * Check if a given object implements the AlertRuleNotificationSettings interface.
 */
declare function instanceOfAlertRuleNotificationSettings(value: object): value is AlertRuleNotificationSettings;
declare function AlertRuleNotificationSettingsFromJSON(json: any): AlertRuleNotificationSettings;
declare function AlertRuleNotificationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleNotificationSettings;
declare function AlertRuleNotificationSettingsToJSON(json: any): AlertRuleNotificationSettings;
declare function AlertRuleNotificationSettingsToJSONTyped(value?: AlertRuleNotificationSettings | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Record
 */
interface Record {
    /**
     * Which expression node should be used as the input for the recorded metric.
     * @type {string}
     * @memberof Record
     */
    from: string;
    /**
     * Name of the recorded metric.
     * @type {string}
     * @memberof Record
     */
    metric: string;
}
/**
 * Check if a given object implements the Record interface.
 */
declare function instanceOfRecord(value: object): value is Record;
declare function RecordFromJSON(json: any): Record;
declare function RecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Record;
declare function RecordToJSON(json: any): Record;
declare function RecordToJSONTyped(value?: Record | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ProvisionedAlertRule
 */
interface ProvisionedAlertRule {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ProvisionedAlertRule
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    condition: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof ProvisionedAlertRule
     */
    data: Array<AlertQuery>;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    execErrState: ProvisionedAlertRuleExecErrStateEnum;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    folderUID: string;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof ProvisionedAlertRule
     */
    _for: number;
    /**
     *
     * @type {number}
     * @memberof ProvisionedAlertRule
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof ProvisionedAlertRule
     */
    isPaused?: boolean;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ProvisionedAlertRule
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    noDataState: ProvisionedAlertRuleNoDataStateEnum;
    /**
     *
     * @type {AlertRuleNotificationSettings}
     * @memberof ProvisionedAlertRule
     */
    notificationSettings?: AlertRuleNotificationSettings;
    /**
     *
     * @type {number}
     * @memberof ProvisionedAlertRule
     */
    orgID: number;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    provenance?: string;
    /**
     *
     * @type {Record}
     * @memberof ProvisionedAlertRule
     */
    record?: Record;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    ruleGroup: string;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    title: string;
    /**
     *
     * @type {string}
     * @memberof ProvisionedAlertRule
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof ProvisionedAlertRule
     */
    readonly updated?: Date;
}
/**
 * @export
 */
declare const ProvisionedAlertRuleExecErrStateEnum: {
    readonly Ok: "OK";
    readonly Alerting: "Alerting";
    readonly Error: "Error";
};
type ProvisionedAlertRuleExecErrStateEnum = typeof ProvisionedAlertRuleExecErrStateEnum[keyof typeof ProvisionedAlertRuleExecErrStateEnum];
/**
 * @export
 */
declare const ProvisionedAlertRuleNoDataStateEnum: {
    readonly Alerting: "Alerting";
    readonly NoData: "NoData";
    readonly Ok: "OK";
};
type ProvisionedAlertRuleNoDataStateEnum = typeof ProvisionedAlertRuleNoDataStateEnum[keyof typeof ProvisionedAlertRuleNoDataStateEnum];
/**
 * Check if a given object implements the ProvisionedAlertRule interface.
 */
declare function instanceOfProvisionedAlertRule(value: object): value is ProvisionedAlertRule;
declare function ProvisionedAlertRuleFromJSON(json: any): ProvisionedAlertRule;
declare function ProvisionedAlertRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProvisionedAlertRule;
declare function ProvisionedAlertRuleToJSON(json: any): ProvisionedAlertRule;
declare function ProvisionedAlertRuleToJSONTyped(value?: Omit<ProvisionedAlertRule, 'updated'> | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertRuleGroup
 */
interface AlertRuleGroup {
    /**
     *
     * @type {string}
     * @memberof AlertRuleGroup
     */
    folderUid?: string;
    /**
     *
     * @type {number}
     * @memberof AlertRuleGroup
     */
    interval?: number;
    /**
     *
     * @type {Array<ProvisionedAlertRule>}
     * @memberof AlertRuleGroup
     */
    rules?: Array<ProvisionedAlertRule>;
    /**
     *
     * @type {string}
     * @memberof AlertRuleGroup
     */
    title?: string;
}
/**
 * Check if a given object implements the AlertRuleGroup interface.
 */
declare function instanceOfAlertRuleGroup(value: object): value is AlertRuleGroup;
declare function AlertRuleGroupFromJSON(json: any): AlertRuleGroup;
declare function AlertRuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroup;
declare function AlertRuleGroupToJSON(json: any): AlertRuleGroup;
declare function AlertRuleGroupToJSONTyped(value?: AlertRuleGroup | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertRuleGroupExport
 */
interface AlertRuleGroupExport {
    /**
     *
     * @type {string}
     * @memberof AlertRuleGroupExport
     */
    folder?: string;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof AlertRuleGroupExport
     */
    interval?: number;
    /**
     *
     * @type {string}
     * @memberof AlertRuleGroupExport
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof AlertRuleGroupExport
     */
    orgId?: number;
    /**
     *
     * @type {Array<AlertRuleExport>}
     * @memberof AlertRuleGroupExport
     */
    rules?: Array<AlertRuleExport>;
}
/**
 * Check if a given object implements the AlertRuleGroupExport interface.
 */
declare function instanceOfAlertRuleGroupExport(value: object): value is AlertRuleGroupExport;
declare function AlertRuleGroupExportFromJSON(json: any): AlertRuleGroupExport;
declare function AlertRuleGroupExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroupExport;
declare function AlertRuleGroupExportToJSON(json: any): AlertRuleGroupExport;
declare function AlertRuleGroupExportToJSONTyped(value?: AlertRuleGroupExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertRuleGroupMetadata
 */
interface AlertRuleGroupMetadata {
    /**
     *
     * @type {number}
     * @memberof AlertRuleGroupMetadata
     */
    interval?: number;
}
/**
 * Check if a given object implements the AlertRuleGroupMetadata interface.
 */
declare function instanceOfAlertRuleGroupMetadata(value: object): value is AlertRuleGroupMetadata;
declare function AlertRuleGroupMetadataFromJSON(json: any): AlertRuleGroupMetadata;
declare function AlertRuleGroupMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroupMetadata;
declare function AlertRuleGroupMetadataToJSON(json: any): AlertRuleGroupMetadata;
declare function AlertRuleGroupMetadataToJSONTyped(value?: AlertRuleGroupMetadata | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReceiverExport
 */
interface ReceiverExport {
    /**
     *
     * @type {boolean}
     * @memberof ReceiverExport
     */
    disableResolveMessage?: boolean;
    /**
     *
     * @type {object}
     * @memberof ReceiverExport
     */
    settings?: object;
    /**
     *
     * @type {string}
     * @memberof ReceiverExport
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof ReceiverExport
     */
    uid?: string;
}
/**
 * Check if a given object implements the ReceiverExport interface.
 */
declare function instanceOfReceiverExport(value: object): value is ReceiverExport;
declare function ReceiverExportFromJSON(json: any): ReceiverExport;
declare function ReceiverExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReceiverExport;
declare function ReceiverExportToJSON(json: any): ReceiverExport;
declare function ReceiverExportToJSONTyped(value?: ReceiverExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ContactPointExport
 */
interface ContactPointExport {
    /**
     *
     * @type {string}
     * @memberof ContactPointExport
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof ContactPointExport
     */
    orgId?: number;
    /**
     *
     * @type {Array<ReceiverExport>}
     * @memberof ContactPointExport
     */
    receivers?: Array<ReceiverExport>;
}
/**
 * Check if a given object implements the ContactPointExport interface.
 */
declare function instanceOfContactPointExport(value: object): value is ContactPointExport;
declare function ContactPointExportFromJSON(json: any): ContactPointExport;
declare function ContactPointExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactPointExport;
declare function ContactPointExportToJSON(json: any): ContactPointExport;
declare function ContactPointExportToJSONTyped(value?: ContactPointExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Matcher matcher
 * @export
 * @interface Matcher
 */
interface Matcher {
    /**
     * is equal
     * @type {boolean}
     * @memberof Matcher
     */
    isEqual?: boolean;
    /**
     * is regex
     * @type {boolean}
     * @memberof Matcher
     */
    isRegex: boolean;
    /**
     * name
     * @type {string}
     * @memberof Matcher
     */
    name: string;
    /**
     * value
     * @type {string}
     * @memberof Matcher
     */
    value: string;
}
/**
 * Check if a given object implements the Matcher interface.
 */
declare function instanceOfMatcher(value: object): value is Matcher;
declare function MatcherFromJSON(json: any): Matcher;
declare function MatcherFromJSONTyped(json: any, ignoreDiscriminator: boolean): Matcher;
declare function MatcherToJSON(json: any): Matcher;
declare function MatcherToJSONTyped(value?: Matcher | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * RouteExport is the provisioned file export of definitions.Route. This is needed to hide fields that aren't useable in
 * provisioning file format. An alternative would be to define a custom MarshalJSON and MarshalYAML that excludes them.
 * @export
 * @interface RouteExport
 */
interface RouteExport {
    /**
     *
     * @type {boolean}
     * @memberof RouteExport
     */
    _continue?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof RouteExport
     */
    groupBy?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof RouteExport
     */
    groupInterval?: string;
    /**
     *
     * @type {string}
     * @memberof RouteExport
     */
    groupWait?: string;
    /**
     * Deprecated. Remove before v1.0 release.
     * @type {{ [key: string]: string; }}
     * @memberof RouteExport
     */
    match?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof RouteExport
     */
    matchRe?: {
        [key: string]: string;
    };
    /**
     * Matchers is a slice of Matchers that is sortable, implements Stringer, and
     * provides a Matches method to match a LabelSet against all Matchers in the
     * slice. Note that some users of Matchers might require it to be sorted.
     * @type {Array<Matcher>}
     * @memberof RouteExport
     */
    matchers?: Array<Matcher>;
    /**
     *
     * @type {Array<string>}
     * @memberof RouteExport
     */
    muteTimeIntervals?: Array<string>;
    /**
     *
     * @type {Array<Array<string>>}
     * @memberof RouteExport
     */
    objectMatchers?: Array<Array<string>>;
    /**
     *
     * @type {string}
     * @memberof RouteExport
     */
    receiver?: string;
    /**
     *
     * @type {string}
     * @memberof RouteExport
     */
    repeatInterval?: string;
    /**
     *
     * @type {Array<RouteExport>}
     * @memberof RouteExport
     */
    routes?: Array<RouteExport>;
}
/**
 * Check if a given object implements the RouteExport interface.
 */
declare function instanceOfRouteExport(value: object): value is RouteExport;
declare function RouteExportFromJSON(json: any): RouteExport;
declare function RouteExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteExport;
declare function RouteExportToJSON(json: any): RouteExport;
declare function RouteExportToJSONTyped(value?: RouteExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface NotificationPolicyExport
 */
interface NotificationPolicyExport {
    /**
     *
     * @type {boolean}
     * @memberof NotificationPolicyExport
     */
    _continue?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof NotificationPolicyExport
     */
    groupBy?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NotificationPolicyExport
     */
    groupInterval?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationPolicyExport
     */
    groupWait?: string;
    /**
     * Deprecated. Remove before v1.0 release.
     * @type {{ [key: string]: string; }}
     * @memberof NotificationPolicyExport
     */
    match?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof NotificationPolicyExport
     */
    matchRe?: {
        [key: string]: string;
    };
    /**
     * Matchers is a slice of Matchers that is sortable, implements Stringer, and
     * provides a Matches method to match a LabelSet against all Matchers in the
     * slice. Note that some users of Matchers might require it to be sorted.
     * @type {Array<Matcher>}
     * @memberof NotificationPolicyExport
     */
    matchers?: Array<Matcher>;
    /**
     *
     * @type {Array<string>}
     * @memberof NotificationPolicyExport
     */
    muteTimeIntervals?: Array<string>;
    /**
     *
     * @type {Array<Array<string>>}
     * @memberof NotificationPolicyExport
     */
    objectMatchers?: Array<Array<string>>;
    /**
     *
     * @type {number}
     * @memberof NotificationPolicyExport
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof NotificationPolicyExport
     */
    receiver?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationPolicyExport
     */
    repeatInterval?: string;
    /**
     *
     * @type {Array<RouteExport>}
     * @memberof NotificationPolicyExport
     */
    routes?: Array<RouteExport>;
}
/**
 * Check if a given object implements the NotificationPolicyExport interface.
 */
declare function instanceOfNotificationPolicyExport(value: object): value is NotificationPolicyExport;
declare function NotificationPolicyExportFromJSON(json: any): NotificationPolicyExport;
declare function NotificationPolicyExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationPolicyExport;
declare function NotificationPolicyExportToJSON(json: any): NotificationPolicyExport;
declare function NotificationPolicyExportToJSONTyped(value?: NotificationPolicyExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TimeInterval
 */
interface TimeInterval {
    /**
     *
     * @type {string}
     * @memberof TimeInterval
     */
    name?: string;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof TimeInterval
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the TimeInterval interface.
 */
declare function instanceOfTimeInterval(value: object): value is TimeInterval;
declare function TimeIntervalFromJSON(json: any): TimeInterval;
declare function TimeIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeInterval;
declare function TimeIntervalToJSON(json: any): TimeInterval;
declare function TimeIntervalToJSONTyped(value?: TimeInterval | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface MuteTimeIntervalExport
 */
interface MuteTimeIntervalExport {
    /**
     *
     * @type {string}
     * @memberof MuteTimeIntervalExport
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof MuteTimeIntervalExport
     */
    orgId?: number;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof MuteTimeIntervalExport
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the MuteTimeIntervalExport interface.
 */
declare function instanceOfMuteTimeIntervalExport(value: object): value is MuteTimeIntervalExport;
declare function MuteTimeIntervalExportFromJSON(json: any): MuteTimeIntervalExport;
declare function MuteTimeIntervalExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): MuteTimeIntervalExport;
declare function MuteTimeIntervalExportToJSON(json: any): MuteTimeIntervalExport;
declare function MuteTimeIntervalExportToJSONTyped(value?: MuteTimeIntervalExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AlertingFileExport
 */
interface AlertingFileExport {
    /**
     *
     * @type {number}
     * @memberof AlertingFileExport
     */
    apiVersion?: number;
    /**
     *
     * @type {Array<ContactPointExport>}
     * @memberof AlertingFileExport
     */
    contactPoints?: Array<ContactPointExport>;
    /**
     *
     * @type {Array<AlertRuleGroupExport>}
     * @memberof AlertingFileExport
     */
    groups?: Array<AlertRuleGroupExport>;
    /**
     *
     * @type {Array<MuteTimeIntervalExport>}
     * @memberof AlertingFileExport
     */
    muteTimes?: Array<MuteTimeIntervalExport>;
    /**
     *
     * @type {Array<NotificationPolicyExport>}
     * @memberof AlertingFileExport
     */
    policies?: Array<NotificationPolicyExport>;
}
/**
 * Check if a given object implements the AlertingFileExport interface.
 */
declare function instanceOfAlertingFileExport(value: object): value is AlertingFileExport;
declare function AlertingFileExportFromJSON(json: any): AlertingFileExport;
declare function AlertingFileExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingFileExport;
declare function AlertingFileExportToJSON(json: any): AlertingFileExport;
declare function AlertingFileExportToJSONTyped(value?: AlertingFileExport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Label
 */
interface Label {
    /**
     *
     * @type {string}
     * @memberof Label
     */
    name?: string;
}
/**
 * Check if a given object implements the Label interface.
 */
declare function instanceOfLabel(value: object): value is Label;
declare function LabelFromJSON(json: any): Label;
declare function LabelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Label;
declare function LabelToJSON(json: any): Label;
declare function LabelToJSONTyped(value?: Label | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * adapted from cortex
 * @export
 * @interface AlertingRule
 */
interface AlertingRule {
    /**
     *
     * @type {Date}
     * @memberof AlertingRule
     */
    activeAt: Date;
    /**
     *
     * @type {Array<Alert>}
     * @memberof AlertingRule
     */
    alerts?: Array<Alert>;
    /**
     * Labels is a sorted set of labels. Order has to be guaranteed upon
     * instantiation.
     * @type {Array<Label>}
     * @memberof AlertingRule
     */
    annotations: Array<Label>;
    /**
     *
     * @type {number}
     * @memberof AlertingRule
     */
    duration?: number;
    /**
     *
     * @type {number}
     * @memberof AlertingRule
     */
    evaluationTime?: number;
    /**
     *
     * @type {string}
     * @memberof AlertingRule
     */
    health: string;
    /**
     * Labels is a sorted set of labels. Order has to be guaranteed upon
     * instantiation.
     * @type {Array<Label>}
     * @memberof AlertingRule
     */
    labels?: Array<Label>;
    /**
     *
     * @type {string}
     * @memberof AlertingRule
     */
    lastError?: string;
    /**
     *
     * @type {Date}
     * @memberof AlertingRule
     */
    lastEvaluation?: Date;
    /**
     *
     * @type {string}
     * @memberof AlertingRule
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof AlertingRule
     */
    query: string;
    /**
     * State can be "pending", "firing", "inactive".
     * @type {string}
     * @memberof AlertingRule
     */
    state: string;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof AlertingRule
     */
    totals?: {
        [key: string]: number;
    };
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof AlertingRule
     */
    totalsFiltered?: {
        [key: string]: number;
    };
    /**
     *
     * @type {string}
     * @memberof AlertingRule
     */
    type: string;
}
/**
 * Check if a given object implements the AlertingRule interface.
 */
declare function instanceOfAlertingRule(value: object): value is AlertingRule;
declare function AlertingRuleFromJSON(json: any): AlertingRule;
declare function AlertingRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingRule;
declare function AlertingRuleToJSON(json: any): AlertingRule;
declare function AlertingRuleToJSONTyped(value?: AlertingRule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AlertingStatus
 */
interface AlertingStatus {
    /**
     *
     * @type {string}
     * @memberof AlertingStatus
     */
    alertmanagersChoice?: AlertingStatusAlertmanagersChoiceEnum;
    /**
     *
     * @type {number}
     * @memberof AlertingStatus
     */
    numExternalAlertmanagers?: number;
}
/**
 * @export
 */
declare const AlertingStatusAlertmanagersChoiceEnum: {
    readonly All: "all";
    readonly Internal: "internal";
    readonly External: "external";
};
type AlertingStatusAlertmanagersChoiceEnum = typeof AlertingStatusAlertmanagersChoiceEnum[keyof typeof AlertingStatusAlertmanagersChoiceEnum];
/**
 * Check if a given object implements the AlertingStatus interface.
 */
declare function instanceOfAlertingStatus(value: object): value is AlertingStatus;
declare function AlertingStatusFromJSON(json: any): AlertingStatus;
declare function AlertingStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingStatus;
declare function AlertingStatusToJSON(json: any): AlertingStatus;
declare function AlertingStatusToJSONTyped(value?: AlertingStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * AlertmanagerConfig alertmanager config
 * @export
 * @interface AlertmanagerConfig
 */
interface AlertmanagerConfig {
    /**
     * original
     * @type {string}
     * @memberof AlertmanagerConfig
     */
    original: string;
}
/**
 * Check if a given object implements the AlertmanagerConfig interface.
 */
declare function instanceOfAlertmanagerConfig(value: object): value is AlertmanagerConfig;
declare function AlertmanagerConfigFromJSON(json: any): AlertmanagerConfig;
declare function AlertmanagerConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertmanagerConfig;
declare function AlertmanagerConfigToJSON(json: any): AlertmanagerConfig;
declare function AlertmanagerConfigToJSONTyped(value?: AlertmanagerConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * VersionInfo version info
 * @export
 * @interface VersionInfo
 */
interface VersionInfo {
    /**
     * branch
     * @type {string}
     * @memberof VersionInfo
     */
    branch: string;
    /**
     * build date
     * @type {string}
     * @memberof VersionInfo
     */
    buildDate: string;
    /**
     * build user
     * @type {string}
     * @memberof VersionInfo
     */
    buildUser: string;
    /**
     * go version
     * @type {string}
     * @memberof VersionInfo
     */
    goVersion: string;
    /**
     * revision
     * @type {string}
     * @memberof VersionInfo
     */
    revision: string;
    /**
     * version
     * @type {string}
     * @memberof VersionInfo
     */
    version: string;
}
/**
 * Check if a given object implements the VersionInfo interface.
 */
declare function instanceOfVersionInfo(value: object): value is VersionInfo;
declare function VersionInfoFromJSON(json: any): VersionInfo;
declare function VersionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionInfo;
declare function VersionInfoToJSON(json: any): VersionInfo;
declare function VersionInfoToJSONTyped(value?: VersionInfo | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * PeerStatus peer status
 * @export
 * @interface PeerStatus
 */
interface PeerStatus {
    /**
     * address
     * @type {string}
     * @memberof PeerStatus
     */
    address: string;
    /**
     * name
     * @type {string}
     * @memberof PeerStatus
     */
    name: string;
}
/**
 * Check if a given object implements the PeerStatus interface.
 */
declare function instanceOfPeerStatus(value: object): value is PeerStatus;
declare function PeerStatusFromJSON(json: any): PeerStatus;
declare function PeerStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerStatus;
declare function PeerStatusToJSON(json: any): PeerStatus;
declare function PeerStatusToJSONTyped(value?: PeerStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * ClusterStatus cluster status
 * @export
 * @interface ClusterStatus
 */
interface ClusterStatus {
    /**
     * name
     * @type {string}
     * @memberof ClusterStatus
     */
    name?: string;
    /**
     * peers
     * @type {Array<PeerStatus>}
     * @memberof ClusterStatus
     */
    peers?: Array<PeerStatus>;
    /**
     * status
     * @type {string}
     * @memberof ClusterStatus
     */
    status: ClusterStatusStatusEnum;
}
/**
 * @export
 */
declare const ClusterStatusStatusEnum: {
    readonly ReadySettlingDisabled: "[ready settling disabled]";
};
type ClusterStatusStatusEnum = typeof ClusterStatusStatusEnum[keyof typeof ClusterStatusStatusEnum];
/**
 * Check if a given object implements the ClusterStatus interface.
 */
declare function instanceOfClusterStatus(value: object): value is ClusterStatus;
declare function ClusterStatusFromJSON(json: any): ClusterStatus;
declare function ClusterStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterStatus;
declare function ClusterStatusToJSON(json: any): ClusterStatus;
declare function ClusterStatusToJSONTyped(value?: ClusterStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * AlertmanagerStatus alertmanager status
 * @export
 * @interface AlertmanagerStatus
 */
interface AlertmanagerStatus {
    /**
     *
     * @type {ClusterStatus}
     * @memberof AlertmanagerStatus
     */
    cluster: ClusterStatus;
    /**
     *
     * @type {AlertmanagerConfig}
     * @memberof AlertmanagerStatus
     */
    config: AlertmanagerConfig;
    /**
     * uptime
     * @type {Date}
     * @memberof AlertmanagerStatus
     */
    uptime: Date;
    /**
     *
     * @type {VersionInfo}
     * @memberof AlertmanagerStatus
     */
    versionInfo: VersionInfo;
}
/**
 * Check if a given object implements the AlertmanagerStatus interface.
 */
declare function instanceOfAlertmanagerStatus(value: object): value is AlertmanagerStatus;
declare function AlertmanagerStatusFromJSON(json: any): AlertmanagerStatus;
declare function AlertmanagerStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertmanagerStatus;
declare function AlertmanagerStatusToJSON(json: any): AlertmanagerStatus;
declare function AlertmanagerStatusToJSONTyped(value?: AlertmanagerStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Annotation
 */
interface Annotation {
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    alertId?: number;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    alertName?: string;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    avatarUrl?: string;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    created?: number;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    dashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    dashboardUID?: string;
    /**
     *
     * @type {object}
     * @memberof Annotation
     */
    data?: object;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    email?: string;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    newState?: string;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    panelId?: number;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    prevState?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Annotation
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Annotation
     */
    text?: string;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    timeEnd?: number;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    updated?: number;
    /**
     *
     * @type {number}
     * @memberof Annotation
     */
    userId?: number;
}
/**
 * Check if a given object implements the Annotation interface.
 */
declare function instanceOfAnnotation(value: object): value is Annotation;
declare function AnnotationFromJSON(json: any): Annotation;
declare function AnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Annotation;
declare function AnnotationToJSON(json: any): Annotation;
declare function AnnotationToJSONTyped(value?: Annotation | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AnnotationActions
 */
interface AnnotationActions {
    /**
     *
     * @type {boolean}
     * @memberof AnnotationActions
     */
    canAdd?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AnnotationActions
     */
    canDelete?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AnnotationActions
     */
    canEdit?: boolean;
}
/**
 * Check if a given object implements the AnnotationActions interface.
 */
declare function instanceOfAnnotationActions(value: object): value is AnnotationActions;
declare function AnnotationActionsFromJSON(json: any): AnnotationActions;
declare function AnnotationActionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationActions;
declare function AnnotationActionsToJSON(json: any): AnnotationActions;
declare function AnnotationActionsToJSONTyped(value?: AnnotationActions | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * TODO: this should be a regular DataQuery that depends on the selected dashboard
 * these match the properties of the "grafana" datasouce that is default in most dashboards
 * @export
 * @interface AnnotationTarget
 */
interface AnnotationTarget {
    /**
     * Only required/valid for the grafana datasource...
     * but code+tests is already depending on it so hard to change
     * @type {number}
     * @memberof AnnotationTarget
     */
    limit?: number;
    /**
     * Only required/valid for the grafana datasource...
     * but code+tests is already depending on it so hard to change
     * @type {boolean}
     * @memberof AnnotationTarget
     */
    matchAny?: boolean;
    /**
     * Only required/valid for the grafana datasource...
     * but code+tests is already depending on it so hard to change
     * @type {Array<string>}
     * @memberof AnnotationTarget
     */
    tags?: Array<string>;
    /**
     * Only required/valid for the grafana datasource...
     * but code+tests is already depending on it so hard to change
     * @type {string}
     * @memberof AnnotationTarget
     */
    type?: string;
}
/**
 * Check if a given object implements the AnnotationTarget interface.
 */
declare function instanceOfAnnotationTarget(value: object): value is AnnotationTarget;
declare function AnnotationTargetFromJSON(json: any): AnnotationTarget;
declare function AnnotationTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationTarget;
declare function AnnotationTargetToJSON(json: any): AnnotationTarget;
declare function AnnotationTargetToJSONTyped(value?: AnnotationTarget | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Ref to a DataSource instance
 * @export
 * @interface DataSourceRef
 */
interface DataSourceRef {
    /**
     * The plugin type-id
     * @type {string}
     * @memberof DataSourceRef
     */
    type?: string;
    /**
     * Specific datasource instance
     * @type {string}
     * @memberof DataSourceRef
     */
    uid?: string;
}
/**
 * Check if a given object implements the DataSourceRef interface.
 */
declare function instanceOfDataSourceRef(value: object): value is DataSourceRef;
declare function DataSourceRefFromJSON(json: any): DataSourceRef;
declare function DataSourceRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceRef;
declare function DataSourceRefToJSON(json: any): DataSourceRef;
declare function DataSourceRefToJSONTyped(value?: DataSourceRef | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AnnotationPanelFilter
 */
interface AnnotationPanelFilter {
    /**
     * Should the specified panels be included or excluded
     * @type {boolean}
     * @memberof AnnotationPanelFilter
     */
    exclude?: boolean;
    /**
     * Panel IDs that should be included or excluded
     * @type {Array<number>}
     * @memberof AnnotationPanelFilter
     */
    ids?: Array<number>;
}
/**
 * Check if a given object implements the AnnotationPanelFilter interface.
 */
declare function instanceOfAnnotationPanelFilter(value: object): value is AnnotationPanelFilter;
declare function AnnotationPanelFilterFromJSON(json: any): AnnotationPanelFilter;
declare function AnnotationPanelFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationPanelFilter;
declare function AnnotationPanelFilterToJSON(json: any): AnnotationPanelFilter;
declare function AnnotationPanelFilterToJSONTyped(value?: AnnotationPanelFilter | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * TODO docs
 * FROM: AnnotationQuery in grafana-data/src/types/annotations.ts
 * @export
 * @interface AnnotationQuery
 */
interface AnnotationQuery {
    /**
     * Set to 1 for the standard annotation query all dashboards have by default.
     * @type {number}
     * @memberof AnnotationQuery
     */
    builtIn?: number;
    /**
     *
     * @type {DataSourceRef}
     * @memberof AnnotationQuery
     */
    datasource?: DataSourceRef;
    /**
     * When enabled the annotation query is issued with every dashboard refresh
     * @type {boolean}
     * @memberof AnnotationQuery
     */
    enable?: boolean;
    /**
     *
     * @type {AnnotationPanelFilter}
     * @memberof AnnotationQuery
     */
    filter?: AnnotationPanelFilter;
    /**
     * Annotation queries can be toggled on or off at the top of the dashboard.
     * When hide is true, the toggle is not shown in the dashboard.
     * @type {boolean}
     * @memberof AnnotationQuery
     */
    hide?: boolean;
    /**
     * Color to use for the annotation event markers
     * @type {string}
     * @memberof AnnotationQuery
     */
    iconColor?: string;
    /**
     * Name of annotation.
     * @type {string}
     * @memberof AnnotationQuery
     */
    name?: string;
    /**
     *
     * @type {AnnotationTarget}
     * @memberof AnnotationQuery
     */
    target?: AnnotationTarget;
    /**
     * TODO -- this should not exist here, it is based on the --grafana-- datasource
     * @type {string}
     * @memberof AnnotationQuery
     */
    type?: string;
}
/**
 * Check if a given object implements the AnnotationQuery interface.
 */
declare function instanceOfAnnotationQuery(value: object): value is AnnotationQuery;
declare function AnnotationQueryFromJSON(json: any): AnnotationQuery;
declare function AnnotationQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationQuery;
declare function AnnotationQueryToJSON(json: any): AnnotationQuery;
declare function AnnotationQueryToJSONTyped(value?: AnnotationQuery | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AnnotationEvent
 */
interface AnnotationEvent {
    /**
     *
     * @type {string}
     * @memberof AnnotationEvent
     */
    color?: string;
    /**
     *
     * @type {number}
     * @memberof AnnotationEvent
     */
    dashboardId?: number;
    /**
     *
     * @type {number}
     * @memberof AnnotationEvent
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof AnnotationEvent
     */
    isRegion?: boolean;
    /**
     *
     * @type {number}
     * @memberof AnnotationEvent
     */
    panelId?: number;
    /**
     *
     * @type {AnnotationQuery}
     * @memberof AnnotationEvent
     */
    source?: AnnotationQuery;
    /**
     *
     * @type {Array<string>}
     * @memberof AnnotationEvent
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof AnnotationEvent
     */
    text?: string;
    /**
     *
     * @type {number}
     * @memberof AnnotationEvent
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof AnnotationEvent
     */
    timeEnd?: number;
}
/**
 * Check if a given object implements the AnnotationEvent interface.
 */
declare function instanceOfAnnotationEvent(value: object): value is AnnotationEvent;
declare function AnnotationEventFromJSON(json: any): AnnotationEvent;
declare function AnnotationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationEvent;
declare function AnnotationEventToJSON(json: any): AnnotationEvent;
declare function AnnotationEventToJSONTyped(value?: AnnotationEvent | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface AnnotationPermission
 */
interface AnnotationPermission {
    /**
     *
     * @type {AnnotationActions}
     * @memberof AnnotationPermission
     */
    dashboard?: AnnotationActions;
    /**
     *
     * @type {AnnotationActions}
     * @memberof AnnotationPermission
     */
    organization?: AnnotationActions;
}
/**
 * Check if a given object implements the AnnotationPermission interface.
 */
declare function instanceOfAnnotationPermission(value: object): value is AnnotationPermission;
declare function AnnotationPermissionFromJSON(json: any): AnnotationPermission;
declare function AnnotationPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationPermission;
declare function AnnotationPermissionToJSON(json: any): AnnotationPermission;
declare function AnnotationPermissionToJSONTyped(value?: AnnotationPermission | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ApiKeyDTO
 */
interface ApiKeyDTO {
    /**
     * Metadata contains user accesses for a given resource
     * Ex: map[string]bool{"create":true, "delete": true}
     * @type {{ [key: string]: boolean; }}
     * @memberof ApiKeyDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {Date}
     * @memberof ApiKeyDTO
     */
    expiration?: Date;
    /**
     *
     * @type {number}
     * @memberof ApiKeyDTO
     */
    id?: number;
    /**
     *
     * @type {Date}
     * @memberof ApiKeyDTO
     */
    lastUsedAt?: Date;
    /**
     *
     * @type {string}
     * @memberof ApiKeyDTO
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ApiKeyDTO
     */
    role?: ApiKeyDTORoleEnum;
}
/**
 * @export
 */
declare const ApiKeyDTORoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type ApiKeyDTORoleEnum = typeof ApiKeyDTORoleEnum[keyof typeof ApiKeyDTORoleEnum];
/**
 * Check if a given object implements the ApiKeyDTO interface.
 */
declare function instanceOfApiKeyDTO(value: object): value is ApiKeyDTO;
declare function ApiKeyDTOFromJSON(json: any): ApiKeyDTO;
declare function ApiKeyDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyDTO;
declare function ApiKeyDTOToJSON(json: any): ApiKeyDTO;
declare function ApiKeyDTOToJSONTyped(value?: ApiKeyDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ApiRuleNode
 */
interface ApiRuleNode {
    /**
     *
     * @type {string}
     * @memberof ApiRuleNode
     */
    alert?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ApiRuleNode
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof ApiRuleNode
     */
    expr?: string;
    /**
     *
     * @type {string}
     * @memberof ApiRuleNode
     */
    _for?: string;
    /**
     *
     * @type {string}
     * @memberof ApiRuleNode
     */
    keepFiringFor?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ApiRuleNode
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof ApiRuleNode
     */
    record?: string;
}
/**
 * Check if a given object implements the ApiRuleNode interface.
 */
declare function instanceOfApiRuleNode(value: object): value is ApiRuleNode;
declare function ApiRuleNodeFromJSON(json: any): ApiRuleNode;
declare function ApiRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiRuleNode;
declare function ApiRuleNodeToJSON(json: any): ApiRuleNode;
declare function ApiRuleNodeToJSONTyped(value?: ApiRuleNode | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Assignments
 */
interface Assignments {
    /**
     *
     * @type {boolean}
     * @memberof Assignments
     */
    builtInRoles?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Assignments
     */
    serviceAccounts?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Assignments
     */
    teams?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Assignments
     */
    users?: boolean;
}
/**
 * Check if a given object implements the Assignments interface.
 */
declare function instanceOfAssignments(value: object): value is Assignments;
declare function AssignmentsFromJSON(json: any): Assignments;
declare function AssignmentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Assignments;
declare function AssignmentsToJSON(json: any): Assignments;
declare function AssignmentsToJSONTyped(value?: Assignments | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * AttributeTypeAndValue mirrors the ASN.1 structure of the same name in
 * RFC 5280, Section 4.1.2.4.
 * @export
 * @interface AttributeTypeAndValue
 */
interface AttributeTypeAndValue {
    /**
     *
     * @type {Array<number>}
     * @memberof AttributeTypeAndValue
     */
    type?: Array<number>;
    /**
     *
     * @type {object}
     * @memberof AttributeTypeAndValue
     */
    value?: object;
}
/**
 * Check if a given object implements the AttributeTypeAndValue interface.
 */
declare function instanceOfAttributeTypeAndValue(value: object): value is AttributeTypeAndValue;
declare function AttributeTypeAndValueFromJSON(json: any): AttributeTypeAndValue;
declare function AttributeTypeAndValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeTypeAndValue;
declare function AttributeTypeAndValueToJSON(json: any): AttributeTypeAndValue;
declare function AttributeTypeAndValueToJSONTyped(value?: AttributeTypeAndValue | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Authorization
 */
interface Authorization {
    /**
     *
     * @type {string}
     * @memberof Authorization
     */
    credentials?: string;
    /**
     *
     * @type {string}
     * @memberof Authorization
     */
    credentialsFile?: string;
    /**
     * CredentialsRef is the name of the secret within the secret manager to use as credentials.
     * @type {string}
     * @memberof Authorization
     */
    credentialsRef?: string;
    /**
     *
     * @type {string}
     * @memberof Authorization
     */
    type?: string;
}
/**
 * Check if a given object implements the Authorization interface.
 */
declare function instanceOfAuthorization(value: object): value is Authorization;
declare function AuthorizationFromJSON(json: any): Authorization;
declare function AuthorizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authorization;
declare function AuthorizationToJSON(json: any): Authorization;
declare function AuthorizationToJSONTyped(value?: Authorization | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface BacktestConfig
 */
interface BacktestConfig {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof BacktestConfig
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof BacktestConfig
     */
    condition?: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof BacktestConfig
     */
    data?: Array<AlertQuery>;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof BacktestConfig
     */
    _for?: number;
    /**
     *
     * @type {Date}
     * @memberof BacktestConfig
     */
    from?: Date;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof BacktestConfig
     */
    interval?: number;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof BacktestConfig
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof BacktestConfig
     */
    noDataState?: BacktestConfigNoDataStateEnum;
    /**
     *
     * @type {string}
     * @memberof BacktestConfig
     */
    title?: string;
    /**
     *
     * @type {Date}
     * @memberof BacktestConfig
     */
    to?: Date;
}
/**
 * @export
 */
declare const BacktestConfigNoDataStateEnum: {
    readonly Alerting: "Alerting";
    readonly NoData: "NoData";
    readonly Ok: "OK";
};
type BacktestConfigNoDataStateEnum = typeof BacktestConfigNoDataStateEnum[keyof typeof BacktestConfigNoDataStateEnum];
/**
 * Check if a given object implements the BacktestConfig interface.
 */
declare function instanceOfBacktestConfig(value: object): value is BacktestConfig;
declare function BacktestConfigFromJSON(json: any): BacktestConfig;
declare function BacktestConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): BacktestConfig;
declare function BacktestConfigToJSON(json: any): BacktestConfig;
declare function BacktestConfigToJSONTyped(value?: BacktestConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface BasicAuth
 */
interface BasicAuth {
    /**
     *
     * @type {string}
     * @memberof BasicAuth
     */
    password?: string;
    /**
     *
     * @type {string}
     * @memberof BasicAuth
     */
    passwordFile?: string;
    /**
     * PasswordRef is the name of the secret within the secret manager to use as the password.
     * @type {string}
     * @memberof BasicAuth
     */
    passwordRef?: string;
    /**
     *
     * @type {string}
     * @memberof BasicAuth
     */
    username?: string;
    /**
     *
     * @type {string}
     * @memberof BasicAuth
     */
    usernameFile?: string;
    /**
     * UsernameRef is the name of the secret within the secret manager to use as the username.
     * @type {string}
     * @memberof BasicAuth
     */
    usernameRef?: string;
}
/**
 * Check if a given object implements the BasicAuth interface.
 */
declare function instanceOfBasicAuth(value: object): value is BasicAuth;
declare function BasicAuthFromJSON(json: any): BasicAuth;
declare function BasicAuthFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicAuth;
declare function BasicAuthToJSON(json: any): BasicAuth;
declare function BasicAuthToJSONTyped(value?: BasicAuth | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Config defines the internal representation of a cache configuration, including fields not set by the API caller
 * @export
 * @interface CacheConfig
 */
interface CacheConfig {
    /**
     *
     * @type {Date}
     * @memberof CacheConfig
     */
    created?: Date;
    /**
     * Fields that can be set by the API caller - read/write
     * @type {number}
     * @memberof CacheConfig
     */
    dataSourceID?: number;
    /**
     *
     * @type {string}
     * @memberof CacheConfig
     */
    dataSourceUID?: string;
    /**
     * These are returned by the HTTP API, but are managed internally - read-only
     * Note: 'created' and 'updated' are special properties managed automatically by xorm, but we are setting them manually
     * @type {number}
     * @memberof CacheConfig
     */
    defaultTTLMs?: number;
    /**
     *
     * @type {boolean}
     * @memberof CacheConfig
     */
    enabled?: boolean;
    /**
     * TTL MS, or "time to live", is how long a cached item will stay in the cache before it is removed (in milliseconds)
     * @type {number}
     * @memberof CacheConfig
     */
    ttlQueriesMs?: number;
    /**
     *
     * @type {number}
     * @memberof CacheConfig
     */
    ttlResourcesMs?: number;
    /**
     *
     * @type {Date}
     * @memberof CacheConfig
     */
    updated?: Date;
    /**
     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini
     * @type {boolean}
     * @memberof CacheConfig
     */
    useDefaultTTL?: boolean;
}
/**
 * Check if a given object implements the CacheConfig interface.
 */
declare function instanceOfCacheConfig(value: object): value is CacheConfig;
declare function CacheConfigFromJSON(json: any): CacheConfig;
declare function CacheConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfig;
declare function CacheConfigToJSON(json: any): CacheConfig;
declare function CacheConfigToJSONTyped(value?: CacheConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CacheConfigResponse
 */
interface CacheConfigResponse {
    /**
     *
     * @type {Date}
     * @memberof CacheConfigResponse
     */
    created?: Date;
    /**
     * Fields that can be set by the API caller - read/write
     * @type {number}
     * @memberof CacheConfigResponse
     */
    dataSourceID?: number;
    /**
     *
     * @type {string}
     * @memberof CacheConfigResponse
     */
    dataSourceUID?: string;
    /**
     * These are returned by the HTTP API, but are managed internally - read-only
     * Note: 'created' and 'updated' are special properties managed automatically by xorm, but we are setting them manually
     * @type {number}
     * @memberof CacheConfigResponse
     */
    defaultTTLMs?: number;
    /**
     *
     * @type {boolean}
     * @memberof CacheConfigResponse
     */
    enabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof CacheConfigResponse
     */
    message?: string;
    /**
     * TTL MS, or "time to live", is how long a cached item will stay in the cache before it is removed (in milliseconds)
     * @type {number}
     * @memberof CacheConfigResponse
     */
    ttlQueriesMs?: number;
    /**
     *
     * @type {number}
     * @memberof CacheConfigResponse
     */
    ttlResourcesMs?: number;
    /**
     *
     * @type {Date}
     * @memberof CacheConfigResponse
     */
    updated?: Date;
    /**
     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini
     * @type {boolean}
     * @memberof CacheConfigResponse
     */
    useDefaultTTL?: boolean;
}
/**
 * Check if a given object implements the CacheConfigResponse interface.
 */
declare function instanceOfCacheConfigResponse(value: object): value is CacheConfigResponse;
declare function CacheConfigResponseFromJSON(json: any): CacheConfigResponse;
declare function CacheConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfigResponse;
declare function CacheConfigResponseToJSON(json: any): CacheConfigResponse;
declare function CacheConfigResponseToJSONTyped(value?: CacheConfigResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * ConfigSetter defines the cache parameters that users can configure per datasource
 * This is only intended to be consumed by the SetCache HTTP Handler
 * @export
 * @interface CacheConfigSetter
 */
interface CacheConfigSetter {
    /**
     *
     * @type {number}
     * @memberof CacheConfigSetter
     */
    dataSourceID?: number;
    /**
     *
     * @type {string}
     * @memberof CacheConfigSetter
     */
    dataSourceUID?: string;
    /**
     *
     * @type {boolean}
     * @memberof CacheConfigSetter
     */
    enabled?: boolean;
    /**
     * TTL MS, or "time to live", is how long a cached item will stay in the cache before it is removed (in milliseconds)
     * @type {number}
     * @memberof CacheConfigSetter
     */
    ttlQueriesMs?: number;
    /**
     *
     * @type {number}
     * @memberof CacheConfigSetter
     */
    ttlResourcesMs?: number;
    /**
     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini
     * @type {boolean}
     * @memberof CacheConfigSetter
     */
    useDefaultTTL?: boolean;
}
/**
 * Check if a given object implements the CacheConfigSetter interface.
 */
declare function instanceOfCacheConfigSetter(value: object): value is CacheConfigSetter;
declare function CacheConfigSetterFromJSON(json: any): CacheConfigSetter;
declare function CacheConfigSetterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfigSetter;
declare function CacheConfigSetterToJSON(json: any): CacheConfigSetter;
declare function CacheConfigSetterToJSONTyped(value?: CacheConfigSetter | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CalculateDiffTarget
 */
interface CalculateDiffTarget {
    /**
     *
     * @type {number}
     * @memberof CalculateDiffTarget
     */
    dashboardId?: number;
    /**
     *
     * @type {object}
     * @memberof CalculateDiffTarget
     */
    unsavedDashboard?: object;
    /**
     *
     * @type {number}
     * @memberof CalculateDiffTarget
     */
    version?: number;
}
/**
 * Check if a given object implements the CalculateDiffTarget interface.
 */
declare function instanceOfCalculateDiffTarget(value: object): value is CalculateDiffTarget;
declare function CalculateDiffTargetFromJSON(json: any): CalculateDiffTarget;
declare function CalculateDiffTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateDiffTarget;
declare function CalculateDiffTargetToJSON(json: any): CalculateDiffTarget;
declare function CalculateDiffTargetToJSONTyped(value?: CalculateDiffTarget | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CalculateDashboardDiffRequest
 */
interface CalculateDashboardDiffRequest {
    /**
     *
     * @type {CalculateDiffTarget}
     * @memberof CalculateDashboardDiffRequest
     */
    base?: CalculateDiffTarget;
    /**
     * The type of diff to return
     * Description:
     * `basic`
     * `json`
     * @type {string}
     * @memberof CalculateDashboardDiffRequest
     */
    diffType?: CalculateDashboardDiffRequestDiffTypeEnum;
    /**
     *
     * @type {CalculateDiffTarget}
     * @memberof CalculateDashboardDiffRequest
     */
    _new?: CalculateDiffTarget;
}
/**
 * @export
 */
declare const CalculateDashboardDiffRequestDiffTypeEnum: {
    readonly Basic: "basic";
    readonly Json: "json";
};
type CalculateDashboardDiffRequestDiffTypeEnum = typeof CalculateDashboardDiffRequestDiffTypeEnum[keyof typeof CalculateDashboardDiffRequestDiffTypeEnum];
/**
 * Check if a given object implements the CalculateDashboardDiffRequest interface.
 */
declare function instanceOfCalculateDashboardDiffRequest(value: object): value is CalculateDashboardDiffRequest;
declare function CalculateDashboardDiffRequestFromJSON(json: any): CalculateDashboardDiffRequest;
declare function CalculateDashboardDiffRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateDashboardDiffRequest;
declare function CalculateDashboardDiffRequestToJSON(json: any): CalculateDashboardDiffRequest;
declare function CalculateDashboardDiffRequestToJSONTyped(value?: CalculateDashboardDiffRequest | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Extension represents the ASN.1 structure of the same name. See RFC
 * 5280, section 4.2.
 * @export
 * @interface Extension
 */
interface Extension {
    /**
     *
     * @type {boolean}
     * @memberof Extension
     */
    critical?: boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof Extension
     */
    id?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof Extension
     */
    value?: Array<number>;
}
/**
 * Check if a given object implements the Extension interface.
 */
declare function instanceOfExtension(value: object): value is Extension;
declare function ExtensionFromJSON(json: any): Extension;
declare function ExtensionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Extension;
declare function ExtensionToJSON(json: any): Extension;
declare function ExtensionToJSONTyped(value?: Extension | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface IPNet
 */
interface IPNet {
    /**
     *
     * @type {string}
     * @memberof IPNet
     */
    iP?: string;
    /**
     * See type [IPNet] and func [ParseCIDR] for details.
     * @type {Array<number>}
     * @memberof IPNet
     */
    mask?: Array<number>;
}
/**
 * Check if a given object implements the IPNet interface.
 */
declare function instanceOfIPNet(value: object): value is IPNet;
declare function IPNetFromJSON(json: any): IPNet;
declare function IPNetFromJSONTyped(json: any, ignoreDiscriminator: boolean): IPNet;
declare function IPNetToJSON(json: any): IPNet;
declare function IPNetToJSONTyped(value?: IPNet | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The general form represented is:
 *
 * [scheme:][//[userinfo@]host][/]path[?query][#fragment]
 *
 * URLs that do not start with a slash after the scheme are interpreted as:
 *
 * scheme:opaque[?query][#fragment]
 *
 * The Host field contains the host and port subcomponents of the URL.
 * When the port is present, it is separated from the host with a colon.
 * When the host is an IPv6 address, it must be enclosed in square brackets:
 * "[fe80::1]:80". The [net.JoinHostPort] function combines a host and port
 * into a string suitable for the Host field, adding square brackets to
 * the host when necessary.
 *
 * Note that the Path field is stored in decoded form: /%47%6f%2f becomes /Go/.
 * A consequence is that it is impossible to tell which slashes in the Path were
 * slashes in the raw URL and which were %2f. This distinction is rarely important,
 * but when it is, the code should use the [URL.EscapedPath] method, which preserves
 * the original encoding of Path.
 *
 * The RawPath field is an optional field which is only set when the default
 * encoding of Path is different from the escaped path. See the EscapedPath method
 * for more details.
 *
 * URL's String method uses the EscapedPath method to obtain the path.
 * @export
 * @interface URL
 */
interface URL {
    /**
     *
     * @type {boolean}
     * @memberof URL
     */
    forceQuery?: boolean;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    fragment?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    host?: string;
    /**
     *
     * @type {boolean}
     * @memberof URL
     */
    omitHost?: boolean;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    opaque?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    path?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    rawFragment?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    rawPath?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    rawQuery?: string;
    /**
     *
     * @type {string}
     * @memberof URL
     */
    scheme?: string;
    /**
     * The Userinfo type is an immutable encapsulation of username and
     * password details for a [URL]. An existing Userinfo value is guaranteed
     * to have a username set (potentially empty, as allowed by RFC 2396),
     * and optionally a password.
     * @type {object}
     * @memberof URL
     */
    user?: object;
}
/**
 * Check if a given object implements the URL interface.
 */
declare function instanceOfURL(value: object): value is URL;
declare function URLFromJSON(json: any): URL;
declare function URLFromJSONTyped(json: any, ignoreDiscriminator: boolean): URL;
declare function URLToJSON(json: any): URL;
declare function URLToJSONTyped(value?: URL | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Name represents an X.509 distinguished name. This only includes the common
 * elements of a DN. Note that Name is only an approximation of the X.509
 * structure. If an accurate representation is needed, asn1.Unmarshal the raw
 * subject or issuer as an [RDNSequence].
 * @export
 * @interface Name
 */
interface Name {
    /**
     *
     * @type {Array<string>}
     * @memberof Name
     */
    country?: Array<string>;
    /**
     * ExtraNames contains attributes to be copied, raw, into any marshaled
     * distinguished names. Values override any attributes with the same OID.
     * The ExtraNames field is not populated when parsing, see Names.
     * @type {Array<AttributeTypeAndValue>}
     * @memberof Name
     */
    extraNames?: Array<AttributeTypeAndValue>;
    /**
     *
     * @type {Array<string>}
     * @memberof Name
     */
    locality?: Array<string>;
    /**
     * Names contains all parsed attributes. When parsing distinguished names,
     * this can be used to extract non-standard attributes that are not parsed
     * by this package. When marshaling to RDNSequences, the Names field is
     * ignored, see ExtraNames.
     * @type {Array<AttributeTypeAndValue>}
     * @memberof Name
     */
    names?: Array<AttributeTypeAndValue>;
    /**
     *
     * @type {string}
     * @memberof Name
     */
    serialNumber?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Name
     */
    streetAddress?: Array<string>;
}
/**
 * Check if a given object implements the Name interface.
 */
declare function instanceOfName(value: object): value is Name;
declare function NameFromJSON(json: any): Name;
declare function NameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Name;
declare function NameToJSON(json: any): Name;
declare function NameToJSONTyped(value?: Name | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Certificate
 */
interface Certificate {
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    authorityKeyId?: Array<number>;
    /**
     * BasicConstraintsValid indicates whether IsCA, MaxPathLen,
     * and MaxPathLenZero are valid.
     * @type {boolean}
     * @memberof Certificate
     */
    basicConstraintsValid?: boolean;
    /**
     * CRL Distribution Points
     * @type {Array<string>}
     * @memberof Certificate
     */
    cRLDistributionPoints?: Array<string>;
    /**
     * Subject Alternate Name values. (Note that these values may not be valid
     * if invalid values were contained within a parsed certificate. For
     * example, an element of DNSNames may not be a valid DNS domain name.)
     * @type {Array<string>}
     * @memberof Certificate
     */
    dNSNames?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    emailAddresses?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    excludedDNSDomains?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    excludedEmailAddresses?: Array<string>;
    /**
     *
     * @type {Array<IPNet>}
     * @memberof Certificate
     */
    excludedIPRanges?: Array<IPNet>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    excludedURIDomains?: Array<string>;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    extKeyUsage?: Array<number>;
    /**
     * Extensions contains raw X.509 extensions. When parsing certificates,
     * this can be used to extract non-critical extensions that are not
     * parsed by this package. When marshaling certificates, the Extensions
     * field is ignored, see ExtraExtensions.
     * @type {Array<Extension>}
     * @memberof Certificate
     */
    extensions?: Array<Extension>;
    /**
     * ExtraExtensions contains extensions to be copied, raw, into any
     * marshaled certificates. Values override any extensions that would
     * otherwise be produced based on the other fields. The ExtraExtensions
     * field is not populated when parsing certificates, see Extensions.
     * @type {Array<Extension>}
     * @memberof Certificate
     */
    extraExtensions?: Array<Extension>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    iPAddresses?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof Certificate
     */
    isCA?: boolean;
    /**
     *
     * @type {Name}
     * @memberof Certificate
     */
    issuer?: Name;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    issuingCertificateURL?: Array<string>;
    /**
     * KeyUsage represents the set of actions that are valid for a given key. It's
     * a bitmap of the KeyUsage* constants.
     * @type {number}
     * @memberof Certificate
     */
    keyUsage?: number;
    /**
     * MaxPathLen and MaxPathLenZero indicate the presence and
     * value of the BasicConstraints' "pathLenConstraint".
     *
     * When parsing a certificate, a positive non-zero MaxPathLen
     * means that the field was specified, -1 means it was unset,
     * and MaxPathLenZero being true mean that the field was
     * explicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false
     * should be treated equivalent to -1 (unset).
     *
     * When generating a certificate, an unset pathLenConstraint
     * can be requested with either MaxPathLen == -1 or using the
     * zero value for both MaxPathLen and MaxPathLenZero.
     * @type {number}
     * @memberof Certificate
     */
    maxPathLen?: number;
    /**
     * MaxPathLenZero indicates that BasicConstraintsValid==true
     * and MaxPathLen==0 should be interpreted as an actual
     * maximum path length of zero. Otherwise, that combination is
     * interpreted as MaxPathLen not being set.
     * @type {boolean}
     * @memberof Certificate
     */
    maxPathLenZero?: boolean;
    /**
     *
     * @type {Date}
     * @memberof Certificate
     */
    notBefore?: Date;
    /**
     * RFC 5280, 4.2.2.1 (Authority Information Access)
     * @type {Array<string>}
     * @memberof Certificate
     */
    oCSPServer?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    permittedDNSDomains?: Array<string>;
    /**
     * Name constraints
     * @type {boolean}
     * @memberof Certificate
     */
    permittedDNSDomainsCritical?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    permittedEmailAddresses?: Array<string>;
    /**
     *
     * @type {Array<IPNet>}
     * @memberof Certificate
     */
    permittedIPRanges?: Array<IPNet>;
    /**
     *
     * @type {Array<string>}
     * @memberof Certificate
     */
    permittedURIDomains?: Array<string>;
    /**
     * Policies contains all policy identifiers included in the certificate.
     * In Go 1.22, encoding/gob cannot handle and ignores this field.
     * @type {Array<object>}
     * @memberof Certificate
     */
    policies?: Array<object>;
    /**
     * PolicyIdentifiers contains asn1.ObjectIdentifiers, the components
     * of which are limited to int32. If a certificate contains a policy which
     * cannot be represented by asn1.ObjectIdentifier, it will not be included in
     * PolicyIdentifiers, but will be present in Policies, which contains all parsed
     * policy OIDs.
     * @type {Array<Array<number>>}
     * @memberof Certificate
     */
    policyIdentifiers?: Array<Array<number>>;
    /**
     *
     * @type {object}
     * @memberof Certificate
     */
    publicKey?: object;
    /**
     *
     * @type {number}
     * @memberof Certificate
     */
    publicKeyAlgorithm?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    raw?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    rawIssuer?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    rawSubject?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    rawSubjectPublicKeyInfo?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    rawTBSCertificate?: Array<number>;
    /**
     *
     * @type {string}
     * @memberof Certificate
     */
    serialNumber?: string;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    signature?: Array<number>;
    /**
     *
     * @type {number}
     * @memberof Certificate
     */
    signatureAlgorithm?: number;
    /**
     *
     * @type {Name}
     * @memberof Certificate
     */
    subject?: Name;
    /**
     *
     * @type {Array<number>}
     * @memberof Certificate
     */
    subjectKeyId?: Array<number>;
    /**
     *
     * @type {Array<URL>}
     * @memberof Certificate
     */
    uRIs?: Array<URL>;
    /**
     * UnhandledCriticalExtensions contains a list of extension IDs that
     * were not (fully) processed when parsing. Verify will fail if this
     * slice is non-empty, unless verification is delegated to an OS
     * library which understands all the critical extensions.
     *
     * Users can access these extensions using Extensions and can remove
     * elements from this slice if they believe that they have been
     * handled.
     * @type {Array<Array<number>>}
     * @memberof Certificate
     */
    unhandledCriticalExtensions?: Array<Array<number>>;
    /**
     *
     * @type {Array<Array<number>>}
     * @memberof Certificate
     */
    unknownExtKeyUsage?: Array<Array<number>>;
    /**
     *
     * @type {number}
     * @memberof Certificate
     */
    version?: number;
}
/**
 * Check if a given object implements the Certificate interface.
 */
declare function instanceOfCertificate(value: object): value is Certificate;
declare function CertificateFromJSON(json: any): Certificate;
declare function CertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Certificate;
declare function CertificateToJSON(json: any): Certificate;
declare function CertificateToJSONTyped(value?: Certificate | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ChangeUserPasswordCommand
 */
interface ChangeUserPasswordCommand {
    /**
     *
     * @type {string}
     * @memberof ChangeUserPasswordCommand
     */
    newPassword?: string;
    /**
     *
     * @type {string}
     * @memberof ChangeUserPasswordCommand
     */
    oldPassword?: string;
}
/**
 * Check if a given object implements the ChangeUserPasswordCommand interface.
 */
declare function instanceOfChangeUserPasswordCommand(value: object): value is ChangeUserPasswordCommand;
declare function ChangeUserPasswordCommandFromJSON(json: any): ChangeUserPasswordCommand;
declare function ChangeUserPasswordCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeUserPasswordCommand;
declare function ChangeUserPasswordCommandToJSON(json: any): ChangeUserPasswordCommand;
declare function ChangeUserPasswordCommandToJSONTyped(value?: ChangeUserPasswordCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ClearHelpFlags200Response
 */
interface ClearHelpFlags200Response {
    /**
     *
     * @type {number}
     * @memberof ClearHelpFlags200Response
     */
    helpFlags1?: number;
    /**
     *
     * @type {string}
     * @memberof ClearHelpFlags200Response
     */
    message?: string;
}
/**
 * Check if a given object implements the ClearHelpFlags200Response interface.
 */
declare function instanceOfClearHelpFlags200Response(value: object): value is ClearHelpFlags200Response;
declare function ClearHelpFlags200ResponseFromJSON(json: any): ClearHelpFlags200Response;
declare function ClearHelpFlags200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClearHelpFlags200Response;
declare function ClearHelpFlags200ResponseToJSON(json: any): ClearHelpFlags200Response;
declare function ClearHelpFlags200ResponseToJSONTyped(value?: ClearHelpFlags200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MigrateDataResponseListDTO
 */
interface MigrateDataResponseListDTO {
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseListDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the MigrateDataResponseListDTO interface.
 */
declare function instanceOfMigrateDataResponseListDTO(value: object): value is MigrateDataResponseListDTO;
declare function MigrateDataResponseListDTOFromJSON(json: any): MigrateDataResponseListDTO;
declare function MigrateDataResponseListDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseListDTO;
declare function MigrateDataResponseListDTOToJSON(json: any): MigrateDataResponseListDTO;
declare function MigrateDataResponseListDTOToJSONTyped(value?: MigrateDataResponseListDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CloudMigrationRunListDTO
 */
interface CloudMigrationRunListDTO {
    /**
     *
     * @type {Array<MigrateDataResponseListDTO>}
     * @memberof CloudMigrationRunListDTO
     */
    runs?: Array<MigrateDataResponseListDTO>;
}
/**
 * Check if a given object implements the CloudMigrationRunListDTO interface.
 */
declare function instanceOfCloudMigrationRunListDTO(value: object): value is CloudMigrationRunListDTO;
declare function CloudMigrationRunListDTOFromJSON(json: any): CloudMigrationRunListDTO;
declare function CloudMigrationRunListDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationRunListDTO;
declare function CloudMigrationRunListDTOToJSON(json: any): CloudMigrationRunListDTO;
declare function CloudMigrationRunListDTOToJSONTyped(value?: CloudMigrationRunListDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CloudMigrationSessionResponseDTO
 */
interface CloudMigrationSessionResponseDTO {
    /**
     *
     * @type {Date}
     * @memberof CloudMigrationSessionResponseDTO
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof CloudMigrationSessionResponseDTO
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof CloudMigrationSessionResponseDTO
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof CloudMigrationSessionResponseDTO
     */
    updated?: Date;
}
/**
 * Check if a given object implements the CloudMigrationSessionResponseDTO interface.
 */
declare function instanceOfCloudMigrationSessionResponseDTO(value: object): value is CloudMigrationSessionResponseDTO;
declare function CloudMigrationSessionResponseDTOFromJSON(json: any): CloudMigrationSessionResponseDTO;
declare function CloudMigrationSessionResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionResponseDTO;
declare function CloudMigrationSessionResponseDTOToJSON(json: any): CloudMigrationSessionResponseDTO;
declare function CloudMigrationSessionResponseDTOToJSONTyped(value?: CloudMigrationSessionResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CloudMigrationSessionListResponseDTO
 */
interface CloudMigrationSessionListResponseDTO {
    /**
     *
     * @type {Array<CloudMigrationSessionResponseDTO>}
     * @memberof CloudMigrationSessionListResponseDTO
     */
    sessions?: Array<CloudMigrationSessionResponseDTO>;
}
/**
 * Check if a given object implements the CloudMigrationSessionListResponseDTO interface.
 */
declare function instanceOfCloudMigrationSessionListResponseDTO(value: object): value is CloudMigrationSessionListResponseDTO;
declare function CloudMigrationSessionListResponseDTOFromJSON(json: any): CloudMigrationSessionListResponseDTO;
declare function CloudMigrationSessionListResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionListResponseDTO;
declare function CloudMigrationSessionListResponseDTOToJSON(json: any): CloudMigrationSessionListResponseDTO;
declare function CloudMigrationSessionListResponseDTOToJSONTyped(value?: CloudMigrationSessionListResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CloudMigrationSessionRequestDTO
 */
interface CloudMigrationSessionRequestDTO {
    /**
     *
     * @type {string}
     * @memberof CloudMigrationSessionRequestDTO
     */
    authToken?: string;
}
/**
 * Check if a given object implements the CloudMigrationSessionRequestDTO interface.
 */
declare function instanceOfCloudMigrationSessionRequestDTO(value: object): value is CloudMigrationSessionRequestDTO;
declare function CloudMigrationSessionRequestDTOFromJSON(json: any): CloudMigrationSessionRequestDTO;
declare function CloudMigrationSessionRequestDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionRequestDTO;
declare function CloudMigrationSessionRequestDTOToJSON(json: any): CloudMigrationSessionRequestDTO;
declare function CloudMigrationSessionRequestDTOToJSONTyped(value?: CloudMigrationSessionRequestDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * InhibitRule defines an inhibition rule that mutes alerts that match the
 * target labels if an alert matching the source labels exists.
 * Both alerts have to have a set of labels being equal.
 * @export
 * @interface InhibitRule
 */
interface InhibitRule {
    /**
     *
     * @type {Array<string>}
     * @memberof InhibitRule
     */
    equal?: Array<string>;
    /**
     * SourceMatch defines a set of labels that have to equal the given
     * value for source alerts. Deprecated. Remove before v1.0 release.
     * @type {{ [key: string]: string; }}
     * @memberof InhibitRule
     */
    sourceMatch?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof InhibitRule
     */
    sourceMatchRe?: {
        [key: string]: string;
    };
    /**
     * Matchers is a slice of Matchers that is sortable, implements Stringer, and
     * provides a Matches method to match a LabelSet against all Matchers in the
     * slice. Note that some users of Matchers might require it to be sorted.
     * @type {Array<Matcher>}
     * @memberof InhibitRule
     */
    sourceMatchers?: Array<Matcher>;
    /**
     * TargetMatch defines a set of labels that have to equal the given
     * value for target alerts. Deprecated. Remove before v1.0 release.
     * @type {{ [key: string]: string; }}
     * @memberof InhibitRule
     */
    targetMatch?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof InhibitRule
     */
    targetMatchRe?: {
        [key: string]: string;
    };
    /**
     * Matchers is a slice of Matchers that is sortable, implements Stringer, and
     * provides a Matches method to match a LabelSet against all Matchers in the
     * slice. Note that some users of Matchers might require it to be sorted.
     * @type {Array<Matcher>}
     * @memberof InhibitRule
     */
    targetMatchers?: Array<Matcher>;
}
/**
 * Check if a given object implements the InhibitRule interface.
 */
declare function instanceOfInhibitRule(value: object): value is InhibitRule;
declare function InhibitRuleFromJSON(json: any): InhibitRule;
declare function InhibitRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): InhibitRule;
declare function InhibitRuleToJSON(json: any): InhibitRule;
declare function InhibitRuleToJSONTyped(value?: InhibitRule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface MuteTimeInterval
 */
interface MuteTimeInterval {
    /**
     *
     * @type {string}
     * @memberof MuteTimeInterval
     */
    name?: string;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof MuteTimeInterval
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the MuteTimeInterval interface.
 */
declare function instanceOfMuteTimeInterval(value: object): value is MuteTimeInterval;
declare function MuteTimeIntervalFromJSON(json: any): MuteTimeInterval;
declare function MuteTimeIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): MuteTimeInterval;
declare function MuteTimeIntervalToJSON(json: any): MuteTimeInterval;
declare function MuteTimeIntervalToJSONTyped(value?: MuteTimeInterval | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface HostPort
 */
interface HostPort {
    /**
     *
     * @type {string}
     * @memberof HostPort
     */
    host?: string;
    /**
     *
     * @type {string}
     * @memberof HostPort
     */
    port?: string;
}
/**
 * Check if a given object implements the HostPort interface.
 */
declare function instanceOfHostPort(value: object): value is HostPort;
declare function HostPortFromJSON(json: any): HostPort;
declare function HostPortFromJSONTyped(json: any, ignoreDiscriminator: boolean): HostPort;
declare function HostPortToJSON(json: any): HostPort;
declare function HostPortToJSONTyped(value?: HostPort | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TLSConfig
 */
interface TLSConfig {
    /**
     * Text of the CA cert to use for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    ca?: string;
    /**
     * The CA cert to use for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    caFile?: string;
    /**
     * CARef is the name of the secret within the secret manager to use as the CA cert for the
     * targets.
     * @type {string}
     * @memberof TLSConfig
     */
    caRef?: string;
    /**
     * Text of the client cert file for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    cert?: string;
    /**
     * The client cert file for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    certFile?: string;
    /**
     * CertRef is the name of the secret within the secret manager to use as the client cert for
     * the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    certRef?: string;
    /**
     * Disable target certificate validation.
     * @type {boolean}
     * @memberof TLSConfig
     */
    insecureSkipVerify?: boolean;
    /**
     *
     * @type {string}
     * @memberof TLSConfig
     */
    key?: string;
    /**
     * The client key file for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    keyFile?: string;
    /**
     * KeyRef is the name of the secret within the secret manager to use as the client key for
     * the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    keyRef?: string;
    /**
     *
     * @type {number}
     * @memberof TLSConfig
     */
    maxVersion?: number;
    /**
     *
     * @type {number}
     * @memberof TLSConfig
     */
    minVersion?: number;
    /**
     * Used to verify the hostname for the targets.
     * @type {string}
     * @memberof TLSConfig
     */
    serverName?: string;
}
/**
 * Check if a given object implements the TLSConfig interface.
 */
declare function instanceOfTLSConfig(value: object): value is TLSConfig;
declare function TLSConfigFromJSON(json: any): TLSConfig;
declare function TLSConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLSConfig;
declare function TLSConfigToJSON(json: any): TLSConfig;
declare function TLSConfigToJSONTyped(value?: TLSConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface OAuth2
 */
interface OAuth2 {
    /**
     *
     * @type {TLSConfig}
     * @memberof OAuth2
     */
    tLSConfig?: TLSConfig;
    /**
     *
     * @type {string}
     * @memberof OAuth2
     */
    clientId?: string;
    /**
     *
     * @type {string}
     * @memberof OAuth2
     */
    clientSecret?: string;
    /**
     *
     * @type {string}
     * @memberof OAuth2
     */
    clientSecretFile?: string;
    /**
     * ClientSecretRef is the name of the secret within the secret manager to use as the client
     * secret.
     * @type {string}
     * @memberof OAuth2
     */
    clientSecretRef?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof OAuth2
     */
    endpointParams?: {
        [key: string]: string;
    };
    /**
     * NoProxy contains addresses that should not use a proxy.
     * @type {string}
     * @memberof OAuth2
     */
    noProxy?: string;
    /**
     *
     * @type {{ [key: string]: Array<string>; }}
     * @memberof OAuth2
     */
    proxyConnectHeader?: {
        [key: string]: Array<string>;
    };
    /**
     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function
     * to determine proxies.
     * @type {boolean}
     * @memberof OAuth2
     */
    proxyFromEnvironment?: boolean;
    /**
     *
     * @type {URL}
     * @memberof OAuth2
     */
    proxyUrl?: URL;
    /**
     *
     * @type {Array<string>}
     * @memberof OAuth2
     */
    scopes?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof OAuth2
     */
    tokenUrl?: string;
}
/**
 * Check if a given object implements the OAuth2 interface.
 */
declare function instanceOfOAuth2(value: object): value is OAuth2;
declare function OAuth2FromJSON(json: any): OAuth2;
declare function OAuth2FromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuth2;
declare function OAuth2ToJSON(json: any): OAuth2;
declare function OAuth2ToJSONTyped(value?: OAuth2 | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Header
 */
interface Header {
    /**
     *
     * @type {Array<string>}
     * @memberof Header
     */
    files?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Header
     */
    secrets?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof Header
     */
    values?: Array<string>;
}
/**
 * Check if a given object implements the Header interface.
 */
declare function instanceOfHeader(value: object): value is Header;
declare function HeaderFromJSON(json: any): Header;
declare function HeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Header;
declare function HeaderToJSON(json: any): Header;
declare function HeaderToJSONTyped(value?: Header | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Headers
 */
interface Headers {
    /**
     *
     * @type {{ [key: string]: Header; }}
     * @memberof Headers
     */
    headers?: {
        [key: string]: Header;
    };
}
/**
 * Check if a given object implements the Headers interface.
 */
declare function instanceOfHeaders(value: object): value is Headers;
declare function HeadersFromJSON(json: any): Headers;
declare function HeadersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Headers;
declare function HeadersToJSON(json: any): Headers;
declare function HeadersToJSONTyped(value?: Headers | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface HTTPClientConfig
 */
interface HTTPClientConfig {
    /**
     *
     * @type {Authorization}
     * @memberof HTTPClientConfig
     */
    authorization?: Authorization;
    /**
     *
     * @type {BasicAuth}
     * @memberof HTTPClientConfig
     */
    basicAuth?: BasicAuth;
    /**
     *
     * @type {string}
     * @memberof HTTPClientConfig
     */
    bearerToken?: string;
    /**
     * The bearer token file for the targets. Deprecated in favour of
     * Authorization.CredentialsFile.
     * @type {string}
     * @memberof HTTPClientConfig
     */
    bearerTokenFile?: string;
    /**
     * EnableHTTP2 specifies whether the client should configure HTTP2.
     * The omitempty flag is not set, because it would be hidden from the
     * marshalled configuration when set to false.
     * @type {boolean}
     * @memberof HTTPClientConfig
     */
    enableHttp2?: boolean;
    /**
     * FollowRedirects specifies whether the client should follow HTTP 3xx redirects.
     * The omitempty flag is not set, because it would be hidden from the
     * marshalled configuration when set to false.
     * @type {boolean}
     * @memberof HTTPClientConfig
     */
    followRedirects?: boolean;
    /**
     *
     * @type {Headers}
     * @memberof HTTPClientConfig
     */
    httpHeaders?: Headers;
    /**
     * NoProxy contains addresses that should not use a proxy.
     * @type {string}
     * @memberof HTTPClientConfig
     */
    noProxy?: string;
    /**
     *
     * @type {OAuth2}
     * @memberof HTTPClientConfig
     */
    oauth2?: OAuth2;
    /**
     *
     * @type {{ [key: string]: Array<string>; }}
     * @memberof HTTPClientConfig
     */
    proxyConnectHeader?: {
        [key: string]: Array<string>;
    };
    /**
     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function
     * to determine proxies.
     * @type {boolean}
     * @memberof HTTPClientConfig
     */
    proxyFromEnvironment?: boolean;
    /**
     *
     * @type {URL}
     * @memberof HTTPClientConfig
     */
    proxyUrl?: URL;
    /**
     *
     * @type {TLSConfig}
     * @memberof HTTPClientConfig
     */
    tlsConfig?: TLSConfig;
}
/**
 * Check if a given object implements the HTTPClientConfig interface.
 */
declare function instanceOfHTTPClientConfig(value: object): value is HTTPClientConfig;
declare function HTTPClientConfigFromJSON(json: any): HTTPClientConfig;
declare function HTTPClientConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTTPClientConfig;
declare function HTTPClientConfigToJSON(json: any): HTTPClientConfig;
declare function HTTPClientConfigToJSONTyped(value?: HTTPClientConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * GlobalConfig defines configuration parameters that are valid globally
 * unless overwritten.
 * @export
 * @interface GlobalConfig
 */
interface GlobalConfig {
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof GlobalConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    opsgenieApiKey?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    opsgenieApiKeyFile?: string;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    opsgenieApiUrl?: URL;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    pagerdutyUrl?: URL;
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof GlobalConfig
     */
    resolveTimeout?: number;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    slackApiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    slackApiUrlFile?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpAuthIdentity?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpAuthPassword?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpAuthPasswordFile?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpAuthSecret?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpAuthUsername?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpFrom?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    smtpHello?: string;
    /**
     *
     * @type {boolean}
     * @memberof GlobalConfig
     */
    smtpRequireTls?: boolean;
    /**
     *
     * @type {HostPort}
     * @memberof GlobalConfig
     */
    smtpSmarthost?: HostPort;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    telegramApiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    victoropsApiKey?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    victoropsApiKeyFile?: string;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    victoropsApiUrl?: URL;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    webexApiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    wechatApiCorpId?: string;
    /**
     *
     * @type {string}
     * @memberof GlobalConfig
     */
    wechatApiSecret?: string;
    /**
     *
     * @type {URL}
     * @memberof GlobalConfig
     */
    wechatApiUrl?: URL;
}
/**
 * Check if a given object implements the GlobalConfig interface.
 */
declare function instanceOfGlobalConfig(value: object): value is GlobalConfig;
declare function GlobalConfigFromJSON(json: any): GlobalConfig;
declare function GlobalConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalConfig;
declare function GlobalConfigToJSON(json: any): GlobalConfig;
declare function GlobalConfigToJSONTyped(value?: GlobalConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A Route is a node that contains definitions of how to handle alerts. This is modified
 * from the upstream alertmanager in that it adds the ObjectMatchers property.
 * @export
 * @interface Route
 */
interface Route {
    /**
     *
     * @type {boolean}
     * @memberof Route
     */
    _continue?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof Route
     */
    groupBy?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Route
     */
    groupInterval?: string;
    /**
     *
     * @type {string}
     * @memberof Route
     */
    groupWait?: string;
    /**
     * Deprecated. Remove before v1.0 release.
     * @type {{ [key: string]: string; }}
     * @memberof Route
     */
    match?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof Route
     */
    matchRe?: {
        [key: string]: string;
    };
    /**
     * Matchers is a slice of Matchers that is sortable, implements Stringer, and
     * provides a Matches method to match a LabelSet against all Matchers in the
     * slice. Note that some users of Matchers might require it to be sorted.
     * @type {Array<Matcher>}
     * @memberof Route
     */
    matchers?: Array<Matcher>;
    /**
     *
     * @type {Array<string>}
     * @memberof Route
     */
    muteTimeIntervals?: Array<string>;
    /**
     *
     * @type {Array<Array<string>>}
     * @memberof Route
     */
    objectMatchers?: Array<Array<string>>;
    /**
     *
     * @type {string}
     * @memberof Route
     */
    provenance?: string;
    /**
     *
     * @type {string}
     * @memberof Route
     */
    receiver?: string;
    /**
     *
     * @type {string}
     * @memberof Route
     */
    repeatInterval?: string;
    /**
     *
     * @type {Array<Route>}
     * @memberof Route
     */
    routes?: Array<Route>;
}
/**
 * Check if a given object implements the Route interface.
 */
declare function instanceOfRoute(value: object): value is Route;
declare function RouteFromJSON(json: any): Route;
declare function RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Route;
declare function RouteToJSON(json: any): Route;
declare function RouteToJSONTyped(value?: Route | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Config
 */
interface Config {
    /**
     *
     * @type {GlobalConfig}
     * @memberof Config
     */
    global?: GlobalConfig;
    /**
     *
     * @type {Array<InhibitRule>}
     * @memberof Config
     */
    inhibitRules?: Array<InhibitRule>;
    /**
     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.
     * @type {Array<MuteTimeInterval>}
     * @memberof Config
     */
    muteTimeIntervals?: Array<MuteTimeInterval>;
    /**
     *
     * @type {Route}
     * @memberof Config
     */
    route?: Route;
    /**
     *
     * @type {Array<string>}
     * @memberof Config
     */
    templates?: Array<string>;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof Config
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the Config interface.
 */
declare function instanceOfConfig(value: object): value is Config;
declare function ConfigFromJSON(json: any): Config;
declare function ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): Config;
declare function ConfigToJSON(json: any): Config;
declare function ConfigToJSONTyped(value?: Config | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CookiePreferences
 */
interface CookiePreferences {
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    analytics?: {
        [key: string]: object;
    };
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    functional?: {
        [key: string]: object;
    };
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof CookiePreferences
     */
    performance?: {
        [key: string]: object;
    };
}
/**
 * Check if a given object implements the CookiePreferences interface.
 */
declare function instanceOfCookiePreferences(value: object): value is CookiePreferences;
declare function CookiePreferencesFromJSON(json: any): CookiePreferences;
declare function CookiePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CookiePreferences;
declare function CookiePreferencesToJSON(json: any): CookiePreferences;
declare function CookiePreferencesToJSONTyped(value?: CookiePreferences | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Transformation
 */
interface Transformation {
    /**
     *
     * @type {string}
     * @memberof Transformation
     */
    expression?: string;
    /**
     *
     * @type {string}
     * @memberof Transformation
     */
    field?: string;
    /**
     *
     * @type {string}
     * @memberof Transformation
     */
    mapValue?: string;
    /**
     *
     * @type {string}
     * @memberof Transformation
     */
    type?: TransformationTypeEnum;
}
/**
 * @export
 */
declare const TransformationTypeEnum: {
    readonly Regex: "regex";
    readonly Logfmt: "logfmt";
};
type TransformationTypeEnum = typeof TransformationTypeEnum[keyof typeof TransformationTypeEnum];
/**
 * Check if a given object implements the Transformation interface.
 */
declare function instanceOfTransformation(value: object): value is Transformation;
declare function TransformationFromJSON(json: any): Transformation;
declare function TransformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transformation;
declare function TransformationToJSON(json: any): Transformation;
declare function TransformationToJSONTyped(value?: Transformation | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CorrelationConfig
 */
interface CorrelationConfig {
    /**
     * Field used to attach the correlation link
     * @type {string}
     * @memberof CorrelationConfig
     */
    field: string;
    /**
     * Target data query
     * @type {{ [key: string]: object; }}
     * @memberof CorrelationConfig
     */
    target: {
        [key: string]: object;
    };
    /**
     *
     * @type {Array<Transformation>}
     * @memberof CorrelationConfig
     */
    transformations?: Array<Transformation>;
    /**
     *
     * @type {string}
     * @memberof CorrelationConfig
     */
    type: string;
}
/**
 * Check if a given object implements the CorrelationConfig interface.
 */
declare function instanceOfCorrelationConfig(value: object): value is CorrelationConfig;
declare function CorrelationConfigFromJSON(json: any): CorrelationConfig;
declare function CorrelationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorrelationConfig;
declare function CorrelationConfigToJSON(json: any): CorrelationConfig;
declare function CorrelationConfigToJSONTyped(value?: CorrelationConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Correlation is the model for correlations definitions
 * @export
 * @interface Correlation
 */
interface Correlation {
    /**
     *
     * @type {CorrelationConfig}
     * @memberof Correlation
     */
    config?: CorrelationConfig;
    /**
     * Description of the correlation
     * @type {string}
     * @memberof Correlation
     */
    description?: string;
    /**
     * Label identifying the correlation
     * @type {string}
     * @memberof Correlation
     */
    label?: string;
    /**
     * OrgID of the data source the correlation originates from
     * @type {number}
     * @memberof Correlation
     */
    orgId?: number;
    /**
     * Provisioned True if the correlation was created during provisioning
     * @type {boolean}
     * @memberof Correlation
     */
    provisioned?: boolean;
    /**
     * UID of the data source the correlation originates from
     * @type {string}
     * @memberof Correlation
     */
    sourceUID?: string;
    /**
     * UID of the data source the correlation points to
     * @type {string}
     * @memberof Correlation
     */
    targetUID?: string;
    /**
     * Unique identifier of the correlation
     * @type {string}
     * @memberof Correlation
     */
    uid?: string;
}
/**
 * Check if a given object implements the Correlation interface.
 */
declare function instanceOfCorrelation(value: object): value is Correlation;
declare function CorrelationFromJSON(json: any): Correlation;
declare function CorrelationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Correlation;
declare function CorrelationToJSON(json: any): Correlation;
declare function CorrelationToJSONTyped(value?: Correlation | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CorrelationConfigUpdateDTO
 */
interface CorrelationConfigUpdateDTO {
    /**
     * Field used to attach the correlation link
     * @type {string}
     * @memberof CorrelationConfigUpdateDTO
     */
    field?: string;
    /**
     * Target data query
     * @type {{ [key: string]: object; }}
     * @memberof CorrelationConfigUpdateDTO
     */
    target?: {
        [key: string]: object;
    };
    /**
     * Source data transformations
     * @type {Array<Transformation>}
     * @memberof CorrelationConfigUpdateDTO
     */
    transformations?: Array<Transformation>;
    /**
     *
     * @type {string}
     * @memberof CorrelationConfigUpdateDTO
     */
    type?: string;
}
/**
 * Check if a given object implements the CorrelationConfigUpdateDTO interface.
 */
declare function instanceOfCorrelationConfigUpdateDTO(value: object): value is CorrelationConfigUpdateDTO;
declare function CorrelationConfigUpdateDTOFromJSON(json: any): CorrelationConfigUpdateDTO;
declare function CorrelationConfigUpdateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorrelationConfigUpdateDTO;
declare function CorrelationConfigUpdateDTOToJSON(json: any): CorrelationConfigUpdateDTO;
declare function CorrelationConfigUpdateDTOToJSONTyped(value?: CorrelationConfigUpdateDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateAccessTokenResponseDTO
 */
interface CreateAccessTokenResponseDTO {
    /**
     *
     * @type {string}
     * @memberof CreateAccessTokenResponseDTO
     */
    token?: string;
}
/**
 * Check if a given object implements the CreateAccessTokenResponseDTO interface.
 */
declare function instanceOfCreateAccessTokenResponseDTO(value: object): value is CreateAccessTokenResponseDTO;
declare function CreateAccessTokenResponseDTOFromJSON(json: any): CreateAccessTokenResponseDTO;
declare function CreateAccessTokenResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAccessTokenResponseDTO;
declare function CreateAccessTokenResponseDTOToJSON(json: any): CreateAccessTokenResponseDTO;
declare function CreateAccessTokenResponseDTOToJSONTyped(value?: CreateAccessTokenResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * CreateCorrelationCommand is the command for creating a correlation
 * @export
 * @interface CreateCorrelationCommand
 */
interface CreateCorrelationCommand {
    /**
     *
     * @type {CorrelationConfig}
     * @memberof CreateCorrelationCommand
     */
    config?: CorrelationConfig;
    /**
     * Optional description of the correlation
     * @type {string}
     * @memberof CreateCorrelationCommand
     */
    description?: string;
    /**
     * Optional label identifying the correlation
     * @type {string}
     * @memberof CreateCorrelationCommand
     */
    label?: string;
    /**
     * True if correlation was created with provisioning. This makes it read-only.
     * @type {boolean}
     * @memberof CreateCorrelationCommand
     */
    provisioned?: boolean;
    /**
     * Target data source UID to which the correlation is created. required if config.type = query
     * @type {string}
     * @memberof CreateCorrelationCommand
     */
    targetUID?: string;
}
/**
 * Check if a given object implements the CreateCorrelationCommand interface.
 */
declare function instanceOfCreateCorrelationCommand(value: object): value is CreateCorrelationCommand;
declare function CreateCorrelationCommandFromJSON(json: any): CreateCorrelationCommand;
declare function CreateCorrelationCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCorrelationCommand;
declare function CreateCorrelationCommandToJSON(json: any): CreateCorrelationCommand;
declare function CreateCorrelationCommandToJSONTyped(value?: CreateCorrelationCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * CreateCorrelationResponse is the response struct for CreateCorrelationCommand
 * @export
 * @interface CreateCorrelationResponseBody
 */
interface CreateCorrelationResponseBody {
    /**
     *
     * @type {string}
     * @memberof CreateCorrelationResponseBody
     */
    message?: string;
    /**
     *
     * @type {Correlation}
     * @memberof CreateCorrelationResponseBody
     */
    result?: Correlation;
}
/**
 * Check if a given object implements the CreateCorrelationResponseBody interface.
 */
declare function instanceOfCreateCorrelationResponseBody(value: object): value is CreateCorrelationResponseBody;
declare function CreateCorrelationResponseBodyFromJSON(json: any): CreateCorrelationResponseBody;
declare function CreateCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCorrelationResponseBody;
declare function CreateCorrelationResponseBodyToJSON(json: any): CreateCorrelationResponseBody;
declare function CreateCorrelationResponseBodyToJSONTyped(value?: CreateCorrelationResponseBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateDashboardSnapshot200Response
 */
interface CreateDashboardSnapshot200Response {
    /**
     * Unique key used to delete the snapshot. It is different from the key so that only the creator can delete the snapshot.
     * @type {string}
     * @memberof CreateDashboardSnapshot200Response
     */
    deleteKey?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDashboardSnapshot200Response
     */
    deleteUrl?: string;
    /**
     * Snapshot id
     * @type {number}
     * @memberof CreateDashboardSnapshot200Response
     */
    id?: number;
    /**
     * Unique key
     * @type {string}
     * @memberof CreateDashboardSnapshot200Response
     */
    key?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDashboardSnapshot200Response
     */
    url?: string;
}
/**
 * Check if a given object implements the CreateDashboardSnapshot200Response interface.
 */
declare function instanceOfCreateDashboardSnapshot200Response(value: object): value is CreateDashboardSnapshot200Response;
declare function CreateDashboardSnapshot200ResponseFromJSON(json: any): CreateDashboardSnapshot200Response;
declare function CreateDashboardSnapshot200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDashboardSnapshot200Response;
declare function CreateDashboardSnapshot200ResponseToJSON(json: any): CreateDashboardSnapshot200Response;
declare function CreateDashboardSnapshot200ResponseToJSONTyped(value?: CreateDashboardSnapshot200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Unstructured allows objects that do not have Golang structs registered to be manipulated
 * generically.
 * @export
 * @interface Unstructured
 */
interface Unstructured {
    /**
     * Object is a JSON compatible map with string, float, int, bool, []interface{},
     * or map[string]interface{} children.
     * @type {{ [key: string]: object; }}
     * @memberof Unstructured
     */
    object?: {
        [key: string]: object;
    };
}
/**
 * Check if a given object implements the Unstructured interface.
 */
declare function instanceOfUnstructured(value: object): value is Unstructured;
declare function UnstructuredFromJSON(json: any): Unstructured;
declare function UnstructuredFromJSONTyped(json: any, ignoreDiscriminator: boolean): Unstructured;
declare function UnstructuredToJSON(json: any): Unstructured;
declare function UnstructuredToJSONTyped(value?: Unstructured | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateDashboardSnapshotCommand
 */
interface CreateDashboardSnapshotCommand {
    /**
     * APIVersion defines the versioned schema of this representation of an object.
     * Servers should convert recognized schemas to the latest internal value, and
     * may reject unrecognized values.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * +optional
     * @type {string}
     * @memberof CreateDashboardSnapshotCommand
     */
    apiVersion?: string;
    /**
     *
     * @type {Unstructured}
     * @memberof CreateDashboardSnapshotCommand
     */
    dashboard: Unstructured;
    /**
     * Unique key used to delete the snapshot. It is different from the `key` so that only the creator can delete the snapshot. Required if `external` is `true`.
     * @type {string}
     * @memberof CreateDashboardSnapshotCommand
     */
    deleteKey?: string;
    /**
     * When the snapshot should expire in seconds in seconds. Default is never to expire.
     * @type {number}
     * @memberof CreateDashboardSnapshotCommand
     */
    expires?: number;
    /**
     * these are passed when storing an external snapshot ref
     * Save the snapshot on an external server rather than locally.
     * @type {boolean}
     * @memberof CreateDashboardSnapshotCommand
     */
    external?: boolean;
    /**
     * Define the unique key. Required if `external` is `true`.
     * @type {string}
     * @memberof CreateDashboardSnapshotCommand
     */
    key?: string;
    /**
     * Kind is a string value representing the REST resource this object represents.
     * Servers may infer this from the endpoint the client submits requests to.
     * Cannot be updated.
     * In CamelCase.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * +optional
     * @type {string}
     * @memberof CreateDashboardSnapshotCommand
     */
    kind?: string;
    /**
     * Snapshot name
     * @type {string}
     * @memberof CreateDashboardSnapshotCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the CreateDashboardSnapshotCommand interface.
 */
declare function instanceOfCreateDashboardSnapshotCommand(value: object): value is CreateDashboardSnapshotCommand;
declare function CreateDashboardSnapshotCommandFromJSON(json: any): CreateDashboardSnapshotCommand;
declare function CreateDashboardSnapshotCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDashboardSnapshotCommand;
declare function CreateDashboardSnapshotCommandToJSON(json: any): CreateDashboardSnapshotCommand;
declare function CreateDashboardSnapshotCommandToJSONTyped(value?: CreateDashboardSnapshotCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * CreateFolderCommand captures the information required by the folder service
 * to create a folder.
 * @export
 * @interface CreateFolderCommand
 */
interface CreateFolderCommand {
    /**
     *
     * @type {string}
     * @memberof CreateFolderCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof CreateFolderCommand
     */
    parentUid?: string;
    /**
     *
     * @type {string}
     * @memberof CreateFolderCommand
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof CreateFolderCommand
     */
    uid?: string;
}
/**
 * Check if a given object implements the CreateFolderCommand interface.
 */
declare function instanceOfCreateFolderCommand(value: object): value is CreateFolderCommand;
declare function CreateFolderCommandFromJSON(json: any): CreateFolderCommand;
declare function CreateFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFolderCommand;
declare function CreateFolderCommandToJSON(json: any): CreateFolderCommand;
declare function CreateFolderCommandToJSONTyped(value?: CreateFolderCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * CreateLibraryElementCommand is the command for adding a LibraryElement
 * @export
 * @interface CreateLibraryElementCommand
 */
interface CreateLibraryElementCommand {
    /**
     * ID of the folder where the library element is stored.
     *
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof CreateLibraryElementCommand
     */
    folderId?: number;
    /**
     * UID of the folder where the library element is stored.
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    folderUid?: string;
    /**
     * Kind of element to create, Use 1 for library panels or 2 for c.
     * Description:
     * 1 - library panels
     * 2 - library variables
     * @type {number}
     * @memberof CreateLibraryElementCommand
     */
    kind?: CreateLibraryElementCommandKindEnum;
    /**
     * The JSON model for the library element.
     * @type {object}
     * @memberof CreateLibraryElementCommand
     */
    model?: object;
    /**
     * Name of the library element.
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateLibraryElementCommand
     */
    uid?: string;
}
/**
 * @export
 */
declare const CreateLibraryElementCommandKindEnum: {
    readonly NUMBER_1: 1;
    readonly NUMBER_2: 2;
};
type CreateLibraryElementCommandKindEnum = typeof CreateLibraryElementCommandKindEnum[keyof typeof CreateLibraryElementCommandKindEnum];
/**
 * Check if a given object implements the CreateLibraryElementCommand interface.
 */
declare function instanceOfCreateLibraryElementCommand(value: object): value is CreateLibraryElementCommand;
declare function CreateLibraryElementCommandFromJSON(json: any): CreateLibraryElementCommand;
declare function CreateLibraryElementCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLibraryElementCommand;
declare function CreateLibraryElementCommandToJSON(json: any): CreateLibraryElementCommand;
declare function CreateLibraryElementCommandToJSONTyped(value?: CreateLibraryElementCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReportDashboardID
 */
interface ReportDashboardID {
    /**
     *
     * @type {number}
     * @memberof ReportDashboardID
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof ReportDashboardID
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ReportDashboardID
     */
    uid?: string;
}
/**
 * Check if a given object implements the ReportDashboardID interface.
 */
declare function instanceOfReportDashboardID(value: object): value is ReportDashboardID;
declare function ReportDashboardIDFromJSON(json: any): ReportDashboardID;
declare function ReportDashboardIDFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDashboardID;
declare function ReportDashboardIDToJSON(json: any): ReportDashboardID;
declare function ReportDashboardIDToJSONTyped(value?: ReportDashboardID | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReportTimeRange
 */
interface ReportTimeRange {
    /**
     *
     * @type {string}
     * @memberof ReportTimeRange
     */
    from?: string;
    /**
     *
     * @type {string}
     * @memberof ReportTimeRange
     */
    to?: string;
}
/**
 * Check if a given object implements the ReportTimeRange interface.
 */
declare function instanceOfReportTimeRange(value: object): value is ReportTimeRange;
declare function ReportTimeRangeFromJSON(json: any): ReportTimeRange;
declare function ReportTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportTimeRange;
declare function ReportTimeRangeToJSON(json: any): ReportTimeRange;
declare function ReportTimeRangeToJSONTyped(value?: ReportTimeRange | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ReportDashboard
 */
interface ReportDashboard {
    /**
     *
     * @type {ReportDashboardID}
     * @memberof ReportDashboard
     */
    dashboard?: ReportDashboardID;
    /**
     *
     * @type {object}
     * @memberof ReportDashboard
     */
    reportVariables?: object;
    /**
     *
     * @type {ReportTimeRange}
     * @memberof ReportDashboard
     */
    timeRange?: ReportTimeRange;
}
/**
 * Check if a given object implements the ReportDashboard interface.
 */
declare function instanceOfReportDashboard(value: object): value is ReportDashboard;
declare function ReportDashboardFromJSON(json: any): ReportDashboard;
declare function ReportDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDashboard;
declare function ReportDashboardToJSON(json: any): ReportDashboard;
declare function ReportDashboardToJSONTyped(value?: ReportDashboard | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReportSchedule
 */
interface ReportSchedule {
    /**
     *
     * @type {string}
     * @memberof ReportSchedule
     */
    dayOfMonth?: string;
    /**
     *
     * @type {Date}
     * @memberof ReportSchedule
     */
    endDate?: Date;
    /**
     *
     * @type {string}
     * @memberof ReportSchedule
     */
    frequency?: string;
    /**
     *
     * @type {number}
     * @memberof ReportSchedule
     */
    intervalAmount?: number;
    /**
     *
     * @type {string}
     * @memberof ReportSchedule
     */
    intervalFrequency?: string;
    /**
     *
     * @type {Date}
     * @memberof ReportSchedule
     */
    startDate?: Date;
    /**
     *
     * @type {string}
     * @memberof ReportSchedule
     */
    timeZone?: string;
    /**
     *
     * @type {boolean}
     * @memberof ReportSchedule
     */
    workdaysOnly?: boolean;
}
/**
 * Check if a given object implements the ReportSchedule interface.
 */
declare function instanceOfReportSchedule(value: object): value is ReportSchedule;
declare function ReportScheduleFromJSON(json: any): ReportSchedule;
declare function ReportScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSchedule;
declare function ReportScheduleToJSON(json: any): ReportSchedule;
declare function ReportScheduleToJSONTyped(value?: ReportSchedule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ReportOptions
 */
interface ReportOptions {
    /**
     *
     * @type {string}
     * @memberof ReportOptions
     */
    layout?: string;
    /**
     *
     * @type {string}
     * @memberof ReportOptions
     */
    orientation?: string;
    /**
     *
     * @type {ReportTimeRange}
     * @memberof ReportOptions
     */
    timeRange?: ReportTimeRange;
}
/**
 * Check if a given object implements the ReportOptions interface.
 */
declare function instanceOfReportOptions(value: object): value is ReportOptions;
declare function ReportOptionsFromJSON(json: any): ReportOptions;
declare function ReportOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportOptions;
declare function ReportOptionsToJSON(json: any): ReportOptions;
declare function ReportOptionsToJSONTyped(value?: ReportOptions | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateOrUpdateReport
 */
interface CreateOrUpdateReport {
    /**
     *
     * @type {Array<ReportDashboard>}
     * @memberof CreateOrUpdateReport
     */
    dashboards?: Array<ReportDashboard>;
    /**
     *
     * @type {boolean}
     * @memberof CreateOrUpdateReport
     */
    enableCsv?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateOrUpdateReport
     */
    enableDashboardUrl?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof CreateOrUpdateReport
     */
    formats?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateReport
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateReport
     */
    name?: string;
    /**
     *
     * @type {ReportOptions}
     * @memberof CreateOrUpdateReport
     */
    options?: ReportOptions;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateReport
     */
    recipients?: string;
    /**
     *
     * @type {string}
     * @memberof CreateOrUpdateReport
     */
    replyTo?: string;
    /**
     *
     * @type {number}
     * @memberof CreateOrUpdateReport
     */
    scaleFactor?: number;
    /**
     *
     * @type {ReportSchedule}
     * @memberof CreateOrUpdateReport
     */
    schedule?: ReportSchedule;
    /**
     * +enum
     * @type {string}
     * @memberof CreateOrUpdateReport
     */
    state?: string;
}
/**
 * Check if a given object implements the CreateOrUpdateReport interface.
 */
declare function instanceOfCreateOrUpdateReport(value: object): value is CreateOrUpdateReport;
declare function CreateOrUpdateReportFromJSON(json: any): CreateOrUpdateReport;
declare function CreateOrUpdateReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrUpdateReport;
declare function CreateOrUpdateReportToJSON(json: any): CreateOrUpdateReport;
declare function CreateOrUpdateReportToJSONTyped(value?: CreateOrUpdateReport | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateOrg200Response
 */
interface CreateOrg200Response {
    /**
     * Message Message of the created org.
     * @type {string}
     * @memberof CreateOrg200Response
     */
    message: string;
    /**
     * ID Identifier of the created org.
     * @type {number}
     * @memberof CreateOrg200Response
     */
    orgId: number;
}
/**
 * Check if a given object implements the CreateOrg200Response interface.
 */
declare function instanceOfCreateOrg200Response(value: object): value is CreateOrg200Response;
declare function CreateOrg200ResponseFromJSON(json: any): CreateOrg200Response;
declare function CreateOrg200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrg200Response;
declare function CreateOrg200ResponseToJSON(json: any): CreateOrg200Response;
declare function CreateOrg200ResponseToJSONTyped(value?: CreateOrg200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateOrgCommand
 */
interface CreateOrgCommand {
    /**
     *
     * @type {string}
     * @memberof CreateOrgCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the CreateOrgCommand interface.
 */
declare function instanceOfCreateOrgCommand(value: object): value is CreateOrgCommand;
declare function CreateOrgCommandFromJSON(json: any): CreateOrgCommand;
declare function CreateOrgCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrgCommand;
declare function CreateOrgCommandToJSON(json: any): CreateOrgCommand;
declare function CreateOrgCommandToJSONTyped(value?: CreateOrgCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PlaylistItem
 */
interface PlaylistItem {
    /**
     *
     * @type {number}
     * @memberof PlaylistItem
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof PlaylistItem
     */
    playlistId?: number;
    /**
     *
     * @type {number}
     * @memberof PlaylistItem
     */
    order?: number;
    /**
     *
     * @type {string}
     * @memberof PlaylistItem
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistItem
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistItem
     */
    value?: string;
}
/**
 * Check if a given object implements the PlaylistItem interface.
 */
declare function instanceOfPlaylistItem(value: object): value is PlaylistItem;
declare function PlaylistItemFromJSON(json: any): PlaylistItem;
declare function PlaylistItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistItem;
declare function PlaylistItemToJSON(json: any): PlaylistItem;
declare function PlaylistItemToJSONTyped(value?: PlaylistItem | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreatePlaylistCommand
 */
interface CreatePlaylistCommand {
    /**
     *
     * @type {string}
     * @memberof CreatePlaylistCommand
     */
    interval?: string;
    /**
     *
     * @type {Array<PlaylistItem>}
     * @memberof CreatePlaylistCommand
     */
    items?: Array<PlaylistItem>;
    /**
     *
     * @type {string}
     * @memberof CreatePlaylistCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the CreatePlaylistCommand interface.
 */
declare function instanceOfCreatePlaylistCommand(value: object): value is CreatePlaylistCommand;
declare function CreatePlaylistCommandFromJSON(json: any): CreatePlaylistCommand;
declare function CreatePlaylistCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePlaylistCommand;
declare function CreatePlaylistCommandToJSON(json: any): CreatePlaylistCommand;
declare function CreatePlaylistCommandToJSONTyped(value?: CreatePlaylistCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * CreateQueryInQueryHistoryCommand is the command for adding query history
 * @export
 * @interface CreateQueryInQueryHistoryCommand
 */
interface CreateQueryInQueryHistoryCommand {
    /**
     * UID of the data source for which are queries stored.
     * @type {string}
     * @memberof CreateQueryInQueryHistoryCommand
     */
    datasourceUid?: string;
    /**
     *
     * @type {object}
     * @memberof CreateQueryInQueryHistoryCommand
     */
    queries: object;
}
/**
 * Check if a given object implements the CreateQueryInQueryHistoryCommand interface.
 */
declare function instanceOfCreateQueryInQueryHistoryCommand(value: object): value is CreateQueryInQueryHistoryCommand;
declare function CreateQueryInQueryHistoryCommandFromJSON(json: any): CreateQueryInQueryHistoryCommand;
declare function CreateQueryInQueryHistoryCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateQueryInQueryHistoryCommand;
declare function CreateQueryInQueryHistoryCommandToJSON(json: any): CreateQueryInQueryHistoryCommand;
declare function CreateQueryInQueryHistoryCommandToJSONTyped(value?: CreateQueryInQueryHistoryCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateReport200Response
 */
interface CreateReport200Response {
    /**
     *
     * @type {number}
     * @memberof CreateReport200Response
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof CreateReport200Response
     */
    message?: string;
}
/**
 * Check if a given object implements the CreateReport200Response interface.
 */
declare function instanceOfCreateReport200Response(value: object): value is CreateReport200Response;
declare function CreateReport200ResponseFromJSON(json: any): CreateReport200Response;
declare function CreateReport200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateReport200Response;
declare function CreateReport200ResponseToJSON(json: any): CreateReport200Response;
declare function CreateReport200ResponseToJSONTyped(value?: CreateReport200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Permission
 */
interface Permission {
    /**
     *
     * @type {string}
     * @memberof Permission
     */
    action?: string;
    /**
     *
     * @type {Date}
     * @memberof Permission
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof Permission
     */
    scope?: string;
    /**
     *
     * @type {Date}
     * @memberof Permission
     */
    updated?: Date;
}
/**
 * Check if a given object implements the Permission interface.
 */
declare function instanceOfPermission(value: object): value is Permission;
declare function PermissionFromJSON(json: any): Permission;
declare function PermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Permission;
declare function PermissionToJSON(json: any): Permission;
declare function PermissionToJSONTyped(value?: Permission | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateRoleForm
 */
interface CreateRoleForm {
    /**
     *
     * @type {string}
     * @memberof CreateRoleForm
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof CreateRoleForm
     */
    displayName?: string;
    /**
     *
     * @type {boolean}
     * @memberof CreateRoleForm
     */
    global?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateRoleForm
     */
    group?: string;
    /**
     *
     * @type {boolean}
     * @memberof CreateRoleForm
     */
    hidden?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateRoleForm
     */
    name?: string;
    /**
     *
     * @type {Array<Permission>}
     * @memberof CreateRoleForm
     */
    permissions?: Array<Permission>;
    /**
     *
     * @type {string}
     * @memberof CreateRoleForm
     */
    uid?: string;
    /**
     *
     * @type {number}
     * @memberof CreateRoleForm
     */
    version?: number;
}
/**
 * Check if a given object implements the CreateRoleForm interface.
 */
declare function instanceOfCreateRoleForm(value: object): value is CreateRoleForm;
declare function CreateRoleFormFromJSON(json: any): CreateRoleForm;
declare function CreateRoleFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRoleForm;
declare function CreateRoleFormToJSON(json: any): CreateRoleForm;
declare function CreateRoleFormToJSONTyped(value?: CreateRoleForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateServiceAccountForm
 */
interface CreateServiceAccountForm {
    /**
     *
     * @type {boolean}
     * @memberof CreateServiceAccountForm
     */
    isDisabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateServiceAccountForm
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateServiceAccountForm
     */
    role?: CreateServiceAccountFormRoleEnum;
}
/**
 * @export
 */
declare const CreateServiceAccountFormRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type CreateServiceAccountFormRoleEnum = typeof CreateServiceAccountFormRoleEnum[keyof typeof CreateServiceAccountFormRoleEnum];
/**
 * Check if a given object implements the CreateServiceAccountForm interface.
 */
declare function instanceOfCreateServiceAccountForm(value: object): value is CreateServiceAccountForm;
declare function CreateServiceAccountFormFromJSON(json: any): CreateServiceAccountForm;
declare function CreateServiceAccountFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateServiceAccountForm;
declare function CreateServiceAccountFormToJSON(json: any): CreateServiceAccountForm;
declare function CreateServiceAccountFormToJSONTyped(value?: CreateServiceAccountForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateSnapshotResponseDTO
 */
interface CreateSnapshotResponseDTO {
    /**
     *
     * @type {string}
     * @memberof CreateSnapshotResponseDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the CreateSnapshotResponseDTO interface.
 */
declare function instanceOfCreateSnapshotResponseDTO(value: object): value is CreateSnapshotResponseDTO;
declare function CreateSnapshotResponseDTOFromJSON(json: any): CreateSnapshotResponseDTO;
declare function CreateSnapshotResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSnapshotResponseDTO;
declare function CreateSnapshotResponseDTOToJSON(json: any): CreateSnapshotResponseDTO;
declare function CreateSnapshotResponseDTOToJSONTyped(value?: CreateSnapshotResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateTeam200Response
 */
interface CreateTeam200Response {
    /**
     *
     * @type {string}
     * @memberof CreateTeam200Response
     */
    message?: string;
    /**
     *
     * @type {number}
     * @memberof CreateTeam200Response
     */
    teamId?: number;
}
/**
 * Check if a given object implements the CreateTeam200Response interface.
 */
declare function instanceOfCreateTeam200Response(value: object): value is CreateTeam200Response;
declare function CreateTeam200ResponseFromJSON(json: any): CreateTeam200Response;
declare function CreateTeam200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTeam200Response;
declare function CreateTeam200ResponseToJSON(json: any): CreateTeam200Response;
declare function CreateTeam200ResponseToJSONTyped(value?: CreateTeam200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface CreateTeamCommand
 */
interface CreateTeamCommand {
    /**
     *
     * @type {string}
     * @memberof CreateTeamCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CreateTeamCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the CreateTeamCommand interface.
 */
declare function instanceOfCreateTeamCommand(value: object): value is CreateTeamCommand;
declare function CreateTeamCommandFromJSON(json: any): CreateTeamCommand;
declare function CreateTeamCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTeamCommand;
declare function CreateTeamCommandToJSON(json: any): CreateTeamCommand;
declare function CreateTeamCommandToJSONTyped(value?: CreateTeamCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DashboardACLInfoDTO
 */
interface DashboardACLInfoDTO {
    /**
     *
     * @type {Date}
     * @memberof DashboardACLInfoDTO
     */
    created?: Date;
    /**
     *
     * @type {number}
     * @memberof DashboardACLInfoDTO
     */
    dashboardId?: number;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof DashboardACLInfoDTO
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    folderUid?: string;
    /**
     *
     * @type {boolean}
     * @memberof DashboardACLInfoDTO
     */
    inherited?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardACLInfoDTO
     */
    isFolder?: boolean;
    /**
     *
     * @type {number}
     * @memberof DashboardACLInfoDTO
     */
    permission?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    permissionName?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    role?: DashboardACLInfoDTORoleEnum;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    team?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    teamAvatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    teamEmail?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardACLInfoDTO
     */
    teamId?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof DashboardACLInfoDTO
     */
    updated?: Date;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    userAvatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    userEmail?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardACLInfoDTO
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardACLInfoDTO
     */
    userLogin?: string;
}
/**
 * @export
 */
declare const DashboardACLInfoDTORoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type DashboardACLInfoDTORoleEnum = typeof DashboardACLInfoDTORoleEnum[keyof typeof DashboardACLInfoDTORoleEnum];
/**
 * Check if a given object implements the DashboardACLInfoDTO interface.
 */
declare function instanceOfDashboardACLInfoDTO(value: object): value is DashboardACLInfoDTO;
declare function DashboardACLInfoDTOFromJSON(json: any): DashboardACLInfoDTO;
declare function DashboardACLInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardACLInfoDTO;
declare function DashboardACLInfoDTOToJSON(json: any): DashboardACLInfoDTO;
declare function DashboardACLInfoDTOToJSONTyped(value?: DashboardACLInfoDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DashboardACLUpdateItem
 */
interface DashboardACLUpdateItem {
    /**
     *
     * @type {number}
     * @memberof DashboardACLUpdateItem
     */
    permission?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardACLUpdateItem
     */
    role?: DashboardACLUpdateItemRoleEnum;
    /**
     *
     * @type {number}
     * @memberof DashboardACLUpdateItem
     */
    teamId?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardACLUpdateItem
     */
    userId?: number;
}
/**
 * @export
 */
declare const DashboardACLUpdateItemRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type DashboardACLUpdateItemRoleEnum = typeof DashboardACLUpdateItemRoleEnum[keyof typeof DashboardACLUpdateItemRoleEnum];
/**
 * Check if a given object implements the DashboardACLUpdateItem interface.
 */
declare function instanceOfDashboardACLUpdateItem(value: object): value is DashboardACLUpdateItem;
declare function DashboardACLUpdateItemFromJSON(json: any): DashboardACLUpdateItem;
declare function DashboardACLUpdateItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardACLUpdateItem;
declare function DashboardACLUpdateItemToJSON(json: any): DashboardACLUpdateItem;
declare function DashboardACLUpdateItemToJSONTyped(value?: DashboardACLUpdateItem | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * These are the values expected to be sent from an end user
 * +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
 * @export
 * @interface DashboardCreateCommand
 */
interface DashboardCreateCommand {
    /**
     * APIVersion defines the versioned schema of this representation of an object.
     * Servers should convert recognized schemas to the latest internal value, and
     * may reject unrecognized values.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * +optional
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    apiVersion?: string;
    /**
     *
     * @type {Unstructured}
     * @memberof DashboardCreateCommand
     */
    dashboard: Unstructured;
    /**
     * When the snapshot should expire in seconds in seconds. Default is never to expire.
     * @type {number}
     * @memberof DashboardCreateCommand
     */
    expires?: number;
    /**
     * these are passed when storing an external snapshot ref
     * Save the snapshot on an external server rather than locally.
     * @type {boolean}
     * @memberof DashboardCreateCommand
     */
    external?: boolean;
    /**
     * Kind is a string value representing the REST resource this object represents.
     * Servers may infer this from the endpoint the client submits requests to.
     * Cannot be updated.
     * In CamelCase.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * +optional
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    kind?: string;
    /**
     * Snapshot name
     * @type {string}
     * @memberof DashboardCreateCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the DashboardCreateCommand interface.
 */
declare function instanceOfDashboardCreateCommand(value: object): value is DashboardCreateCommand;
declare function DashboardCreateCommandFromJSON(json: any): DashboardCreateCommand;
declare function DashboardCreateCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardCreateCommand;
declare function DashboardCreateCommandToJSON(json: any): DashboardCreateCommand;
declare function DashboardCreateCommandToJSONTyped(value?: DashboardCreateCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface DashboardMeta
 */
interface DashboardMeta {
    /**
     *
     * @type {AnnotationPermission}
     * @memberof DashboardMeta
     */
    annotationsPermissions?: AnnotationPermission;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    canAdmin?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    canDelete?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    canEdit?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    canSave?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    canStar?: boolean;
    /**
     *
     * @type {Date}
     * @memberof DashboardMeta
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    createdBy?: string;
    /**
     *
     * @type {Date}
     * @memberof DashboardMeta
     */
    expires?: Date;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof DashboardMeta
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    folderTitle?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    folderUid?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    folderUrl?: string;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    hasAcl?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    isFolder?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    isSnapshot?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    isStarred?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    provisioned?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    provisionedExternalId?: string;
    /**
     *
     * @type {boolean}
     * @memberof DashboardMeta
     */
    publicDashboardEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    type?: string;
    /**
     *
     * @type {Date}
     * @memberof DashboardMeta
     */
    updated?: Date;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    updatedBy?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardMeta
     */
    url?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardMeta
     */
    version?: number;
}
/**
 * Check if a given object implements the DashboardMeta interface.
 */
declare function instanceOfDashboardMeta(value: object): value is DashboardMeta;
declare function DashboardMetaFromJSON(json: any): DashboardMeta;
declare function DashboardMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardMeta;
declare function DashboardMetaToJSON(json: any): DashboardMeta;
declare function DashboardMetaToJSONTyped(value?: DashboardMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface DashboardFullWithMeta
 */
interface DashboardFullWithMeta {
    /**
     *
     * @type {object}
     * @memberof DashboardFullWithMeta
     */
    dashboard?: object;
    /**
     *
     * @type {DashboardMeta}
     * @memberof DashboardFullWithMeta
     */
    meta?: DashboardMeta;
}
/**
 * Check if a given object implements the DashboardFullWithMeta interface.
 */
declare function instanceOfDashboardFullWithMeta(value: object): value is DashboardFullWithMeta;
declare function DashboardFullWithMetaFromJSON(json: any): DashboardFullWithMeta;
declare function DashboardFullWithMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardFullWithMeta;
declare function DashboardFullWithMetaToJSON(json: any): DashboardFullWithMeta;
declare function DashboardFullWithMetaToJSONTyped(value?: DashboardFullWithMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DashboardRedirect
 */
interface DashboardRedirect {
    /**
     *
     * @type {string}
     * @memberof DashboardRedirect
     */
    redirectUri?: string;
}
/**
 * Check if a given object implements the DashboardRedirect interface.
 */
declare function instanceOfDashboardRedirect(value: object): value is DashboardRedirect;
declare function DashboardRedirectFromJSON(json: any): DashboardRedirect;
declare function DashboardRedirectFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardRedirect;
declare function DashboardRedirectToJSON(json: any): DashboardRedirect;
declare function DashboardRedirectToJSONTyped(value?: DashboardRedirect | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * DashboardSnapshotDTO without dashboard map
 * @export
 * @interface DashboardSnapshotDTO
 */
interface DashboardSnapshotDTO {
    /**
     *
     * @type {Date}
     * @memberof DashboardSnapshotDTO
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof DashboardSnapshotDTO
     */
    expires?: Date;
    /**
     *
     * @type {boolean}
     * @memberof DashboardSnapshotDTO
     */
    external?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardSnapshotDTO
     */
    externalUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardSnapshotDTO
     */
    key?: string;
    /**
     *
     * @type {string}
     * @memberof DashboardSnapshotDTO
     */
    name?: string;
    /**
     *
     * @type {Date}
     * @memberof DashboardSnapshotDTO
     */
    updated?: Date;
}
/**
 * Check if a given object implements the DashboardSnapshotDTO interface.
 */
declare function instanceOfDashboardSnapshotDTO(value: object): value is DashboardSnapshotDTO;
declare function DashboardSnapshotDTOFromJSON(json: any): DashboardSnapshotDTO;
declare function DashboardSnapshotDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardSnapshotDTO;
declare function DashboardSnapshotDTOToJSON(json: any): DashboardSnapshotDTO;
declare function DashboardSnapshotDTOToJSONTyped(value?: DashboardSnapshotDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DashboardTagCloudItem
 */
interface DashboardTagCloudItem {
    /**
     *
     * @type {number}
     * @memberof DashboardTagCloudItem
     */
    count?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardTagCloudItem
     */
    term?: string;
}
/**
 * Check if a given object implements the DashboardTagCloudItem interface.
 */
declare function instanceOfDashboardTagCloudItem(value: object): value is DashboardTagCloudItem;
declare function DashboardTagCloudItemFromJSON(json: any): DashboardTagCloudItem;
declare function DashboardTagCloudItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardTagCloudItem;
declare function DashboardTagCloudItemToJSON(json: any): DashboardTagCloudItem;
declare function DashboardTagCloudItemToJSONTyped(value?: DashboardTagCloudItem | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * DashboardVersionMeta extends the DashboardVersionDTO with the names
 * associated with the UserIds, overriding the field with the same name from
 * the DashboardVersionDTO model.
 * @export
 * @interface DashboardVersionMeta
 */
interface DashboardVersionMeta {
    /**
     *
     * @type {Date}
     * @memberof DashboardVersionMeta
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof DashboardVersionMeta
     */
    createdBy?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardVersionMeta
     */
    dashboardId?: number;
    /**
     *
     * @type {object}
     * @memberof DashboardVersionMeta
     */
    data?: object;
    /**
     *
     * @type {number}
     * @memberof DashboardVersionMeta
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardVersionMeta
     */
    message?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardVersionMeta
     */
    parentVersion?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardVersionMeta
     */
    restoredFrom?: number;
    /**
     *
     * @type {string}
     * @memberof DashboardVersionMeta
     */
    uid?: string;
    /**
     *
     * @type {number}
     * @memberof DashboardVersionMeta
     */
    version?: number;
}
/**
 * Check if a given object implements the DashboardVersionMeta interface.
 */
declare function instanceOfDashboardVersionMeta(value: object): value is DashboardVersionMeta;
declare function DashboardVersionMetaFromJSON(json: any): DashboardVersionMeta;
declare function DashboardVersionMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardVersionMeta;
declare function DashboardVersionMetaToJSON(json: any): DashboardVersionMeta;
declare function DashboardVersionMetaToJSONTyped(value?: DashboardVersionMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Redefining this to avoid an import cycle
 * @export
 * @interface TimeRange
 */
interface TimeRange {
    /**
     *
     * @type {Date}
     * @memberof TimeRange
     */
    from?: Date;
    /**
     *
     * @type {Date}
     * @memberof TimeRange
     */
    to?: Date;
}
/**
 * Check if a given object implements the TimeRange interface.
 */
declare function instanceOfTimeRange(value: object): value is TimeRange;
declare function TimeRangeFromJSON(json: any): TimeRange;
declare function TimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeRange;
declare function TimeRangeToJSON(json: any): TimeRange;
declare function TimeRangeToJSONTyped(value?: TimeRange | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface LinkTransformationConfig
 */
interface LinkTransformationConfig {
    /**
     *
     * @type {string}
     * @memberof LinkTransformationConfig
     */
    expression?: string;
    /**
     *
     * @type {string}
     * @memberof LinkTransformationConfig
     */
    field?: string;
    /**
     *
     * @type {string}
     * @memberof LinkTransformationConfig
     */
    mapValue?: string;
    /**
     *
     * @type {string}
     * @memberof LinkTransformationConfig
     */
    type?: string;
}
/**
 * Check if a given object implements the LinkTransformationConfig interface.
 */
declare function instanceOfLinkTransformationConfig(value: object): value is LinkTransformationConfig;
declare function LinkTransformationConfigFromJSON(json: any): LinkTransformationConfig;
declare function LinkTransformationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTransformationConfig;
declare function LinkTransformationConfigToJSON(json: any): LinkTransformationConfig;
declare function LinkTransformationConfigToJSONTyped(value?: LinkTransformationConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * InternalDataLink definition to allow Explore links to be constructed in the backend
 * @export
 * @interface InternalDataLink
 */
interface InternalDataLink {
    /**
     *
     * @type {string}
     * @memberof InternalDataLink
     */
    datasourceName?: string;
    /**
     *
     * @type {string}
     * @memberof InternalDataLink
     */
    datasourceUid?: string;
    /**
     * This is an object constructed with the keys as the values of the enum VisType and the value being a bag of properties
     * @type {object}
     * @memberof InternalDataLink
     */
    panelsState?: object;
    /**
     *
     * @type {object}
     * @memberof InternalDataLink
     */
    query?: object;
    /**
     *
     * @type {TimeRange}
     * @memberof InternalDataLink
     */
    timeRange?: TimeRange;
    /**
     *
     * @type {Array<LinkTransformationConfig>}
     * @memberof InternalDataLink
     */
    transformations?: Array<LinkTransformationConfig>;
}
/**
 * Check if a given object implements the InternalDataLink interface.
 */
declare function instanceOfInternalDataLink(value: object): value is InternalDataLink;
declare function InternalDataLinkFromJSON(json: any): InternalDataLink;
declare function InternalDataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalDataLink;
declare function InternalDataLinkToJSON(json: any): InternalDataLink;
declare function InternalDataLinkToJSONTyped(value?: InternalDataLink | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * DataLink define what
 * @export
 * @interface DataLink
 */
interface DataLink {
    /**
     *
     * @type {InternalDataLink}
     * @memberof DataLink
     */
    internal?: InternalDataLink;
    /**
     *
     * @type {boolean}
     * @memberof DataLink
     */
    targetBlank?: boolean;
    /**
     *
     * @type {string}
     * @memberof DataLink
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof DataLink
     */
    url?: string;
}
/**
 * Check if a given object implements the DataLink interface.
 */
declare function instanceOfDataLink(value: object): value is DataLink;
declare function DataLinkFromJSON(json: any): DataLink;
declare function DataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataLink;
declare function DataLinkToJSON(json: any): DataLink;
declare function DataLinkToJSONTyped(value?: DataLink | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Threshold a single step on the threshold list
 * @export
 * @interface Threshold
 */
interface Threshold {
    /**
     *
     * @type {string}
     * @memberof Threshold
     */
    color?: string;
    /**
     *
     * @type {string}
     * @memberof Threshold
     */
    state?: string;
    /**
     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf
     * to null.
     * @type {number}
     * @memberof Threshold
     */
    value?: number;
}
/**
 * Check if a given object implements the Threshold interface.
 */
declare function instanceOfThreshold(value: object): value is Threshold;
declare function ThresholdFromJSON(json: any): Threshold;
declare function ThresholdFromJSONTyped(json: any, ignoreDiscriminator: boolean): Threshold;
declare function ThresholdToJSON(json: any): Threshold;
declare function ThresholdToJSONTyped(value?: Threshold | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * ThresholdsConfig setup thresholds
 * @export
 * @interface ThresholdsConfig
 */
interface ThresholdsConfig {
    /**
     * ThresholdsMode absolute or percentage
     * @type {string}
     * @memberof ThresholdsConfig
     */
    mode?: string;
    /**
     * Must be sorted by 'value', first value is always -Infinity
     * @type {Array<Threshold>}
     * @memberof ThresholdsConfig
     */
    steps?: Array<Threshold>;
}
/**
 * Check if a given object implements the ThresholdsConfig interface.
 */
declare function instanceOfThresholdsConfig(value: object): value is ThresholdsConfig;
declare function ThresholdsConfigFromJSON(json: any): ThresholdsConfig;
declare function ThresholdsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThresholdsConfig;
declare function ThresholdsConfigToJSON(json: any): ThresholdsConfig;
declare function ThresholdsConfigToJSONTyped(value?: ThresholdsConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enum field config
 * Vector values are used as lookup keys into the enum fields
 * @export
 * @interface EnumFieldConfig
 */
interface EnumFieldConfig {
    /**
     * Color is the color value for a given index (empty is undefined)
     * @type {Array<string>}
     * @memberof EnumFieldConfig
     */
    color?: Array<string>;
    /**
     * Description of the enum state
     * @type {Array<string>}
     * @memberof EnumFieldConfig
     */
    description?: Array<string>;
    /**
     * Icon supports setting an icon for a given index value
     * @type {Array<string>}
     * @memberof EnumFieldConfig
     */
    icon?: Array<string>;
    /**
     * Value is the string display value for a given index
     * @type {Array<string>}
     * @memberof EnumFieldConfig
     */
    text?: Array<string>;
}
/**
 * Check if a given object implements the EnumFieldConfig interface.
 */
declare function instanceOfEnumFieldConfig(value: object): value is EnumFieldConfig;
declare function EnumFieldConfigFromJSON(json: any): EnumFieldConfig;
declare function EnumFieldConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumFieldConfig;
declare function EnumFieldConfigToJSON(json: any): EnumFieldConfig;
declare function EnumFieldConfigToJSONTyped(value?: EnumFieldConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * FieldTypeConfig has type specific configs, only one should be active at a time
 * @export
 * @interface FieldTypeConfig
 */
interface FieldTypeConfig {
    /**
     *
     * @type {EnumFieldConfig}
     * @memberof FieldTypeConfig
     */
    _enum?: EnumFieldConfig;
}
/**
 * Check if a given object implements the FieldTypeConfig interface.
 */
declare function instanceOfFieldTypeConfig(value: object): value is FieldTypeConfig;
declare function FieldTypeConfigFromJSON(json: any): FieldTypeConfig;
declare function FieldTypeConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldTypeConfig;
declare function FieldTypeConfigToJSON(json: any): FieldTypeConfig;
declare function FieldTypeConfigToJSONTyped(value?: FieldTypeConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface FieldConfig
 */
interface FieldConfig {
    /**
     * Map values to a display color
     * NOTE: this interface is under development in the frontend... so simple map for now
     * @type {{ [key: string]: object; }}
     * @memberof FieldConfig
     */
    color?: {
        [key: string]: object;
    };
    /**
     * Panel Specific Values
     * @type {{ [key: string]: object; }}
     * @memberof FieldConfig
     */
    custom?: {
        [key: string]: object;
    };
    /**
     *
     * @type {number}
     * @memberof FieldConfig
     */
    decimals?: number;
    /**
     * Description is human readable field metadata
     * @type {string}
     * @memberof FieldConfig
     */
    description?: string;
    /**
     * DisplayName overrides Grafana default naming, should not be used from a data source
     * @type {string}
     * @memberof FieldConfig
     */
    displayName?: string;
    /**
     * DisplayNameFromDS overrides Grafana default naming strategy.
     * @type {string}
     * @memberof FieldConfig
     */
    displayNameFromDS?: string;
    /**
     * Filterable indicates if the Field's data can be filtered by additional calls.
     * @type {boolean}
     * @memberof FieldConfig
     */
    filterable?: boolean;
    /**
     * Interval indicates the expected regular step between values in the series.
     * When an interval exists, consumers can identify "missing" values when the expected value is not present.
     * The grafana timeseries visualization will render disconnected values when missing values are found it the time field.
     * The interval uses the same units as the values.  For time.Time, this is defined in milliseconds.
     * @type {number}
     * @memberof FieldConfig
     */
    interval?: number;
    /**
     * The behavior when clicking on a result
     * @type {Array<DataLink>}
     * @memberof FieldConfig
     */
    links?: Array<DataLink>;
    /**
     *
     * @type {Array<object>}
     * @memberof FieldConfig
     */
    mappings?: Array<object>;
    /**
     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf
     * to null.
     * @type {number}
     * @memberof FieldConfig
     */
    max?: number;
    /**
     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf
     * to null.
     * @type {number}
     * @memberof FieldConfig
     */
    min?: number;
    /**
     * Alternative to empty string
     * @type {string}
     * @memberof FieldConfig
     */
    noValue?: string;
    /**
     * Path is an explicit path to the field in the datasource. When the frame meta includes a path,
     * this will default to `${frame.meta.path}/${field.name}
     *
     * When defined, this value can be used as an identifier within the datasource scope, and
     * may be used as an identifier to update values in a subsequent request
     * @type {string}
     * @memberof FieldConfig
     */
    path?: string;
    /**
     *
     * @type {ThresholdsConfig}
     * @memberof FieldConfig
     */
    thresholds?: ThresholdsConfig;
    /**
     *
     * @type {FieldTypeConfig}
     * @memberof FieldConfig
     */
    type?: FieldTypeConfig;
    /**
     * Numeric Options
     * @type {string}
     * @memberof FieldConfig
     */
    unit?: string;
    /**
     * Writeable indicates that the datasource knows how to update this value
     * @type {boolean}
     * @memberof FieldConfig
     */
    writeable?: boolean;
}
/**
 * Check if a given object implements the FieldConfig interface.
 */
declare function instanceOfFieldConfig(value: object): value is FieldConfig;
declare function FieldConfigFromJSON(json: any): FieldConfig;
declare function FieldConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldConfig;
declare function FieldConfigToJSON(json: any): FieldConfig;
declare function FieldConfigToJSONTyped(value?: FieldConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A Field is essentially a slice of various types with extra properties and methods.
 * See NewField() for supported types.
 *
 * The slice data in the Field is a not exported, so methods on the Field are used to to manipulate its data.
 * @export
 * @interface Field
 */
interface Field {
    /**
     *
     * @type {FieldConfig}
     * @memberof Field
     */
    config?: FieldConfig;
    /**
     * Labels are used to add metadata to an object.  The JSON will always be sorted keys
     * @type {{ [key: string]: string; }}
     * @memberof Field
     */
    labels?: {
        [key: string]: string;
    };
    /**
     * Name is default identifier of the field. The name does not have to be unique, but the combination
     * of name and Labels should be unique for proper behavior in all situations.
     * @type {string}
     * @memberof Field
     */
    name?: string;
}
/**
 * Check if a given object implements the Field interface.
 */
declare function instanceOfField(value: object): value is Field;
declare function FieldFromJSON(json: any): Field;
declare function FieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): Field;
declare function FieldToJSON(json: any): Field;
declare function FieldToJSONTyped(value?: Field | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The embedded FieldConfig's display name must be set.
 * It corresponds to the QueryResultMetaStat on the frontend (https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L53).
 * @export
 * @interface QueryStat
 */
interface QueryStat {
    /**
     * Map values to a display color
     * NOTE: this interface is under development in the frontend... so simple map for now
     * @type {{ [key: string]: object; }}
     * @memberof QueryStat
     */
    color?: {
        [key: string]: object;
    };
    /**
     * Panel Specific Values
     * @type {{ [key: string]: object; }}
     * @memberof QueryStat
     */
    custom?: {
        [key: string]: object;
    };
    /**
     *
     * @type {number}
     * @memberof QueryStat
     */
    decimals?: number;
    /**
     * Description is human readable field metadata
     * @type {string}
     * @memberof QueryStat
     */
    description?: string;
    /**
     * DisplayName overrides Grafana default naming, should not be used from a data source
     * @type {string}
     * @memberof QueryStat
     */
    displayName?: string;
    /**
     * DisplayNameFromDS overrides Grafana default naming strategy.
     * @type {string}
     * @memberof QueryStat
     */
    displayNameFromDS?: string;
    /**
     * Filterable indicates if the Field's data can be filtered by additional calls.
     * @type {boolean}
     * @memberof QueryStat
     */
    filterable?: boolean;
    /**
     * Interval indicates the expected regular step between values in the series.
     * When an interval exists, consumers can identify "missing" values when the expected value is not present.
     * The grafana timeseries visualization will render disconnected values when missing values are found it the time field.
     * The interval uses the same units as the values.  For time.Time, this is defined in milliseconds.
     * @type {number}
     * @memberof QueryStat
     */
    interval?: number;
    /**
     * The behavior when clicking on a result
     * @type {Array<DataLink>}
     * @memberof QueryStat
     */
    links?: Array<DataLink>;
    /**
     *
     * @type {Array<object>}
     * @memberof QueryStat
     */
    mappings?: Array<object>;
    /**
     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf
     * to null.
     * @type {number}
     * @memberof QueryStat
     */
    max?: number;
    /**
     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf
     * to null.
     * @type {number}
     * @memberof QueryStat
     */
    min?: number;
    /**
     * Alternative to empty string
     * @type {string}
     * @memberof QueryStat
     */
    noValue?: string;
    /**
     * Path is an explicit path to the field in the datasource. When the frame meta includes a path,
     * this will default to `${frame.meta.path}/${field.name}
     *
     * When defined, this value can be used as an identifier within the datasource scope, and
     * may be used as an identifier to update values in a subsequent request
     * @type {string}
     * @memberof QueryStat
     */
    path?: string;
    /**
     *
     * @type {ThresholdsConfig}
     * @memberof QueryStat
     */
    thresholds?: ThresholdsConfig;
    /**
     *
     * @type {FieldTypeConfig}
     * @memberof QueryStat
     */
    type?: FieldTypeConfig;
    /**
     * Numeric Options
     * @type {string}
     * @memberof QueryStat
     */
    unit?: string;
    /**
     *
     * @type {number}
     * @memberof QueryStat
     */
    value?: number;
    /**
     * Writeable indicates that the datasource knows how to update this value
     * @type {boolean}
     * @memberof QueryStat
     */
    writeable?: boolean;
}
/**
 * Check if a given object implements the QueryStat interface.
 */
declare function instanceOfQueryStat(value: object): value is QueryStat;
declare function QueryStatFromJSON(json: any): QueryStat;
declare function QueryStatFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryStat;
declare function QueryStatToJSON(json: any): QueryStat;
declare function QueryStatToJSONTyped(value?: QueryStat | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Notice
 */
interface Notice {
    /**
     *
     * @type {number}
     * @memberof Notice
     */
    inspect?: number;
    /**
     * Link is an optional link for display in the user interface and can be an
     * absolute URL or a path relative to Grafana's root url.
     * @type {string}
     * @memberof Notice
     */
    link?: string;
    /**
     *
     * @type {number}
     * @memberof Notice
     */
    severity?: number;
    /**
     * Text is freeform descriptive text for the notice.
     * @type {string}
     * @memberof Notice
     */
    text?: string;
}
/**
 * Check if a given object implements the Notice interface.
 */
declare function instanceOfNotice(value: object): value is Notice;
declare function NoticeFromJSON(json: any): Notice;
declare function NoticeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notice;
declare function NoticeToJSON(json: any): Notice;
declare function NoticeToJSONTyped(value?: Notice | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L11
 * NOTE -- in javascript this can accept any `[key: string]: any;` however
 * this interface only exposes the values we want to be exposed
 * @export
 * @interface FrameMeta
 */
interface FrameMeta {
    /**
     * Channel is the path to a stream in grafana live that has real-time updates for this data.
     * @type {string}
     * @memberof FrameMeta
     */
    channel?: string;
    /**
     * Custom datasource specific values.
     * @type {object}
     * @memberof FrameMeta
     */
    custom?: object;
    /**
     * nolint:revive
     * @type {string}
     * @memberof FrameMeta
     */
    dataTopic?: string;
    /**
     * ExecutedQueryString is the raw query sent to the underlying system. All macros and templating
     * have been applied.  When metadata contains this value, it will be shown in the query inspector.
     * @type {string}
     * @memberof FrameMeta
     */
    executedQueryString?: string;
    /**
     * Notices provide additional information about the data in the Frame that
     * Grafana can display to the user in the user interface.
     * @type {Array<Notice>}
     * @memberof FrameMeta
     */
    notices?: Array<Notice>;
    /**
     * Path is a browsable path on the datasource.
     * @type {string}
     * @memberof FrameMeta
     */
    path?: string;
    /**
     * PathSeparator defines the separator pattern to decode a hierarchy. The default separator is '/'.
     * @type {string}
     * @memberof FrameMeta
     */
    pathSeparator?: string;
    /**
     * PreferredVisualizationPluginId sets the panel plugin id to use to render the data when using Explore. If
     * the plugin cannot be found will fall back to PreferredVisualization.
     * @type {string}
     * @memberof FrameMeta
     */
    preferredVisualisationPluginId?: string;
    /**
     *
     * @type {string}
     * @memberof FrameMeta
     */
    preferredVisualisationType?: string;
    /**
     * Stats is an array of query result statistics.
     * @type {Array<QueryStat>}
     * @memberof FrameMeta
     */
    stats?: Array<QueryStat>;
    /**
     * A FrameType string, when present in a frame's metadata, asserts that the
     * frame's structure conforms to the FrameType's specification.
     * This property is currently optional, so FrameType may be FrameTypeUnknown even if the properties of
     * the Frame correspond to a defined FrameType.
     * +enum
     * @type {string}
     * @memberof FrameMeta
     */
    type?: string;
    /**
     *
     * @type {Array<number>}
     * @memberof FrameMeta
     */
    typeVersion?: Array<number>;
    /**
     * Array of field indices which values create a unique id for each row. Ideally this should be globally unique ID
     * but that isn't guarantied. Should help with keeping track and deduplicating rows in visualizations, especially
     * with streaming data with frequent updates.
     * @type {Array<number>}
     * @memberof FrameMeta
     */
    uniqueRowIdFields?: Array<number>;
}
/**
 * Check if a given object implements the FrameMeta interface.
 */
declare function instanceOfFrameMeta(value: object): value is FrameMeta;
declare function FrameMetaFromJSON(json: any): FrameMeta;
declare function FrameMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameMeta;
declare function FrameMetaToJSON(json: any): FrameMeta;
declare function FrameMetaToJSONTyped(value?: FrameMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Each Field is well typed by its FieldType and supports optional Labels.
 *
 * A Frame is a general data container for Grafana. A Frame can be table data
 * or time series data depending on its content and field types.
 * @export
 * @interface Frame
 */
interface Frame {
    /**
     * Fields are the columns of a frame.
     * All Fields must be of the same the length when marshalling the Frame for transmission.
     * There should be no `nil` entries in the Fields slice (making them pointers was a mistake).
     * @type {Array<Field>}
     * @memberof Frame
     */
    fields?: Array<Field>;
    /**
     *
     * @type {FrameMeta}
     * @memberof Frame
     */
    meta?: FrameMeta;
    /**
     * Name is used in some Grafana visualizations.
     * @type {string}
     * @memberof Frame
     */
    name?: string;
    /**
     * RefID is a property that can be set to match a Frame to its originating query.
     * @type {string}
     * @memberof Frame
     */
    refID?: string;
}
/**
 * Check if a given object implements the Frame interface.
 */
declare function instanceOfFrame(value: object): value is Frame;
declare function FrameFromJSON(json: any): Frame;
declare function FrameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Frame;
declare function FrameToJSON(json: any): Frame;
declare function FrameToJSONTyped(value?: Frame | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A map of RefIDs (unique query identifiers) to this type makes up the Responses property of a QueryDataResponse.
 * The Error property is used to allow for partial success responses from the containing QueryDataResponse.
 * @export
 * @interface DataResponse
 */
interface DataResponse {
    /**
     * Error is a property to be set if the corresponding DataQuery has an error.
     * @type {string}
     * @memberof DataResponse
     */
    error?: string;
    /**
     * ErrorSource type defines the source of the error
     * @type {string}
     * @memberof DataResponse
     */
    errorSource?: string;
    /**
     * It is the main data container within a backend.DataResponse.
     * There should be no `nil` entries in the Frames slice (making them pointers was a mistake).
     * @type {Array<Frame>}
     * @memberof DataResponse
     */
    frames?: Array<Frame>;
    /**
     *
     * @type {number}
     * @memberof DataResponse
     */
    status?: number;
}
/**
 * Check if a given object implements the DataResponse interface.
 */
declare function instanceOfDataResponse(value: object): value is DataResponse;
declare function DataResponseFromJSON(json: any): DataResponse;
declare function DataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataResponse;
declare function DataResponseToJSON(json: any): DataResponse;
declare function DataResponseToJSONTyped(value?: DataResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DataSourceListItemDTO
 */
interface DataSourceListItemDTO {
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    access?: string;
    /**
     *
     * @type {boolean}
     * @memberof DataSourceListItemDTO
     */
    basicAuth?: boolean;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    database?: string;
    /**
     *
     * @type {number}
     * @memberof DataSourceListItemDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof DataSourceListItemDTO
     */
    isDefault?: boolean;
    /**
     *
     * @type {object}
     * @memberof DataSourceListItemDTO
     */
    jsonData?: object;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof DataSourceListItemDTO
     */
    orgId?: number;
    /**
     *
     * @type {boolean}
     * @memberof DataSourceListItemDTO
     */
    readOnly?: boolean;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    typeLogoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    typeName?: string;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    uid?: string;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof DataSourceListItemDTO
     */
    user?: string;
}
/**
 * Check if a given object implements the DataSourceListItemDTO interface.
 */
declare function instanceOfDataSourceListItemDTO(value: object): value is DataSourceListItemDTO;
declare function DataSourceListItemDTOFromJSON(json: any): DataSourceListItemDTO;
declare function DataSourceListItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceListItemDTO;
declare function DataSourceListItemDTOToJSON(json: any): DataSourceListItemDTO;
declare function DataSourceListItemDTOToJSONTyped(value?: DataSourceListItemDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeleteCorrelationResponseBody
 */
interface DeleteCorrelationResponseBody {
    /**
     *
     * @type {string}
     * @memberof DeleteCorrelationResponseBody
     */
    message?: string;
}
/**
 * Check if a given object implements the DeleteCorrelationResponseBody interface.
 */
declare function instanceOfDeleteCorrelationResponseBody(value: object): value is DeleteCorrelationResponseBody;
declare function DeleteCorrelationResponseBodyFromJSON(json: any): DeleteCorrelationResponseBody;
declare function DeleteCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteCorrelationResponseBody;
declare function DeleteCorrelationResponseBodyToJSON(json: any): DeleteCorrelationResponseBody;
declare function DeleteCorrelationResponseBodyToJSONTyped(value?: DeleteCorrelationResponseBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeleteDashboardByUID200Response
 */
interface DeleteDashboardByUID200Response {
    /**
     * Message Message of the deleted dashboard.
     * @type {string}
     * @memberof DeleteDashboardByUID200Response
     */
    message: string;
    /**
     * Title Title of the deleted dashboard.
     * @type {string}
     * @memberof DeleteDashboardByUID200Response
     */
    title: string;
    /**
     * UID Identifier of the deleted dashboard.
     * @type {string}
     * @memberof DeleteDashboardByUID200Response
     */
    uid: string;
}
/**
 * Check if a given object implements the DeleteDashboardByUID200Response interface.
 */
declare function instanceOfDeleteDashboardByUID200Response(value: object): value is DeleteDashboardByUID200Response;
declare function DeleteDashboardByUID200ResponseFromJSON(json: any): DeleteDashboardByUID200Response;
declare function DeleteDashboardByUID200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteDashboardByUID200Response;
declare function DeleteDashboardByUID200ResponseToJSON(json: any): DeleteDashboardByUID200Response;
declare function DeleteDashboardByUID200ResponseToJSONTyped(value?: DeleteDashboardByUID200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeleteDataSourceByName200Response
 */
interface DeleteDataSourceByName200Response {
    /**
     * ID Identifier of the deleted data source.
     * @type {number}
     * @memberof DeleteDataSourceByName200Response
     */
    id: number;
    /**
     * Message Message of the deleted dashboard.
     * @type {string}
     * @memberof DeleteDataSourceByName200Response
     */
    message: string;
}
/**
 * Check if a given object implements the DeleteDataSourceByName200Response interface.
 */
declare function instanceOfDeleteDataSourceByName200Response(value: object): value is DeleteDataSourceByName200Response;
declare function DeleteDataSourceByName200ResponseFromJSON(json: any): DeleteDataSourceByName200Response;
declare function DeleteDataSourceByName200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteDataSourceByName200Response;
declare function DeleteDataSourceByName200ResponseToJSON(json: any): DeleteDataSourceByName200Response;
declare function DeleteDataSourceByName200ResponseToJSONTyped(value?: DeleteDataSourceByName200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeleteFolder200Response
 */
interface DeleteFolder200Response {
    /**
     * ID Identifier of the deleted folder.
     * @type {number}
     * @memberof DeleteFolder200Response
     */
    id: number;
    /**
     * Message Message of the deleted folder.
     * @type {string}
     * @memberof DeleteFolder200Response
     */
    message: string;
    /**
     * Title of the deleted folder.
     * @type {string}
     * @memberof DeleteFolder200Response
     */
    title: string;
}
/**
 * Check if a given object implements the DeleteFolder200Response interface.
 */
declare function instanceOfDeleteFolder200Response(value: object): value is DeleteFolder200Response;
declare function DeleteFolder200ResponseFromJSON(json: any): DeleteFolder200Response;
declare function DeleteFolder200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteFolder200Response;
declare function DeleteFolder200ResponseToJSON(json: any): DeleteFolder200Response;
declare function DeleteFolder200ResponseToJSONTyped(value?: DeleteFolder200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeleteTokenCommand
 */
interface DeleteTokenCommand {
    /**
     *
     * @type {string}
     * @memberof DeleteTokenCommand
     */
    instance?: string;
}
/**
 * Check if a given object implements the DeleteTokenCommand interface.
 */
declare function instanceOfDeleteTokenCommand(value: object): value is DeleteTokenCommand;
declare function DeleteTokenCommandFromJSON(json: any): DeleteTokenCommand;
declare function DeleteTokenCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteTokenCommand;
declare function DeleteTokenCommandToJSON(json: any): DeleteTokenCommand;
declare function DeleteTokenCommandToJSONTyped(value?: DeleteTokenCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Description
 */
interface Description {
    /**
     *
     * @type {Assignments}
     * @memberof Description
     */
    assignments?: Assignments;
    /**
     *
     * @type {Array<string>}
     * @memberof Description
     */
    permissions?: Array<string>;
}
/**
 * Check if a given object implements the Description interface.
 */
declare function instanceOfDescription(value: object): value is Description;
declare function DescriptionFromJSON(json: any): Description;
declare function DescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Description;
declare function DescriptionToJSON(json: any): Description;
declare function DescriptionToJSONTyped(value?: Description | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeviceDTO
 */
interface DeviceDTO {
    /**
     *
     * @type {string}
     * @memberof DeviceDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceDTO
     */
    clientIp?: string;
    /**
     *
     * @type {Date}
     * @memberof DeviceDTO
     */
    createdAt?: Date;
    /**
     *
     * @type {string}
     * @memberof DeviceDTO
     */
    deviceId?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceDTO
     */
    lastSeenAt?: string;
    /**
     *
     * @type {Date}
     * @memberof DeviceDTO
     */
    updatedAt?: Date;
    /**
     *
     * @type {string}
     * @memberof DeviceDTO
     */
    userAgent?: string;
}
/**
 * Check if a given object implements the DeviceDTO interface.
 */
declare function instanceOfDeviceDTO(value: object): value is DeviceDTO;
declare function DeviceDTOFromJSON(json: any): DeviceDTO;
declare function DeviceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceDTO;
declare function DeviceDTOToJSON(json: any): DeviceDTO;
declare function DeviceDTOToJSONTyped(value?: DeviceDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeviceSearchHitDTO
 */
interface DeviceSearchHitDTO {
    /**
     *
     * @type {string}
     * @memberof DeviceSearchHitDTO
     */
    clientIp?: string;
    /**
     *
     * @type {Date}
     * @memberof DeviceSearchHitDTO
     */
    createdAt?: Date;
    /**
     *
     * @type {string}
     * @memberof DeviceSearchHitDTO
     */
    deviceId?: string;
    /**
     *
     * @type {Date}
     * @memberof DeviceSearchHitDTO
     */
    lastSeenAt?: Date;
    /**
     *
     * @type {Date}
     * @memberof DeviceSearchHitDTO
     */
    updatedAt?: Date;
    /**
     *
     * @type {string}
     * @memberof DeviceSearchHitDTO
     */
    userAgent?: string;
}
/**
 * Check if a given object implements the DeviceSearchHitDTO interface.
 */
declare function instanceOfDeviceSearchHitDTO(value: object): value is DeviceSearchHitDTO;
declare function DeviceSearchHitDTOFromJSON(json: any): DeviceSearchHitDTO;
declare function DeviceSearchHitDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceSearchHitDTO;
declare function DeviceSearchHitDTOToJSON(json: any): DeviceSearchHitDTO;
declare function DeviceSearchHitDTOToJSONTyped(value?: DeviceSearchHitDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface DiscordConfig
 */
interface DiscordConfig {
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof DiscordConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof DiscordConfig
     */
    message?: string;
    /**
     *
     * @type {boolean}
     * @memberof DiscordConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof DiscordConfig
     */
    title?: string;
    /**
     *
     * @type {URL}
     * @memberof DiscordConfig
     */
    webhookUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof DiscordConfig
     */
    webhookUrlFile?: string;
}
/**
 * Check if a given object implements the DiscordConfig interface.
 */
declare function instanceOfDiscordConfig(value: object): value is DiscordConfig;
declare function DiscordConfigFromJSON(json: any): DiscordConfig;
declare function DiscordConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscordConfig;
declare function DiscordConfigToJSON(json: any): DiscordConfig;
declare function DiscordConfigToJSONTyped(value?: DiscordConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DiscoveryBase
 */
interface DiscoveryBase {
    /**
     *
     * @type {string}
     * @memberof DiscoveryBase
     */
    error?: string;
    /**
     *
     * @type {string}
     * @memberof DiscoveryBase
     */
    errorType?: string;
    /**
     *
     * @type {string}
     * @memberof DiscoveryBase
     */
    status: string;
}
/**
 * Check if a given object implements the DiscoveryBase interface.
 */
declare function instanceOfDiscoveryBase(value: object): value is DiscoveryBase;
declare function DiscoveryBaseFromJSON(json: any): DiscoveryBase;
declare function DiscoveryBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoveryBase;
declare function DiscoveryBaseToJSON(json: any): DiscoveryBase;
declare function DiscoveryBaseToJSONTyped(value?: DiscoveryBase | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface EmailConfig
 */
interface EmailConfig {
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    authIdentity?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    authPassword?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    authPasswordFile?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    authSecret?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    authUsername?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    from?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof EmailConfig
     */
    headers?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    hello?: string;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    html?: string;
    /**
     *
     * @type {boolean}
     * @memberof EmailConfig
     */
    requireTls?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof EmailConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {HostPort}
     * @memberof EmailConfig
     */
    smarthost?: HostPort;
    /**
     *
     * @type {string}
     * @memberof EmailConfig
     */
    text?: string;
    /**
     *
     * @type {TLSConfig}
     * @memberof EmailConfig
     */
    tlsConfig?: TLSConfig;
    /**
     * Email address to notify.
     * @type {string}
     * @memberof EmailConfig
     */
    to?: string;
}
/**
 * Check if a given object implements the EmailConfig interface.
 */
declare function instanceOfEmailConfig(value: object): value is EmailConfig;
declare function EmailConfigFromJSON(json: any): EmailConfig;
declare function EmailConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailConfig;
declare function EmailConfigToJSON(json: any): EmailConfig;
declare function EmailConfigToJSONTyped(value?: EmailConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface EmailDTO
 */
interface EmailDTO {
    /**
     *
     * @type {string}
     * @memberof EmailDTO
     */
    recipient?: string;
    /**
     *
     * @type {string}
     * @memberof EmailDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the EmailDTO interface.
 */
declare function instanceOfEmailDTO(value: object): value is EmailDTO;
declare function EmailDTOFromJSON(json: any): EmailDTO;
declare function EmailDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailDTO;
declare function EmailDTOToJSON(json: any): EmailDTO;
declare function EmailDTOToJSONTyped(value?: EmailDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * EmbeddedContactPoint is the contact point type that is used
 * by grafanas embedded alertmanager implementation.
 * @export
 * @interface EmbeddedContactPoint
 */
interface EmbeddedContactPoint {
    /**
     *
     * @type {boolean}
     * @memberof EmbeddedContactPoint
     */
    disableResolveMessage?: boolean;
    /**
     * Name is used as grouping key in the UI. Contact points with the
     * same name will be grouped in the UI.
     * @type {string}
     * @memberof EmbeddedContactPoint
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof EmbeddedContactPoint
     */
    readonly provenance?: string;
    /**
     *
     * @type {object}
     * @memberof EmbeddedContactPoint
     */
    settings: object;
    /**
     *
     * @type {string}
     * @memberof EmbeddedContactPoint
     */
    type: EmbeddedContactPointTypeEnum;
    /**
     * UID is the unique identifier of the contact point. The UID can be
     * set by the user.
     * @type {string}
     * @memberof EmbeddedContactPoint
     */
    uid?: string;
}
/**
 * @export
 */
declare const EmbeddedContactPointTypeEnum: {
    readonly Alertmanager: "alertmanager";
    readonly Dingding: " dingding";
    readonly Discord: " discord";
    readonly Email: " email";
    readonly Googlechat: " googlechat";
    readonly Kafka: " kafka";
    readonly Line: " line";
    readonly Opsgenie: " opsgenie";
    readonly Pagerduty: " pagerduty";
    readonly Pushover: " pushover";
    readonly Sensugo: " sensugo";
    readonly Slack: " slack";
    readonly Teams: " teams";
    readonly Telegram: " telegram";
    readonly Threema: " threema";
    readonly Victorops: " victorops";
    readonly Webhook: " webhook";
    readonly Wecom: " wecom";
};
type EmbeddedContactPointTypeEnum = typeof EmbeddedContactPointTypeEnum[keyof typeof EmbeddedContactPointTypeEnum];
/**
 * Check if a given object implements the EmbeddedContactPoint interface.
 */
declare function instanceOfEmbeddedContactPoint(value: object): value is EmbeddedContactPoint;
declare function EmbeddedContactPointFromJSON(json: any): EmbeddedContactPoint;
declare function EmbeddedContactPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedContactPoint;
declare function EmbeddedContactPointToJSON(json: any): EmbeddedContactPoint;
declare function EmbeddedContactPointToJSONTyped(value?: Omit<EmbeddedContactPoint, 'provenance'> | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ErrorResponseBody
 */
interface ErrorResponseBody {
    /**
     * Error An optional detailed description of the actual error. Only included if running in developer mode.
     * @type {string}
     * @memberof ErrorResponseBody
     */
    error?: string;
    /**
     * a human readable version of the error
     * @type {string}
     * @memberof ErrorResponseBody
     */
    message: string;
    /**
     * Status An optional status to denote the cause of the error.
     *
     * For example, a 412 Precondition Failed error may include additional information of why that error happened.
     * @type {string}
     * @memberof ErrorResponseBody
     */
    status?: string;
}
/**
 * Check if a given object implements the ErrorResponseBody interface.
 */
declare function instanceOfErrorResponseBody(value: object): value is ErrorResponseBody;
declare function ErrorResponseBodyFromJSON(json: any): ErrorResponseBody;
declare function ErrorResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseBody;
declare function ErrorResponseBodyToJSON(json: any): ErrorResponseBody;
declare function ErrorResponseBodyToJSONTyped(value?: ErrorResponseBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * EvalAlertConditionCommand is the command for evaluating a condition
 * @export
 * @interface EvalAlertConditionCommand
 */
interface EvalAlertConditionCommand {
    /**
     *
     * @type {string}
     * @memberof EvalAlertConditionCommand
     */
    condition?: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof EvalAlertConditionCommand
     */
    data?: Array<AlertQuery>;
    /**
     *
     * @type {Date}
     * @memberof EvalAlertConditionCommand
     */
    now?: Date;
}
/**
 * Check if a given object implements the EvalAlertConditionCommand interface.
 */
declare function instanceOfEvalAlertConditionCommand(value: object): value is EvalAlertConditionCommand;
declare function EvalAlertConditionCommandFromJSON(json: any): EvalAlertConditionCommand;
declare function EvalAlertConditionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvalAlertConditionCommand;
declare function EvalAlertConditionCommandToJSON(json: any): EvalAlertConditionCommand;
declare function EvalAlertConditionCommandToJSONTyped(value?: EvalAlertConditionCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface EvalQueriesPayload
 */
interface EvalQueriesPayload {
    /**
     *
     * @type {string}
     * @memberof EvalQueriesPayload
     */
    condition?: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof EvalQueriesPayload
     */
    data?: Array<AlertQuery>;
    /**
     *
     * @type {Date}
     * @memberof EvalQueriesPayload
     */
    now?: Date;
}
/**
 * Check if a given object implements the EvalQueriesPayload interface.
 */
declare function instanceOfEvalQueriesPayload(value: object): value is EvalQueriesPayload;
declare function EvalQueriesPayloadFromJSON(json: any): EvalQueriesPayload;
declare function EvalQueriesPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvalQueriesPayload;
declare function EvalQueriesPayloadToJSON(json: any): EvalQueriesPayload;
declare function EvalQueriesPayloadToJSONTyped(value?: EvalQueriesPayload | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Each field must contain a title, value, and optionally, a boolean value to indicate if the field
 * is short enough to be displayed next to other fields designated as short.
 * See https://api.slack.com/docs/message-attachments#fields for more information.
 * @export
 * @interface SlackField
 */
interface SlackField {
    /**
     *
     * @type {boolean}
     * @memberof SlackField
     */
    _short?: boolean;
    /**
     *
     * @type {string}
     * @memberof SlackField
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof SlackField
     */
    value?: string;
}
/**
 * Check if a given object implements the SlackField interface.
 */
declare function instanceOfSlackField(value: object): value is SlackField;
declare function SlackFieldFromJSON(json: any): SlackField;
declare function SlackFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackField;
declare function SlackFieldToJSON(json: any): SlackField;
declare function SlackFieldToJSONTyped(value?: SlackField | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * SlackConfirmationField protect users from destructive actions or particularly distinguished decisions
 * by asking them to confirm their button click one more time.
 * See https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields for more information.
 * @export
 * @interface SlackConfirmationField
 */
interface SlackConfirmationField {
    /**
     *
     * @type {string}
     * @memberof SlackConfirmationField
     */
    dismissText?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfirmationField
     */
    okText?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfirmationField
     */
    text?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfirmationField
     */
    title?: string;
}
/**
 * Check if a given object implements the SlackConfirmationField interface.
 */
declare function instanceOfSlackConfirmationField(value: object): value is SlackConfirmationField;
declare function SlackConfirmationFieldFromJSON(json: any): SlackConfirmationField;
declare function SlackConfirmationFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackConfirmationField;
declare function SlackConfirmationFieldToJSON(json: any): SlackConfirmationField;
declare function SlackConfirmationFieldToJSONTyped(value?: SlackConfirmationField | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * See https://api.slack.com/docs/message-attachments#action_fields and https://api.slack.com/docs/message-buttons
 * for more information.
 * @export
 * @interface SlackAction
 */
interface SlackAction {
    /**
     *
     * @type {SlackConfirmationField}
     * @memberof SlackAction
     */
    confirm?: SlackConfirmationField;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    style?: string;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    text?: string;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof SlackAction
     */
    value?: string;
}
/**
 * Check if a given object implements the SlackAction interface.
 */
declare function instanceOfSlackAction(value: object): value is SlackAction;
declare function SlackActionFromJSON(json: any): SlackAction;
declare function SlackActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackAction;
declare function SlackActionToJSON(json: any): SlackAction;
declare function SlackActionToJSONTyped(value?: SlackAction | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SlackConfig
 */
interface SlackConfig {
    /**
     *
     * @type {Array<SlackAction>}
     * @memberof SlackConfig
     */
    actions?: Array<SlackAction>;
    /**
     *
     * @type {URL}
     * @memberof SlackConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    apiUrlFile?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    callbackId?: string;
    /**
     * Slack channel override, (like #other-channel or @username).
     * @type {string}
     * @memberof SlackConfig
     */
    channel?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    color?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    fallback?: string;
    /**
     *
     * @type {Array<SlackField>}
     * @memberof SlackConfig
     */
    fields?: Array<SlackField>;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    footer?: string;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof SlackConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    iconEmoji?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    iconUrl?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    imageUrl?: string;
    /**
     *
     * @type {boolean}
     * @memberof SlackConfig
     */
    linkNames?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof SlackConfig
     */
    mrkdwnIn?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    pretext?: string;
    /**
     *
     * @type {boolean}
     * @memberof SlackConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof SlackConfig
     */
    shortFields?: boolean;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    text?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    thumbUrl?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    titleLink?: string;
    /**
     *
     * @type {string}
     * @memberof SlackConfig
     */
    username?: string;
}
/**
 * Check if a given object implements the SlackConfig interface.
 */
declare function instanceOfSlackConfig(value: object): value is SlackConfig;
declare function SlackConfigFromJSON(json: any): SlackConfig;
declare function SlackConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackConfig;
declare function SlackConfigToJSON(json: any): SlackConfig;
declare function SlackConfigToJSONTyped(value?: SlackConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostableGrafanaReceiver
 */
interface PostableGrafanaReceiver {
    /**
     *
     * @type {boolean}
     * @memberof PostableGrafanaReceiver
     */
    disableResolveMessage?: boolean;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaReceiver
     */
    name?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof PostableGrafanaReceiver
     */
    secureSettings?: {
        [key: string]: string;
    };
    /**
     *
     * @type {object}
     * @memberof PostableGrafanaReceiver
     */
    settings?: object;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaReceiver
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaReceiver
     */
    uid?: string;
}
/**
 * Check if a given object implements the PostableGrafanaReceiver interface.
 */
declare function instanceOfPostableGrafanaReceiver(value: object): value is PostableGrafanaReceiver;
declare function PostableGrafanaReceiverFromJSON(json: any): PostableGrafanaReceiver;
declare function PostableGrafanaReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaReceiver;
declare function PostableGrafanaReceiverToJSON(json: any): PostableGrafanaReceiver;
declare function PostableGrafanaReceiverToJSONTyped(value?: PostableGrafanaReceiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface WebhookConfig
 */
interface WebhookConfig {
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof WebhookConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     * MaxAlerts is the maximum number of alerts to be sent per webhook message.
     * Alerts exceeding this threshold will be truncated. Setting this to 0
     * allows an unlimited number of alerts.
     * @type {number}
     * @memberof WebhookConfig
     */
    maxAlerts?: number;
    /**
     *
     * @type {boolean}
     * @memberof WebhookConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {URL}
     * @memberof WebhookConfig
     */
    url?: URL;
    /**
     *
     * @type {string}
     * @memberof WebhookConfig
     */
    urlFile?: string;
}
/**
 * Check if a given object implements the WebhookConfig interface.
 */
declare function instanceOfWebhookConfig(value: object): value is WebhookConfig;
declare function WebhookConfigFromJSON(json: any): WebhookConfig;
declare function WebhookConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookConfig;
declare function WebhookConfigToJSON(json: any): WebhookConfig;
declare function WebhookConfigToJSONTyped(value?: WebhookConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface VictorOpsConfig
 */
interface VictorOpsConfig {
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    apiKey?: string;
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    apiKeyFile?: string;
    /**
     *
     * @type {URL}
     * @memberof VictorOpsConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof VictorOpsConfig
     */
    customFields?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    entityDisplayName?: string;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof VictorOpsConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    messageType?: string;
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    monitoringTool?: string;
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    routingKey?: string;
    /**
     *
     * @type {boolean}
     * @memberof VictorOpsConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof VictorOpsConfig
     */
    stateMessage?: string;
}
/**
 * Check if a given object implements the VictorOpsConfig interface.
 */
declare function instanceOfVictorOpsConfig(value: object): value is VictorOpsConfig;
declare function VictorOpsConfigFromJSON(json: any): VictorOpsConfig;
declare function VictorOpsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): VictorOpsConfig;
declare function VictorOpsConfigToJSON(json: any): VictorOpsConfig;
declare function VictorOpsConfigToJSONTyped(value?: VictorOpsConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface OpsGenieConfigResponder
 */
interface OpsGenieConfigResponder {
    /**
     * One of those 3 should be filled.
     * @type {string}
     * @memberof OpsGenieConfigResponder
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfigResponder
     */
    name?: string;
    /**
     * team, user, escalation, schedule etc.
     * @type {string}
     * @memberof OpsGenieConfigResponder
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfigResponder
     */
    username?: string;
}
/**
 * Check if a given object implements the OpsGenieConfigResponder interface.
 */
declare function instanceOfOpsGenieConfigResponder(value: object): value is OpsGenieConfigResponder;
declare function OpsGenieConfigResponderFromJSON(json: any): OpsGenieConfigResponder;
declare function OpsGenieConfigResponderFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpsGenieConfigResponder;
declare function OpsGenieConfigResponderToJSON(json: any): OpsGenieConfigResponder;
declare function OpsGenieConfigResponderToJSONTyped(value?: OpsGenieConfigResponder | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface OpsGenieConfig
 */
interface OpsGenieConfig {
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    actions?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    apiKey?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    apiKeyFile?: string;
    /**
     *
     * @type {URL}
     * @memberof OpsGenieConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    description?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof OpsGenieConfig
     */
    details?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    entity?: string;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof OpsGenieConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    note?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    priority?: string;
    /**
     *
     * @type {Array<OpsGenieConfigResponder>}
     * @memberof OpsGenieConfig
     */
    responders?: Array<OpsGenieConfigResponder>;
    /**
     *
     * @type {boolean}
     * @memberof OpsGenieConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    source?: string;
    /**
     *
     * @type {string}
     * @memberof OpsGenieConfig
     */
    tags?: string;
    /**
     *
     * @type {boolean}
     * @memberof OpsGenieConfig
     */
    updateAlerts?: boolean;
}
/**
 * Check if a given object implements the OpsGenieConfig interface.
 */
declare function instanceOfOpsGenieConfig(value: object): value is OpsGenieConfig;
declare function OpsGenieConfigFromJSON(json: any): OpsGenieConfig;
declare function OpsGenieConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpsGenieConfig;
declare function OpsGenieConfigToJSON(json: any): OpsGenieConfig;
declare function OpsGenieConfigToJSONTyped(value?: OpsGenieConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PushoverConfig
 */
interface PushoverConfig {
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    device?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    expire?: string;
    /**
     *
     * @type {boolean}
     * @memberof PushoverConfig
     */
    html?: boolean;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof PushoverConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    priority?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    retry?: string;
    /**
     *
     * @type {boolean}
     * @memberof PushoverConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    sound?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    token?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    tokenFile?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    ttl?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    urlTitle?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    userKey?: string;
    /**
     *
     * @type {string}
     * @memberof PushoverConfig
     */
    userKeyFile?: string;
}
/**
 * Check if a given object implements the PushoverConfig interface.
 */
declare function instanceOfPushoverConfig(value: object): value is PushoverConfig;
declare function PushoverConfigFromJSON(json: any): PushoverConfig;
declare function PushoverConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PushoverConfig;
declare function PushoverConfigToJSON(json: any): PushoverConfig;
declare function PushoverConfigToJSONTyped(value?: PushoverConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PagerdutyImage
 */
interface PagerdutyImage {
    /**
     *
     * @type {string}
     * @memberof PagerdutyImage
     */
    alt?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyImage
     */
    href?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyImage
     */
    src?: string;
}
/**
 * Check if a given object implements the PagerdutyImage interface.
 */
declare function instanceOfPagerdutyImage(value: object): value is PagerdutyImage;
declare function PagerdutyImageFromJSON(json: any): PagerdutyImage;
declare function PagerdutyImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyImage;
declare function PagerdutyImageToJSON(json: any): PagerdutyImage;
declare function PagerdutyImageToJSONTyped(value?: PagerdutyImage | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PagerdutyLink
 */
interface PagerdutyLink {
    /**
     *
     * @type {string}
     * @memberof PagerdutyLink
     */
    href?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyLink
     */
    text?: string;
}
/**
 * Check if a given object implements the PagerdutyLink interface.
 */
declare function instanceOfPagerdutyLink(value: object): value is PagerdutyLink;
declare function PagerdutyLinkFromJSON(json: any): PagerdutyLink;
declare function PagerdutyLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyLink;
declare function PagerdutyLinkToJSON(json: any): PagerdutyLink;
declare function PagerdutyLinkToJSONTyped(value?: PagerdutyLink | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PagerdutyConfig
 */
interface PagerdutyConfig {
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    _class?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    client?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    clientUrl?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    component?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    description?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof PagerdutyConfig
     */
    details?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    group?: string;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof PagerdutyConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {Array<PagerdutyImage>}
     * @memberof PagerdutyConfig
     */
    images?: Array<PagerdutyImage>;
    /**
     *
     * @type {Array<PagerdutyLink>}
     * @memberof PagerdutyConfig
     */
    links?: Array<PagerdutyLink>;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    routingKey?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    routingKeyFile?: string;
    /**
     *
     * @type {boolean}
     * @memberof PagerdutyConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    serviceKey?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    serviceKeyFile?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    severity?: string;
    /**
     *
     * @type {string}
     * @memberof PagerdutyConfig
     */
    source?: string;
    /**
     *
     * @type {URL}
     * @memberof PagerdutyConfig
     */
    url?: URL;
}
/**
 * Check if a given object implements the PagerdutyConfig interface.
 */
declare function instanceOfPagerdutyConfig(value: object): value is PagerdutyConfig;
declare function PagerdutyConfigFromJSON(json: any): PagerdutyConfig;
declare function PagerdutyConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyConfig;
declare function PagerdutyConfigToJSON(json: any): PagerdutyConfig;
declare function PagerdutyConfigToJSONTyped(value?: PagerdutyConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface WechatConfig
 */
interface WechatConfig {
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    agentId?: string;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    apiSecret?: string;
    /**
     *
     * @type {URL}
     * @memberof WechatConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    corpId?: string;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof WechatConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    messageType?: string;
    /**
     *
     * @type {boolean}
     * @memberof WechatConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    toParty?: string;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    toTag?: string;
    /**
     *
     * @type {string}
     * @memberof WechatConfig
     */
    toUser?: string;
}
/**
 * Check if a given object implements the WechatConfig interface.
 */
declare function instanceOfWechatConfig(value: object): value is WechatConfig;
declare function WechatConfigFromJSON(json: any): WechatConfig;
declare function WechatConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WechatConfig;
declare function WechatConfigToJSON(json: any): WechatConfig;
declare function WechatConfigToJSONTyped(value?: WechatConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ExtendedReceiver
 */
interface ExtendedReceiver {
    /**
     *
     * @type {EmailConfig}
     * @memberof ExtendedReceiver
     */
    emailConfigs?: EmailConfig;
    /**
     *
     * @type {PostableGrafanaReceiver}
     * @memberof ExtendedReceiver
     */
    grafanaManagedReceiver?: PostableGrafanaReceiver;
    /**
     *
     * @type {OpsGenieConfig}
     * @memberof ExtendedReceiver
     */
    opsgenieConfigs?: OpsGenieConfig;
    /**
     *
     * @type {PagerdutyConfig}
     * @memberof ExtendedReceiver
     */
    pagerdutyConfigs?: PagerdutyConfig;
    /**
     *
     * @type {PushoverConfig}
     * @memberof ExtendedReceiver
     */
    pushoverConfigs?: PushoverConfig;
    /**
     *
     * @type {SlackConfig}
     * @memberof ExtendedReceiver
     */
    slackConfigs?: SlackConfig;
    /**
     *
     * @type {VictorOpsConfig}
     * @memberof ExtendedReceiver
     */
    victoropsConfigs?: VictorOpsConfig;
    /**
     *
     * @type {WebhookConfig}
     * @memberof ExtendedReceiver
     */
    webhookConfigs?: WebhookConfig;
    /**
     *
     * @type {WechatConfig}
     * @memberof ExtendedReceiver
     */
    wechatConfigs?: WechatConfig;
}
/**
 * Check if a given object implements the ExtendedReceiver interface.
 */
declare function instanceOfExtendedReceiver(value: object): value is ExtendedReceiver;
declare function ExtendedReceiverFromJSON(json: any): ExtendedReceiver;
declare function ExtendedReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedReceiver;
declare function ExtendedReceiverToJSON(json: any): ExtendedReceiver;
declare function ExtendedReceiverToJSONTyped(value?: ExtendedReceiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TagsDTO
 */
interface TagsDTO {
    /**
     *
     * @type {number}
     * @memberof TagsDTO
     */
    count?: number;
    /**
     *
     * @type {string}
     * @memberof TagsDTO
     */
    tag?: string;
}
/**
 * Check if a given object implements the TagsDTO interface.
 */
declare function instanceOfTagsDTO(value: object): value is TagsDTO;
declare function TagsDTOFromJSON(json: any): TagsDTO;
declare function TagsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagsDTO;
declare function TagsDTOToJSON(json: any): TagsDTO;
declare function TagsDTOToJSONTyped(value?: TagsDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface FindTagsResult
 */
interface FindTagsResult {
    /**
     *
     * @type {Array<TagsDTO>}
     * @memberof FindTagsResult
     */
    tags?: Array<TagsDTO>;
}
/**
 * Check if a given object implements the FindTagsResult interface.
 */
declare function instanceOfFindTagsResult(value: object): value is FindTagsResult;
declare function FindTagsResultFromJSON(json: any): FindTagsResult;
declare function FindTagsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindTagsResult;
declare function FindTagsResultToJSON(json: any): FindTagsResult;
declare function FindTagsResultToJSONTyped(value?: FindTagsResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Span
 */
interface Span {
    /**
     * Length of the span.
     * @type {number}
     * @memberof Span
     */
    length?: number;
    /**
     * Gap to previous span (always positive), or starting index for the 1st
     * span (which can be negative).
     * @type {number}
     * @memberof Span
     */
    offset?: number;
}
/**
 * Check if a given object implements the Span interface.
 */
declare function instanceOfSpan(value: object): value is Span;
declare function SpanFromJSON(json: any): Span;
declare function SpanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Span;
declare function SpanToJSON(json: any): Span;
declare function SpanToJSONTyped(value?: Span | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A FloatHistogram is needed by PromQL to handle operations that might result
 * in fractional counts. Since the counts in a histogram are unlikely to be too
 * large to be represented precisely by a float64, a FloatHistogram can also be
 * used to represent a histogram with integer counts and thus serves as a more
 * generalized representation.
 * @export
 * @interface FloatHistogram
 */
interface FloatHistogram {
    /**
     * Total number of observations. Must be zero or positive.
     * @type {number}
     * @memberof FloatHistogram
     */
    count?: number;
    /**
     * or alternatively that we are dealing with a gauge histogram, where counter resets do not apply.
     * @type {number}
     * @memberof FloatHistogram
     */
    counterResetHint?: number;
    /**
     * Observation counts in buckets. Each represents an absolute count and
     * must be zero or positive.
     * @type {Array<number>}
     * @memberof FloatHistogram
     */
    positiveBuckets?: Array<number>;
    /**
     * Spans for positive and negative buckets (see Span below).
     * @type {Array<Span>}
     * @memberof FloatHistogram
     */
    positiveSpans?: Array<Span>;
    /**
     * Currently valid schema numbers are -4 <= n <= 8.  They are all for
     * base-2 bucket schemas, where 1 is a bucket boundary in each case, and
     * then each power of two is divided into 2^n logarithmic buckets.  Or
     * in other words, each bucket boundary is the previous boundary times
     * 2^(2^-n).
     * @type {number}
     * @memberof FloatHistogram
     */
    schema?: number;
    /**
     * Sum of observations. This is also used as the stale marker.
     * @type {number}
     * @memberof FloatHistogram
     */
    sum?: number;
    /**
     * Observations falling into the zero bucket. Must be zero or positive.
     * @type {number}
     * @memberof FloatHistogram
     */
    zeroCount?: number;
    /**
     * Width of the zero bucket.
     * @type {number}
     * @memberof FloatHistogram
     */
    zeroThreshold?: number;
}
/**
 * Check if a given object implements the FloatHistogram interface.
 */
declare function instanceOfFloatHistogram(value: object): value is FloatHistogram;
declare function FloatHistogramFromJSON(json: any): FloatHistogram;
declare function FloatHistogramFromJSONTyped(json: any, ignoreDiscriminator: boolean): FloatHistogram;
declare function FloatHistogramToJSON(json: any): FloatHistogram;
declare function FloatHistogramToJSONTyped(value?: FloatHistogram | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Folder
 */
interface Folder {
    /**
     * Metadata contains user accesses for a given resource
     * Ex: map[string]bool{"create":true, "delete": true}
     * @type {{ [key: string]: boolean; }}
     * @memberof Folder
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {boolean}
     * @memberof Folder
     */
    canAdmin?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Folder
     */
    canDelete?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Folder
     */
    canEdit?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Folder
     */
    canSave?: boolean;
    /**
     *
     * @type {Date}
     * @memberof Folder
     */
    created?: Date;
    /**
     *
     * @type {string}
     * @memberof Folder
     */
    createdBy?: string;
    /**
     *
     * @type {boolean}
     * @memberof Folder
     */
    hasAcl?: boolean;
    /**
     * Deprecated: use UID instead
     * @type {number}
     * @memberof Folder
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof Folder
     */
    orgId?: number;
    /**
     * only used if nested folders are enabled
     * @type {string}
     * @memberof Folder
     */
    parentUid?: string;
    /**
     * the parent folders starting from the root going down
     * @type {Array<Folder>}
     * @memberof Folder
     */
    parents?: Array<Folder>;
    /**
     *
     * @type {string}
     * @memberof Folder
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof Folder
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof Folder
     */
    updated?: Date;
    /**
     *
     * @type {string}
     * @memberof Folder
     */
    updatedBy?: string;
    /**
     *
     * @type {string}
     * @memberof Folder
     */
    url?: string;
    /**
     *
     * @type {number}
     * @memberof Folder
     */
    version?: number;
}
/**
 * Check if a given object implements the Folder interface.
 */
declare function instanceOfFolder(value: object): value is Folder;
declare function FolderFromJSON(json: any): Folder;
declare function FolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Folder;
declare function FolderToJSON(json: any): Folder;
declare function FolderToJSONTyped(value?: Folder | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface FolderSearchHit
 */
interface FolderSearchHit {
    /**
     *
     * @type {number}
     * @memberof FolderSearchHit
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof FolderSearchHit
     */
    parentUid?: string;
    /**
     *
     * @type {string}
     * @memberof FolderSearchHit
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof FolderSearchHit
     */
    uid?: string;
}
/**
 * Check if a given object implements the FolderSearchHit interface.
 */
declare function instanceOfFolderSearchHit(value: object): value is FolderSearchHit;
declare function FolderSearchHitFromJSON(json: any): FolderSearchHit;
declare function FolderSearchHitFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderSearchHit;
declare function FolderSearchHitToJSON(json: any): FolderSearchHit;
declare function FolderSearchHitToJSONTyped(value?: FolderSearchHit | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * PublicError is derived from Error and only contains information
 * available to the end user.
 * @export
 * @interface PublicError
 */
interface PublicError {
    /**
     * Extra Additional information about the error
     * @type {{ [key: string]: object; }}
     * @memberof PublicError
     */
    extra?: {
        [key: string]: object;
    };
    /**
     * Message A human readable message
     * @type {string}
     * @memberof PublicError
     */
    message?: string;
    /**
     * MessageID A unique identifier for the error
     * @type {string}
     * @memberof PublicError
     */
    messageId: string;
    /**
     * StatusCode The HTTP status code returned
     * @type {number}
     * @memberof PublicError
     */
    statusCode: number;
}
/**
 * Check if a given object implements the PublicError interface.
 */
declare function instanceOfPublicError(value: object): value is PublicError;
declare function PublicErrorFromJSON(json: any): PublicError;
declare function PublicErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicError;
declare function PublicErrorToJSON(json: any): PublicError;
declare function PublicErrorToJSONTyped(value?: PublicError | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ForbiddenError
 */
interface ForbiddenError {
    /**
     *
     * @type {PublicError}
     * @memberof ForbiddenError
     */
    body?: PublicError;
}
/**
 * Check if a given object implements the ForbiddenError interface.
 */
declare function instanceOfForbiddenError(value: object): value is ForbiddenError;
declare function ForbiddenErrorFromJSON(json: any): ForbiddenError;
declare function ForbiddenErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForbiddenError;
declare function ForbiddenErrorToJSON(json: any): ForbiddenError;
declare function ForbiddenErrorToJSONTyped(value?: ForbiddenError | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GenericPublicError
 */
interface GenericPublicError {
    /**
     *
     * @type {PublicError}
     * @memberof GenericPublicError
     */
    body?: PublicError;
}
/**
 * Check if a given object implements the GenericPublicError interface.
 */
declare function instanceOfGenericPublicError(value: object): value is GenericPublicError;
declare function GenericPublicErrorFromJSON(json: any): GenericPublicError;
declare function GenericPublicErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenericPublicError;
declare function GenericPublicErrorToJSON(json: any): GenericPublicError;
declare function GenericPublicErrorToJSONTyped(value?: GenericPublicError | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GetAccessTokenResponseDTO
 */
interface GetAccessTokenResponseDTO {
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    createdAt?: string;
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    displayName?: string;
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    expiresAt?: string;
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    firstUsedAt?: string;
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof GetAccessTokenResponseDTO
     */
    lastUsedAt?: string;
}
/**
 * Check if a given object implements the GetAccessTokenResponseDTO interface.
 */
declare function instanceOfGetAccessTokenResponseDTO(value: object): value is GetAccessTokenResponseDTO;
declare function GetAccessTokenResponseDTOFromJSON(json: any): GetAccessTokenResponseDTO;
declare function GetAccessTokenResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAccessTokenResponseDTO;
declare function GetAccessTokenResponseDTOToJSON(json: any): GetAccessTokenResponseDTO;
declare function GetAccessTokenResponseDTOToJSONTyped(value?: GetAccessTokenResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetAnnotationTagsResponse
 */
interface GetAnnotationTagsResponse {
    /**
     *
     * @type {FindTagsResult}
     * @memberof GetAnnotationTagsResponse
     */
    result?: FindTagsResult;
}
/**
 * Check if a given object implements the GetAnnotationTagsResponse interface.
 */
declare function instanceOfGetAnnotationTagsResponse(value: object): value is GetAnnotationTagsResponse;
declare function GetAnnotationTagsResponseFromJSON(json: any): GetAnnotationTagsResponse;
declare function GetAnnotationTagsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAnnotationTagsResponse;
declare function GetAnnotationTagsResponseToJSON(json: any): GetAnnotationTagsResponse;
declare function GetAnnotationTagsResponseToJSONTyped(value?: GetAnnotationTagsResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GetDataSourceIdByName200Response
 */
interface GetDataSourceIdByName200Response {
    /**
     * ID Identifier of the data source.
     * @type {number}
     * @memberof GetDataSourceIdByName200Response
     */
    id: number;
}
/**
 * Check if a given object implements the GetDataSourceIdByName200Response interface.
 */
declare function instanceOfGetDataSourceIdByName200Response(value: object): value is GetDataSourceIdByName200Response;
declare function GetDataSourceIdByName200ResponseFromJSON(json: any): GetDataSourceIdByName200Response;
declare function GetDataSourceIdByName200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDataSourceIdByName200Response;
declare function GetDataSourceIdByName200ResponseToJSON(json: any): GetDataSourceIdByName200Response;
declare function GetDataSourceIdByName200ResponseToJSONTyped(value?: GetDataSourceIdByName200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetHomeDashboardResponse
 */
interface GetHomeDashboardResponse {
    /**
     *
     * @type {object}
     * @memberof GetHomeDashboardResponse
     */
    dashboard?: object;
    /**
     *
     * @type {DashboardMeta}
     * @memberof GetHomeDashboardResponse
     */
    meta?: DashboardMeta;
    /**
     *
     * @type {string}
     * @memberof GetHomeDashboardResponse
     */
    redirectUri?: string;
}
/**
 * Check if a given object implements the GetHomeDashboardResponse interface.
 */
declare function instanceOfGetHomeDashboardResponse(value: object): value is GetHomeDashboardResponse;
declare function GetHomeDashboardResponseFromJSON(json: any): GetHomeDashboardResponse;
declare function GetHomeDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHomeDashboardResponse;
declare function GetHomeDashboardResponseToJSON(json: any): GetHomeDashboardResponse;
declare function GetHomeDashboardResponseToJSONTyped(value?: GetHomeDashboardResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GetSharingOptions200Response
 */
interface GetSharingOptions200Response {
    /**
     *
     * @type {boolean}
     * @memberof GetSharingOptions200Response
     */
    externalEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof GetSharingOptions200Response
     */
    externalSnapshotName?: string;
    /**
     *
     * @type {string}
     * @memberof GetSharingOptions200Response
     */
    externalSnapshotURL?: string;
}
/**
 * Check if a given object implements the GetSharingOptions200Response interface.
 */
declare function instanceOfGetSharingOptions200Response(value: object): value is GetSharingOptions200Response;
declare function GetSharingOptions200ResponseFromJSON(json: any): GetSharingOptions200Response;
declare function GetSharingOptions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSharingOptions200Response;
declare function GetSharingOptions200ResponseToJSON(json: any): GetSharingOptions200Response;
declare function GetSharingOptions200ResponseToJSONTyped(value?: GetSharingOptions200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MigrateDataResponseItemDTO
 */
interface MigrateDataResponseItemDTO {
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseItemDTO
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseItemDTO
     */
    refId: string;
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseItemDTO
     */
    status: MigrateDataResponseItemDTOStatusEnum;
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseItemDTO
     */
    type: MigrateDataResponseItemDTOTypeEnum;
}
/**
 * @export
 */
declare const MigrateDataResponseItemDTOStatusEnum: {
    readonly Ok: "OK";
    readonly Warning: "WARNING";
    readonly Error: "ERROR";
    readonly Pending: "PENDING";
    readonly Unknown: "UNKNOWN";
};
type MigrateDataResponseItemDTOStatusEnum = typeof MigrateDataResponseItemDTOStatusEnum[keyof typeof MigrateDataResponseItemDTOStatusEnum];
/**
 * @export
 */
declare const MigrateDataResponseItemDTOTypeEnum: {
    readonly Dashboard: "DASHBOARD";
    readonly Datasource: "DATASOURCE";
    readonly Folder: "FOLDER";
};
type MigrateDataResponseItemDTOTypeEnum = typeof MigrateDataResponseItemDTOTypeEnum[keyof typeof MigrateDataResponseItemDTOTypeEnum];
/**
 * Check if a given object implements the MigrateDataResponseItemDTO interface.
 */
declare function instanceOfMigrateDataResponseItemDTO(value: object): value is MigrateDataResponseItemDTO;
declare function MigrateDataResponseItemDTOFromJSON(json: any): MigrateDataResponseItemDTO;
declare function MigrateDataResponseItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseItemDTO;
declare function MigrateDataResponseItemDTOToJSON(json: any): MigrateDataResponseItemDTO;
declare function MigrateDataResponseItemDTOToJSONTyped(value?: MigrateDataResponseItemDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SnapshotResourceStats
 */
interface SnapshotResourceStats {
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof SnapshotResourceStats
     */
    statuses?: {
        [key: string]: number;
    };
    /**
     *
     * @type {number}
     * @memberof SnapshotResourceStats
     */
    total?: number;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof SnapshotResourceStats
     */
    types?: {
        [key: string]: number;
    };
}
/**
 * Check if a given object implements the SnapshotResourceStats interface.
 */
declare function instanceOfSnapshotResourceStats(value: object): value is SnapshotResourceStats;
declare function SnapshotResourceStatsFromJSON(json: any): SnapshotResourceStats;
declare function SnapshotResourceStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotResourceStats;
declare function SnapshotResourceStatsToJSON(json: any): SnapshotResourceStats;
declare function SnapshotResourceStatsToJSONTyped(value?: SnapshotResourceStats | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GetSnapshotResponseDTO
 */
interface GetSnapshotResponseDTO {
    /**
     *
     * @type {Date}
     * @memberof GetSnapshotResponseDTO
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof GetSnapshotResponseDTO
     */
    finished?: Date;
    /**
     *
     * @type {Array<MigrateDataResponseItemDTO>}
     * @memberof GetSnapshotResponseDTO
     */
    results?: Array<MigrateDataResponseItemDTO>;
    /**
     *
     * @type {string}
     * @memberof GetSnapshotResponseDTO
     */
    sessionUid?: string;
    /**
     *
     * @type {SnapshotResourceStats}
     * @memberof GetSnapshotResponseDTO
     */
    stats?: SnapshotResourceStats;
    /**
     *
     * @type {string}
     * @memberof GetSnapshotResponseDTO
     */
    status?: GetSnapshotResponseDTOStatusEnum;
    /**
     *
     * @type {string}
     * @memberof GetSnapshotResponseDTO
     */
    uid?: string;
}
/**
 * @export
 */
declare const GetSnapshotResponseDTOStatusEnum: {
    readonly Initializing: "INITIALIZING";
    readonly Creating: "CREATING";
    readonly PendingUpload: "PENDING_UPLOAD";
    readonly Uploading: "UPLOADING";
    readonly PendingProcessing: "PENDING_PROCESSING";
    readonly Processing: "PROCESSING";
    readonly Finished: "FINISHED";
    readonly Canceled: "CANCELED";
    readonly Error: "ERROR";
    readonly Unknown: "UNKNOWN";
};
type GetSnapshotResponseDTOStatusEnum = typeof GetSnapshotResponseDTOStatusEnum[keyof typeof GetSnapshotResponseDTOStatusEnum];
/**
 * Check if a given object implements the GetSnapshotResponseDTO interface.
 */
declare function instanceOfGetSnapshotResponseDTO(value: object): value is GetSnapshotResponseDTO;
declare function GetSnapshotResponseDTOFromJSON(json: any): GetSnapshotResponseDTO;
declare function GetSnapshotResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSnapshotResponseDTO;
declare function GetSnapshotResponseDTOToJSON(json: any): GetSnapshotResponseDTO;
declare function GetSnapshotResponseDTOToJSONTyped(value?: GetSnapshotResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableAlertmanagers
 */
interface GettableAlertmanagers {
    /**
     *
     * @type {AlertManagersResult}
     * @memberof GettableAlertmanagers
     */
    data?: AlertManagersResult;
    /**
     *
     * @type {string}
     * @memberof GettableAlertmanagers
     */
    status?: string;
}
/**
 * Check if a given object implements the GettableAlertmanagers interface.
 */
declare function instanceOfGettableAlertmanagers(value: object): value is GettableAlertmanagers;
declare function GettableAlertmanagersFromJSON(json: any): GettableAlertmanagers;
declare function GettableAlertmanagersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableAlertmanagers;
declare function GettableAlertmanagersToJSON(json: any): GettableAlertmanagers;
declare function GettableAlertmanagersToJSONTyped(value?: GettableAlertmanagers | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface WebexConfig
 */
interface WebexConfig {
    /**
     *
     * @type {URL}
     * @memberof WebexConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof WebexConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof WebexConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof WebexConfig
     */
    roomId?: string;
    /**
     *
     * @type {boolean}
     * @memberof WebexConfig
     */
    sendResolved?: boolean;
}
/**
 * Check if a given object implements the WebexConfig interface.
 */
declare function instanceOfWebexConfig(value: object): value is WebexConfig;
declare function WebexConfigFromJSON(json: any): WebexConfig;
declare function WebexConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebexConfig;
declare function WebexConfigToJSON(json: any): WebexConfig;
declare function WebexConfigToJSONTyped(value?: WebexConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TelegramConfig
 */
interface TelegramConfig {
    /**
     *
     * @type {URL}
     * @memberof TelegramConfig
     */
    apiUrl?: URL;
    /**
     *
     * @type {number}
     * @memberof TelegramConfig
     */
    chat?: number;
    /**
     *
     * @type {boolean}
     * @memberof TelegramConfig
     */
    disableNotifications?: boolean;
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof TelegramConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof TelegramConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof TelegramConfig
     */
    parseMode?: string;
    /**
     *
     * @type {boolean}
     * @memberof TelegramConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof TelegramConfig
     */
    token?: string;
    /**
     *
     * @type {string}
     * @memberof TelegramConfig
     */
    tokenFile?: string;
}
/**
 * Check if a given object implements the TelegramConfig interface.
 */
declare function instanceOfTelegramConfig(value: object): value is TelegramConfig;
declare function TelegramConfigFromJSON(json: any): TelegramConfig;
declare function TelegramConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelegramConfig;
declare function TelegramConfigToJSON(json: any): TelegramConfig;
declare function TelegramConfigToJSONTyped(value?: TelegramConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GettableGrafanaReceiver
 */
interface GettableGrafanaReceiver {
    /**
     *
     * @type {boolean}
     * @memberof GettableGrafanaReceiver
     */
    disableResolveMessage?: boolean;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaReceiver
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaReceiver
     */
    provenance?: string;
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof GettableGrafanaReceiver
     */
    secureFields?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {object}
     * @memberof GettableGrafanaReceiver
     */
    settings?: object;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaReceiver
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaReceiver
     */
    uid?: string;
}
/**
 * Check if a given object implements the GettableGrafanaReceiver interface.
 */
declare function instanceOfGettableGrafanaReceiver(value: object): value is GettableGrafanaReceiver;
declare function GettableGrafanaReceiverFromJSON(json: any): GettableGrafanaReceiver;
declare function GettableGrafanaReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaReceiver;
declare function GettableGrafanaReceiverToJSON(json: any): GettableGrafanaReceiver;
declare function GettableGrafanaReceiverToJSONTyped(value?: GettableGrafanaReceiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * SigV4Config is the configuration for signing remote write requests with
 * AWS's SigV4 verification process. Empty values will be retrieved using the
 * AWS default credentials chain.
 * @export
 * @interface SigV4Config
 */
interface SigV4Config {
    /**
     *
     * @type {string}
     * @memberof SigV4Config
     */
    accessKey?: string;
    /**
     *
     * @type {string}
     * @memberof SigV4Config
     */
    profile?: string;
    /**
     *
     * @type {string}
     * @memberof SigV4Config
     */
    region?: string;
    /**
     *
     * @type {string}
     * @memberof SigV4Config
     */
    roleARN?: string;
    /**
     *
     * @type {string}
     * @memberof SigV4Config
     */
    secretKey?: string;
}
/**
 * Check if a given object implements the SigV4Config interface.
 */
declare function instanceOfSigV4Config(value: object): value is SigV4Config;
declare function SigV4ConfigFromJSON(json: any): SigV4Config;
declare function SigV4ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SigV4Config;
declare function SigV4ConfigToJSON(json: any): SigV4Config;
declare function SigV4ConfigToJSONTyped(value?: SigV4Config | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SNSConfig
 */
interface SNSConfig {
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    apiUrl?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof SNSConfig
     */
    attributes?: {
        [key: string]: string;
    };
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof SNSConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    phoneNumber?: string;
    /**
     *
     * @type {boolean}
     * @memberof SNSConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {SigV4Config}
     * @memberof SNSConfig
     */
    sigv4?: SigV4Config;
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    subject?: string;
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    targetArn?: string;
    /**
     *
     * @type {string}
     * @memberof SNSConfig
     */
    topicArn?: string;
}
/**
 * Check if a given object implements the SNSConfig interface.
 */
declare function instanceOfSNSConfig(value: object): value is SNSConfig;
declare function SNSConfigFromJSON(json: any): SNSConfig;
declare function SNSConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SNSConfig;
declare function SNSConfigToJSON(json: any): SNSConfig;
declare function SNSConfigToJSONTyped(value?: SNSConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface MSTeamsConfig
 */
interface MSTeamsConfig {
    /**
     *
     * @type {HTTPClientConfig}
     * @memberof MSTeamsConfig
     */
    httpConfig?: HTTPClientConfig;
    /**
     *
     * @type {boolean}
     * @memberof MSTeamsConfig
     */
    sendResolved?: boolean;
    /**
     *
     * @type {string}
     * @memberof MSTeamsConfig
     */
    summary?: string;
    /**
     *
     * @type {string}
     * @memberof MSTeamsConfig
     */
    text?: string;
    /**
     *
     * @type {string}
     * @memberof MSTeamsConfig
     */
    title?: string;
    /**
     *
     * @type {URL}
     * @memberof MSTeamsConfig
     */
    webhookUrl?: URL;
    /**
     *
     * @type {string}
     * @memberof MSTeamsConfig
     */
    webhookUrlFile?: string;
}
/**
 * Check if a given object implements the MSTeamsConfig interface.
 */
declare function instanceOfMSTeamsConfig(value: object): value is MSTeamsConfig;
declare function MSTeamsConfigFromJSON(json: any): MSTeamsConfig;
declare function MSTeamsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): MSTeamsConfig;
declare function MSTeamsConfigToJSON(json: any): MSTeamsConfig;
declare function MSTeamsConfigToJSONTyped(value?: MSTeamsConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableApiReceiver
 */
interface GettableApiReceiver {
    /**
     *
     * @type {Array<DiscordConfig>}
     * @memberof GettableApiReceiver
     */
    discordConfigs?: Array<DiscordConfig>;
    /**
     *
     * @type {Array<EmailConfig>}
     * @memberof GettableApiReceiver
     */
    emailConfigs?: Array<EmailConfig>;
    /**
     *
     * @type {Array<GettableGrafanaReceiver>}
     * @memberof GettableApiReceiver
     */
    grafanaManagedReceiverConfigs?: Array<GettableGrafanaReceiver>;
    /**
     *
     * @type {Array<MSTeamsConfig>}
     * @memberof GettableApiReceiver
     */
    msteamsConfigs?: Array<MSTeamsConfig>;
    /**
     * A unique identifier for this receiver.
     * @type {string}
     * @memberof GettableApiReceiver
     */
    name?: string;
    /**
     *
     * @type {Array<OpsGenieConfig>}
     * @memberof GettableApiReceiver
     */
    opsgenieConfigs?: Array<OpsGenieConfig>;
    /**
     *
     * @type {Array<PagerdutyConfig>}
     * @memberof GettableApiReceiver
     */
    pagerdutyConfigs?: Array<PagerdutyConfig>;
    /**
     *
     * @type {Array<PushoverConfig>}
     * @memberof GettableApiReceiver
     */
    pushoverConfigs?: Array<PushoverConfig>;
    /**
     *
     * @type {Array<SlackConfig>}
     * @memberof GettableApiReceiver
     */
    slackConfigs?: Array<SlackConfig>;
    /**
     *
     * @type {Array<SNSConfig>}
     * @memberof GettableApiReceiver
     */
    snsConfigs?: Array<SNSConfig>;
    /**
     *
     * @type {Array<TelegramConfig>}
     * @memberof GettableApiReceiver
     */
    telegramConfigs?: Array<TelegramConfig>;
    /**
     *
     * @type {Array<VictorOpsConfig>}
     * @memberof GettableApiReceiver
     */
    victoropsConfigs?: Array<VictorOpsConfig>;
    /**
     *
     * @type {Array<WebexConfig>}
     * @memberof GettableApiReceiver
     */
    webexConfigs?: Array<WebexConfig>;
    /**
     *
     * @type {Array<WebhookConfig>}
     * @memberof GettableApiReceiver
     */
    webhookConfigs?: Array<WebhookConfig>;
    /**
     *
     * @type {Array<WechatConfig>}
     * @memberof GettableApiReceiver
     */
    wechatConfigs?: Array<WechatConfig>;
}
/**
 * Check if a given object implements the GettableApiReceiver interface.
 */
declare function instanceOfGettableApiReceiver(value: object): value is GettableApiReceiver;
declare function GettableApiReceiverFromJSON(json: any): GettableApiReceiver;
declare function GettableApiReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableApiReceiver;
declare function GettableApiReceiverToJSON(json: any): GettableApiReceiver;
declare function GettableApiReceiverToJSONTyped(value?: GettableApiReceiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableApiAlertingConfig
 */
interface GettableApiAlertingConfig {
    /**
     *
     * @type {GlobalConfig}
     * @memberof GettableApiAlertingConfig
     */
    global?: GlobalConfig;
    /**
     *
     * @type {Array<InhibitRule>}
     * @memberof GettableApiAlertingConfig
     */
    inhibitRules?: Array<InhibitRule>;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableApiAlertingConfig
     */
    muteTimeProvenances?: {
        [key: string]: string;
    };
    /**
     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.
     * @type {Array<MuteTimeInterval>}
     * @memberof GettableApiAlertingConfig
     */
    muteTimeIntervals?: Array<MuteTimeInterval>;
    /**
     * Override with our superset receiver type
     * @type {Array<GettableApiReceiver>}
     * @memberof GettableApiAlertingConfig
     */
    receivers?: Array<GettableApiReceiver>;
    /**
     *
     * @type {Route}
     * @memberof GettableApiAlertingConfig
     */
    route?: Route;
    /**
     *
     * @type {Array<string>}
     * @memberof GettableApiAlertingConfig
     */
    templates?: Array<string>;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof GettableApiAlertingConfig
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the GettableApiAlertingConfig interface.
 */
declare function instanceOfGettableApiAlertingConfig(value: object): value is GettableApiAlertingConfig;
declare function GettableApiAlertingConfigFromJSON(json: any): GettableApiAlertingConfig;
declare function GettableApiAlertingConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableApiAlertingConfig;
declare function GettableApiAlertingConfigToJSON(json: any): GettableApiAlertingConfig;
declare function GettableApiAlertingConfigToJSONTyped(value?: GettableApiAlertingConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableGrafanaRule
 */
interface GettableGrafanaRule {
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    condition?: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof GettableGrafanaRule
     */
    data?: Array<AlertQuery>;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    execErrState?: GettableGrafanaRuleExecErrStateEnum;
    /**
     *
     * @type {number}
     * @memberof GettableGrafanaRule
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof GettableGrafanaRule
     */
    intervalSeconds?: number;
    /**
     *
     * @type {boolean}
     * @memberof GettableGrafanaRule
     */
    isPaused?: boolean;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    namespaceUid?: string;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    noDataState?: GettableGrafanaRuleNoDataStateEnum;
    /**
     *
     * @type {AlertRuleNotificationSettings}
     * @memberof GettableGrafanaRule
     */
    notificationSettings?: AlertRuleNotificationSettings;
    /**
     *
     * @type {number}
     * @memberof GettableGrafanaRule
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    provenance?: string;
    /**
     *
     * @type {Record}
     * @memberof GettableGrafanaRule
     */
    record?: Record;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    ruleGroup?: string;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof GettableGrafanaRule
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof GettableGrafanaRule
     */
    updated?: Date;
    /**
     *
     * @type {number}
     * @memberof GettableGrafanaRule
     */
    version?: number;
}
/**
 * @export
 */
declare const GettableGrafanaRuleExecErrStateEnum: {
    readonly Ok: "OK";
    readonly Alerting: "Alerting";
    readonly Error: "Error";
};
type GettableGrafanaRuleExecErrStateEnum = typeof GettableGrafanaRuleExecErrStateEnum[keyof typeof GettableGrafanaRuleExecErrStateEnum];
/**
 * @export
 */
declare const GettableGrafanaRuleNoDataStateEnum: {
    readonly Alerting: "Alerting";
    readonly NoData: "NoData";
    readonly Ok: "OK";
};
type GettableGrafanaRuleNoDataStateEnum = typeof GettableGrafanaRuleNoDataStateEnum[keyof typeof GettableGrafanaRuleNoDataStateEnum];
/**
 * Check if a given object implements the GettableGrafanaRule interface.
 */
declare function instanceOfGettableGrafanaRule(value: object): value is GettableGrafanaRule;
declare function GettableGrafanaRuleFromJSON(json: any): GettableGrafanaRule;
declare function GettableGrafanaRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaRule;
declare function GettableGrafanaRuleToJSON(json: any): GettableGrafanaRule;
declare function GettableGrafanaRuleToJSONTyped(value?: GettableGrafanaRule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableExtendedRuleNode
 */
interface GettableExtendedRuleNode {
    /**
     *
     * @type {string}
     * @memberof GettableExtendedRuleNode
     */
    alert?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableExtendedRuleNode
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof GettableExtendedRuleNode
     */
    expr?: string;
    /**
     *
     * @type {string}
     * @memberof GettableExtendedRuleNode
     */
    _for?: string;
    /**
     *
     * @type {GettableGrafanaRule}
     * @memberof GettableExtendedRuleNode
     */
    grafanaAlert?: GettableGrafanaRule;
    /**
     *
     * @type {string}
     * @memberof GettableExtendedRuleNode
     */
    keepFiringFor?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableExtendedRuleNode
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof GettableExtendedRuleNode
     */
    record?: string;
}
/**
 * Check if a given object implements the GettableExtendedRuleNode interface.
 */
declare function instanceOfGettableExtendedRuleNode(value: object): value is GettableExtendedRuleNode;
declare function GettableExtendedRuleNodeFromJSON(json: any): GettableExtendedRuleNode;
declare function GettableExtendedRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableExtendedRuleNode;
declare function GettableExtendedRuleNodeToJSON(json: any): GettableExtendedRuleNode;
declare function GettableExtendedRuleNodeToJSONTyped(value?: GettableExtendedRuleNode | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableGrafanaReceivers
 */
interface GettableGrafanaReceivers {
    /**
     *
     * @type {Array<GettableGrafanaReceiver>}
     * @memberof GettableGrafanaReceivers
     */
    grafanaManagedReceiverConfigs?: Array<GettableGrafanaReceiver>;
}
/**
 * Check if a given object implements the GettableGrafanaReceivers interface.
 */
declare function instanceOfGettableGrafanaReceivers(value: object): value is GettableGrafanaReceivers;
declare function GettableGrafanaReceiversFromJSON(json: any): GettableGrafanaReceivers;
declare function GettableGrafanaReceiversFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaReceivers;
declare function GettableGrafanaReceiversToJSON(json: any): GettableGrafanaReceivers;
declare function GettableGrafanaReceiversToJSONTyped(value?: GettableGrafanaReceivers | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * SilenceStatus silence status
 * @export
 * @interface SilenceStatus
 */
interface SilenceStatus {
    /**
     * state
     * @type {string}
     * @memberof SilenceStatus
     */
    state: SilenceStatusStateEnum;
}
/**
 * @export
 */
declare const SilenceStatusStateEnum: {
    readonly ExpiredActivePending: "[expired active pending]";
};
type SilenceStatusStateEnum = typeof SilenceStatusStateEnum[keyof typeof SilenceStatusStateEnum];
/**
 * Check if a given object implements the SilenceStatus interface.
 */
declare function instanceOfSilenceStatus(value: object): value is SilenceStatus;
declare function SilenceStatusFromJSON(json: any): SilenceStatus;
declare function SilenceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): SilenceStatus;
declare function SilenceStatusToJSON(json: any): SilenceStatus;
declare function SilenceStatusToJSONTyped(value?: SilenceStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SilenceMetadata
 */
interface SilenceMetadata {
    /**
     *
     * @type {string}
     * @memberof SilenceMetadata
     */
    folderUid?: string;
    /**
     *
     * @type {string}
     * @memberof SilenceMetadata
     */
    ruleTitle?: string;
    /**
     *
     * @type {string}
     * @memberof SilenceMetadata
     */
    ruleUid?: string;
}
/**
 * Check if a given object implements the SilenceMetadata interface.
 */
declare function instanceOfSilenceMetadata(value: object): value is SilenceMetadata;
declare function SilenceMetadataFromJSON(json: any): SilenceMetadata;
declare function SilenceMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SilenceMetadata;
declare function SilenceMetadataToJSON(json: any): SilenceMetadata;
declare function SilenceMetadataToJSONTyped(value?: SilenceMetadata | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableGrafanaSilence
 */
interface GettableGrafanaSilence {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof GettableGrafanaSilence
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     * comment
     * @type {string}
     * @memberof GettableGrafanaSilence
     */
    comment: string;
    /**
     * created by
     * @type {string}
     * @memberof GettableGrafanaSilence
     */
    createdBy: string;
    /**
     * ends at
     * @type {Date}
     * @memberof GettableGrafanaSilence
     */
    endsAt: Date;
    /**
     * id
     * @type {string}
     * @memberof GettableGrafanaSilence
     */
    id: string;
    /**
     * Matchers matchers
     * @type {Array<Matcher>}
     * @memberof GettableGrafanaSilence
     */
    matchers: Array<Matcher>;
    /**
     *
     * @type {SilenceMetadata}
     * @memberof GettableGrafanaSilence
     */
    metadata?: SilenceMetadata;
    /**
     * starts at
     * @type {Date}
     * @memberof GettableGrafanaSilence
     */
    startsAt: Date;
    /**
     *
     * @type {SilenceStatus}
     * @memberof GettableGrafanaSilence
     */
    status: SilenceStatus;
    /**
     * updated at
     * @type {Date}
     * @memberof GettableGrafanaSilence
     */
    updatedAt: Date;
}
/**
 * Check if a given object implements the GettableGrafanaSilence interface.
 */
declare function instanceOfGettableGrafanaSilence(value: object): value is GettableGrafanaSilence;
declare function GettableGrafanaSilenceFromJSON(json: any): GettableGrafanaSilence;
declare function GettableGrafanaSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaSilence;
declare function GettableGrafanaSilenceToJSON(json: any): GettableGrafanaSilence;
declare function GettableGrafanaSilenceToJSONTyped(value?: GettableGrafanaSilence | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableHistoricUserConfig
 */
interface GettableHistoricUserConfig {
    /**
     *
     * @type {GettableApiAlertingConfig}
     * @memberof GettableHistoricUserConfig
     */
    alertmanagerConfig?: GettableApiAlertingConfig;
    /**
     *
     * @type {number}
     * @memberof GettableHistoricUserConfig
     */
    id?: number;
    /**
     *
     * @type {Date}
     * @memberof GettableHistoricUserConfig
     */
    lastApplied?: Date;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableHistoricUserConfig
     */
    templateFileProvenances?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableHistoricUserConfig
     */
    templateFiles?: {
        [key: string]: string;
    };
}
/**
 * Check if a given object implements the GettableHistoricUserConfig interface.
 */
declare function instanceOfGettableHistoricUserConfig(value: object): value is GettableHistoricUserConfig;
declare function GettableHistoricUserConfigFromJSON(json: any): GettableHistoricUserConfig;
declare function GettableHistoricUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableHistoricUserConfig;
declare function GettableHistoricUserConfigToJSON(json: any): GettableHistoricUserConfig;
declare function GettableHistoricUserConfigToJSONTyped(value?: GettableHistoricUserConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface GettableNGalertConfig
 */
interface GettableNGalertConfig {
    /**
     *
     * @type {string}
     * @memberof GettableNGalertConfig
     */
    alertmanagersChoice?: GettableNGalertConfigAlertmanagersChoiceEnum;
}
/**
 * @export
 */
declare const GettableNGalertConfigAlertmanagersChoiceEnum: {
    readonly All: "all";
    readonly Internal: "internal";
    readonly External: "external";
};
type GettableNGalertConfigAlertmanagersChoiceEnum = typeof GettableNGalertConfigAlertmanagersChoiceEnum[keyof typeof GettableNGalertConfigAlertmanagersChoiceEnum];
/**
 * Check if a given object implements the GettableNGalertConfig interface.
 */
declare function instanceOfGettableNGalertConfig(value: object): value is GettableNGalertConfig;
declare function GettableNGalertConfigFromJSON(json: any): GettableNGalertConfig;
declare function GettableNGalertConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableNGalertConfig;
declare function GettableNGalertConfigToJSON(json: any): GettableNGalertConfig;
declare function GettableNGalertConfigToJSONTyped(value?: GettableNGalertConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableRuleGroupConfig
 */
interface GettableRuleGroupConfig {
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof GettableRuleGroupConfig
     */
    interval?: number;
    /**
     *
     * @type {string}
     * @memberof GettableRuleGroupConfig
     */
    name?: string;
    /**
     *
     * @type {Array<GettableExtendedRuleNode>}
     * @memberof GettableRuleGroupConfig
     */
    rules?: Array<GettableExtendedRuleNode>;
    /**
     *
     * @type {Array<string>}
     * @memberof GettableRuleGroupConfig
     */
    sourceTenants?: Array<string>;
}
/**
 * Check if a given object implements the GettableRuleGroupConfig interface.
 */
declare function instanceOfGettableRuleGroupConfig(value: object): value is GettableRuleGroupConfig;
declare function GettableRuleGroupConfigFromJSON(json: any): GettableRuleGroupConfig;
declare function GettableRuleGroupConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableRuleGroupConfig;
declare function GettableRuleGroupConfigToJSON(json: any): GettableRuleGroupConfig;
declare function GettableRuleGroupConfigToJSONTyped(value?: GettableRuleGroupConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * GettableSilence gettable silence
 * @export
 * @interface GettableSilence
 */
interface GettableSilence {
    /**
     * comment
     * @type {string}
     * @memberof GettableSilence
     */
    comment: string;
    /**
     * created by
     * @type {string}
     * @memberof GettableSilence
     */
    createdBy: string;
    /**
     * ends at
     * @type {Date}
     * @memberof GettableSilence
     */
    endsAt: Date;
    /**
     * id
     * @type {string}
     * @memberof GettableSilence
     */
    id: string;
    /**
     * Matchers matchers
     * @type {Array<Matcher>}
     * @memberof GettableSilence
     */
    matchers: Array<Matcher>;
    /**
     * starts at
     * @type {Date}
     * @memberof GettableSilence
     */
    startsAt: Date;
    /**
     *
     * @type {SilenceStatus}
     * @memberof GettableSilence
     */
    status: SilenceStatus;
    /**
     * updated at
     * @type {Date}
     * @memberof GettableSilence
     */
    updatedAt: Date;
}
/**
 * Check if a given object implements the GettableSilence interface.
 */
declare function instanceOfGettableSilence(value: object): value is GettableSilence;
declare function GettableSilenceFromJSON(json: any): GettableSilence;
declare function GettableSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableSilence;
declare function GettableSilenceToJSON(json: any): GettableSilence;
declare function GettableSilenceToJSONTyped(value?: GettableSilence | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * nolint:revive
 * @export
 * @interface PostableApiReceiver
 */
interface PostableApiReceiver {
    /**
     *
     * @type {Array<DiscordConfig>}
     * @memberof PostableApiReceiver
     */
    discordConfigs?: Array<DiscordConfig>;
    /**
     *
     * @type {Array<EmailConfig>}
     * @memberof PostableApiReceiver
     */
    emailConfigs?: Array<EmailConfig>;
    /**
     *
     * @type {Array<PostableGrafanaReceiver>}
     * @memberof PostableApiReceiver
     */
    grafanaManagedReceiverConfigs?: Array<PostableGrafanaReceiver>;
    /**
     *
     * @type {Array<MSTeamsConfig>}
     * @memberof PostableApiReceiver
     */
    msteamsConfigs?: Array<MSTeamsConfig>;
    /**
     * A unique identifier for this receiver.
     * @type {string}
     * @memberof PostableApiReceiver
     */
    name?: string;
    /**
     *
     * @type {Array<OpsGenieConfig>}
     * @memberof PostableApiReceiver
     */
    opsgenieConfigs?: Array<OpsGenieConfig>;
    /**
     *
     * @type {Array<PagerdutyConfig>}
     * @memberof PostableApiReceiver
     */
    pagerdutyConfigs?: Array<PagerdutyConfig>;
    /**
     *
     * @type {Array<PushoverConfig>}
     * @memberof PostableApiReceiver
     */
    pushoverConfigs?: Array<PushoverConfig>;
    /**
     *
     * @type {Array<SlackConfig>}
     * @memberof PostableApiReceiver
     */
    slackConfigs?: Array<SlackConfig>;
    /**
     *
     * @type {Array<SNSConfig>}
     * @memberof PostableApiReceiver
     */
    snsConfigs?: Array<SNSConfig>;
    /**
     *
     * @type {Array<TelegramConfig>}
     * @memberof PostableApiReceiver
     */
    telegramConfigs?: Array<TelegramConfig>;
    /**
     *
     * @type {Array<VictorOpsConfig>}
     * @memberof PostableApiReceiver
     */
    victoropsConfigs?: Array<VictorOpsConfig>;
    /**
     *
     * @type {Array<WebexConfig>}
     * @memberof PostableApiReceiver
     */
    webexConfigs?: Array<WebexConfig>;
    /**
     *
     * @type {Array<WebhookConfig>}
     * @memberof PostableApiReceiver
     */
    webhookConfigs?: Array<WebhookConfig>;
    /**
     *
     * @type {Array<WechatConfig>}
     * @memberof PostableApiReceiver
     */
    wechatConfigs?: Array<WechatConfig>;
}
/**
 * Check if a given object implements the PostableApiReceiver interface.
 */
declare function instanceOfPostableApiReceiver(value: object): value is PostableApiReceiver;
declare function PostableApiReceiverFromJSON(json: any): PostableApiReceiver;
declare function PostableApiReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableApiReceiver;
declare function PostableApiReceiverToJSON(json: any): PostableApiReceiver;
declare function PostableApiReceiverToJSONTyped(value?: PostableApiReceiver | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * nolint:revive
 * @export
 * @interface PostableApiAlertingConfig
 */
interface PostableApiAlertingConfig {
    /**
     *
     * @type {GlobalConfig}
     * @memberof PostableApiAlertingConfig
     */
    global?: GlobalConfig;
    /**
     *
     * @type {Array<InhibitRule>}
     * @memberof PostableApiAlertingConfig
     */
    inhibitRules?: Array<InhibitRule>;
    /**
     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.
     * @type {Array<MuteTimeInterval>}
     * @memberof PostableApiAlertingConfig
     */
    muteTimeIntervals?: Array<MuteTimeInterval>;
    /**
     * Override with our superset receiver type
     * @type {Array<PostableApiReceiver>}
     * @memberof PostableApiAlertingConfig
     */
    receivers?: Array<PostableApiReceiver>;
    /**
     *
     * @type {Route}
     * @memberof PostableApiAlertingConfig
     */
    route?: Route;
    /**
     *
     * @type {Array<string>}
     * @memberof PostableApiAlertingConfig
     */
    templates?: Array<string>;
    /**
     *
     * @type {Array<TimeInterval>}
     * @memberof PostableApiAlertingConfig
     */
    timeIntervals?: Array<TimeInterval>;
}
/**
 * Check if a given object implements the PostableApiAlertingConfig interface.
 */
declare function instanceOfPostableApiAlertingConfig(value: object): value is PostableApiAlertingConfig;
declare function PostableApiAlertingConfigFromJSON(json: any): PostableApiAlertingConfig;
declare function PostableApiAlertingConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableApiAlertingConfig;
declare function PostableApiAlertingConfigToJSON(json: any): PostableApiAlertingConfig;
declare function PostableApiAlertingConfigToJSONTyped(value?: PostableApiAlertingConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableStatus
 */
interface GettableStatus {
    /**
     *
     * @type {ClusterStatus}
     * @memberof GettableStatus
     */
    cluster: ClusterStatus;
    /**
     *
     * @type {PostableApiAlertingConfig}
     * @memberof GettableStatus
     */
    config: PostableApiAlertingConfig;
    /**
     * uptime
     * @type {Date}
     * @memberof GettableStatus
     */
    uptime: Date;
    /**
     *
     * @type {VersionInfo}
     * @memberof GettableStatus
     */
    versionInfo: VersionInfo;
}
/**
 * Check if a given object implements the GettableStatus interface.
 */
declare function instanceOfGettableStatus(value: object): value is GettableStatus;
declare function GettableStatusFromJSON(json: any): GettableStatus;
declare function GettableStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableStatus;
declare function GettableStatusToJSON(json: any): GettableStatus;
declare function GettableStatusToJSONTyped(value?: GettableStatus | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TimeIntervalTimeRange
 */
interface TimeIntervalTimeRange {
    /**
     *
     * @type {string}
     * @memberof TimeIntervalTimeRange
     */
    endTime?: string;
    /**
     *
     * @type {string}
     * @memberof TimeIntervalTimeRange
     */
    startTime?: string;
}
/**
 * Check if a given object implements the TimeIntervalTimeRange interface.
 */
declare function instanceOfTimeIntervalTimeRange(value: object): value is TimeIntervalTimeRange;
declare function TimeIntervalTimeRangeFromJSON(json: any): TimeIntervalTimeRange;
declare function TimeIntervalTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeIntervalTimeRange;
declare function TimeIntervalTimeRangeToJSON(json: any): TimeIntervalTimeRange;
declare function TimeIntervalTimeRangeToJSONTyped(value?: TimeIntervalTimeRange | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TimeIntervalItem
 */
interface TimeIntervalItem {
    /**
     *
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    daysOfMonth?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof TimeIntervalItem
     */
    location?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    months?: Array<string>;
    /**
     *
     * @type {Array<TimeIntervalTimeRange>}
     * @memberof TimeIntervalItem
     */
    times?: Array<TimeIntervalTimeRange>;
    /**
     *
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    weekdays?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof TimeIntervalItem
     */
    years?: Array<string>;
}
/**
 * Check if a given object implements the TimeIntervalItem interface.
 */
declare function instanceOfTimeIntervalItem(value: object): value is TimeIntervalItem;
declare function TimeIntervalItemFromJSON(json: any): TimeIntervalItem;
declare function TimeIntervalItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeIntervalItem;
declare function TimeIntervalItemToJSON(json: any): TimeIntervalItem;
declare function TimeIntervalItemToJSONTyped(value?: TimeIntervalItem | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableTimeIntervals
 */
interface GettableTimeIntervals {
    /**
     *
     * @type {string}
     * @memberof GettableTimeIntervals
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof GettableTimeIntervals
     */
    provenance?: string;
    /**
     *
     * @type {Array<TimeIntervalItem>}
     * @memberof GettableTimeIntervals
     */
    timeIntervals?: Array<TimeIntervalItem>;
    /**
     *
     * @type {string}
     * @memberof GettableTimeIntervals
     */
    version?: string;
}
/**
 * Check if a given object implements the GettableTimeIntervals interface.
 */
declare function instanceOfGettableTimeIntervals(value: object): value is GettableTimeIntervals;
declare function GettableTimeIntervalsFromJSON(json: any): GettableTimeIntervals;
declare function GettableTimeIntervalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableTimeIntervals;
declare function GettableTimeIntervalsToJSON(json: any): GettableTimeIntervals;
declare function GettableTimeIntervalsToJSONTyped(value?: GettableTimeIntervals | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GettableUserConfig
 */
interface GettableUserConfig {
    /**
     *
     * @type {GettableApiAlertingConfig}
     * @memberof GettableUserConfig
     */
    alertmanagerConfig?: GettableApiAlertingConfig;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableUserConfig
     */
    templateFileProvenances?: {
        [key: string]: string;
    };
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GettableUserConfig
     */
    templateFiles?: {
        [key: string]: string;
    };
}
/**
 * Check if a given object implements the GettableUserConfig interface.
 */
declare function instanceOfGettableUserConfig(value: object): value is GettableUserConfig;
declare function GettableUserConfigFromJSON(json: any): GettableUserConfig;
declare function GettableUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableUserConfig;
declare function GettableUserConfigToJSON(json: any): GettableUserConfig;
declare function GettableUserConfigToJSONTyped(value?: GettableUserConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface HealthResponse
 */
interface HealthResponse {
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    commit?: string;
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    database?: string;
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    enterpriseCommit?: string;
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    version?: string;
}
/**
 * Check if a given object implements the HealthResponse interface.
 */
declare function instanceOfHealthResponse(value: object): value is HealthResponse;
declare function HealthResponseFromJSON(json: any): HealthResponse;
declare function HealthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthResponse;
declare function HealthResponseToJSON(json: any): HealthResponse;
declare function HealthResponseToJSONTyped(value?: HealthResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Hit
 */
interface Hit {
    /**
     *
     * @type {number}
     * @memberof Hit
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    folderTitle?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    folderUid?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    folderUrl?: string;
    /**
     *
     * @type {number}
     * @memberof Hit
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof Hit
     */
    isDeleted?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Hit
     */
    isStarred?: boolean;
    /**
     *
     * @type {Date}
     * @memberof Hit
     */
    permanentlyDeleteDate?: Date;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    slug?: string;
    /**
     *
     * @type {number}
     * @memberof Hit
     */
    sortMeta?: number;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    sortMetaName?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Hit
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    uid?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    uri?: string;
    /**
     *
     * @type {string}
     * @memberof Hit
     */
    url?: string;
}
/**
 * Check if a given object implements the Hit interface.
 */
declare function instanceOfHit(value: object): value is Hit;
declare function HitFromJSON(json: any): Hit;
declare function HitFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hit;
declare function HitToJSON(json: any): Hit;
declare function HitToJSONTyped(value?: Hit | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ImportDashboardInput
 */
interface ImportDashboardInput {
    /**
     *
     * @type {string}
     * @memberof ImportDashboardInput
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardInput
     */
    pluginId?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardInput
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardInput
     */
    value?: string;
}
/**
 * Check if a given object implements the ImportDashboardInput interface.
 */
declare function instanceOfImportDashboardInput(value: object): value is ImportDashboardInput;
declare function ImportDashboardInputFromJSON(json: any): ImportDashboardInput;
declare function ImportDashboardInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardInput;
declare function ImportDashboardInputToJSON(json: any): ImportDashboardInput;
declare function ImportDashboardInputToJSONTyped(value?: ImportDashboardInput | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ImportDashboardRequest
 */
interface ImportDashboardRequest {
    /**
     *
     * @type {object}
     * @memberof ImportDashboardRequest
     */
    dashboard?: object;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof ImportDashboardRequest
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardRequest
     */
    folderUid?: string;
    /**
     *
     * @type {Array<ImportDashboardInput>}
     * @memberof ImportDashboardRequest
     */
    inputs?: Array<ImportDashboardInput>;
    /**
     *
     * @type {boolean}
     * @memberof ImportDashboardRequest
     */
    overwrite?: boolean;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardRequest
     */
    path?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardRequest
     */
    pluginId?: string;
}
/**
 * Check if a given object implements the ImportDashboardRequest interface.
 */
declare function instanceOfImportDashboardRequest(value: object): value is ImportDashboardRequest;
declare function ImportDashboardRequestFromJSON(json: any): ImportDashboardRequest;
declare function ImportDashboardRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardRequest;
declare function ImportDashboardRequestToJSON(json: any): ImportDashboardRequest;
declare function ImportDashboardRequestToJSONTyped(value?: ImportDashboardRequest | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ImportDashboardResponse
 */
interface ImportDashboardResponse {
    /**
     *
     * @type {number}
     * @memberof ImportDashboardResponse
     */
    dashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    description?: string;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof ImportDashboardResponse
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    folderUid?: string;
    /**
     *
     * @type {boolean}
     * @memberof ImportDashboardResponse
     */
    imported?: boolean;
    /**
     *
     * @type {number}
     * @memberof ImportDashboardResponse
     */
    importedRevision?: number;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    importedUri?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    importedUrl?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    path?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    pluginId?: string;
    /**
     *
     * @type {boolean}
     * @memberof ImportDashboardResponse
     */
    removed?: boolean;
    /**
     *
     * @type {number}
     * @memberof ImportDashboardResponse
     */
    revision?: number;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof ImportDashboardResponse
     */
    uid?: string;
}
/**
 * Check if a given object implements the ImportDashboardResponse interface.
 */
declare function instanceOfImportDashboardResponse(value: object): value is ImportDashboardResponse;
declare function ImportDashboardResponseFromJSON(json: any): ImportDashboardResponse;
declare function ImportDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardResponse;
declare function ImportDashboardResponseToJSON(json: any): ImportDashboardResponse;
declare function ImportDashboardResponseToJSONTyped(value?: ImportDashboardResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * JSONWebKey represents a public or private key in JWK format. It can be
 * marshaled into JSON and unmarshaled from JSON.
 * @export
 * @interface JSONWebKey
 */
interface JSONWebKey {
    /**
     * Key algorithm, parsed from `alg` header.
     * @type {string}
     * @memberof JSONWebKey
     */
    algorithm?: string;
    /**
     * X.509 certificate thumbprint (SHA-1), parsed from `x5t` header.
     * @type {Array<number>}
     * @memberof JSONWebKey
     */
    certificateThumbprintSHA1?: Array<number>;
    /**
     * X.509 certificate thumbprint (SHA-256), parsed from `x5t#S256` header.
     * @type {Array<number>}
     * @memberof JSONWebKey
     */
    certificateThumbprintSHA256?: Array<number>;
    /**
     * X.509 certificate chain, parsed from `x5c` header.
     * @type {Array<Certificate>}
     * @memberof JSONWebKey
     */
    certificates?: Array<Certificate>;
    /**
     *
     * @type {URL}
     * @memberof JSONWebKey
     */
    certificatesURL?: URL;
    /**
     * Key is the Go in-memory representation of this key. It must have one
     * of these types:
     * ed25519.PublicKey
     * ed25519.PrivateKey
     * ecdsa.PublicKey
     * ecdsa.PrivateKey
     * rsa.PublicKey
     * rsa.PrivateKey
     * []byte (a symmetric key)
     *
     * When marshaling this JSONWebKey into JSON, the "kty" header parameter
     * will be automatically set based on the type of this field.
     * @type {object}
     * @memberof JSONWebKey
     */
    key?: object;
    /**
     * Key identifier, parsed from `kid` header.
     * @type {string}
     * @memberof JSONWebKey
     */
    keyID?: string;
    /**
     * Key use, parsed from `use` header.
     * @type {string}
     * @memberof JSONWebKey
     */
    use?: string;
}
/**
 * Check if a given object implements the JSONWebKey interface.
 */
declare function instanceOfJSONWebKey(value: object): value is JSONWebKey;
declare function JSONWebKeyFromJSON(json: any): JSONWebKey;
declare function JSONWebKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): JSONWebKey;
declare function JSONWebKeyToJSON(json: any): JSONWebKey;
declare function JSONWebKeyToJSONTyped(value?: JSONWebKey | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface LibraryElementDTOMetaUser
 */
interface LibraryElementDTOMetaUser {
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTOMetaUser
     */
    avatarUrl?: string;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTOMetaUser
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTOMetaUser
     */
    name?: string;
}
/**
 * Check if a given object implements the LibraryElementDTOMetaUser interface.
 */
declare function instanceOfLibraryElementDTOMetaUser(value: object): value is LibraryElementDTOMetaUser;
declare function LibraryElementDTOMetaUserFromJSON(json: any): LibraryElementDTOMetaUser;
declare function LibraryElementDTOMetaUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTOMetaUser;
declare function LibraryElementDTOMetaUserToJSON(json: any): LibraryElementDTOMetaUser;
declare function LibraryElementDTOMetaUserToJSONTyped(value?: LibraryElementDTOMetaUser | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementDTOMeta
 */
interface LibraryElementDTOMeta {
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTOMeta
     */
    connectedDashboards?: number;
    /**
     *
     * @type {Date}
     * @memberof LibraryElementDTOMeta
     */
    created?: Date;
    /**
     *
     * @type {LibraryElementDTOMetaUser}
     * @memberof LibraryElementDTOMeta
     */
    createdBy?: LibraryElementDTOMetaUser;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTOMeta
     */
    folderName?: string;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTOMeta
     */
    folderUid?: string;
    /**
     *
     * @type {Date}
     * @memberof LibraryElementDTOMeta
     */
    updated?: Date;
    /**
     *
     * @type {LibraryElementDTOMetaUser}
     * @memberof LibraryElementDTOMeta
     */
    updatedBy?: LibraryElementDTOMetaUser;
}
/**
 * Check if a given object implements the LibraryElementDTOMeta interface.
 */
declare function instanceOfLibraryElementDTOMeta(value: object): value is LibraryElementDTOMeta;
declare function LibraryElementDTOMetaFromJSON(json: any): LibraryElementDTOMeta;
declare function LibraryElementDTOMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTOMeta;
declare function LibraryElementDTOMetaToJSON(json: any): LibraryElementDTOMeta;
declare function LibraryElementDTOMetaToJSONTyped(value?: LibraryElementDTOMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementDTO
 */
interface LibraryElementDTO {
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTO
     */
    description?: string;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof LibraryElementDTO
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTO
     */
    folderUid?: string;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTO
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTO
     */
    kind?: number;
    /**
     *
     * @type {LibraryElementDTOMeta}
     * @memberof LibraryElementDTO
     */
    meta?: LibraryElementDTOMeta;
    /**
     *
     * @type {object}
     * @memberof LibraryElementDTO
     */
    model?: object;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTO
     */
    orgId?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTO
     */
    schemaVersion?: number;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTO
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof LibraryElementDTO
     */
    uid?: string;
    /**
     *
     * @type {number}
     * @memberof LibraryElementDTO
     */
    version?: number;
}
/**
 * Check if a given object implements the LibraryElementDTO interface.
 */
declare function instanceOfLibraryElementDTO(value: object): value is LibraryElementDTO;
declare function LibraryElementDTOFromJSON(json: any): LibraryElementDTO;
declare function LibraryElementDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTO;
declare function LibraryElementDTOToJSON(json: any): LibraryElementDTO;
declare function LibraryElementDTOToJSONTyped(value?: LibraryElementDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementArrayResponse
 */
interface LibraryElementArrayResponse {
    /**
     *
     * @type {Array<LibraryElementDTO>}
     * @memberof LibraryElementArrayResponse
     */
    result?: Array<LibraryElementDTO>;
}
/**
 * Check if a given object implements the LibraryElementArrayResponse interface.
 */
declare function instanceOfLibraryElementArrayResponse(value: object): value is LibraryElementArrayResponse;
declare function LibraryElementArrayResponseFromJSON(json: any): LibraryElementArrayResponse;
declare function LibraryElementArrayResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementArrayResponse;
declare function LibraryElementArrayResponseToJSON(json: any): LibraryElementArrayResponse;
declare function LibraryElementArrayResponseToJSONTyped(value?: LibraryElementArrayResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementConnectionDTO
 */
interface LibraryElementConnectionDTO {
    /**
     *
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    connectionId?: number;
    /**
     *
     * @type {string}
     * @memberof LibraryElementConnectionDTO
     */
    connectionUid?: string;
    /**
     *
     * @type {Date}
     * @memberof LibraryElementConnectionDTO
     */
    created?: Date;
    /**
     *
     * @type {LibraryElementDTOMetaUser}
     * @memberof LibraryElementConnectionDTO
     */
    createdBy?: LibraryElementDTOMetaUser;
    /**
     *
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    elementId?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementConnectionDTO
     */
    kind?: number;
}
/**
 * Check if a given object implements the LibraryElementConnectionDTO interface.
 */
declare function instanceOfLibraryElementConnectionDTO(value: object): value is LibraryElementConnectionDTO;
declare function LibraryElementConnectionDTOFromJSON(json: any): LibraryElementConnectionDTO;
declare function LibraryElementConnectionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionDTO;
declare function LibraryElementConnectionDTOToJSON(json: any): LibraryElementConnectionDTO;
declare function LibraryElementConnectionDTOToJSONTyped(value?: LibraryElementConnectionDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementConnectionsResponse
 */
interface LibraryElementConnectionsResponse {
    /**
     *
     * @type {Array<LibraryElementConnectionDTO>}
     * @memberof LibraryElementConnectionsResponse
     */
    result?: Array<LibraryElementConnectionDTO>;
}
/**
 * Check if a given object implements the LibraryElementConnectionsResponse interface.
 */
declare function instanceOfLibraryElementConnectionsResponse(value: object): value is LibraryElementConnectionsResponse;
declare function LibraryElementConnectionsResponseFromJSON(json: any): LibraryElementConnectionsResponse;
declare function LibraryElementConnectionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionsResponse;
declare function LibraryElementConnectionsResponseToJSON(json: any): LibraryElementConnectionsResponse;
declare function LibraryElementConnectionsResponseToJSONTyped(value?: LibraryElementConnectionsResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementResponse
 */
interface LibraryElementResponse {
    /**
     *
     * @type {LibraryElementDTO}
     * @memberof LibraryElementResponse
     */
    result?: LibraryElementDTO;
}
/**
 * Check if a given object implements the LibraryElementResponse interface.
 */
declare function instanceOfLibraryElementResponse(value: object): value is LibraryElementResponse;
declare function LibraryElementResponseFromJSON(json: any): LibraryElementResponse;
declare function LibraryElementResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementResponse;
declare function LibraryElementResponseToJSON(json: any): LibraryElementResponse;
declare function LibraryElementResponseToJSONTyped(value?: LibraryElementResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementSearchResult
 */
interface LibraryElementSearchResult {
    /**
     *
     * @type {Array<LibraryElementDTO>}
     * @memberof LibraryElementSearchResult
     */
    elements?: Array<LibraryElementDTO>;
    /**
     *
     * @type {number}
     * @memberof LibraryElementSearchResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementSearchResult
     */
    perPage?: number;
    /**
     *
     * @type {number}
     * @memberof LibraryElementSearchResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the LibraryElementSearchResult interface.
 */
declare function instanceOfLibraryElementSearchResult(value: object): value is LibraryElementSearchResult;
declare function LibraryElementSearchResultFromJSON(json: any): LibraryElementSearchResult;
declare function LibraryElementSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementSearchResult;
declare function LibraryElementSearchResultToJSON(json: any): LibraryElementSearchResult;
declare function LibraryElementSearchResultToJSONTyped(value?: LibraryElementSearchResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface LibraryElementSearchResponse
 */
interface LibraryElementSearchResponse {
    /**
     *
     * @type {LibraryElementSearchResult}
     * @memberof LibraryElementSearchResponse
     */
    result?: LibraryElementSearchResult;
}
/**
 * Check if a given object implements the LibraryElementSearchResponse interface.
 */
declare function instanceOfLibraryElementSearchResponse(value: object): value is LibraryElementSearchResponse;
declare function LibraryElementSearchResponseFromJSON(json: any): LibraryElementSearchResponse;
declare function LibraryElementSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementSearchResponse;
declare function LibraryElementSearchResponseToJSON(json: any): LibraryElementSearchResponse;
declare function LibraryElementSearchResponseToJSONTyped(value?: LibraryElementSearchResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ListAllProvidersSettings200ResponseInner
 */
interface ListAllProvidersSettings200ResponseInner {
    /**
     *
     * @type {string}
     * @memberof ListAllProvidersSettings200ResponseInner
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ListAllProvidersSettings200ResponseInner
     */
    provider?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ListAllProvidersSettings200ResponseInner
     */
    settings?: {
        [key: string]: object;
    };
    /**
     *
     * @type {string}
     * @memberof ListAllProvidersSettings200ResponseInner
     */
    source?: string;
}
/**
 * Check if a given object implements the ListAllProvidersSettings200ResponseInner interface.
 */
declare function instanceOfListAllProvidersSettings200ResponseInner(value: object): value is ListAllProvidersSettings200ResponseInner;
declare function ListAllProvidersSettings200ResponseInnerFromJSON(json: any): ListAllProvidersSettings200ResponseInner;
declare function ListAllProvidersSettings200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListAllProvidersSettings200ResponseInner;
declare function ListAllProvidersSettings200ResponseInnerToJSON(json: any): ListAllProvidersSettings200ResponseInner;
declare function ListAllProvidersSettings200ResponseInnerToJSONTyped(value?: ListAllProvidersSettings200ResponseInner | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ListSortOptions200Response
 */
interface ListSortOptions200Response {
    /**
     *
     * @type {string}
     * @memberof ListSortOptions200Response
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ListSortOptions200Response
     */
    displayName?: string;
    /**
     *
     * @type {string}
     * @memberof ListSortOptions200Response
     */
    meta?: string;
    /**
     *
     * @type {string}
     * @memberof ListSortOptions200Response
     */
    name?: string;
}
/**
 * Check if a given object implements the ListSortOptions200Response interface.
 */
declare function instanceOfListSortOptions200Response(value: object): value is ListSortOptions200Response;
declare function ListSortOptions200ResponseFromJSON(json: any): ListSortOptions200Response;
declare function ListSortOptions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListSortOptions200Response;
declare function ListSortOptions200ResponseToJSON(json: any): ListSortOptions200Response;
declare function ListSortOptions200ResponseToJSONTyped(value?: ListSortOptions200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MassDeleteAnnotationsCmd
 */
interface MassDeleteAnnotationsCmd {
    /**
     *
     * @type {number}
     * @memberof MassDeleteAnnotationsCmd
     */
    annotationId?: number;
    /**
     *
     * @type {number}
     * @memberof MassDeleteAnnotationsCmd
     */
    dashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof MassDeleteAnnotationsCmd
     */
    dashboardUID?: string;
    /**
     *
     * @type {number}
     * @memberof MassDeleteAnnotationsCmd
     */
    panelId?: number;
}
/**
 * Check if a given object implements the MassDeleteAnnotationsCmd interface.
 */
declare function instanceOfMassDeleteAnnotationsCmd(value: object): value is MassDeleteAnnotationsCmd;
declare function MassDeleteAnnotationsCmdFromJSON(json: any): MassDeleteAnnotationsCmd;
declare function MassDeleteAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): MassDeleteAnnotationsCmd;
declare function MassDeleteAnnotationsCmdToJSON(json: any): MassDeleteAnnotationsCmd;
declare function MassDeleteAnnotationsCmdToJSONTyped(value?: MassDeleteAnnotationsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MetricRequest
 */
interface MetricRequest {
    /**
     *
     * @type {boolean}
     * @memberof MetricRequest
     */
    debug?: boolean;
    /**
     * From Start time in epoch timestamps in milliseconds or relative using Grafana time units.
     * @type {string}
     * @memberof MetricRequest
     */
    from: string;
    /**
     * queries.refId – Specifies an identifier of the query. Is optional and default to “A”.
     * queries.datasourceId – Specifies the data source to be queried. Each query in the request must have an unique datasourceId.
     * queries.maxDataPoints - Species maximum amount of data points that dashboard panel can render. Is optional and default to 100.
     * queries.intervalMs - Specifies the time interval in milliseconds of time series. Is optional and defaults to 1000.
     * @type {Array<object>}
     * @memberof MetricRequest
     */
    queries: Array<object>;
    /**
     * To End time in epoch timestamps in milliseconds or relative using Grafana time units.
     * @type {string}
     * @memberof MetricRequest
     */
    to: string;
}
/**
 * Check if a given object implements the MetricRequest interface.
 */
declare function instanceOfMetricRequest(value: object): value is MetricRequest;
declare function MetricRequestFromJSON(json: any): MetricRequest;
declare function MetricRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricRequest;
declare function MetricRequestToJSON(json: any): MetricRequest;
declare function MetricRequestToJSONTyped(value?: MetricRequest | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface MigrateDataResponseDTO
 */
interface MigrateDataResponseDTO {
    /**
     *
     * @type {Array<MigrateDataResponseItemDTO>}
     * @memberof MigrateDataResponseDTO
     */
    items?: Array<MigrateDataResponseItemDTO>;
    /**
     *
     * @type {string}
     * @memberof MigrateDataResponseDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the MigrateDataResponseDTO interface.
 */
declare function instanceOfMigrateDataResponseDTO(value: object): value is MigrateDataResponseDTO;
declare function MigrateDataResponseDTOFromJSON(json: any): MigrateDataResponseDTO;
declare function MigrateDataResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseDTO;
declare function MigrateDataResponseDTOToJSON(json: any): MigrateDataResponseDTO;
declare function MigrateDataResponseDTOToJSONTyped(value?: MigrateDataResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * MoveFolderCommand captures the information required by the folder service
 * to move a folder.
 * @export
 * @interface MoveFolderCommand
 */
interface MoveFolderCommand {
    /**
     *
     * @type {string}
     * @memberof MoveFolderCommand
     */
    parentUid?: string;
}
/**
 * Check if a given object implements the MoveFolderCommand interface.
 */
declare function instanceOfMoveFolderCommand(value: object): value is MoveFolderCommand;
declare function MoveFolderCommandFromJSON(json: any): MoveFolderCommand;
declare function MoveFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoveFolderCommand;
declare function MoveFolderCommandToJSON(json: any): MoveFolderCommand;
declare function MoveFolderCommandToJSONTyped(value?: MoveFolderCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface NavbarPreference
 */
interface NavbarPreference {
    /**
     *
     * @type {Array<string>}
     * @memberof NavbarPreference
     */
    bookmarkUrls?: Array<string>;
}
/**
 * Check if a given object implements the NavbarPreference interface.
 */
declare function instanceOfNavbarPreference(value: object): value is NavbarPreference;
declare function NavbarPreferenceFromJSON(json: any): NavbarPreference;
declare function NavbarPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NavbarPreference;
declare function NavbarPreferenceToJSON(json: any): NavbarPreference;
declare function NavbarPreferenceToJSONTyped(value?: NavbarPreference | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface NewApiKeyResult
 */
interface NewApiKeyResult {
    /**
     *
     * @type {number}
     * @memberof NewApiKeyResult
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof NewApiKeyResult
     */
    key?: string;
    /**
     *
     * @type {string}
     * @memberof NewApiKeyResult
     */
    name?: string;
}
/**
 * Check if a given object implements the NewApiKeyResult interface.
 */
declare function instanceOfNewApiKeyResult(value: object): value is NewApiKeyResult;
declare function NewApiKeyResultFromJSON(json: any): NewApiKeyResult;
declare function NewApiKeyResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewApiKeyResult;
declare function NewApiKeyResultToJSON(json: any): NewApiKeyResult;
declare function NewApiKeyResultToJSONTyped(value?: NewApiKeyResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface NotificationTemplate
 */
interface NotificationTemplate {
    /**
     *
     * @type {string}
     * @memberof NotificationTemplate
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationTemplate
     */
    provenance?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationTemplate
     */
    template?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationTemplate
     */
    version?: string;
}
/**
 * Check if a given object implements the NotificationTemplate interface.
 */
declare function instanceOfNotificationTemplate(value: object): value is NotificationTemplate;
declare function NotificationTemplateFromJSON(json: any): NotificationTemplate;
declare function NotificationTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTemplate;
declare function NotificationTemplateToJSON(json: any): NotificationTemplate;
declare function NotificationTemplateToJSONTyped(value?: NotificationTemplate | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface NotificationTemplateContent
 */
interface NotificationTemplateContent {
    /**
     *
     * @type {string}
     * @memberof NotificationTemplateContent
     */
    template?: string;
    /**
     *
     * @type {string}
     * @memberof NotificationTemplateContent
     */
    version?: string;
}
/**
 * Check if a given object implements the NotificationTemplateContent interface.
 */
declare function instanceOfNotificationTemplateContent(value: object): value is NotificationTemplateContent;
declare function NotificationTemplateContentFromJSON(json: any): NotificationTemplateContent;
declare function NotificationTemplateContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTemplateContent;
declare function NotificationTemplateContentToJSON(json: any): NotificationTemplateContent;
declare function NotificationTemplateContentToJSONTyped(value?: NotificationTemplateContent | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface NotifierConfig
 */
interface NotifierConfig {
    /**
     *
     * @type {boolean}
     * @memberof NotifierConfig
     */
    sendResolved?: boolean;
}
/**
 * Check if a given object implements the NotifierConfig interface.
 */
declare function instanceOfNotifierConfig(value: object): value is NotifierConfig;
declare function NotifierConfigFromJSON(json: any): NotifierConfig;
declare function NotifierConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotifierConfig;
declare function NotifierConfigToJSON(json: any): NotifierConfig;
declare function NotifierConfigToJSONTyped(value?: NotifierConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface OrgDTO
 */
interface OrgDTO {
    /**
     *
     * @type {number}
     * @memberof OrgDTO
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof OrgDTO
     */
    name?: string;
}
/**
 * Check if a given object implements the OrgDTO interface.
 */
declare function instanceOfOrgDTO(value: object): value is OrgDTO;
declare function OrgDTOFromJSON(json: any): OrgDTO;
declare function OrgDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgDTO;
declare function OrgDTOToJSON(json: any): OrgDTO;
declare function OrgDTOToJSONTyped(value?: OrgDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface OrgDetailsDTO
 */
interface OrgDetailsDTO {
    /**
     *
     * @type {Address}
     * @memberof OrgDetailsDTO
     */
    address?: Address;
    /**
     *
     * @type {number}
     * @memberof OrgDetailsDTO
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof OrgDetailsDTO
     */
    name?: string;
}
/**
 * Check if a given object implements the OrgDetailsDTO interface.
 */
declare function instanceOfOrgDetailsDTO(value: object): value is OrgDetailsDTO;
declare function OrgDetailsDTOFromJSON(json: any): OrgDetailsDTO;
declare function OrgDetailsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgDetailsDTO;
declare function OrgDetailsDTOToJSON(json: any): OrgDetailsDTO;
declare function OrgDetailsDTOToJSONTyped(value?: OrgDetailsDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface OrgUserDTO
 */
interface OrgUserDTO {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof OrgUserDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof OrgUserDTO
     */
    authLabels?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    email?: string;
    /**
     *
     * @type {boolean}
     * @memberof OrgUserDTO
     */
    isDisabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof OrgUserDTO
     */
    isExternallySynced?: boolean;
    /**
     *
     * @type {Date}
     * @memberof OrgUserDTO
     */
    lastSeenAt?: Date;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    lastSeenAtAge?: string;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof OrgUserDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof OrgUserDTO
     */
    role?: string;
    /**
     *
     * @type {number}
     * @memberof OrgUserDTO
     */
    userId?: number;
}
/**
 * Check if a given object implements the OrgUserDTO interface.
 */
declare function instanceOfOrgUserDTO(value: object): value is OrgUserDTO;
declare function OrgUserDTOFromJSON(json: any): OrgUserDTO;
declare function OrgUserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgUserDTO;
declare function OrgUserDTOToJSON(json: any): OrgUserDTO;
declare function OrgUserDTOToJSONTyped(value?: OrgUserDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PatchAnnotationsCmd
 */
interface PatchAnnotationsCmd {
    /**
     *
     * @type {object}
     * @memberof PatchAnnotationsCmd
     */
    data?: object;
    /**
     *
     * @type {number}
     * @memberof PatchAnnotationsCmd
     */
    id?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchAnnotationsCmd
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PatchAnnotationsCmd
     */
    text?: string;
    /**
     *
     * @type {number}
     * @memberof PatchAnnotationsCmd
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof PatchAnnotationsCmd
     */
    timeEnd?: number;
}
/**
 * Check if a given object implements the PatchAnnotationsCmd interface.
 */
declare function instanceOfPatchAnnotationsCmd(value: object): value is PatchAnnotationsCmd;
declare function PatchAnnotationsCmdFromJSON(json: any): PatchAnnotationsCmd;
declare function PatchAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchAnnotationsCmd;
declare function PatchAnnotationsCmdToJSON(json: any): PatchAnnotationsCmd;
declare function PatchAnnotationsCmdToJSONTyped(value?: PatchAnnotationsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * PatchLibraryElementCommand is the command for patching a LibraryElement
 * @export
 * @interface PatchLibraryElementCommand
 */
interface PatchLibraryElementCommand {
    /**
     * ID of the folder where the library element is stored.
     *
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof PatchLibraryElementCommand
     */
    folderId?: number;
    /**
     * UID of the folder where the library element is stored.
     * @type {string}
     * @memberof PatchLibraryElementCommand
     */
    folderUid?: string;
    /**
     * Kind of element to create, Use 1 for library panels or 2 for c.
     * Description:
     * 1 - library panels
     * 2 - library variables
     * @type {number}
     * @memberof PatchLibraryElementCommand
     */
    kind?: PatchLibraryElementCommandKindEnum;
    /**
     * The JSON model for the library element.
     * @type {object}
     * @memberof PatchLibraryElementCommand
     */
    model?: object;
    /**
     * Name of the library element.
     * @type {string}
     * @memberof PatchLibraryElementCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PatchLibraryElementCommand
     */
    uid?: string;
    /**
     * Version of the library element you are updating.
     * @type {number}
     * @memberof PatchLibraryElementCommand
     */
    version?: number;
}
/**
 * @export
 */
declare const PatchLibraryElementCommandKindEnum: {
    readonly NUMBER_1: 1;
    readonly NUMBER_2: 2;
};
type PatchLibraryElementCommandKindEnum = typeof PatchLibraryElementCommandKindEnum[keyof typeof PatchLibraryElementCommandKindEnum];
/**
 * Check if a given object implements the PatchLibraryElementCommand interface.
 */
declare function instanceOfPatchLibraryElementCommand(value: object): value is PatchLibraryElementCommand;
declare function PatchLibraryElementCommandFromJSON(json: any): PatchLibraryElementCommand;
declare function PatchLibraryElementCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchLibraryElementCommand;
declare function PatchLibraryElementCommandToJSON(json: any): PatchLibraryElementCommand;
declare function PatchLibraryElementCommandToJSONTyped(value?: PatchLibraryElementCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface QueryHistoryPreference
 */
interface QueryHistoryPreference {
    /**
     * HomeTab one of: '' | 'query' | 'starred';
     * @type {string}
     * @memberof QueryHistoryPreference
     */
    homeTab?: string;
}
/**
 * Check if a given object implements the QueryHistoryPreference interface.
 */
declare function instanceOfQueryHistoryPreference(value: object): value is QueryHistoryPreference;
declare function QueryHistoryPreferenceFromJSON(json: any): QueryHistoryPreference;
declare function QueryHistoryPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryPreference;
declare function QueryHistoryPreferenceToJSON(json: any): QueryHistoryPreference;
declare function QueryHistoryPreferenceToJSONTyped(value?: QueryHistoryPreference | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PatchPrefsCmd
 */
interface PatchPrefsCmd {
    /**
     *
     * @type {Array<string>}
     * @memberof PatchPrefsCmd
     */
    cookies?: Array<string>;
    /**
     * The numerical :id of a favorited dashboard
     * @type {number}
     * @memberof PatchPrefsCmd
     */
    homeDashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof PatchPrefsCmd
     */
    homeDashboardUID?: string;
    /**
     *
     * @type {string}
     * @memberof PatchPrefsCmd
     */
    language?: string;
    /**
     *
     * @type {NavbarPreference}
     * @memberof PatchPrefsCmd
     */
    navbar?: NavbarPreference;
    /**
     *
     * @type {QueryHistoryPreference}
     * @memberof PatchPrefsCmd
     */
    queryHistory?: QueryHistoryPreference;
    /**
     *
     * @type {string}
     * @memberof PatchPrefsCmd
     */
    theme?: PatchPrefsCmdThemeEnum;
    /**
     *
     * @type {string}
     * @memberof PatchPrefsCmd
     */
    timezone?: PatchPrefsCmdTimezoneEnum;
    /**
     *
     * @type {string}
     * @memberof PatchPrefsCmd
     */
    weekStart?: string;
}
/**
 * @export
 */
declare const PatchPrefsCmdThemeEnum: {
    readonly Light: "light";
    readonly Dark: "dark";
};
type PatchPrefsCmdThemeEnum = typeof PatchPrefsCmdThemeEnum[keyof typeof PatchPrefsCmdThemeEnum];
/**
 * @export
 */
declare const PatchPrefsCmdTimezoneEnum: {
    readonly Utc: "utc";
    readonly Browser: "browser";
};
type PatchPrefsCmdTimezoneEnum = typeof PatchPrefsCmdTimezoneEnum[keyof typeof PatchPrefsCmdTimezoneEnum];
/**
 * Check if a given object implements the PatchPrefsCmd interface.
 */
declare function instanceOfPatchPrefsCmd(value: object): value is PatchPrefsCmd;
declare function PatchPrefsCmdFromJSON(json: any): PatchPrefsCmd;
declare function PatchPrefsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchPrefsCmd;
declare function PatchPrefsCmdToJSON(json: any): PatchPrefsCmd;
declare function PatchPrefsCmdToJSONTyped(value?: PatchPrefsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * PatchQueryCommentInQueryHistoryCommand is the command for updating comment for query in query history
 * @export
 * @interface PatchQueryCommentInQueryHistoryCommand
 */
interface PatchQueryCommentInQueryHistoryCommand {
    /**
     * Updated comment
     * @type {string}
     * @memberof PatchQueryCommentInQueryHistoryCommand
     */
    comment?: string;
}
/**
 * Check if a given object implements the PatchQueryCommentInQueryHistoryCommand interface.
 */
declare function instanceOfPatchQueryCommentInQueryHistoryCommand(value: object): value is PatchQueryCommentInQueryHistoryCommand;
declare function PatchQueryCommentInQueryHistoryCommandFromJSON(json: any): PatchQueryCommentInQueryHistoryCommand;
declare function PatchQueryCommentInQueryHistoryCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchQueryCommentInQueryHistoryCommand;
declare function PatchQueryCommentInQueryHistoryCommandToJSON(json: any): PatchQueryCommentInQueryHistoryCommand;
declare function PatchQueryCommentInQueryHistoryCommandToJSONTyped(value?: PatchQueryCommentInQueryHistoryCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Playlist model
 * @export
 * @interface Playlist
 */
interface Playlist {
    /**
     *
     * @type {number}
     * @memberof Playlist
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof Playlist
     */
    interval?: string;
    /**
     *
     * @type {string}
     * @memberof Playlist
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Playlist
     */
    uid?: string;
}
/**
 * Check if a given object implements the Playlist interface.
 */
declare function instanceOfPlaylist(value: object): value is Playlist;
declare function PlaylistFromJSON(json: any): Playlist;
declare function PlaylistFromJSONTyped(json: any, ignoreDiscriminator: boolean): Playlist;
declare function PlaylistToJSON(json: any): Playlist;
declare function PlaylistToJSONTyped(value?: Playlist | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PlaylistItemDTO
 */
interface PlaylistItemDTO {
    /**
     * Title is an unused property -- it will be removed in the future
     * @type {string}
     * @memberof PlaylistItemDTO
     */
    title?: string;
    /**
     * Type of the item.
     * @type {string}
     * @memberof PlaylistItemDTO
     */
    type?: string;
    /**
     * Value depends on type and describes the playlist item.
     *
     * dashboard_by_id: The value is an internal numerical identifier set by Grafana. This
     * is not portable as the numerical identifier is non-deterministic between different instances.
     * Will be replaced by dashboard_by_uid in the future. (deprecated)
     * dashboard_by_tag: The value is a tag which is set on any number of dashboards. All
     * dashboards behind the tag will be added to the playlist.
     * dashboard_by_uid: The value is the dashboard UID
     * @type {string}
     * @memberof PlaylistItemDTO
     */
    value?: string;
}
/**
 * Check if a given object implements the PlaylistItemDTO interface.
 */
declare function instanceOfPlaylistItemDTO(value: object): value is PlaylistItemDTO;
declare function PlaylistItemDTOFromJSON(json: any): PlaylistItemDTO;
declare function PlaylistItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistItemDTO;
declare function PlaylistItemDTOToJSON(json: any): PlaylistItemDTO;
declare function PlaylistItemDTOToJSONTyped(value?: PlaylistItemDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PlaylistDTO
 */
interface PlaylistDTO {
    /**
     * Interval sets the time between switching views in a playlist.
     * @type {string}
     * @memberof PlaylistDTO
     */
    interval?: string;
    /**
     * The ordered list of items that the playlist will iterate over.
     * @type {Array<PlaylistItemDTO>}
     * @memberof PlaylistDTO
     */
    items?: Array<PlaylistItemDTO>;
    /**
     * Name of the playlist.
     * @type {string}
     * @memberof PlaylistDTO
     */
    name?: string;
    /**
     * Unique playlist identifier. Generated on creation, either by the
     * creator of the playlist of by the application.
     * @type {string}
     * @memberof PlaylistDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the PlaylistDTO interface.
 */
declare function instanceOfPlaylistDTO(value: object): value is PlaylistDTO;
declare function PlaylistDTOFromJSON(json: any): PlaylistDTO;
declare function PlaylistDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDTO;
declare function PlaylistDTOToJSON(json: any): PlaylistDTO;
declare function PlaylistDTOToJSONTyped(value?: PlaylistDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PlaylistDashboard
 */
interface PlaylistDashboard {
    /**
     *
     * @type {number}
     * @memberof PlaylistDashboard
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof PlaylistDashboard
     */
    order?: number;
    /**
     *
     * @type {string}
     * @memberof PlaylistDashboard
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistDashboard
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistDashboard
     */
    uri?: string;
    /**
     *
     * @type {string}
     * @memberof PlaylistDashboard
     */
    url?: string;
}
/**
 * Check if a given object implements the PlaylistDashboard interface.
 */
declare function instanceOfPlaylistDashboard(value: object): value is PlaylistDashboard;
declare function PlaylistDashboardFromJSON(json: any): PlaylistDashboard;
declare function PlaylistDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDashboard;
declare function PlaylistDashboardToJSON(json: any): PlaylistDashboard;
declare function PlaylistDashboardToJSONTyped(value?: PlaylistDashboard | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostAnnotation200Response
 */
interface PostAnnotation200Response {
    /**
     * ID Identifier of the created annotation.
     * @type {number}
     * @memberof PostAnnotation200Response
     */
    id: number;
    /**
     * Message Message of the created annotation.
     * @type {string}
     * @memberof PostAnnotation200Response
     */
    message: string;
}
/**
 * Check if a given object implements the PostAnnotation200Response interface.
 */
declare function instanceOfPostAnnotation200Response(value: object): value is PostAnnotation200Response;
declare function PostAnnotation200ResponseFromJSON(json: any): PostAnnotation200Response;
declare function PostAnnotation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAnnotation200Response;
declare function PostAnnotation200ResponseToJSON(json: any): PostAnnotation200Response;
declare function PostAnnotation200ResponseToJSONTyped(value?: PostAnnotation200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostAnnotationsCmd
 */
interface PostAnnotationsCmd {
    /**
     *
     * @type {number}
     * @memberof PostAnnotationsCmd
     */
    dashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof PostAnnotationsCmd
     */
    dashboardUID?: string;
    /**
     *
     * @type {object}
     * @memberof PostAnnotationsCmd
     */
    data?: object;
    /**
     *
     * @type {number}
     * @memberof PostAnnotationsCmd
     */
    panelId?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof PostAnnotationsCmd
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof PostAnnotationsCmd
     */
    text: string;
    /**
     *
     * @type {number}
     * @memberof PostAnnotationsCmd
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof PostAnnotationsCmd
     */
    timeEnd?: number;
}
/**
 * Check if a given object implements the PostAnnotationsCmd interface.
 */
declare function instanceOfPostAnnotationsCmd(value: object): value is PostAnnotationsCmd;
declare function PostAnnotationsCmdFromJSON(json: any): PostAnnotationsCmd;
declare function PostAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAnnotationsCmd;
declare function PostAnnotationsCmdToJSON(json: any): PostAnnotationsCmd;
declare function PostAnnotationsCmdToJSONTyped(value?: PostAnnotationsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostDashboard200Response
 */
interface PostDashboard200Response {
    /**
     * FolderUID The unique identifier (uid) of the folder the dashboard belongs to.
     * @type {string}
     * @memberof PostDashboard200Response
     */
    folderUid?: string;
    /**
     * ID The unique identifier (id) of the created/updated dashboard.
     * @type {number}
     * @memberof PostDashboard200Response
     */
    id: number;
    /**
     * Status status of the response.
     * @type {string}
     * @memberof PostDashboard200Response
     */
    status: string;
    /**
     * Slug The slug of the dashboard.
     * @type {string}
     * @memberof PostDashboard200Response
     */
    title: string;
    /**
     * UID The unique identifier (uid) of the created/updated dashboard.
     * @type {string}
     * @memberof PostDashboard200Response
     */
    uid: string;
    /**
     * URL The relative URL for accessing the created/updated dashboard.
     * @type {string}
     * @memberof PostDashboard200Response
     */
    url: string;
    /**
     * Version The version of the dashboard.
     * @type {number}
     * @memberof PostDashboard200Response
     */
    version: number;
}
/**
 * Check if a given object implements the PostDashboard200Response interface.
 */
declare function instanceOfPostDashboard200Response(value: object): value is PostDashboard200Response;
declare function PostDashboard200ResponseFromJSON(json: any): PostDashboard200Response;
declare function PostDashboard200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDashboard200Response;
declare function PostDashboard200ResponseToJSON(json: any): PostDashboard200Response;
declare function PostDashboard200ResponseToJSONTyped(value?: PostDashboard200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostGraphiteAnnotationsCmd
 */
interface PostGraphiteAnnotationsCmd {
    /**
     *
     * @type {string}
     * @memberof PostGraphiteAnnotationsCmd
     */
    data?: string;
    /**
     *
     * @type {object}
     * @memberof PostGraphiteAnnotationsCmd
     */
    tags?: object;
    /**
     *
     * @type {string}
     * @memberof PostGraphiteAnnotationsCmd
     */
    what?: string;
    /**
     *
     * @type {number}
     * @memberof PostGraphiteAnnotationsCmd
     */
    when?: number;
}
/**
 * Check if a given object implements the PostGraphiteAnnotationsCmd interface.
 */
declare function instanceOfPostGraphiteAnnotationsCmd(value: object): value is PostGraphiteAnnotationsCmd;
declare function PostGraphiteAnnotationsCmdFromJSON(json: any): PostGraphiteAnnotationsCmd;
declare function PostGraphiteAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostGraphiteAnnotationsCmd;
declare function PostGraphiteAnnotationsCmdToJSON(json: any): PostGraphiteAnnotationsCmd;
declare function PostGraphiteAnnotationsCmdToJSONTyped(value?: PostGraphiteAnnotationsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostSilencesOKBody
 */
interface PostSilencesOKBody {
    /**
     * silence ID
     * @type {string}
     * @memberof PostSilencesOKBody
     */
    silenceID?: string;
}
/**
 * Check if a given object implements the PostSilencesOKBody interface.
 */
declare function instanceOfPostSilencesOKBody(value: object): value is PostSilencesOKBody;
declare function PostSilencesOKBodyFromJSON(json: any): PostSilencesOKBody;
declare function PostSilencesOKBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostSilencesOKBody;
declare function PostSilencesOKBodyToJSON(json: any): PostSilencesOKBody;
declare function PostSilencesOKBodyToJSONTyped(value?: PostSilencesOKBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * PostableAlert postable alert
 * @export
 * @interface PostableAlert
 */
interface PostableAlert {
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof PostableAlert
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     * ends at
     * Format: date-time
     * @type {Date}
     * @memberof PostableAlert
     */
    endsAt?: Date;
    /**
     * generator URL
     * Format: uri
     * @type {string}
     * @memberof PostableAlert
     */
    generatorURL?: string;
    /**
     * LabelSet label set
     * @type {{ [key: string]: string; }}
     * @memberof PostableAlert
     */
    labels: {
        [key: string]: string;
    };
    /**
     * starts at
     * Format: date-time
     * @type {Date}
     * @memberof PostableAlert
     */
    startsAt?: Date;
}
/**
 * Check if a given object implements the PostableAlert interface.
 */
declare function instanceOfPostableAlert(value: object): value is PostableAlert;
declare function PostableAlertFromJSON(json: any): PostableAlert;
declare function PostableAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableAlert;
declare function PostableAlertToJSON(json: any): PostableAlert;
declare function PostableAlertToJSONTyped(value?: PostableAlert | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableGrafanaRule
 */
interface PostableGrafanaRule {
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaRule
     */
    condition?: string;
    /**
     *
     * @type {Array<AlertQuery>}
     * @memberof PostableGrafanaRule
     */
    data?: Array<AlertQuery>;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaRule
     */
    execErrState?: PostableGrafanaRuleExecErrStateEnum;
    /**
     *
     * @type {boolean}
     * @memberof PostableGrafanaRule
     */
    isPaused?: boolean;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaRule
     */
    noDataState?: PostableGrafanaRuleNoDataStateEnum;
    /**
     *
     * @type {AlertRuleNotificationSettings}
     * @memberof PostableGrafanaRule
     */
    notificationSettings?: AlertRuleNotificationSettings;
    /**
     *
     * @type {Record}
     * @memberof PostableGrafanaRule
     */
    record?: Record;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaRule
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PostableGrafanaRule
     */
    uid?: string;
}
/**
 * @export
 */
declare const PostableGrafanaRuleExecErrStateEnum: {
    readonly Ok: "OK";
    readonly Alerting: "Alerting";
    readonly Error: "Error";
};
type PostableGrafanaRuleExecErrStateEnum = typeof PostableGrafanaRuleExecErrStateEnum[keyof typeof PostableGrafanaRuleExecErrStateEnum];
/**
 * @export
 */
declare const PostableGrafanaRuleNoDataStateEnum: {
    readonly Alerting: "Alerting";
    readonly NoData: "NoData";
    readonly Ok: "OK";
};
type PostableGrafanaRuleNoDataStateEnum = typeof PostableGrafanaRuleNoDataStateEnum[keyof typeof PostableGrafanaRuleNoDataStateEnum];
/**
 * Check if a given object implements the PostableGrafanaRule interface.
 */
declare function instanceOfPostableGrafanaRule(value: object): value is PostableGrafanaRule;
declare function PostableGrafanaRuleFromJSON(json: any): PostableGrafanaRule;
declare function PostableGrafanaRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaRule;
declare function PostableGrafanaRuleToJSON(json: any): PostableGrafanaRule;
declare function PostableGrafanaRuleToJSONTyped(value?: PostableGrafanaRule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableExtendedRuleNode
 */
interface PostableExtendedRuleNode {
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNode
     */
    alert?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof PostableExtendedRuleNode
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNode
     */
    expr?: string;
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNode
     */
    _for?: string;
    /**
     *
     * @type {PostableGrafanaRule}
     * @memberof PostableExtendedRuleNode
     */
    grafanaAlert?: PostableGrafanaRule;
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNode
     */
    keepFiringFor?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof PostableExtendedRuleNode
     */
    labels?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNode
     */
    record?: string;
}
/**
 * Check if a given object implements the PostableExtendedRuleNode interface.
 */
declare function instanceOfPostableExtendedRuleNode(value: object): value is PostableExtendedRuleNode;
declare function PostableExtendedRuleNodeFromJSON(json: any): PostableExtendedRuleNode;
declare function PostableExtendedRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableExtendedRuleNode;
declare function PostableExtendedRuleNodeToJSON(json: any): PostableExtendedRuleNode;
declare function PostableExtendedRuleNodeToJSONTyped(value?: PostableExtendedRuleNode | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableExtendedRuleNodeExtended
 */
interface PostableExtendedRuleNodeExtended {
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    folderTitle?: string;
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    folderUid?: string;
    /**
     *
     * @type {PostableExtendedRuleNode}
     * @memberof PostableExtendedRuleNodeExtended
     */
    rule: PostableExtendedRuleNode;
    /**
     *
     * @type {string}
     * @memberof PostableExtendedRuleNodeExtended
     */
    ruleGroup?: string;
}
/**
 * Check if a given object implements the PostableExtendedRuleNodeExtended interface.
 */
declare function instanceOfPostableExtendedRuleNodeExtended(value: object): value is PostableExtendedRuleNodeExtended;
declare function PostableExtendedRuleNodeExtendedFromJSON(json: any): PostableExtendedRuleNodeExtended;
declare function PostableExtendedRuleNodeExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableExtendedRuleNodeExtended;
declare function PostableExtendedRuleNodeExtendedToJSON(json: any): PostableExtendedRuleNodeExtended;
declare function PostableExtendedRuleNodeExtendedToJSONTyped(value?: PostableExtendedRuleNodeExtended | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableGrafanaReceivers
 */
interface PostableGrafanaReceivers {
    /**
     *
     * @type {Array<PostableGrafanaReceiver>}
     * @memberof PostableGrafanaReceivers
     */
    grafanaManagedReceiverConfigs?: Array<PostableGrafanaReceiver>;
}
/**
 * Check if a given object implements the PostableGrafanaReceivers interface.
 */
declare function instanceOfPostableGrafanaReceivers(value: object): value is PostableGrafanaReceivers;
declare function PostableGrafanaReceiversFromJSON(json: any): PostableGrafanaReceivers;
declare function PostableGrafanaReceiversFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaReceivers;
declare function PostableGrafanaReceiversToJSON(json: any): PostableGrafanaReceivers;
declare function PostableGrafanaReceiversToJSONTyped(value?: PostableGrafanaReceivers | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PostableNGalertConfig
 */
interface PostableNGalertConfig {
    /**
     *
     * @type {string}
     * @memberof PostableNGalertConfig
     */
    alertmanagersChoice?: PostableNGalertConfigAlertmanagersChoiceEnum;
}
/**
 * @export
 */
declare const PostableNGalertConfigAlertmanagersChoiceEnum: {
    readonly All: "all";
    readonly Internal: "internal";
    readonly External: "external";
};
type PostableNGalertConfigAlertmanagersChoiceEnum = typeof PostableNGalertConfigAlertmanagersChoiceEnum[keyof typeof PostableNGalertConfigAlertmanagersChoiceEnum];
/**
 * Check if a given object implements the PostableNGalertConfig interface.
 */
declare function instanceOfPostableNGalertConfig(value: object): value is PostableNGalertConfig;
declare function PostableNGalertConfigFromJSON(json: any): PostableNGalertConfig;
declare function PostableNGalertConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableNGalertConfig;
declare function PostableNGalertConfigToJSON(json: any): PostableNGalertConfig;
declare function PostableNGalertConfigToJSONTyped(value?: PostableNGalertConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableRuleGroupConfig
 */
interface PostableRuleGroupConfig {
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof PostableRuleGroupConfig
     */
    interval?: number;
    /**
     *
     * @type {string}
     * @memberof PostableRuleGroupConfig
     */
    name?: string;
    /**
     *
     * @type {Array<PostableExtendedRuleNode>}
     * @memberof PostableRuleGroupConfig
     */
    rules?: Array<PostableExtendedRuleNode>;
}
/**
 * Check if a given object implements the PostableRuleGroupConfig interface.
 */
declare function instanceOfPostableRuleGroupConfig(value: object): value is PostableRuleGroupConfig;
declare function PostableRuleGroupConfigFromJSON(json: any): PostableRuleGroupConfig;
declare function PostableRuleGroupConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableRuleGroupConfig;
declare function PostableRuleGroupConfigToJSON(json: any): PostableRuleGroupConfig;
declare function PostableRuleGroupConfigToJSONTyped(value?: PostableRuleGroupConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * PostableSilence postable silence
 * @export
 * @interface PostableSilence
 */
interface PostableSilence {
    /**
     * comment
     * @type {string}
     * @memberof PostableSilence
     */
    comment: string;
    /**
     * created by
     * @type {string}
     * @memberof PostableSilence
     */
    createdBy: string;
    /**
     * ends at
     * @type {Date}
     * @memberof PostableSilence
     */
    endsAt: Date;
    /**
     * id
     * @type {string}
     * @memberof PostableSilence
     */
    id?: string;
    /**
     * Matchers matchers
     * @type {Array<Matcher>}
     * @memberof PostableSilence
     */
    matchers: Array<Matcher>;
    /**
     * starts at
     * @type {Date}
     * @memberof PostableSilence
     */
    startsAt: Date;
}
/**
 * Check if a given object implements the PostableSilence interface.
 */
declare function instanceOfPostableSilence(value: object): value is PostableSilence;
declare function PostableSilenceFromJSON(json: any): PostableSilence;
declare function PostableSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableSilence;
declare function PostableSilenceToJSON(json: any): PostableSilence;
declare function PostableSilenceToJSONTyped(value?: PostableSilence | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableTimeIntervals
 */
interface PostableTimeIntervals {
    /**
     *
     * @type {string}
     * @memberof PostableTimeIntervals
     */
    name?: string;
    /**
     *
     * @type {Array<TimeIntervalItem>}
     * @memberof PostableTimeIntervals
     */
    timeIntervals?: Array<TimeIntervalItem>;
    /**
     *
     * @type {string}
     * @memberof PostableTimeIntervals
     */
    version?: string;
}
/**
 * Check if a given object implements the PostableTimeIntervals interface.
 */
declare function instanceOfPostableTimeIntervals(value: object): value is PostableTimeIntervals;
declare function PostableTimeIntervalsFromJSON(json: any): PostableTimeIntervals;
declare function PostableTimeIntervalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableTimeIntervals;
declare function PostableTimeIntervalsToJSON(json: any): PostableTimeIntervals;
declare function PostableTimeIntervalsToJSONTyped(value?: PostableTimeIntervals | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PostableUserConfig
 */
interface PostableUserConfig {
    /**
     *
     * @type {PostableApiAlertingConfig}
     * @memberof PostableUserConfig
     */
    alertmanagerConfig?: PostableApiAlertingConfig;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof PostableUserConfig
     */
    templateFiles?: {
        [key: string]: string;
    };
}
/**
 * Check if a given object implements the PostableUserConfig interface.
 */
declare function instanceOfPostableUserConfig(value: object): value is PostableUserConfig;
declare function PostableUserConfigFromJSON(json: any): PostableUserConfig;
declare function PostableUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableUserConfig;
declare function PostableUserConfigToJSON(json: any): PostableUserConfig;
declare function PostableUserConfigToJSONTyped(value?: PostableUserConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Spec defines user, team or org Grafana preferences
 * @export
 * @interface Preferences
 */
interface Preferences {
    /**
     *
     * @type {CookiePreferences}
     * @memberof Preferences
     */
    cookiePreferences?: CookiePreferences;
    /**
     * UID for the home dashboard
     * @type {string}
     * @memberof Preferences
     */
    homeDashboardUID?: string;
    /**
     * Selected language (beta)
     * @type {string}
     * @memberof Preferences
     */
    language?: string;
    /**
     *
     * @type {NavbarPreference}
     * @memberof Preferences
     */
    navbar?: NavbarPreference;
    /**
     *
     * @type {QueryHistoryPreference}
     * @memberof Preferences
     */
    queryHistory?: QueryHistoryPreference;
    /**
     * Theme light, dark, empty is default
     * @type {string}
     * @memberof Preferences
     */
    theme?: string;
    /**
     * The timezone selection
     * TODO: this should use the timezone defined in common
     * @type {string}
     * @memberof Preferences
     */
    timezone?: string;
    /**
     * WeekStart day of the week (sunday, monday, etc)
     * @type {string}
     * @memberof Preferences
     */
    weekStart?: string;
}
/**
 * Check if a given object implements the Preferences interface.
 */
declare function instanceOfPreferences(value: object): value is Preferences;
declare function PreferencesFromJSON(json: any): Preferences;
declare function PreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Preferences;
declare function PreferencesToJSON(json: any): Preferences;
declare function PreferencesToJSONTyped(value?: Preferences | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PrometheusRemoteWriteTargetJSON
 */
interface PrometheusRemoteWriteTargetJSON {
    /**
     *
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    dataSourceUid?: string;
    /**
     *
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof PrometheusRemoteWriteTargetJSON
     */
    remoteWritePath?: string;
}
/**
 * Check if a given object implements the PrometheusRemoteWriteTargetJSON interface.
 */
declare function instanceOfPrometheusRemoteWriteTargetJSON(value: object): value is PrometheusRemoteWriteTargetJSON;
declare function PrometheusRemoteWriteTargetJSONFromJSON(json: any): PrometheusRemoteWriteTargetJSON;
declare function PrometheusRemoteWriteTargetJSONFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrometheusRemoteWriteTargetJSON;
declare function PrometheusRemoteWriteTargetJSONToJSON(json: any): PrometheusRemoteWriteTargetJSON;
declare function PrometheusRemoteWriteTargetJSONToJSONTyped(value?: PrometheusRemoteWriteTargetJSON | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ProxyConfig
 */
interface ProxyConfig {
    /**
     * NoProxy contains addresses that should not use a proxy.
     * @type {string}
     * @memberof ProxyConfig
     */
    noProxy?: string;
    /**
     *
     * @type {{ [key: string]: Array<string>; }}
     * @memberof ProxyConfig
     */
    proxyConnectHeader?: {
        [key: string]: Array<string>;
    };
    /**
     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function
     * to determine proxies.
     * @type {boolean}
     * @memberof ProxyConfig
     */
    proxyFromEnvironment?: boolean;
    /**
     *
     * @type {URL}
     * @memberof ProxyConfig
     */
    proxyUrl?: URL;
}
/**
 * Check if a given object implements the ProxyConfig interface.
 */
declare function instanceOfProxyConfig(value: object): value is ProxyConfig;
declare function ProxyConfigFromJSON(json: any): ProxyConfig;
declare function ProxyConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxyConfig;
declare function ProxyConfigToJSON(json: any): ProxyConfig;
declare function ProxyConfigToJSONTyped(value?: ProxyConfig | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PublicDashboard
 */
interface PublicDashboard {
    /**
     *
     * @type {string}
     * @memberof PublicDashboard
     */
    accessToken?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboard
     */
    annotationsEnabled?: boolean;
    /**
     *
     * @type {Date}
     * @memberof PublicDashboard
     */
    createdAt?: Date;
    /**
     *
     * @type {number}
     * @memberof PublicDashboard
     */
    createdBy?: number;
    /**
     *
     * @type {string}
     * @memberof PublicDashboard
     */
    dashboardUid?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboard
     */
    isEnabled?: boolean;
    /**
     *
     * @type {Array<EmailDTO>}
     * @memberof PublicDashboard
     */
    recipients?: Array<EmailDTO>;
    /**
     *
     * @type {string}
     * @memberof PublicDashboard
     */
    share?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboard
     */
    timeSelectionEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof PublicDashboard
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof PublicDashboard
     */
    updatedAt?: Date;
    /**
     *
     * @type {number}
     * @memberof PublicDashboard
     */
    updatedBy?: number;
}
/**
 * Check if a given object implements the PublicDashboard interface.
 */
declare function instanceOfPublicDashboard(value: object): value is PublicDashboard;
declare function PublicDashboardFromJSON(json: any): PublicDashboard;
declare function PublicDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboard;
declare function PublicDashboardToJSON(json: any): PublicDashboard;
declare function PublicDashboardToJSONTyped(value?: PublicDashboard | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PublicDashboardDTO
 */
interface PublicDashboardDTO {
    /**
     *
     * @type {string}
     * @memberof PublicDashboardDTO
     */
    accessToken?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboardDTO
     */
    annotationsEnabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboardDTO
     */
    isEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardDTO
     */
    share?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboardDTO
     */
    timeSelectionEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the PublicDashboardDTO interface.
 */
declare function instanceOfPublicDashboardDTO(value: object): value is PublicDashboardDTO;
declare function PublicDashboardDTOFromJSON(json: any): PublicDashboardDTO;
declare function PublicDashboardDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardDTO;
declare function PublicDashboardDTOToJSON(json: any): PublicDashboardDTO;
declare function PublicDashboardDTOToJSONTyped(value?: PublicDashboardDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PublicDashboardListResponse
 */
interface PublicDashboardListResponse {
    /**
     *
     * @type {string}
     * @memberof PublicDashboardListResponse
     */
    accessToken?: string;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardListResponse
     */
    dashboardUid?: string;
    /**
     *
     * @type {boolean}
     * @memberof PublicDashboardListResponse
     */
    isEnabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardListResponse
     */
    slug?: string;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardListResponse
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof PublicDashboardListResponse
     */
    uid?: string;
}
/**
 * Check if a given object implements the PublicDashboardListResponse interface.
 */
declare function instanceOfPublicDashboardListResponse(value: object): value is PublicDashboardListResponse;
declare function PublicDashboardListResponseFromJSON(json: any): PublicDashboardListResponse;
declare function PublicDashboardListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardListResponse;
declare function PublicDashboardListResponseToJSON(json: any): PublicDashboardListResponse;
declare function PublicDashboardListResponseToJSONTyped(value?: PublicDashboardListResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PublicDashboardListResponseWithPagination
 */
interface PublicDashboardListResponseWithPagination {
    /**
     *
     * @type {number}
     * @memberof PublicDashboardListResponseWithPagination
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof PublicDashboardListResponseWithPagination
     */
    perPage?: number;
    /**
     *
     * @type {Array<PublicDashboardListResponse>}
     * @memberof PublicDashboardListResponseWithPagination
     */
    publicDashboards?: Array<PublicDashboardListResponse>;
    /**
     *
     * @type {number}
     * @memberof PublicDashboardListResponseWithPagination
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the PublicDashboardListResponseWithPagination interface.
 */
declare function instanceOfPublicDashboardListResponseWithPagination(value: object): value is PublicDashboardListResponseWithPagination;
declare function PublicDashboardListResponseWithPaginationFromJSON(json: any): PublicDashboardListResponseWithPagination;
declare function PublicDashboardListResponseWithPaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardListResponseWithPagination;
declare function PublicDashboardListResponseWithPaginationToJSON(json: any): PublicDashboardListResponseWithPagination;
declare function PublicDashboardListResponseWithPaginationToJSONTyped(value?: PublicDashboardListResponseWithPagination | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * It is the return type of a QueryData call.
 * @export
 * @interface QueryDataResponse
 */
interface QueryDataResponse {
    /**
     * The QueryData method the QueryDataHandler method will set the RefId
     * property on the DataResponses' frames based on these RefIDs.
     * @type {{ [key: string]: DataResponse; }}
     * @memberof QueryDataResponse
     */
    results?: {
        [key: string]: DataResponse;
    };
}
/**
 * Check if a given object implements the QueryDataResponse interface.
 */
declare function instanceOfQueryDataResponse(value: object): value is QueryDataResponse;
declare function QueryDataResponseFromJSON(json: any): QueryDataResponse;
declare function QueryDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryDataResponse;
declare function QueryDataResponseToJSON(json: any): QueryDataResponse;
declare function QueryDataResponseToJSONTyped(value?: QueryDataResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface QueryHistoryDTO
 */
interface QueryHistoryDTO {
    /**
     *
     * @type {string}
     * @memberof QueryHistoryDTO
     */
    comment?: string;
    /**
     *
     * @type {number}
     * @memberof QueryHistoryDTO
     */
    createdAt?: number;
    /**
     *
     * @type {number}
     * @memberof QueryHistoryDTO
     */
    createdBy?: number;
    /**
     *
     * @type {string}
     * @memberof QueryHistoryDTO
     */
    datasourceUid?: string;
    /**
     *
     * @type {object}
     * @memberof QueryHistoryDTO
     */
    queries?: object;
    /**
     *
     * @type {boolean}
     * @memberof QueryHistoryDTO
     */
    starred?: boolean;
    /**
     *
     * @type {string}
     * @memberof QueryHistoryDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the QueryHistoryDTO interface.
 */
declare function instanceOfQueryHistoryDTO(value: object): value is QueryHistoryDTO;
declare function QueryHistoryDTOFromJSON(json: any): QueryHistoryDTO;
declare function QueryHistoryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryDTO;
declare function QueryHistoryDTOToJSON(json: any): QueryHistoryDTO;
declare function QueryHistoryDTOToJSONTyped(value?: QueryHistoryDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * QueryHistoryDeleteQueryResponse is the response struct for deleting a query from query history
 * @export
 * @interface QueryHistoryDeleteQueryResponse
 */
interface QueryHistoryDeleteQueryResponse {
    /**
     *
     * @type {number}
     * @memberof QueryHistoryDeleteQueryResponse
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof QueryHistoryDeleteQueryResponse
     */
    message?: string;
}
/**
 * Check if a given object implements the QueryHistoryDeleteQueryResponse interface.
 */
declare function instanceOfQueryHistoryDeleteQueryResponse(value: object): value is QueryHistoryDeleteQueryResponse;
declare function QueryHistoryDeleteQueryResponseFromJSON(json: any): QueryHistoryDeleteQueryResponse;
declare function QueryHistoryDeleteQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryDeleteQueryResponse;
declare function QueryHistoryDeleteQueryResponseToJSON(json: any): QueryHistoryDeleteQueryResponse;
declare function QueryHistoryDeleteQueryResponseToJSONTyped(value?: QueryHistoryDeleteQueryResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * QueryHistoryResponse is a response struct for QueryHistoryDTO
 * @export
 * @interface QueryHistoryResponse
 */
interface QueryHistoryResponse {
    /**
     *
     * @type {QueryHistoryDTO}
     * @memberof QueryHistoryResponse
     */
    result?: QueryHistoryDTO;
}
/**
 * Check if a given object implements the QueryHistoryResponse interface.
 */
declare function instanceOfQueryHistoryResponse(value: object): value is QueryHistoryResponse;
declare function QueryHistoryResponseFromJSON(json: any): QueryHistoryResponse;
declare function QueryHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryResponse;
declare function QueryHistoryResponseToJSON(json: any): QueryHistoryResponse;
declare function QueryHistoryResponseToJSONTyped(value?: QueryHistoryResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface QueryHistorySearchResult
 */
interface QueryHistorySearchResult {
    /**
     *
     * @type {number}
     * @memberof QueryHistorySearchResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof QueryHistorySearchResult
     */
    perPage?: number;
    /**
     *
     * @type {Array<QueryHistoryDTO>}
     * @memberof QueryHistorySearchResult
     */
    queryHistory?: Array<QueryHistoryDTO>;
    /**
     *
     * @type {number}
     * @memberof QueryHistorySearchResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the QueryHistorySearchResult interface.
 */
declare function instanceOfQueryHistorySearchResult(value: object): value is QueryHistorySearchResult;
declare function QueryHistorySearchResultFromJSON(json: any): QueryHistorySearchResult;
declare function QueryHistorySearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistorySearchResult;
declare function QueryHistorySearchResultToJSON(json: any): QueryHistorySearchResult;
declare function QueryHistorySearchResultToJSONTyped(value?: QueryHistorySearchResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface QueryHistorySearchResponse
 */
interface QueryHistorySearchResponse {
    /**
     *
     * @type {QueryHistorySearchResult}
     * @memberof QueryHistorySearchResponse
     */
    result?: QueryHistorySearchResult;
}
/**
 * Check if a given object implements the QueryHistorySearchResponse interface.
 */
declare function instanceOfQueryHistorySearchResponse(value: object): value is QueryHistorySearchResponse;
declare function QueryHistorySearchResponseFromJSON(json: any): QueryHistorySearchResponse;
declare function QueryHistorySearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistorySearchResponse;
declare function QueryHistorySearchResponseToJSON(json: any): QueryHistorySearchResponse;
declare function QueryHistorySearchResponseToJSONTyped(value?: QueryHistorySearchResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface QuotaDTO
 */
interface QuotaDTO {
    /**
     *
     * @type {number}
     * @memberof QuotaDTO
     */
    limit?: number;
    /**
     *
     * @type {number}
     * @memberof QuotaDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof QuotaDTO
     */
    target?: string;
    /**
     *
     * @type {number}
     * @memberof QuotaDTO
     */
    used?: number;
    /**
     *
     * @type {number}
     * @memberof QuotaDTO
     */
    userId?: number;
}
/**
 * Check if a given object implements the QuotaDTO interface.
 */
declare function instanceOfQuotaDTO(value: object): value is QuotaDTO;
declare function QuotaDTOFromJSON(json: any): QuotaDTO;
declare function QuotaDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotaDTO;
declare function QuotaDTOToJSON(json: any): QuotaDTO;
declare function QuotaDTOToJSONTyped(value?: QuotaDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * RecordingRuleJSON is the external representation of a recording rule
 * @export
 * @interface RecordingRuleJSON
 */
interface RecordingRuleJSON {
    /**
     *
     * @type {boolean}
     * @memberof RecordingRuleJSON
     */
    active?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof RecordingRuleJSON
     */
    count?: boolean;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    destDataSourceUid?: string;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof RecordingRuleJSON
     */
    interval?: number;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    promName?: string;
    /**
     *
     * @type {Array<{ [key: string]: object; }>}
     * @memberof RecordingRuleJSON
     */
    queries?: Array<{
        [key: string]: object;
    }>;
    /**
     *
     * @type {number}
     * @memberof RecordingRuleJSON
     */
    range?: number;
    /**
     *
     * @type {string}
     * @memberof RecordingRuleJSON
     */
    targetRefId?: string;
}
/**
 * Check if a given object implements the RecordingRuleJSON interface.
 */
declare function instanceOfRecordingRuleJSON(value: object): value is RecordingRuleJSON;
declare function RecordingRuleJSONFromJSON(json: any): RecordingRuleJSON;
declare function RecordingRuleJSONFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordingRuleJSON;
declare function RecordingRuleJSONToJSON(json: any): RecordingRuleJSON;
declare function RecordingRuleJSONToJSONTyped(value?: RecordingRuleJSON | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Report
 */
interface Report {
    /**
     *
     * @type {Date}
     * @memberof Report
     */
    created?: Date;
    /**
     *
     * @type {Array<ReportDashboard>}
     * @memberof Report
     */
    dashboards?: Array<ReportDashboard>;
    /**
     *
     * @type {boolean}
     * @memberof Report
     */
    enableCsv?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Report
     */
    enableDashboardUrl?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof Report
     */
    formats?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof Report
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof Report
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof Report
     */
    name?: string;
    /**
     *
     * @type {ReportOptions}
     * @memberof Report
     */
    options?: ReportOptions;
    /**
     *
     * @type {number}
     * @memberof Report
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof Report
     */
    recipients?: string;
    /**
     *
     * @type {string}
     * @memberof Report
     */
    replyTo?: string;
    /**
     *
     * @type {number}
     * @memberof Report
     */
    scaleFactor?: number;
    /**
     *
     * @type {ReportSchedule}
     * @memberof Report
     */
    schedule?: ReportSchedule;
    /**
     * +enum
     * @type {string}
     * @memberof Report
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof Report
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof Report
     */
    updated?: Date;
    /**
     *
     * @type {number}
     * @memberof Report
     */
    userId?: number;
}
/**
 * Check if a given object implements the Report interface.
 */
declare function instanceOfReport(value: object): value is Report;
declare function ReportFromJSON(json: any): Report;
declare function ReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Report;
declare function ReportToJSON(json: any): Report;
declare function ReportToJSONTyped(value?: Report | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReportBrandingOptions
 */
interface ReportBrandingOptions {
    /**
     *
     * @type {string}
     * @memberof ReportBrandingOptions
     */
    emailFooterLink?: string;
    /**
     *
     * @type {string}
     * @memberof ReportBrandingOptions
     */
    emailFooterMode?: string;
    /**
     *
     * @type {string}
     * @memberof ReportBrandingOptions
     */
    emailFooterText?: string;
    /**
     *
     * @type {string}
     * @memberof ReportBrandingOptions
     */
    emailLogoUrl?: string;
    /**
     *
     * @type {string}
     * @memberof ReportBrandingOptions
     */
    reportLogoUrl?: string;
}
/**
 * Check if a given object implements the ReportBrandingOptions interface.
 */
declare function instanceOfReportBrandingOptions(value: object): value is ReportBrandingOptions;
declare function ReportBrandingOptionsFromJSON(json: any): ReportBrandingOptions;
declare function ReportBrandingOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportBrandingOptions;
declare function ReportBrandingOptionsToJSON(json: any): ReportBrandingOptions;
declare function ReportBrandingOptionsToJSONTyped(value?: ReportBrandingOptions | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ReportEmail
 */
interface ReportEmail {
    /**
     * Comma-separated list of emails to which to send the report to.
     * @type {string}
     * @memberof ReportEmail
     */
    emails?: string;
    /**
     * Send the report to the emails specified in the report. Required if emails is not present.
     * @type {string}
     * @memberof ReportEmail
     */
    id?: string;
    /**
     * Send the report to the emails specified in the report. Required if emails is not present.
     * @type {boolean}
     * @memberof ReportEmail
     */
    useEmailsFromReport?: boolean;
}
/**
 * Check if a given object implements the ReportEmail interface.
 */
declare function instanceOfReportEmail(value: object): value is ReportEmail;
declare function ReportEmailFromJSON(json: any): ReportEmail;
declare function ReportEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportEmail;
declare function ReportEmailToJSON(json: any): ReportEmail;
declare function ReportEmailToJSONTyped(value?: ReportEmail | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface ReportSettings
 */
interface ReportSettings {
    /**
     *
     * @type {ReportBrandingOptions}
     * @memberof ReportSettings
     */
    branding?: ReportBrandingOptions;
    /**
     *
     * @type {number}
     * @memberof ReportSettings
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof ReportSettings
     */
    orgId?: number;
    /**
     *
     * @type {number}
     * @memberof ReportSettings
     */
    userId?: number;
}
/**
 * Check if a given object implements the ReportSettings interface.
 */
declare function instanceOfReportSettings(value: object): value is ReportSettings;
declare function ReportSettingsFromJSON(json: any): ReportSettings;
declare function ReportSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSettings;
declare function ReportSettingsToJSON(json: any): ReportSettings;
declare function ReportSettingsToJSONTyped(value?: ReportSettings | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ResourcePermissionDTO
 */
interface ResourcePermissionDTO {
    /**
     *
     * @type {Array<string>}
     * @memberof ResourcePermissionDTO
     */
    actions?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    builtInRole?: string;
    /**
     *
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isInherited?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isManaged?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ResourcePermissionDTO
     */
    isServiceAccount?: boolean;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    permission?: string;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    roleName?: string;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    team?: string;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    teamAvatarUrl?: string;
    /**
     *
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    teamId?: number;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    userAvatarUrl?: string;
    /**
     *
     * @type {number}
     * @memberof ResourcePermissionDTO
     */
    userId?: number;
    /**
     *
     * @type {string}
     * @memberof ResourcePermissionDTO
     */
    userLogin?: string;
}
/**
 * Check if a given object implements the ResourcePermissionDTO interface.
 */
declare function instanceOfResourcePermissionDTO(value: object): value is ResourcePermissionDTO;
declare function ResourcePermissionDTOFromJSON(json: any): ResourcePermissionDTO;
declare function ResourcePermissionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourcePermissionDTO;
declare function ResourcePermissionDTOToJSON(json: any): ResourcePermissionDTO;
declare function ResourcePermissionDTOToJSONTyped(value?: ResourcePermissionDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ResponseDetails
 */
interface ResponseDetails {
    /**
     *
     * @type {string}
     * @memberof ResponseDetails
     */
    msg?: string;
}
/**
 * Check if a given object implements the ResponseDetails interface.
 */
declare function instanceOfResponseDetails(value: object): value is ResponseDetails;
declare function ResponseDetailsFromJSON(json: any): ResponseDetails;
declare function ResponseDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseDetails;
declare function ResponseDetailsToJSON(json: any): ResponseDetails;
declare function ResponseDetailsToJSONTyped(value?: ResponseDetails | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RestoreDashboardVersionCommand
 */
interface RestoreDashboardVersionCommand {
    /**
     *
     * @type {number}
     * @memberof RestoreDashboardVersionCommand
     */
    version?: number;
}
/**
 * Check if a given object implements the RestoreDashboardVersionCommand interface.
 */
declare function instanceOfRestoreDashboardVersionCommand(value: object): value is RestoreDashboardVersionCommand;
declare function RestoreDashboardVersionCommandFromJSON(json: any): RestoreDashboardVersionCommand;
declare function RestoreDashboardVersionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestoreDashboardVersionCommand;
declare function RestoreDashboardVersionCommandToJSON(json: any): RestoreDashboardVersionCommand;
declare function RestoreDashboardVersionCommandToJSONTyped(value?: RestoreDashboardVersionCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RestoreDeletedDashboardCommand
 */
interface RestoreDeletedDashboardCommand {
    /**
     *
     * @type {string}
     * @memberof RestoreDeletedDashboardCommand
     */
    folderUid?: string;
}
/**
 * Check if a given object implements the RestoreDeletedDashboardCommand interface.
 */
declare function instanceOfRestoreDeletedDashboardCommand(value: object): value is RestoreDeletedDashboardCommand;
declare function RestoreDeletedDashboardCommandFromJSON(json: any): RestoreDeletedDashboardCommand;
declare function RestoreDeletedDashboardCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestoreDeletedDashboardCommand;
declare function RestoreDeletedDashboardCommandToJSON(json: any): RestoreDeletedDashboardCommand;
declare function RestoreDeletedDashboardCommandToJSONTyped(value?: RestoreDeletedDashboardCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RetrieveJWKS200Response
 */
interface RetrieveJWKS200Response {
    /**
     *
     * @type {Array<JSONWebKey>}
     * @memberof RetrieveJWKS200Response
     */
    keys?: Array<JSONWebKey>;
}
/**
 * Check if a given object implements the RetrieveJWKS200Response interface.
 */
declare function instanceOfRetrieveJWKS200Response(value: object): value is RetrieveJWKS200Response;
declare function RetrieveJWKS200ResponseFromJSON(json: any): RetrieveJWKS200Response;
declare function RetrieveJWKS200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetrieveJWKS200Response;
declare function RetrieveJWKS200ResponseToJSON(json: any): RetrieveJWKS200Response;
declare function RetrieveJWKS200ResponseToJSONTyped(value?: RetrieveJWKS200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RevokeAuthTokenCmd
 */
interface RevokeAuthTokenCmd {
    /**
     *
     * @type {number}
     * @memberof RevokeAuthTokenCmd
     */
    authTokenId?: number;
}
/**
 * Check if a given object implements the RevokeAuthTokenCmd interface.
 */
declare function instanceOfRevokeAuthTokenCmd(value: object): value is RevokeAuthTokenCmd;
declare function RevokeAuthTokenCmdFromJSON(json: any): RevokeAuthTokenCmd;
declare function RevokeAuthTokenCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevokeAuthTokenCmd;
declare function RevokeAuthTokenCmdToJSON(json: any): RevokeAuthTokenCmd;
declare function RevokeAuthTokenCmdToJSONTyped(value?: RevokeAuthTokenCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RoleAssignmentsDTO
 */
interface RoleAssignmentsDTO {
    /**
     *
     * @type {string}
     * @memberof RoleAssignmentsDTO
     */
    roleUid?: string;
    /**
     *
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    serviceAccounts?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    teams?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof RoleAssignmentsDTO
     */
    users?: Array<number>;
}
/**
 * Check if a given object implements the RoleAssignmentsDTO interface.
 */
declare function instanceOfRoleAssignmentsDTO(value: object): value is RoleAssignmentsDTO;
declare function RoleAssignmentsDTOFromJSON(json: any): RoleAssignmentsDTO;
declare function RoleAssignmentsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAssignmentsDTO;
declare function RoleAssignmentsDTOToJSON(json: any): RoleAssignmentsDTO;
declare function RoleAssignmentsDTOToJSONTyped(value?: RoleAssignmentsDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RoleDTO
 */
interface RoleDTO {
    /**
     *
     * @type {Date}
     * @memberof RoleDTO
     */
    created?: Date;
    /**
     *
     * @type {boolean}
     * @memberof RoleDTO
     */
    delegatable?: boolean;
    /**
     *
     * @type {string}
     * @memberof RoleDTO
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof RoleDTO
     */
    displayName?: string;
    /**
     *
     * @type {boolean}
     * @memberof RoleDTO
     */
    global?: boolean;
    /**
     *
     * @type {string}
     * @memberof RoleDTO
     */
    group?: string;
    /**
     *
     * @type {boolean}
     * @memberof RoleDTO
     */
    hidden?: boolean;
    /**
     *
     * @type {string}
     * @memberof RoleDTO
     */
    name?: string;
    /**
     *
     * @type {Array<Permission>}
     * @memberof RoleDTO
     */
    permissions?: Array<Permission>;
    /**
     *
     * @type {string}
     * @memberof RoleDTO
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof RoleDTO
     */
    updated?: Date;
    /**
     *
     * @type {number}
     * @memberof RoleDTO
     */
    version?: number;
}
/**
 * Check if a given object implements the RoleDTO interface.
 */
declare function instanceOfRoleDTO(value: object): value is RoleDTO;
declare function RoleDTOFromJSON(json: any): RoleDTO;
declare function RoleDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleDTO;
declare function RoleDTOToJSON(json: any): RoleDTO;
declare function RoleDTOToJSONTyped(value?: RoleDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RolesSearchQuery
 */
interface RolesSearchQuery {
    /**
     *
     * @type {boolean}
     * @memberof RolesSearchQuery
     */
    includeHidden?: boolean;
    /**
     *
     * @type {number}
     * @memberof RolesSearchQuery
     */
    orgId?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof RolesSearchQuery
     */
    teamIds?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof RolesSearchQuery
     */
    userIds?: Array<number>;
}
/**
 * Check if a given object implements the RolesSearchQuery interface.
 */
declare function instanceOfRolesSearchQuery(value: object): value is RolesSearchQuery;
declare function RolesSearchQueryFromJSON(json: any): RolesSearchQuery;
declare function RolesSearchQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RolesSearchQuery;
declare function RolesSearchQueryToJSON(json: any): RolesSearchQuery;
declare function RolesSearchQueryToJSONTyped(value?: RolesSearchQuery | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * adapted from cortex
 * @export
 * @interface Rule
 */
interface Rule {
    /**
     *
     * @type {number}
     * @memberof Rule
     */
    evaluationTime?: number;
    /**
     *
     * @type {string}
     * @memberof Rule
     */
    health: string;
    /**
     * Labels is a sorted set of labels. Order has to be guaranteed upon
     * instantiation.
     * @type {Array<Label>}
     * @memberof Rule
     */
    labels?: Array<Label>;
    /**
     *
     * @type {string}
     * @memberof Rule
     */
    lastError?: string;
    /**
     *
     * @type {Date}
     * @memberof Rule
     */
    lastEvaluation?: Date;
    /**
     *
     * @type {string}
     * @memberof Rule
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof Rule
     */
    query: string;
    /**
     *
     * @type {string}
     * @memberof Rule
     */
    type: string;
}
/**
 * Check if a given object implements the Rule interface.
 */
declare function instanceOfRule(value: object): value is Rule;
declare function RuleFromJSON(json: any): Rule;
declare function RuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Rule;
declare function RuleToJSON(json: any): Rule;
declare function RuleToJSONTyped(value?: Rule | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RuleGroup
 */
interface RuleGroup {
    /**
     *
     * @type {number}
     * @memberof RuleGroup
     */
    evaluationTime?: number;
    /**
     *
     * @type {string}
     * @memberof RuleGroup
     */
    file: string;
    /**
     *
     * @type {number}
     * @memberof RuleGroup
     */
    interval: number;
    /**
     *
     * @type {Date}
     * @memberof RuleGroup
     */
    lastEvaluation?: Date;
    /**
     *
     * @type {string}
     * @memberof RuleGroup
     */
    name: string;
    /**
     * In order to preserve rule ordering, while exposing type (alerting or recording)
     * specific properties, both alerting and recording rules are exposed in the
     * same array.
     * @type {Array<AlertingRule>}
     * @memberof RuleGroup
     */
    rules: Array<AlertingRule>;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof RuleGroup
     */
    totals?: {
        [key: string]: number;
    };
}
/**
 * Check if a given object implements the RuleGroup interface.
 */
declare function instanceOfRuleGroup(value: object): value is RuleGroup;
declare function RuleGroupFromJSON(json: any): RuleGroup;
declare function RuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleGroup;
declare function RuleGroupToJSON(json: any): RuleGroup;
declare function RuleGroupToJSONTyped(value?: RuleGroup | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RuleDiscovery
 */
interface RuleDiscovery {
    /**
     *
     * @type {Array<RuleGroup>}
     * @memberof RuleDiscovery
     */
    groups: Array<RuleGroup>;
    /**
     *
     * @type {{ [key: string]: number; }}
     * @memberof RuleDiscovery
     */
    totals?: {
        [key: string]: number;
    };
}
/**
 * Check if a given object implements the RuleDiscovery interface.
 */
declare function instanceOfRuleDiscovery(value: object): value is RuleDiscovery;
declare function RuleDiscoveryFromJSON(json: any): RuleDiscovery;
declare function RuleDiscoveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleDiscovery;
declare function RuleDiscoveryToJSON(json: any): RuleDiscovery;
declare function RuleDiscoveryToJSONTyped(value?: RuleDiscovery | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RuleGroupConfigResponse
 */
interface RuleGroupConfigResponse {
    /**
     * A Duration represents the elapsed time between two instants
     * as an int64 nanosecond count. The representation limits the
     * largest representable duration to approximately 290 years.
     * @type {number}
     * @memberof RuleGroupConfigResponse
     */
    interval?: number;
    /**
     *
     * @type {string}
     * @memberof RuleGroupConfigResponse
     */
    name?: string;
    /**
     *
     * @type {Array<GettableExtendedRuleNode>}
     * @memberof RuleGroupConfigResponse
     */
    rules?: Array<GettableExtendedRuleNode>;
    /**
     *
     * @type {Array<string>}
     * @memberof RuleGroupConfigResponse
     */
    sourceTenants?: Array<string>;
}
/**
 * Check if a given object implements the RuleGroupConfigResponse interface.
 */
declare function instanceOfRuleGroupConfigResponse(value: object): value is RuleGroupConfigResponse;
declare function RuleGroupConfigResponseFromJSON(json: any): RuleGroupConfigResponse;
declare function RuleGroupConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleGroupConfigResponse;
declare function RuleGroupConfigResponseToJSON(json: any): RuleGroupConfigResponse;
declare function RuleGroupConfigResponseToJSONTyped(value?: RuleGroupConfigResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RuleResponse
 */
interface RuleResponse {
    /**
     *
     * @type {RuleDiscovery}
     * @memberof RuleResponse
     */
    data?: RuleDiscovery;
    /**
     *
     * @type {string}
     * @memberof RuleResponse
     */
    error?: string;
    /**
     *
     * @type {string}
     * @memberof RuleResponse
     */
    errorType?: string;
    /**
     *
     * @type {string}
     * @memberof RuleResponse
     */
    status: string;
}
/**
 * Check if a given object implements the RuleResponse interface.
 */
declare function instanceOfRuleResponse(value: object): value is RuleResponse;
declare function RuleResponseFromJSON(json: any): RuleResponse;
declare function RuleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleResponse;
declare function RuleResponseToJSON(json: any): RuleResponse;
declare function RuleResponseToJSONTyped(value?: RuleResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Sample is a single sample belonging to a metric. It represents either a float
 * sample or a histogram sample. If H is nil, it is a float sample. Otherwise,
 * it is a histogram sample.
 * @export
 * @interface Sample
 */
interface Sample {
    /**
     *
     * @type {number}
     * @memberof Sample
     */
    f?: number;
    /**
     *
     * @type {FloatHistogram}
     * @memberof Sample
     */
    h?: FloatHistogram;
    /**
     * Labels is a sorted set of labels. Order has to be guaranteed upon
     * instantiation.
     * @type {Array<Label>}
     * @memberof Sample
     */
    metric?: Array<Label>;
    /**
     *
     * @type {number}
     * @memberof Sample
     */
    t?: number;
}
/**
 * Check if a given object implements the Sample interface.
 */
declare function instanceOfSample(value: object): value is Sample;
declare function SampleFromJSON(json: any): Sample;
declare function SampleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sample;
declare function SampleToJSON(json: any): Sample;
declare function SampleToJSONTyped(value?: Sample | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SaveDashboardCommand
 */
interface SaveDashboardCommand {
    /**
     *
     * @type {Date}
     * @memberof SaveDashboardCommand
     */
    updatedAt?: Date;
    /**
     *
     * @type {object}
     * @memberof SaveDashboardCommand
     */
    dashboard?: object;
    /**
     * Deprecated: use FolderUID instead
     * @type {number}
     * @memberof SaveDashboardCommand
     */
    folderId?: number;
    /**
     *
     * @type {string}
     * @memberof SaveDashboardCommand
     */
    folderUid?: string;
    /**
     *
     * @type {boolean}
     * @memberof SaveDashboardCommand
     */
    isFolder?: boolean;
    /**
     *
     * @type {string}
     * @memberof SaveDashboardCommand
     */
    message?: string;
    /**
     *
     * @type {boolean}
     * @memberof SaveDashboardCommand
     */
    overwrite?: boolean;
    /**
     *
     * @type {number}
     * @memberof SaveDashboardCommand
     */
    userId?: number;
}
/**
 * Check if a given object implements the SaveDashboardCommand interface.
 */
declare function instanceOfSaveDashboardCommand(value: object): value is SaveDashboardCommand;
declare function SaveDashboardCommandFromJSON(json: any): SaveDashboardCommand;
declare function SaveDashboardCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveDashboardCommand;
declare function SaveDashboardCommandToJSON(json: any): SaveDashboardCommand;
declare function SaveDashboardCommandToJSONTyped(value?: SaveDashboardCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SearchDTO
 */
interface SearchDTO {
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    action?: string;
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    basicRole?: string;
    /**
     *
     * @type {boolean}
     * @memberof SearchDTO
     */
    onlyRoles?: boolean;
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    roleName?: string;
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    scope?: string;
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    teamId?: string;
    /**
     *
     * @type {string}
     * @memberof SearchDTO
     */
    userId?: string;
}
/**
 * Check if a given object implements the SearchDTO interface.
 */
declare function instanceOfSearchDTO(value: object): value is SearchDTO;
declare function SearchDTOFromJSON(json: any): SearchDTO;
declare function SearchDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchDTO;
declare function SearchDTOToJSON(json: any): SearchDTO;
declare function SearchDTOToJSONTyped(value?: SearchDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SearchDeviceQueryResult
 */
interface SearchDeviceQueryResult {
    /**
     *
     * @type {Array<DeviceSearchHitDTO>}
     * @memberof SearchDeviceQueryResult
     */
    devices?: Array<DeviceSearchHitDTO>;
    /**
     *
     * @type {number}
     * @memberof SearchDeviceQueryResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof SearchDeviceQueryResult
     */
    perPage?: number;
    /**
     *
     * @type {number}
     * @memberof SearchDeviceQueryResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the SearchDeviceQueryResult interface.
 */
declare function instanceOfSearchDeviceQueryResult(value: object): value is SearchDeviceQueryResult;
declare function SearchDeviceQueryResultFromJSON(json: any): SearchDeviceQueryResult;
declare function SearchDeviceQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchDeviceQueryResult;
declare function SearchDeviceQueryResultToJSON(json: any): SearchDeviceQueryResult;
declare function SearchDeviceQueryResultToJSONTyped(value?: SearchDeviceQueryResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * swagger: model
 * @export
 * @interface ServiceAccountDTO
 */
interface ServiceAccountDTO {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof ServiceAccountDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {string}
     * @memberof ServiceAccountDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof ServiceAccountDTO
     */
    isDisabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ServiceAccountDTO
     */
    isExternal?: boolean;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountDTO
     */
    role?: string;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountDTO
     */
    tokens?: number;
}
/**
 * Check if a given object implements the ServiceAccountDTO interface.
 */
declare function instanceOfServiceAccountDTO(value: object): value is ServiceAccountDTO;
declare function ServiceAccountDTOFromJSON(json: any): ServiceAccountDTO;
declare function ServiceAccountDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceAccountDTO;
declare function ServiceAccountDTOToJSON(json: any): ServiceAccountDTO;
declare function ServiceAccountDTOToJSONTyped(value?: ServiceAccountDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * swagger: model
 * @export
 * @interface SearchOrgServiceAccountsResult
 */
interface SearchOrgServiceAccountsResult {
    /**
     *
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    perPage?: number;
    /**
     *
     * @type {Array<ServiceAccountDTO>}
     * @memberof SearchOrgServiceAccountsResult
     */
    serviceAccounts?: Array<ServiceAccountDTO>;
    /**
     * It can be used for pagination of the user list
     * E.g. if totalCount is equal to 100 users and
     * the perpage parameter is set to 10 then there are 10 pages of users.
     * @type {number}
     * @memberof SearchOrgServiceAccountsResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the SearchOrgServiceAccountsResult interface.
 */
declare function instanceOfSearchOrgServiceAccountsResult(value: object): value is SearchOrgServiceAccountsResult;
declare function SearchOrgServiceAccountsResultFromJSON(json: any): SearchOrgServiceAccountsResult;
declare function SearchOrgServiceAccountsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgServiceAccountsResult;
declare function SearchOrgServiceAccountsResultToJSON(json: any): SearchOrgServiceAccountsResult;
declare function SearchOrgServiceAccountsResultToJSONTyped(value?: SearchOrgServiceAccountsResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SearchOrgUsersQueryResult
 */
interface SearchOrgUsersQueryResult {
    /**
     *
     * @type {Array<OrgUserDTO>}
     * @memberof SearchOrgUsersQueryResult
     */
    orgUsers?: Array<OrgUserDTO>;
    /**
     *
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    perPage?: number;
    /**
     *
     * @type {number}
     * @memberof SearchOrgUsersQueryResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the SearchOrgUsersQueryResult interface.
 */
declare function instanceOfSearchOrgUsersQueryResult(value: object): value is SearchOrgUsersQueryResult;
declare function SearchOrgUsersQueryResultFromJSON(json: any): SearchOrgUsersQueryResult;
declare function SearchOrgUsersQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgUsersQueryResult;
declare function SearchOrgUsersQueryResultToJSON(json: any): SearchOrgUsersQueryResult;
declare function SearchOrgUsersQueryResultToJSONTyped(value?: SearchOrgUsersQueryResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SearchResultItem
 */
interface SearchResultItem {
    /**
     *
     * @type {string}
     * @memberof SearchResultItem
     */
    action?: string;
    /**
     *
     * @type {string}
     * @memberof SearchResultItem
     */
    basicRole?: string;
    /**
     *
     * @type {number}
     * @memberof SearchResultItem
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof SearchResultItem
     */
    roleName?: string;
    /**
     *
     * @type {string}
     * @memberof SearchResultItem
     */
    scope?: string;
    /**
     *
     * @type {number}
     * @memberof SearchResultItem
     */
    teamId?: number;
    /**
     *
     * @type {number}
     * @memberof SearchResultItem
     */
    userId?: number;
    /**
     *
     * @type {number}
     * @memberof SearchResultItem
     */
    version?: number;
}
/**
 * Check if a given object implements the SearchResultItem interface.
 */
declare function instanceOfSearchResultItem(value: object): value is SearchResultItem;
declare function SearchResultItemFromJSON(json: any): SearchResultItem;
declare function SearchResultItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResultItem;
declare function SearchResultItemToJSON(json: any): SearchResultItem;
declare function SearchResultItemToJSONTyped(value?: SearchResultItem | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SearchResult
 */
interface SearchResult {
    /**
     *
     * @type {Array<SearchResultItem>}
     * @memberof SearchResult
     */
    result?: Array<SearchResultItem>;
}
/**
 * Check if a given object implements the SearchResult interface.
 */
declare function instanceOfSearchResult(value: object): value is SearchResult;
declare function SearchResultFromJSON(json: any): SearchResult;
declare function SearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResult;
declare function SearchResultToJSON(json: any): SearchResult;
declare function SearchResultToJSONTyped(value?: SearchResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TeamDTO
 */
interface TeamDTO {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof TeamDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {string}
     * @memberof TeamDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof TeamDTO
     */
    email?: string;
    /**
     *
     * @type {number}
     * @memberof TeamDTO
     */
    id?: number;
    /**
     *
     * @type {number}
     * @memberof TeamDTO
     */
    memberCount?: number;
    /**
     *
     * @type {string}
     * @memberof TeamDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof TeamDTO
     */
    orgId?: number;
    /**
     *
     * @type {number}
     * @memberof TeamDTO
     */
    permission?: number;
    /**
     *
     * @type {string}
     * @memberof TeamDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the TeamDTO interface.
 */
declare function instanceOfTeamDTO(value: object): value is TeamDTO;
declare function TeamDTOFromJSON(json: any): TeamDTO;
declare function TeamDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamDTO;
declare function TeamDTOToJSON(json: any): TeamDTO;
declare function TeamDTOToJSONTyped(value?: TeamDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SearchTeamQueryResult
 */
interface SearchTeamQueryResult {
    /**
     *
     * @type {number}
     * @memberof SearchTeamQueryResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof SearchTeamQueryResult
     */
    perPage?: number;
    /**
     *
     * @type {Array<TeamDTO>}
     * @memberof SearchTeamQueryResult
     */
    teams?: Array<TeamDTO>;
    /**
     *
     * @type {number}
     * @memberof SearchTeamQueryResult
     */
    totalCount?: number;
}
/**
 * Check if a given object implements the SearchTeamQueryResult interface.
 */
declare function instanceOfSearchTeamQueryResult(value: object): value is SearchTeamQueryResult;
declare function SearchTeamQueryResultFromJSON(json: any): SearchTeamQueryResult;
declare function SearchTeamQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTeamQueryResult;
declare function SearchTeamQueryResultToJSON(json: any): SearchTeamQueryResult;
declare function SearchTeamQueryResultToJSONTyped(value?: SearchTeamQueryResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserSearchHitDTO
 */
interface UserSearchHitDTO {
    /**
     *
     * @type {Array<string>}
     * @memberof UserSearchHitDTO
     */
    authLabels?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    email?: string;
    /**
     *
     * @type {number}
     * @memberof UserSearchHitDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof UserSearchHitDTO
     */
    isAdmin?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserSearchHitDTO
     */
    isDisabled?: boolean;
    /**
     *
     * @type {Date}
     * @memberof UserSearchHitDTO
     */
    lastSeenAt?: Date;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    lastSeenAtAge?: string;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UserSearchHitDTO
     */
    uid?: string;
}
/**
 * Check if a given object implements the UserSearchHitDTO interface.
 */
declare function instanceOfUserSearchHitDTO(value: object): value is UserSearchHitDTO;
declare function UserSearchHitDTOFromJSON(json: any): UserSearchHitDTO;
declare function UserSearchHitDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSearchHitDTO;
declare function UserSearchHitDTOToJSON(json: any): UserSearchHitDTO;
declare function UserSearchHitDTOToJSONTyped(value?: UserSearchHitDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SearchUserQueryResult
 */
interface SearchUserQueryResult {
    /**
     *
     * @type {number}
     * @memberof SearchUserQueryResult
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof SearchUserQueryResult
     */
    perPage?: number;
    /**
     *
     * @type {number}
     * @memberof SearchUserQueryResult
     */
    totalCount?: number;
    /**
     *
     * @type {Array<UserSearchHitDTO>}
     * @memberof SearchUserQueryResult
     */
    users?: Array<UserSearchHitDTO>;
}
/**
 * Check if a given object implements the SearchUserQueryResult interface.
 */
declare function instanceOfSearchUserQueryResult(value: object): value is SearchUserQueryResult;
declare function SearchUserQueryResultFromJSON(json: any): SearchUserQueryResult;
declare function SearchUserQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchUserQueryResult;
declare function SearchUserQueryResultToJSON(json: any): SearchUserQueryResult;
declare function SearchUserQueryResultToJSONTyped(value?: SearchUserQueryResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ServiceAccountProfileDTO
 */
interface ServiceAccountProfileDTO {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof ServiceAccountProfileDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {string}
     * @memberof ServiceAccountProfileDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {Date}
     * @memberof ServiceAccountProfileDTO
     */
    createdAt?: Date;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountProfileDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof ServiceAccountProfileDTO
     */
    isDisabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ServiceAccountProfileDTO
     */
    isExternal?: boolean;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountProfileDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountProfileDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountProfileDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountProfileDTO
     */
    requiredBy?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceAccountProfileDTO
     */
    role?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ServiceAccountProfileDTO
     */
    teams?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ServiceAccountProfileDTO
     */
    tokens?: number;
    /**
     *
     * @type {Date}
     * @memberof ServiceAccountProfileDTO
     */
    updatedAt?: Date;
}
/**
 * Check if a given object implements the ServiceAccountProfileDTO interface.
 */
declare function instanceOfServiceAccountProfileDTO(value: object): value is ServiceAccountProfileDTO;
declare function ServiceAccountProfileDTOFromJSON(json: any): ServiceAccountProfileDTO;
declare function ServiceAccountProfileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceAccountProfileDTO;
declare function ServiceAccountProfileDTOToJSON(json: any): ServiceAccountProfileDTO;
declare function ServiceAccountProfileDTOToJSONTyped(value?: ServiceAccountProfileDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SetPermissionCommand
 */
interface SetPermissionCommand {
    /**
     *
     * @type {string}
     * @memberof SetPermissionCommand
     */
    permission?: string;
}
/**
 * Check if a given object implements the SetPermissionCommand interface.
 */
declare function instanceOfSetPermissionCommand(value: object): value is SetPermissionCommand;
declare function SetPermissionCommandFromJSON(json: any): SetPermissionCommand;
declare function SetPermissionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPermissionCommand;
declare function SetPermissionCommandToJSON(json: any): SetPermissionCommand;
declare function SetPermissionCommandToJSONTyped(value?: SetPermissionCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SetResourcePermissionCommand
 */
interface SetResourcePermissionCommand {
    /**
     *
     * @type {string}
     * @memberof SetResourcePermissionCommand
     */
    builtInRole?: string;
    /**
     *
     * @type {string}
     * @memberof SetResourcePermissionCommand
     */
    permission?: string;
    /**
     *
     * @type {number}
     * @memberof SetResourcePermissionCommand
     */
    teamId?: number;
    /**
     *
     * @type {number}
     * @memberof SetResourcePermissionCommand
     */
    userId?: number;
}
/**
 * Check if a given object implements the SetResourcePermissionCommand interface.
 */
declare function instanceOfSetResourcePermissionCommand(value: object): value is SetResourcePermissionCommand;
declare function SetResourcePermissionCommandFromJSON(json: any): SetResourcePermissionCommand;
declare function SetResourcePermissionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetResourcePermissionCommand;
declare function SetResourcePermissionCommandToJSON(json: any): SetResourcePermissionCommand;
declare function SetResourcePermissionCommandToJSONTyped(value?: SetResourcePermissionCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SetPermissionsCommand
 */
interface SetPermissionsCommand {
    /**
     *
     * @type {Array<SetResourcePermissionCommand>}
     * @memberof SetPermissionsCommand
     */
    permissions?: Array<SetResourcePermissionCommand>;
}
/**
 * Check if a given object implements the SetPermissionsCommand interface.
 */
declare function instanceOfSetPermissionsCommand(value: object): value is SetPermissionsCommand;
declare function SetPermissionsCommandFromJSON(json: any): SetPermissionsCommand;
declare function SetPermissionsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPermissionsCommand;
declare function SetPermissionsCommandToJSON(json: any): SetPermissionsCommand;
declare function SetPermissionsCommandToJSONTyped(value?: SetPermissionsCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SetRoleAssignmentsCommand
 */
interface SetRoleAssignmentsCommand {
    /**
     *
     * @type {Array<number>}
     * @memberof SetRoleAssignmentsCommand
     */
    serviceAccounts?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof SetRoleAssignmentsCommand
     */
    teams?: Array<number>;
    /**
     *
     * @type {Array<number>}
     * @memberof SetRoleAssignmentsCommand
     */
    users?: Array<number>;
}
/**
 * Check if a given object implements the SetRoleAssignmentsCommand interface.
 */
declare function instanceOfSetRoleAssignmentsCommand(value: object): value is SetRoleAssignmentsCommand;
declare function SetRoleAssignmentsCommandFromJSON(json: any): SetRoleAssignmentsCommand;
declare function SetRoleAssignmentsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetRoleAssignmentsCommand;
declare function SetRoleAssignmentsCommandToJSON(json: any): SetRoleAssignmentsCommand;
declare function SetRoleAssignmentsCommandToJSONTyped(value?: SetRoleAssignmentsCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SetTeamMembershipsCommand
 */
interface SetTeamMembershipsCommand {
    /**
     *
     * @type {Array<string>}
     * @memberof SetTeamMembershipsCommand
     */
    admins?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof SetTeamMembershipsCommand
     */
    members?: Array<string>;
}
/**
 * Check if a given object implements the SetTeamMembershipsCommand interface.
 */
declare function instanceOfSetTeamMembershipsCommand(value: object): value is SetTeamMembershipsCommand;
declare function SetTeamMembershipsCommandFromJSON(json: any): SetTeamMembershipsCommand;
declare function SetTeamMembershipsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetTeamMembershipsCommand;
declare function SetTeamMembershipsCommandToJSON(json: any): SetTeamMembershipsCommand;
declare function SetTeamMembershipsCommandToJSONTyped(value?: SetTeamMembershipsCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SetUserRolesCommand
 */
interface SetUserRolesCommand {
    /**
     *
     * @type {boolean}
     * @memberof SetUserRolesCommand
     */
    global?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof SetUserRolesCommand
     */
    includeHidden?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof SetUserRolesCommand
     */
    roleUids?: Array<string>;
}
/**
 * Check if a given object implements the SetUserRolesCommand interface.
 */
declare function instanceOfSetUserRolesCommand(value: object): value is SetUserRolesCommand;
declare function SetUserRolesCommandFromJSON(json: any): SetUserRolesCommand;
declare function SetUserRolesCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetUserRolesCommand;
declare function SetUserRolesCommandToJSON(json: any): SetUserRolesCommand;
declare function SetUserRolesCommandToJSONTyped(value?: SetUserRolesCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Silence silence
 * @export
 * @interface Silence
 */
interface Silence {
    /**
     * comment
     * @type {string}
     * @memberof Silence
     */
    comment: string;
    /**
     * created by
     * @type {string}
     * @memberof Silence
     */
    createdBy: string;
    /**
     * ends at
     * @type {Date}
     * @memberof Silence
     */
    endsAt: Date;
    /**
     * Matchers matchers
     * @type {Array<Matcher>}
     * @memberof Silence
     */
    matchers: Array<Matcher>;
    /**
     * starts at
     * @type {Date}
     * @memberof Silence
     */
    startsAt: Date;
}
/**
 * Check if a given object implements the Silence interface.
 */
declare function instanceOfSilence(value: object): value is Silence;
declare function SilenceFromJSON(json: any): Silence;
declare function SilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Silence;
declare function SilenceToJSON(json: any): Silence;
declare function SilenceToJSONTyped(value?: Silence | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Base snapshot without results
 * @export
 * @interface SnapshotDTO
 */
interface SnapshotDTO {
    /**
     *
     * @type {Date}
     * @memberof SnapshotDTO
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof SnapshotDTO
     */
    finished?: Date;
    /**
     *
     * @type {string}
     * @memberof SnapshotDTO
     */
    sessionUid?: string;
    /**
     *
     * @type {string}
     * @memberof SnapshotDTO
     */
    status?: SnapshotDTOStatusEnum;
    /**
     *
     * @type {string}
     * @memberof SnapshotDTO
     */
    uid?: string;
}
/**
 * @export
 */
declare const SnapshotDTOStatusEnum: {
    readonly Initializing: "INITIALIZING";
    readonly Creating: "CREATING";
    readonly PendingUpload: "PENDING_UPLOAD";
    readonly Uploading: "UPLOADING";
    readonly PendingProcessing: "PENDING_PROCESSING";
    readonly Processing: "PROCESSING";
    readonly Finished: "FINISHED";
    readonly Canceled: "CANCELED";
    readonly Error: "ERROR";
    readonly Unknown: "UNKNOWN";
};
type SnapshotDTOStatusEnum = typeof SnapshotDTOStatusEnum[keyof typeof SnapshotDTOStatusEnum];
/**
 * Check if a given object implements the SnapshotDTO interface.
 */
declare function instanceOfSnapshotDTO(value: object): value is SnapshotDTO;
declare function SnapshotDTOFromJSON(json: any): SnapshotDTO;
declare function SnapshotDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotDTO;
declare function SnapshotDTOToJSON(json: any): SnapshotDTO;
declare function SnapshotDTOToJSONTyped(value?: SnapshotDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SnapshotListResponseDTO
 */
interface SnapshotListResponseDTO {
    /**
     *
     * @type {Array<SnapshotDTO>}
     * @memberof SnapshotListResponseDTO
     */
    snapshots?: Array<SnapshotDTO>;
}
/**
 * Check if a given object implements the SnapshotListResponseDTO interface.
 */
declare function instanceOfSnapshotListResponseDTO(value: object): value is SnapshotListResponseDTO;
declare function SnapshotListResponseDTOFromJSON(json: any): SnapshotListResponseDTO;
declare function SnapshotListResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotListResponseDTO;
declare function SnapshotListResponseDTOToJSON(json: any): SnapshotListResponseDTO;
declare function SnapshotListResponseDTOToJSONTyped(value?: SnapshotListResponseDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SuccessResponseBody
 */
interface SuccessResponseBody {
    /**
     *
     * @type {string}
     * @memberof SuccessResponseBody
     */
    message?: string;
}
/**
 * Check if a given object implements the SuccessResponseBody interface.
 */
declare function instanceOfSuccessResponseBody(value: object): value is SuccessResponseBody;
declare function SuccessResponseBodyFromJSON(json: any): SuccessResponseBody;
declare function SuccessResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuccessResponseBody;
declare function SuccessResponseBodyToJSON(json: any): SuccessResponseBody;
declare function SuccessResponseBodyToJSONTyped(value?: SuccessResponseBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TeamGroupDTO
 */
interface TeamGroupDTO {
    /**
     *
     * @type {string}
     * @memberof TeamGroupDTO
     */
    groupId?: string;
    /**
     *
     * @type {number}
     * @memberof TeamGroupDTO
     */
    orgId?: number;
    /**
     *
     * @type {number}
     * @memberof TeamGroupDTO
     */
    teamId?: number;
}
/**
 * Check if a given object implements the TeamGroupDTO interface.
 */
declare function instanceOfTeamGroupDTO(value: object): value is TeamGroupDTO;
declare function TeamGroupDTOFromJSON(json: any): TeamGroupDTO;
declare function TeamGroupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamGroupDTO;
declare function TeamGroupDTOToJSON(json: any): TeamGroupDTO;
declare function TeamGroupDTOToJSONTyped(value?: TeamGroupDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TeamGroupMapping
 */
interface TeamGroupMapping {
    /**
     *
     * @type {string}
     * @memberof TeamGroupMapping
     */
    groupId?: string;
}
/**
 * Check if a given object implements the TeamGroupMapping interface.
 */
declare function instanceOfTeamGroupMapping(value: object): value is TeamGroupMapping;
declare function TeamGroupMappingFromJSON(json: any): TeamGroupMapping;
declare function TeamGroupMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamGroupMapping;
declare function TeamGroupMappingToJSON(json: any): TeamGroupMapping;
declare function TeamGroupMappingToJSONTyped(value?: TeamGroupMapping | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TeamMemberDTO
 */
interface TeamMemberDTO {
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    authModule?: string;
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    email?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof TeamMemberDTO
     */
    labels?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof TeamMemberDTO
     */
    orgId?: number;
    /**
     *
     * @type {number}
     * @memberof TeamMemberDTO
     */
    permission?: number;
    /**
     *
     * @type {number}
     * @memberof TeamMemberDTO
     */
    teamId?: number;
    /**
     *
     * @type {string}
     * @memberof TeamMemberDTO
     */
    teamUID?: string;
    /**
     *
     * @type {number}
     * @memberof TeamMemberDTO
     */
    userId?: number;
}
/**
 * Check if a given object implements the TeamMemberDTO interface.
 */
declare function instanceOfTeamMemberDTO(value: object): value is TeamMemberDTO;
declare function TeamMemberDTOFromJSON(json: any): TeamMemberDTO;
declare function TeamMemberDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamMemberDTO;
declare function TeamMemberDTOToJSON(json: any): TeamMemberDTO;
declare function TeamMemberDTOToJSONTyped(value?: TeamMemberDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TempUserDTO
 */
interface TempUserDTO {
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    code?: string;
    /**
     *
     * @type {Date}
     * @memberof TempUserDTO
     */
    createdOn?: Date;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    email?: string;
    /**
     *
     * @type {boolean}
     * @memberof TempUserDTO
     */
    emailSent?: boolean;
    /**
     *
     * @type {Date}
     * @memberof TempUserDTO
     */
    emailSentOn?: Date;
    /**
     *
     * @type {number}
     * @memberof TempUserDTO
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    invitedByEmail?: string;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    invitedByLogin?: string;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    invitedByName?: string;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof TempUserDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    role?: TempUserDTORoleEnum;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    status?: string;
    /**
     *
     * @type {string}
     * @memberof TempUserDTO
     */
    url?: string;
}
/**
 * @export
 */
declare const TempUserDTORoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type TempUserDTORoleEnum = typeof TempUserDTORoleEnum[keyof typeof TempUserDTORoleEnum];
/**
 * Check if a given object implements the TempUserDTO interface.
 */
declare function instanceOfTempUserDTO(value: object): value is TempUserDTO;
declare function TempUserDTOFromJSON(json: any): TempUserDTO;
declare function TempUserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TempUserDTO;
declare function TempUserDTOToJSON(json: any): TempUserDTO;
declare function TempUserDTOToJSONTyped(value?: TempUserDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TestReceiverConfigResult
 */
interface TestReceiverConfigResult {
    /**
     *
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    error?: string;
    /**
     *
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    status?: string;
    /**
     *
     * @type {string}
     * @memberof TestReceiverConfigResult
     */
    uid?: string;
}
/**
 * Check if a given object implements the TestReceiverConfigResult interface.
 */
declare function instanceOfTestReceiverConfigResult(value: object): value is TestReceiverConfigResult;
declare function TestReceiverConfigResultFromJSON(json: any): TestReceiverConfigResult;
declare function TestReceiverConfigResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiverConfigResult;
declare function TestReceiverConfigResultToJSON(json: any): TestReceiverConfigResult;
declare function TestReceiverConfigResultToJSONTyped(value?: TestReceiverConfigResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestReceiverResult
 */
interface TestReceiverResult {
    /**
     *
     * @type {Array<TestReceiverConfigResult>}
     * @memberof TestReceiverResult
     */
    grafanaManagedReceiverConfigs?: Array<TestReceiverConfigResult>;
    /**
     *
     * @type {string}
     * @memberof TestReceiverResult
     */
    name?: string;
}
/**
 * Check if a given object implements the TestReceiverResult interface.
 */
declare function instanceOfTestReceiverResult(value: object): value is TestReceiverResult;
declare function TestReceiverResultFromJSON(json: any): TestReceiverResult;
declare function TestReceiverResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiverResult;
declare function TestReceiverResultToJSON(json: any): TestReceiverResult;
declare function TestReceiverResultToJSONTyped(value?: TestReceiverResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TestReceiversConfigAlertParams
 */
interface TestReceiversConfigAlertParams {
    /**
     * A LabelSet is a collection of LabelName and LabelValue pairs.  The LabelSet
     * may be fully-qualified down to the point where it may resolve to a single
     * Metric in the data store or not.  All operations that occur within the realm
     * of a LabelSet can emit a vector of Metric entities to which the LabelSet may
     * match.
     * @type {{ [key: string]: string; }}
     * @memberof TestReceiversConfigAlertParams
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     * A LabelSet is a collection of LabelName and LabelValue pairs.  The LabelSet
     * may be fully-qualified down to the point where it may resolve to a single
     * Metric in the data store or not.  All operations that occur within the realm
     * of a LabelSet can emit a vector of Metric entities to which the LabelSet may
     * match.
     * @type {{ [key: string]: string; }}
     * @memberof TestReceiversConfigAlertParams
     */
    labels?: {
        [key: string]: string;
    };
}
/**
 * Check if a given object implements the TestReceiversConfigAlertParams interface.
 */
declare function instanceOfTestReceiversConfigAlertParams(value: object): value is TestReceiversConfigAlertParams;
declare function TestReceiversConfigAlertParamsFromJSON(json: any): TestReceiversConfigAlertParams;
declare function TestReceiversConfigAlertParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversConfigAlertParams;
declare function TestReceiversConfigAlertParamsToJSON(json: any): TestReceiversConfigAlertParams;
declare function TestReceiversConfigAlertParamsToJSONTyped(value?: TestReceiversConfigAlertParams | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestReceiversConfigBodyParams
 */
interface TestReceiversConfigBodyParams {
    /**
     *
     * @type {TestReceiversConfigAlertParams}
     * @memberof TestReceiversConfigBodyParams
     */
    alert?: TestReceiversConfigAlertParams;
    /**
     *
     * @type {Array<PostableApiReceiver>}
     * @memberof TestReceiversConfigBodyParams
     */
    receivers?: Array<PostableApiReceiver>;
}
/**
 * Check if a given object implements the TestReceiversConfigBodyParams interface.
 */
declare function instanceOfTestReceiversConfigBodyParams(value: object): value is TestReceiversConfigBodyParams;
declare function TestReceiversConfigBodyParamsFromJSON(json: any): TestReceiversConfigBodyParams;
declare function TestReceiversConfigBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversConfigBodyParams;
declare function TestReceiversConfigBodyParamsToJSON(json: any): TestReceiversConfigBodyParams;
declare function TestReceiversConfigBodyParamsToJSONTyped(value?: TestReceiversConfigBodyParams | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestReceiversResult
 */
interface TestReceiversResult {
    /**
     *
     * @type {TestReceiversConfigAlertParams}
     * @memberof TestReceiversResult
     */
    alert?: TestReceiversConfigAlertParams;
    /**
     *
     * @type {Date}
     * @memberof TestReceiversResult
     */
    notifiedAt?: Date;
    /**
     *
     * @type {Array<TestReceiverResult>}
     * @memberof TestReceiversResult
     */
    receivers?: Array<TestReceiverResult>;
}
/**
 * Check if a given object implements the TestReceiversResult interface.
 */
declare function instanceOfTestReceiversResult(value: object): value is TestReceiversResult;
declare function TestReceiversResultFromJSON(json: any): TestReceiversResult;
declare function TestReceiversResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversResult;
declare function TestReceiversResultToJSON(json: any): TestReceiversResult;
declare function TestReceiversResultToJSONTyped(value?: TestReceiversResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestRulePayload
 */
interface TestRulePayload {
    /**
     *
     * @type {string}
     * @memberof TestRulePayload
     */
    expr?: string;
    /**
     *
     * @type {EvalAlertConditionCommand}
     * @memberof TestRulePayload
     */
    grafanaCondition?: EvalAlertConditionCommand;
}
/**
 * Check if a given object implements the TestRulePayload interface.
 */
declare function instanceOfTestRulePayload(value: object): value is TestRulePayload;
declare function TestRulePayloadFromJSON(json: any): TestRulePayload;
declare function TestRulePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestRulePayload;
declare function TestRulePayloadToJSON(json: any): TestRulePayload;
declare function TestRulePayloadToJSONTyped(value?: TestRulePayload | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestRuleResponse
 */
interface TestRuleResponse {
    /**
     * Vector is basically only an alias for []Sample, but the contract is that
     * in a Vector, all Samples have the same timestamp.
     * @type {Array<Sample>}
     * @memberof TestRuleResponse
     */
    alerts?: Array<Sample>;
    /**
     *
     * @type {AlertInstancesResponse}
     * @memberof TestRuleResponse
     */
    grafanaAlertInstances?: AlertInstancesResponse;
}
/**
 * Check if a given object implements the TestRuleResponse interface.
 */
declare function instanceOfTestRuleResponse(value: object): value is TestRuleResponse;
declare function TestRuleResponseFromJSON(json: any): TestRuleResponse;
declare function TestRuleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestRuleResponse;
declare function TestRuleResponseToJSON(json: any): TestRuleResponse;
declare function TestRuleResponseToJSONTyped(value?: TestRuleResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestTemplatesConfigBodyParams
 */
interface TestTemplatesConfigBodyParams {
    /**
     * Alerts to use as data when testing the template.
     * @type {Array<PostableAlert>}
     * @memberof TestTemplatesConfigBodyParams
     */
    alerts?: Array<PostableAlert>;
    /**
     * Name of the template file.
     * @type {string}
     * @memberof TestTemplatesConfigBodyParams
     */
    name?: string;
    /**
     * Template string to test.
     * @type {string}
     * @memberof TestTemplatesConfigBodyParams
     */
    template?: string;
}
/**
 * Check if a given object implements the TestTemplatesConfigBodyParams interface.
 */
declare function instanceOfTestTemplatesConfigBodyParams(value: object): value is TestTemplatesConfigBodyParams;
declare function TestTemplatesConfigBodyParamsFromJSON(json: any): TestTemplatesConfigBodyParams;
declare function TestTemplatesConfigBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesConfigBodyParams;
declare function TestTemplatesConfigBodyParamsToJSON(json: any): TestTemplatesConfigBodyParams;
declare function TestTemplatesConfigBodyParamsToJSONTyped(value?: TestTemplatesConfigBodyParams | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TestTemplatesErrorResult
 */
interface TestTemplatesErrorResult {
    /**
     * Kind of template error that occurred.
     * @type {string}
     * @memberof TestTemplatesErrorResult
     */
    kind?: TestTemplatesErrorResultKindEnum;
    /**
     * Error message.
     * @type {string}
     * @memberof TestTemplatesErrorResult
     */
    message?: string;
    /**
     * Name of the associated template for this error. Will be empty if the Kind is "invalid_template".
     * @type {string}
     * @memberof TestTemplatesErrorResult
     */
    name?: string;
}
/**
 * @export
 */
declare const TestTemplatesErrorResultKindEnum: {
    readonly InvalidTemplate: "invalid_template";
    readonly ExecutionError: "execution_error";
};
type TestTemplatesErrorResultKindEnum = typeof TestTemplatesErrorResultKindEnum[keyof typeof TestTemplatesErrorResultKindEnum];
/**
 * Check if a given object implements the TestTemplatesErrorResult interface.
 */
declare function instanceOfTestTemplatesErrorResult(value: object): value is TestTemplatesErrorResult;
declare function TestTemplatesErrorResultFromJSON(json: any): TestTemplatesErrorResult;
declare function TestTemplatesErrorResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesErrorResult;
declare function TestTemplatesErrorResultToJSON(json: any): TestTemplatesErrorResult;
declare function TestTemplatesErrorResultToJSONTyped(value?: TestTemplatesErrorResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TestTemplatesResult
 */
interface TestTemplatesResult {
    /**
     * Name of the associated template definition for this result.
     * @type {string}
     * @memberof TestTemplatesResult
     */
    name?: string;
    /**
     * Interpolated value of the template.
     * @type {string}
     * @memberof TestTemplatesResult
     */
    text?: string;
}
/**
 * Check if a given object implements the TestTemplatesResult interface.
 */
declare function instanceOfTestTemplatesResult(value: object): value is TestTemplatesResult;
declare function TestTemplatesResultFromJSON(json: any): TestTemplatesResult;
declare function TestTemplatesResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesResult;
declare function TestTemplatesResultToJSON(json: any): TestTemplatesResult;
declare function TestTemplatesResultToJSONTyped(value?: TestTemplatesResult | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface TestTemplatesResults
 */
interface TestTemplatesResults {
    /**
     *
     * @type {Array<TestTemplatesErrorResult>}
     * @memberof TestTemplatesResults
     */
    errors?: Array<TestTemplatesErrorResult>;
    /**
     *
     * @type {Array<TestTemplatesResult>}
     * @memberof TestTemplatesResults
     */
    results?: Array<TestTemplatesResult>;
}
/**
 * Check if a given object implements the TestTemplatesResults interface.
 */
declare function instanceOfTestTemplatesResults(value: object): value is TestTemplatesResults;
declare function TestTemplatesResultsFromJSON(json: any): TestTemplatesResults;
declare function TestTemplatesResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesResults;
declare function TestTemplatesResultsToJSON(json: any): TestTemplatesResults;
declare function TestTemplatesResultsToJSONTyped(value?: TestTemplatesResults | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Token
 */
interface Token {
    /**
     *
     * @type {string}
     * @memberof Token
     */
    account?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    anonymousRatio?: number;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    company?: string;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    detailsUrl?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    exp?: number;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    iat?: number;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    includedUsers?: number;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    iss?: string;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    jti?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    lexp?: number;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    licExpWarnDays?: number;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    lid?: string;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    limitBy?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    maxConcurrentUserSessions?: number;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    nbf?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof Token
     */
    prod?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    slug?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    status?: number;
    /**
     *
     * @type {string}
     * @memberof Token
     */
    sub?: string;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    tokExpWarnDays?: number;
    /**
     *
     * @type {boolean}
     * @memberof Token
     */
    trial?: boolean;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    trialExp?: number;
    /**
     *
     * @type {number}
     * @memberof Token
     */
    updateDays?: number;
    /**
     *
     * @type {boolean}
     * @memberof Token
     */
    usageBilling?: boolean;
}
/**
 * Check if a given object implements the Token interface.
 */
declare function instanceOfToken(value: object): value is Token;
declare function TokenFromJSON(json: any): Token;
declare function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token;
declare function TokenToJSON(json: any): Token;
declare function TokenToJSONTyped(value?: Token | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TokenDTO
 */
interface TokenDTO {
    /**
     *
     * @type {Date}
     * @memberof TokenDTO
     */
    created?: Date;
    /**
     *
     * @type {Date}
     * @memberof TokenDTO
     */
    expiration?: Date;
    /**
     *
     * @type {boolean}
     * @memberof TokenDTO
     */
    hasExpired?: boolean;
    /**
     *
     * @type {number}
     * @memberof TokenDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof TokenDTO
     */
    isRevoked?: boolean;
    /**
     *
     * @type {Date}
     * @memberof TokenDTO
     */
    lastUsedAt?: Date;
    /**
     *
     * @type {string}
     * @memberof TokenDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof TokenDTO
     */
    secondsUntilExpiration?: number;
}
/**
 * Check if a given object implements the TokenDTO interface.
 */
declare function instanceOfTokenDTO(value: object): value is TokenDTO;
declare function TokenDTOFromJSON(json: any): TokenDTO;
declare function TokenDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenDTO;
declare function TokenDTOToJSON(json: any): TokenDTO;
declare function TokenDTOToJSONTyped(value?: TokenDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * +k8s:deepcopy-gen=false
 * @export
 * @interface TypeMeta
 */
interface TypeMeta {
    /**
     * APIVersion defines the versioned schema of this representation of an object.
     * Servers should convert recognized schemas to the latest internal value, and
     * may reject unrecognized values.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * +optional
     * @type {string}
     * @memberof TypeMeta
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents.
     * Servers may infer this from the endpoint the client submits requests to.
     * Cannot be updated.
     * In CamelCase.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * +optional
     * @type {string}
     * @memberof TypeMeta
     */
    kind?: string;
}
/**
 * Check if a given object implements the TypeMeta interface.
 */
declare function instanceOfTypeMeta(value: object): value is TypeMeta;
declare function TypeMetaFromJSON(json: any): TypeMeta;
declare function TypeMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypeMeta;
declare function TypeMetaToJSON(json: any): TypeMeta;
declare function TypeMetaToJSONTyped(value?: TypeMeta | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateAnnotationsCmd
 */
interface UpdateAnnotationsCmd {
    /**
     *
     * @type {object}
     * @memberof UpdateAnnotationsCmd
     */
    data?: object;
    /**
     *
     * @type {number}
     * @memberof UpdateAnnotationsCmd
     */
    id?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateAnnotationsCmd
     */
    tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UpdateAnnotationsCmd
     */
    text?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateAnnotationsCmd
     */
    time?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateAnnotationsCmd
     */
    timeEnd?: number;
}
/**
 * Check if a given object implements the UpdateAnnotationsCmd interface.
 */
declare function instanceOfUpdateAnnotationsCmd(value: object): value is UpdateAnnotationsCmd;
declare function UpdateAnnotationsCmdFromJSON(json: any): UpdateAnnotationsCmd;
declare function UpdateAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAnnotationsCmd;
declare function UpdateAnnotationsCmdToJSON(json: any): UpdateAnnotationsCmd;
declare function UpdateAnnotationsCmdToJSONTyped(value?: UpdateAnnotationsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * UpdateCorrelationCommand is the command for updating a correlation
 * @export
 * @interface UpdateCorrelationCommand
 */
interface UpdateCorrelationCommand {
    /**
     *
     * @type {CorrelationConfigUpdateDTO}
     * @memberof UpdateCorrelationCommand
     */
    config?: CorrelationConfigUpdateDTO;
    /**
     * Optional description of the correlation
     * @type {string}
     * @memberof UpdateCorrelationCommand
     */
    description?: string;
    /**
     * Optional label identifying the correlation
     * @type {string}
     * @memberof UpdateCorrelationCommand
     */
    label?: string;
}
/**
 * Check if a given object implements the UpdateCorrelationCommand interface.
 */
declare function instanceOfUpdateCorrelationCommand(value: object): value is UpdateCorrelationCommand;
declare function UpdateCorrelationCommandFromJSON(json: any): UpdateCorrelationCommand;
declare function UpdateCorrelationCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCorrelationCommand;
declare function UpdateCorrelationCommandToJSON(json: any): UpdateCorrelationCommand;
declare function UpdateCorrelationCommandToJSONTyped(value?: UpdateCorrelationCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateCorrelationResponseBody
 */
interface UpdateCorrelationResponseBody {
    /**
     *
     * @type {string}
     * @memberof UpdateCorrelationResponseBody
     */
    message?: string;
    /**
     *
     * @type {Correlation}
     * @memberof UpdateCorrelationResponseBody
     */
    result?: Correlation;
}
/**
 * Check if a given object implements the UpdateCorrelationResponseBody interface.
 */
declare function instanceOfUpdateCorrelationResponseBody(value: object): value is UpdateCorrelationResponseBody;
declare function UpdateCorrelationResponseBodyFromJSON(json: any): UpdateCorrelationResponseBody;
declare function UpdateCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCorrelationResponseBody;
declare function UpdateCorrelationResponseBodyToJSON(json: any): UpdateCorrelationResponseBody;
declare function UpdateCorrelationResponseBodyToJSONTyped(value?: UpdateCorrelationResponseBody | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateDashboardACLCommand
 */
interface UpdateDashboardACLCommand {
    /**
     *
     * @type {Array<DashboardACLUpdateItem>}
     * @memberof UpdateDashboardACLCommand
     */
    items?: Array<DashboardACLUpdateItem>;
}
/**
 * Check if a given object implements the UpdateDashboardACLCommand interface.
 */
declare function instanceOfUpdateDashboardACLCommand(value: object): value is UpdateDashboardACLCommand;
declare function UpdateDashboardACLCommandFromJSON(json: any): UpdateDashboardACLCommand;
declare function UpdateDashboardACLCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDashboardACLCommand;
declare function UpdateDashboardACLCommandToJSON(json: any): UpdateDashboardACLCommand;
declare function UpdateDashboardACLCommandToJSONTyped(value?: UpdateDashboardACLCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Also acts as api DTO
 * @export
 * @interface UpdateDataSourceCommand
 */
interface UpdateDataSourceCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    access?: string;
    /**
     *
     * @type {boolean}
     * @memberof UpdateDataSourceCommand
     */
    basicAuth?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    basicAuthUser?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    database?: string;
    /**
     *
     * @type {boolean}
     * @memberof UpdateDataSourceCommand
     */
    isDefault?: boolean;
    /**
     *
     * @type {object}
     * @memberof UpdateDataSourceCommand
     */
    jsonData?: object;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    name?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof UpdateDataSourceCommand
     */
    secureJsonData?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    uid?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDataSourceCommand
     */
    user?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateDataSourceCommand
     */
    version?: number;
    /**
     *
     * @type {boolean}
     * @memberof UpdateDataSourceCommand
     */
    withCredentials?: boolean;
}
/**
 * Check if a given object implements the UpdateDataSourceCommand interface.
 */
declare function instanceOfUpdateDataSourceCommand(value: object): value is UpdateDataSourceCommand;
declare function UpdateDataSourceCommandFromJSON(json: any): UpdateDataSourceCommand;
declare function UpdateDataSourceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDataSourceCommand;
declare function UpdateDataSourceCommandToJSON(json: any): UpdateDataSourceCommand;
declare function UpdateDataSourceCommandToJSONTyped(value?: UpdateDataSourceCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * UpdateFolderCommand captures the information required by the folder service
 * to update a folder. Use Move to update a folder's parent folder.
 * @export
 * @interface UpdateFolderCommand
 */
interface UpdateFolderCommand {
    /**
     * NewDescription it's an optional parameter used for overriding the existing folder description
     * @type {string}
     * @memberof UpdateFolderCommand
     */
    description?: string;
    /**
     * Overwrite only used by the legacy folder implementation
     * @type {boolean}
     * @memberof UpdateFolderCommand
     */
    overwrite?: boolean;
    /**
     * NewTitle it's an optional parameter used for overriding the existing folder title
     * @type {string}
     * @memberof UpdateFolderCommand
     */
    title?: string;
    /**
     * Version only used by the legacy folder implementation
     * @type {number}
     * @memberof UpdateFolderCommand
     */
    version?: number;
}
/**
 * Check if a given object implements the UpdateFolderCommand interface.
 */
declare function instanceOfUpdateFolderCommand(value: object): value is UpdateFolderCommand;
declare function UpdateFolderCommandFromJSON(json: any): UpdateFolderCommand;
declare function UpdateFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFolderCommand;
declare function UpdateFolderCommandToJSON(json: any): UpdateFolderCommand;
declare function UpdateFolderCommandToJSONTyped(value?: UpdateFolderCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateOrgAddressForm
 */
interface UpdateOrgAddressForm {
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    address1?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    address2?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateOrgAddressForm
     */
    zipcode?: string;
}
/**
 * Check if a given object implements the UpdateOrgAddressForm interface.
 */
declare function instanceOfUpdateOrgAddressForm(value: object): value is UpdateOrgAddressForm;
declare function UpdateOrgAddressFormFromJSON(json: any): UpdateOrgAddressForm;
declare function UpdateOrgAddressFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgAddressForm;
declare function UpdateOrgAddressFormToJSON(json: any): UpdateOrgAddressForm;
declare function UpdateOrgAddressFormToJSONTyped(value?: UpdateOrgAddressForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateOrgForm
 */
interface UpdateOrgForm {
    /**
     *
     * @type {string}
     * @memberof UpdateOrgForm
     */
    name?: string;
}
/**
 * Check if a given object implements the UpdateOrgForm interface.
 */
declare function instanceOfUpdateOrgForm(value: object): value is UpdateOrgForm;
declare function UpdateOrgFormFromJSON(json: any): UpdateOrgForm;
declare function UpdateOrgFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgForm;
declare function UpdateOrgFormToJSON(json: any): UpdateOrgForm;
declare function UpdateOrgFormToJSONTyped(value?: UpdateOrgForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateOrgUserCommand
 */
interface UpdateOrgUserCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateOrgUserCommand
     */
    role?: UpdateOrgUserCommandRoleEnum;
}
/**
 * @export
 */
declare const UpdateOrgUserCommandRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type UpdateOrgUserCommandRoleEnum = typeof UpdateOrgUserCommandRoleEnum[keyof typeof UpdateOrgUserCommandRoleEnum];
/**
 * Check if a given object implements the UpdateOrgUserCommand interface.
 */
declare function instanceOfUpdateOrgUserCommand(value: object): value is UpdateOrgUserCommand;
declare function UpdateOrgUserCommandFromJSON(json: any): UpdateOrgUserCommand;
declare function UpdateOrgUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgUserCommand;
declare function UpdateOrgUserCommandToJSON(json: any): UpdateOrgUserCommand;
declare function UpdateOrgUserCommandToJSONTyped(value?: UpdateOrgUserCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdatePlaylistCommand
 */
interface UpdatePlaylistCommand {
    /**
     *
     * @type {string}
     * @memberof UpdatePlaylistCommand
     */
    interval?: string;
    /**
     *
     * @type {Array<PlaylistItem>}
     * @memberof UpdatePlaylistCommand
     */
    items?: Array<PlaylistItem>;
    /**
     *
     * @type {string}
     * @memberof UpdatePlaylistCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePlaylistCommand
     */
    uid?: string;
}
/**
 * Check if a given object implements the UpdatePlaylistCommand interface.
 */
declare function instanceOfUpdatePlaylistCommand(value: object): value is UpdatePlaylistCommand;
declare function UpdatePlaylistCommandFromJSON(json: any): UpdatePlaylistCommand;
declare function UpdatePlaylistCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePlaylistCommand;
declare function UpdatePlaylistCommandToJSON(json: any): UpdatePlaylistCommand;
declare function UpdatePlaylistCommandToJSONTyped(value?: UpdatePlaylistCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdatePrefsCmd
 */
interface UpdatePrefsCmd {
    /**
     *
     * @type {Array<string>}
     * @memberof UpdatePrefsCmd
     */
    cookies?: Array<string>;
    /**
     * The numerical :id of a favorited dashboard
     * @type {number}
     * @memberof UpdatePrefsCmd
     */
    homeDashboardId?: number;
    /**
     *
     * @type {string}
     * @memberof UpdatePrefsCmd
     */
    homeDashboardUID?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePrefsCmd
     */
    language?: string;
    /**
     *
     * @type {NavbarPreference}
     * @memberof UpdatePrefsCmd
     */
    navbar?: NavbarPreference;
    /**
     *
     * @type {QueryHistoryPreference}
     * @memberof UpdatePrefsCmd
     */
    queryHistory?: QueryHistoryPreference;
    /**
     *
     * @type {string}
     * @memberof UpdatePrefsCmd
     */
    theme?: UpdatePrefsCmdThemeEnum;
    /**
     *
     * @type {string}
     * @memberof UpdatePrefsCmd
     */
    timezone?: UpdatePrefsCmdTimezoneEnum;
    /**
     *
     * @type {string}
     * @memberof UpdatePrefsCmd
     */
    weekStart?: string;
}
/**
 * @export
 */
declare const UpdatePrefsCmdThemeEnum: {
    readonly Light: "light";
    readonly Dark: "dark";
    readonly System: "system";
};
type UpdatePrefsCmdThemeEnum = typeof UpdatePrefsCmdThemeEnum[keyof typeof UpdatePrefsCmdThemeEnum];
/**
 * @export
 */
declare const UpdatePrefsCmdTimezoneEnum: {
    readonly Utc: "utc";
    readonly Browser: "browser";
};
type UpdatePrefsCmdTimezoneEnum = typeof UpdatePrefsCmdTimezoneEnum[keyof typeof UpdatePrefsCmdTimezoneEnum];
/**
 * Check if a given object implements the UpdatePrefsCmd interface.
 */
declare function instanceOfUpdatePrefsCmd(value: object): value is UpdatePrefsCmd;
declare function UpdatePrefsCmdFromJSON(json: any): UpdatePrefsCmd;
declare function UpdatePrefsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePrefsCmd;
declare function UpdatePrefsCmdToJSON(json: any): UpdatePrefsCmd;
declare function UpdatePrefsCmdToJSONTyped(value?: UpdatePrefsCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateProviderSettingsRequest
 */
interface UpdateProviderSettingsRequest {
    /**
     *
     * @type {string}
     * @memberof UpdateProviderSettingsRequest
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateProviderSettingsRequest
     */
    provider?: string;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof UpdateProviderSettingsRequest
     */
    settings?: {
        [key: string]: object;
    };
}
/**
 * Check if a given object implements the UpdateProviderSettingsRequest interface.
 */
declare function instanceOfUpdateProviderSettingsRequest(value: object): value is UpdateProviderSettingsRequest;
declare function UpdateProviderSettingsRequestFromJSON(json: any): UpdateProviderSettingsRequest;
declare function UpdateProviderSettingsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProviderSettingsRequest;
declare function UpdateProviderSettingsRequestToJSON(json: any): UpdateProviderSettingsRequest;
declare function UpdateProviderSettingsRequestToJSONTyped(value?: UpdateProviderSettingsRequest | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateQuotaCmd
 */
interface UpdateQuotaCmd {
    /**
     *
     * @type {number}
     * @memberof UpdateQuotaCmd
     */
    limit?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateQuotaCmd
     */
    target?: string;
}
/**
 * Check if a given object implements the UpdateQuotaCmd interface.
 */
declare function instanceOfUpdateQuotaCmd(value: object): value is UpdateQuotaCmd;
declare function UpdateQuotaCmdFromJSON(json: any): UpdateQuotaCmd;
declare function UpdateQuotaCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateQuotaCmd;
declare function UpdateQuotaCmdToJSON(json: any): UpdateQuotaCmd;
declare function UpdateQuotaCmdToJSONTyped(value?: UpdateQuotaCmd | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateRoleCommand
 */
interface UpdateRoleCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateRoleCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateRoleCommand
     */
    displayName?: string;
    /**
     *
     * @type {boolean}
     * @memberof UpdateRoleCommand
     */
    global?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateRoleCommand
     */
    group?: string;
    /**
     *
     * @type {boolean}
     * @memberof UpdateRoleCommand
     */
    hidden?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateRoleCommand
     */
    name?: string;
    /**
     *
     * @type {Array<Permission>}
     * @memberof UpdateRoleCommand
     */
    permissions?: Array<Permission>;
    /**
     *
     * @type {number}
     * @memberof UpdateRoleCommand
     */
    version?: number;
}
/**
 * Check if a given object implements the UpdateRoleCommand interface.
 */
declare function instanceOfUpdateRoleCommand(value: object): value is UpdateRoleCommand;
declare function UpdateRoleCommandFromJSON(json: any): UpdateRoleCommand;
declare function UpdateRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRoleCommand;
declare function UpdateRoleCommandToJSON(json: any): UpdateRoleCommand;
declare function UpdateRoleCommandToJSONTyped(value?: UpdateRoleCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateRuleGroupResponse
 */
interface UpdateRuleGroupResponse {
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    created?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    deleted?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UpdateRuleGroupResponse
     */
    message?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateRuleGroupResponse
     */
    updated?: Array<string>;
}
/**
 * Check if a given object implements the UpdateRuleGroupResponse interface.
 */
declare function instanceOfUpdateRuleGroupResponse(value: object): value is UpdateRuleGroupResponse;
declare function UpdateRuleGroupResponseFromJSON(json: any): UpdateRuleGroupResponse;
declare function UpdateRuleGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRuleGroupResponse;
declare function UpdateRuleGroupResponseToJSON(json: any): UpdateRuleGroupResponse;
declare function UpdateRuleGroupResponseToJSONTyped(value?: UpdateRuleGroupResponse | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface UpdateServiceAccount200Response
 */
interface UpdateServiceAccount200Response {
    /**
     *
     * @type {number}
     * @memberof UpdateServiceAccount200Response
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceAccount200Response
     */
    message?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceAccount200Response
     */
    name?: string;
    /**
     *
     * @type {ServiceAccountProfileDTO}
     * @memberof UpdateServiceAccount200Response
     */
    serviceaccount?: ServiceAccountProfileDTO;
}
/**
 * Check if a given object implements the UpdateServiceAccount200Response interface.
 */
declare function instanceOfUpdateServiceAccount200Response(value: object): value is UpdateServiceAccount200Response;
declare function UpdateServiceAccount200ResponseFromJSON(json: any): UpdateServiceAccount200Response;
declare function UpdateServiceAccount200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccount200Response;
declare function UpdateServiceAccount200ResponseToJSON(json: any): UpdateServiceAccount200Response;
declare function UpdateServiceAccount200ResponseToJSONTyped(value?: UpdateServiceAccount200Response | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateServiceAccountForm
 */
interface UpdateServiceAccountForm {
    /**
     *
     * @type {boolean}
     * @memberof UpdateServiceAccountForm
     */
    isDisabled?: boolean;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceAccountForm
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceAccountForm
     */
    role?: UpdateServiceAccountFormRoleEnum;
    /**
     *
     * @type {number}
     * @memberof UpdateServiceAccountForm
     */
    serviceAccountId?: number;
}
/**
 * @export
 */
declare const UpdateServiceAccountFormRoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type UpdateServiceAccountFormRoleEnum = typeof UpdateServiceAccountFormRoleEnum[keyof typeof UpdateServiceAccountFormRoleEnum];
/**
 * Check if a given object implements the UpdateServiceAccountForm interface.
 */
declare function instanceOfUpdateServiceAccountForm(value: object): value is UpdateServiceAccountForm;
declare function UpdateServiceAccountFormFromJSON(json: any): UpdateServiceAccountForm;
declare function UpdateServiceAccountFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccountForm;
declare function UpdateServiceAccountFormToJSON(json: any): UpdateServiceAccountForm;
declare function UpdateServiceAccountFormToJSONTyped(value?: UpdateServiceAccountForm | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateTeamCommand
 */
interface UpdateTeamCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateTeamCommand
     */
    email?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateTeamCommand
     */
    iD?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateTeamCommand
     */
    name?: string;
}
/**
 * Check if a given object implements the UpdateTeamCommand interface.
 */
declare function instanceOfUpdateTeamCommand(value: object): value is UpdateTeamCommand;
declare function UpdateTeamCommandFromJSON(json: any): UpdateTeamCommand;
declare function UpdateTeamCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamCommand;
declare function UpdateTeamCommandToJSON(json: any): UpdateTeamCommand;
declare function UpdateTeamCommandToJSONTyped(value?: UpdateTeamCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateTeamMemberCommand
 */
interface UpdateTeamMemberCommand {
    /**
     *
     * @type {number}
     * @memberof UpdateTeamMemberCommand
     */
    permission?: number;
}
/**
 * Check if a given object implements the UpdateTeamMemberCommand interface.
 */
declare function instanceOfUpdateTeamMemberCommand(value: object): value is UpdateTeamMemberCommand;
declare function UpdateTeamMemberCommandFromJSON(json: any): UpdateTeamMemberCommand;
declare function UpdateTeamMemberCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamMemberCommand;
declare function UpdateTeamMemberCommandToJSON(json: any): UpdateTeamMemberCommand;
declare function UpdateTeamMemberCommandToJSONTyped(value?: UpdateTeamMemberCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UpdateUserCommand
 */
interface UpdateUserCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateUserCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserCommand
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateUserCommand
     */
    theme?: string;
}
/**
 * Check if a given object implements the UpdateUserCommand interface.
 */
declare function instanceOfUpdateUserCommand(value: object): value is UpdateUserCommand;
declare function UpdateUserCommandFromJSON(json: any): UpdateUserCommand;
declare function UpdateUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserCommand;
declare function UpdateUserCommandToJSON(json: any): UpdateUserCommand;
declare function UpdateUserCommandToJSONTyped(value?: UpdateUserCommand | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserLookupDTO
 */
interface UserLookupDTO {
    /**
     *
     * @type {string}
     * @memberof UserLookupDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {string}
     * @memberof UserLookupDTO
     */
    login?: string;
    /**
     *
     * @type {number}
     * @memberof UserLookupDTO
     */
    userId?: number;
}
/**
 * Check if a given object implements the UserLookupDTO interface.
 */
declare function instanceOfUserLookupDTO(value: object): value is UserLookupDTO;
declare function UserLookupDTOFromJSON(json: any): UserLookupDTO;
declare function UserLookupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserLookupDTO;
declare function UserLookupDTOToJSON(json: any): UserLookupDTO;
declare function UserLookupDTOToJSONTyped(value?: UserLookupDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserOrgDTO
 */
interface UserOrgDTO {
    /**
     *
     * @type {string}
     * @memberof UserOrgDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof UserOrgDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof UserOrgDTO
     */
    role?: UserOrgDTORoleEnum;
}
/**
 * @export
 */
declare const UserOrgDTORoleEnum: {
    readonly None: "None";
    readonly Viewer: "Viewer";
    readonly Editor: "Editor";
    readonly Admin: "Admin";
};
type UserOrgDTORoleEnum = typeof UserOrgDTORoleEnum[keyof typeof UserOrgDTORoleEnum];
/**
 * Check if a given object implements the UserOrgDTO interface.
 */
declare function instanceOfUserOrgDTO(value: object): value is UserOrgDTO;
declare function UserOrgDTOFromJSON(json: any): UserOrgDTO;
declare function UserOrgDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOrgDTO;
declare function UserOrgDTOToJSON(json: any): UserOrgDTO;
declare function UserOrgDTOToJSONTyped(value?: UserOrgDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface UserProfileDTO
 */
interface UserProfileDTO {
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof UserProfileDTO
     */
    accessControl?: {
        [key: string]: boolean;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof UserProfileDTO
     */
    authLabels?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    avatarUrl?: string;
    /**
     *
     * @type {Date}
     * @memberof UserProfileDTO
     */
    createdAt?: Date;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    email?: string;
    /**
     *
     * @type {number}
     * @memberof UserProfileDTO
     */
    id?: number;
    /**
     *
     * @type {boolean}
     * @memberof UserProfileDTO
     */
    isDisabled?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserProfileDTO
     */
    isExternal?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserProfileDTO
     */
    isExternallySynced?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserProfileDTO
     */
    isGrafanaAdmin?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof UserProfileDTO
     */
    isGrafanaAdminExternallySynced?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    login?: string;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof UserProfileDTO
     */
    orgId?: number;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    theme?: string;
    /**
     *
     * @type {string}
     * @memberof UserProfileDTO
     */
    uid?: string;
    /**
     *
     * @type {Date}
     * @memberof UserProfileDTO
     */
    updatedAt?: Date;
}
/**
 * Check if a given object implements the UserProfileDTO interface.
 */
declare function instanceOfUserProfileDTO(value: object): value is UserProfileDTO;
declare function UserProfileDTOFromJSON(json: any): UserProfileDTO;
declare function UserProfileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileDTO;
declare function UserProfileDTOToJSON(json: any): UserProfileDTO;
declare function UserProfileDTOToJSONTyped(value?: UserProfileDTO | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * UserToken represents a user token
 * @export
 * @interface UserToken
 */
interface UserToken {
    /**
     *
     * @type {string}
     * @memberof UserToken
     */
    authToken?: string;
    /**
     *
     * @type {boolean}
     * @memberof UserToken
     */
    authTokenSeen?: boolean;
    /**
     *
     * @type {string}
     * @memberof UserToken
     */
    clientIp?: string;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    createdAt?: number;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof UserToken
     */
    prevAuthToken?: string;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    revokedAt?: number;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    rotatedAt?: number;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    seenAt?: number;
    /**
     *
     * @type {string}
     * @memberof UserToken
     */
    unhashedToken?: string;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    updatedAt?: number;
    /**
     *
     * @type {string}
     * @memberof UserToken
     */
    userAgent?: string;
    /**
     *
     * @type {number}
     * @memberof UserToken
     */
    userId?: number;
}
/**
 * Check if a given object implements the UserToken interface.
 */
declare function instanceOfUserToken(value: object): value is UserToken;
declare function UserTokenFromJSON(json: any): UserToken;
declare function UserTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserToken;
declare function UserTokenToJSON(json: any): UserToken;
declare function UserTokenToJSONTyped(value?: UserToken | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ValidationError
 */
interface ValidationError {
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    msg?: string;
}
/**
 * Check if a given object implements the ValidationError interface.
 */
declare function instanceOfValidationError(value: object): value is ValidationError;
declare function ValidationErrorFromJSON(json: any): ValidationError;
declare function ValidationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationError;
declare function ValidationErrorToJSON(json: any): ValidationError;
declare function ValidationErrorToJSONTyped(value?: ValidationError | null, ignoreDiscriminator?: boolean): any;

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface AccessControlApiAddTeamRoleRequest {
    teamId: number;
    body: AddTeamRoleCommand;
}
interface AccessControlApiAddUserRoleRequest {
    userId: number;
    body: AddUserRoleCommand;
}
interface AccessControlApiCreateRoleRequest {
    body: CreateRoleForm;
}
interface AccessControlApiDeleteRoleRequest {
    roleUID: string;
    force?: boolean;
    global?: boolean;
}
interface AccessControlApiGetResourceDescriptionRequest {
    resource: string;
}
interface AccessControlApiGetResourcePermissionsRequest {
    resource: string;
    resourceID: string;
}
interface AccessControlApiGetRoleRequest {
    roleUID: string;
}
interface AccessControlApiGetRoleAssignmentsRequest {
    roleUID: string;
}
interface AccessControlApiListRolesRequest {
    delegatable?: boolean;
    includeHidden?: boolean;
}
interface AccessControlApiListTeamRolesRequest {
    teamId: number;
}
interface AccessControlApiListTeamsRolesRequest {
    body: RolesSearchQuery;
}
interface AccessControlApiListUserRolesRequest {
    userId: number;
}
interface AccessControlApiListUsersRolesRequest {
    body: RolesSearchQuery;
}
interface AccessControlApiRemoveTeamRoleRequest {
    roleUID: string;
    teamId: number;
}
interface AccessControlApiRemoveUserRoleRequest {
    roleUID: string;
    userId: number;
    global?: boolean;
}
interface AccessControlApiSetResourcePermissionsRequest {
    resource: string;
    resourceID: string;
    body: SetPermissionsCommand;
}
interface AccessControlApiSetResourcePermissionsForBuiltInRoleRequest {
    resource: string;
    resourceID: string;
    builtInRole: string;
    body: SetPermissionCommand;
}
interface AccessControlApiSetResourcePermissionsForTeamRequest {
    resource: string;
    resourceID: string;
    teamID: number;
    body: SetPermissionCommand;
}
interface AccessControlApiSetResourcePermissionsForUserRequest {
    resource: string;
    resourceID: string;
    userID: number;
    body: SetPermissionCommand;
}
interface AccessControlApiSetRoleAssignmentsRequest {
    roleUID: string;
    body: SetRoleAssignmentsCommand;
}
interface AccessControlApiSetTeamRolesRequest {
    teamId: number;
}
interface AccessControlApiSetUserRolesRequest {
    userId: number;
    body: SetUserRolesCommand;
}
interface AccessControlApiUpdateRoleRequest {
    roleUID: string;
    body: UpdateRoleCommand;
}
/**
 *
 */
declare class AccessControlApi extends BaseAPI {
    /**
     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.
     * Add team role.
     */
    addTeamRoleRaw(requestParameters: AccessControlApiAddTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.
     * Add team role.
     */
    addTeamRole(requestParameters: AccessControlApiAddTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Add a user role assignment.
     */
    addUserRoleRaw(requestParameters: AccessControlApiAddUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Add a user role assignment.
     */
    addUserRole(requestParameters: AccessControlApiAddUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.
     * Create a new custom role.
     */
    createRoleRaw(requestParameters: AccessControlApiCreateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.
     * Create a new custom role.
     */
    createRole(requestParameters: AccessControlApiCreateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
    /**
     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.
     * Delete a custom role.
     */
    deleteRoleRaw(requestParameters: AccessControlApiDeleteRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.
     * Delete a custom role.
     */
    deleteRole(requestParameters: AccessControlApiDeleteRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.
     * Get status.
     */
    getAccessControlStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<number>>;
    /**
     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.
     * Get status.
     */
    getAccessControlStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<number>;
    /**
     * Get a description of a resource\'s access control properties.
     */
    getResourceDescriptionRaw(requestParameters: AccessControlApiGetResourceDescriptionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Description>>;
    /**
     * Get a description of a resource\'s access control properties.
     */
    getResourceDescription(requestParameters: AccessControlApiGetResourceDescriptionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Description>;
    /**
     * Get permissions for a resource.
     */
    getResourcePermissionsRaw(requestParameters: AccessControlApiGetResourcePermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<ResourcePermissionDTO>>>;
    /**
     * Get permissions for a resource.
     */
    getResourcePermissions(requestParameters: AccessControlApiGetResourcePermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<ResourcePermissionDTO>>;
    /**
     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.
     * Get a role.
     */
    getRoleRaw(requestParameters: AccessControlApiGetRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.
     * Get a role.
     */
    getRole(requestParameters: AccessControlApiGetRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
    /**
     * Get role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.
     * Get role assignments.
     */
    getRoleAssignmentsRaw(requestParameters: AccessControlApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleAssignmentsDTO>>;
    /**
     * Get role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.
     * Get role assignments.
     */
    getRoleAssignments(requestParameters: AccessControlApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleAssignmentsDTO>;
    /**
     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.
     * Get all roles.
     */
    listRolesRaw(requestParameters: AccessControlApiListRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RoleDTO>>>;
    /**
     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.
     * Get all roles.
     */
    listRoles(requestParameters?: AccessControlApiListRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RoleDTO>>;
    /**
     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.
     * Get team roles.
     */
    listTeamRolesRaw(requestParameters: AccessControlApiListTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.
     * Get team roles.
     */
    listTeamRoles(requestParameters: AccessControlApiListTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.
     * List roles assigned to multiple teams.
     */
    listTeamsRolesRaw(requestParameters: AccessControlApiListTeamsRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: Array<RoleDTO>;
    }>>;
    /**
     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.
     * List roles assigned to multiple teams.
     */
    listTeamsRoles(requestParameters: AccessControlApiListTeamsRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: Array<RoleDTO>;
    }>;
    /**
     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.
     * List roles assigned to a user.
     */
    listUserRolesRaw(requestParameters: AccessControlApiListUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RoleDTO>>>;
    /**
     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.
     * List roles assigned to a user.
     */
    listUserRoles(requestParameters: AccessControlApiListUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RoleDTO>>;
    /**
     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.
     * List roles assigned to multiple users.
     */
    listUsersRolesRaw(requestParameters: AccessControlApiListUsersRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: Array<RoleDTO>;
    }>>;
    /**
     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.
     * List roles assigned to multiple users.
     */
    listUsersRoles(requestParameters: AccessControlApiListUsersRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: Array<RoleDTO>;
    }>;
    /**
     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.
     * Remove team role.
     */
    removeTeamRoleRaw(requestParameters: AccessControlApiRemoveTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.
     * Remove team role.
     */
    removeTeamRole(requestParameters: AccessControlApiRemoveTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Remove a user role assignment.
     */
    removeUserRoleRaw(requestParameters: AccessControlApiRemoveUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Remove a user role assignment.
     */
    removeUserRole(requestParameters: AccessControlApiRemoveUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to one or many assignment types. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions.
     */
    setResourcePermissionsRaw(requestParameters: AccessControlApiSetResourcePermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to one or many assignment types. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions.
     */
    setResourcePermissions(requestParameters: AccessControlApiSetResourcePermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a built-in role. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a built-in role.
     */
    setResourcePermissionsForBuiltInRoleRaw(requestParameters: AccessControlApiSetResourcePermissionsForBuiltInRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a built-in role. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a built-in role.
     */
    setResourcePermissionsForBuiltInRole(requestParameters: AccessControlApiSetResourcePermissionsForBuiltInRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a team. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a team.
     */
    setResourcePermissionsForTeamRaw(requestParameters: AccessControlApiSetResourcePermissionsForTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a team. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a team.
     */
    setResourcePermissionsForTeam(requestParameters: AccessControlApiSetResourcePermissionsForTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a user or a service account. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a user.
     */
    setResourcePermissionsForUserRaw(requestParameters: AccessControlApiSetResourcePermissionsForUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a user or a service account. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.
     * Set resource permissions for a user.
     */
    setResourcePermissionsForUser(requestParameters: AccessControlApiSetResourcePermissionsForUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.
     * Set role assignments.
     */
    setRoleAssignmentsRaw(requestParameters: AccessControlApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleAssignmentsDTO>>;
    /**
     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.
     * Set role assignments.
     */
    setRoleAssignments(requestParameters: AccessControlApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleAssignmentsDTO>;
    /**
     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.
     * Update team role.
     */
    setTeamRolesRaw(requestParameters: AccessControlApiSetTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.
     * Update team role.
     */
    setTeamRoles(requestParameters: AccessControlApiSetTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Set user role assignments.
     */
    setUserRolesRaw(requestParameters: AccessControlApiSetUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Set user role assignments.
     */
    setUserRoles(requestParameters: AccessControlApiSetUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.
     * Update a custom role.
     */
    updateRoleRaw(requestParameters: AccessControlApiUpdateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.
     * Update a custom role.
     */
    updateRole(requestParameters: AccessControlApiUpdateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class AccessControlProvisioningApi extends BaseAPI {
    /**
     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.
     */
    adminProvisioningReloadAccessControlRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ErrorResponseBody>>;
    /**
     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.
     */
    adminProvisioningReloadAccessControl(initOverrides?: RequestInit | InitOverrideFunction): Promise<ErrorResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class AdminApi extends BaseAPI {
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `settings:read` and scopes: `settings:*`, `settings:auth.saml:` and `settings:auth.saml:enabled` (property level).
     * Fetch settings.
     */
    adminGetSettingsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: {
            [key: string]: string;
        };
    }>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `settings:read` and scopes: `settings:*`, `settings:auth.saml:` and `settings:auth.saml:enabled` (property level).
     * Fetch settings.
     */
    adminGetSettings(initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: {
            [key: string]: string;
        };
    }>;
    /**
     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `server:stats:read`.
     * Fetch Grafana Stats.
     */
    adminGetStatsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AdminStats>>;
    /**
     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `server:stats:read`.
     * Fetch Grafana Stats.
     */
    adminGetStats(initOverrides?: RequestInit | InitOverrideFunction): Promise<AdminStats>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface AdminLdapApiGetUserFromLDAPRequest {
    userName: string;
}
interface AdminLdapApiPostSyncUserWithLDAPRequest {
    userId: number;
}
/**
 *
 */
declare class AdminLdapApi extends BaseAPI {
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.status:read`.
     * Attempts to connect to all the configured LDAP servers and returns information on whenever they\'re available or not.
     */
    getLDAPStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.status:read`.
     * Attempts to connect to all the configured LDAP servers and returns information on whenever they\'re available or not.
     */
    getLDAPStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:read`.
     * Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.
     */
    getUserFromLDAPRaw(requestParameters: AdminLdapApiGetUserFromLDAPRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:read`.
     * Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.
     */
    getUserFromLDAP(requestParameters: AdminLdapApiGetUserFromLDAPRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:sync`.
     * Enables a single Grafana user to be synchronized against LDAP.
     */
    postSyncUserWithLDAPRaw(requestParameters: AdminLdapApiPostSyncUserWithLDAPRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:sync`.
     * Enables a single Grafana user to be synchronized against LDAP.
     */
    postSyncUserWithLDAP(requestParameters: AdminLdapApiPostSyncUserWithLDAPRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.config:reload`.
     * Reloads the LDAP configuration.
     */
    reloadLDAPCfgRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.config:reload`.
     * Reloads the LDAP configuration.
     */
    reloadLDAPCfg(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class AdminProvisioningApi extends BaseAPI {
    /**
     * Reloads the provisioning config files for dashboards again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:dashboards`.
     * Reload dashboard provisioning configurations.
     */
    adminProvisioningReloadDashboardsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Reloads the provisioning config files for dashboards again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:dashboards`.
     * Reload dashboard provisioning configurations.
     */
    adminProvisioningReloadDashboards(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Reloads the provisioning config files for datasources again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:datasources`.
     * Reload datasource provisioning configurations.
     */
    adminProvisioningReloadDatasourcesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Reloads the provisioning config files for datasources again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:datasources`.
     * Reload datasource provisioning configurations.
     */
    adminProvisioningReloadDatasources(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Reloads the provisioning config files for plugins again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:plugin`.
     * Reload plugin provisioning configurations.
     */
    adminProvisioningReloadPluginsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Reloads the provisioning config files for plugins again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:plugin`.
     * Reload plugin provisioning configurations.
     */
    adminProvisioningReloadPlugins(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface AdminUsersApiAdminCreateUserRequest {
    body: AdminCreateUserForm;
}
interface AdminUsersApiAdminDeleteUserRequest {
    userId: number;
}
interface AdminUsersApiAdminDisableUserRequest {
    userId: number;
}
interface AdminUsersApiAdminEnableUserRequest {
    userId: number;
}
interface AdminUsersApiAdminGetUserAuthTokensRequest {
    userId: number;
}
interface AdminUsersApiAdminLogoutUserRequest {
    userId: number;
}
interface AdminUsersApiAdminRevokeUserAuthTokenRequest {
    userId: number;
    body: RevokeAuthTokenCmd;
}
interface AdminUsersApiAdminUpdateUserPasswordRequest {
    userId: number;
    body: AdminUpdateUserPasswordForm;
}
interface AdminUsersApiAdminUpdateUserPermissionsRequest {
    userId: number;
    body: AdminUpdateUserPermissionsForm;
}
interface AdminUsersApiGetUserQuotaRequest {
    userId: number;
}
interface AdminUsersApiUpdateUserQuotaRequest {
    quotaTarget: string;
    userId: number;
    body: UpdateQuotaCmd;
}
/**
 *
 */
declare class AdminUsersApi extends BaseAPI {
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:create`. Note that OrgId is an optional parameter that can be used to assign a new user to a different organization when `auto_assign_org` is set to `true`.
     * Create new user.
     */
    adminCreateUserRaw(requestParameters: AdminUsersApiAdminCreateUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AdminCreateUserResponse>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:create`. Note that OrgId is an optional parameter that can be used to assign a new user to a different organization when `auto_assign_org` is set to `true`.
     * Create new user.
     */
    adminCreateUser(requestParameters: AdminUsersApiAdminCreateUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AdminCreateUserResponse>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:delete` and scope `global.users:*`.
     * Delete global User.
     */
    adminDeleteUserRaw(requestParameters: AdminUsersApiAdminDeleteUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:delete` and scope `global.users:*`.
     * Delete global User.
     */
    adminDeleteUser(requestParameters: AdminUsersApiAdminDeleteUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:disable` and scope `global.users:1` (userIDScope).
     * Disable user.
     */
    adminDisableUserRaw(requestParameters: AdminUsersApiAdminDisableUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:disable` and scope `global.users:1` (userIDScope).
     * Disable user.
     */
    adminDisableUser(requestParameters: AdminUsersApiAdminDisableUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:enable` and scope `global.users:1` (userIDScope).
     * Enable user.
     */
    adminEnableUserRaw(requestParameters: AdminUsersApiAdminEnableUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:enable` and scope `global.users:1` (userIDScope).
     * Enable user.
     */
    adminEnableUser(requestParameters: AdminUsersApiAdminEnableUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:list` and scope `global.users:*`.
     * Return a list of all auth tokens (devices) that the user currently have logged in from.
     */
    adminGetUserAuthTokensRaw(requestParameters: AdminUsersApiAdminGetUserAuthTokensRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserToken>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:list` and scope `global.users:*`.
     * Return a list of all auth tokens (devices) that the user currently have logged in from.
     */
    adminGetUserAuthTokens(requestParameters: AdminUsersApiAdminGetUserAuthTokensRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserToken>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.logout` and scope `global.users:*`.
     * Logout user revokes all auth tokens (devices) for the user. User of issued auth tokens (devices) will no longer be logged in and will be required to authenticate again upon next activity.
     */
    adminLogoutUserRaw(requestParameters: AdminUsersApiAdminLogoutUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.logout` and scope `global.users:*`.
     * Logout user revokes all auth tokens (devices) for the user. User of issued auth tokens (devices) will no longer be logged in and will be required to authenticate again upon next activity.
     */
    adminLogoutUser(requestParameters: AdminUsersApiAdminLogoutUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Revokes the given auth token (device) for the user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:update` and scope `global.users:*`.
     * Revoke auth token for user.
     */
    adminRevokeUserAuthTokenRaw(requestParameters: AdminUsersApiAdminRevokeUserAuthTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Revokes the given auth token (device) for the user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:update` and scope `global.users:*`.
     * Revoke auth token for user.
     */
    adminRevokeUserAuthToken(requestParameters: AdminUsersApiAdminRevokeUserAuthTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.password:update` and scope `global.users:*`.
     * Set password for user.
     */
    adminUpdateUserPasswordRaw(requestParameters: AdminUsersApiAdminUpdateUserPasswordRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.password:update` and scope `global.users:*`.
     * Set password for user.
     */
    adminUpdateUserPassword(requestParameters: AdminUsersApiAdminUpdateUserPasswordRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.permissions:update` and scope `global.users:*`.
     * Set permissions for user.
     */
    adminUpdateUserPermissionsRaw(requestParameters: AdminUsersApiAdminUpdateUserPermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.permissions:update` and scope `global.users:*`.
     * Set permissions for user.
     */
    adminUpdateUserPermissions(requestParameters: AdminUsersApiAdminUpdateUserPermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:list` and scope `global.users:1` (userIDScope).
     * Fetch user quota.
     */
    getUserQuotaRaw(requestParameters: AdminUsersApiGetUserQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<QuotaDTO>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:list` and scope `global.users:1` (userIDScope).
     * Fetch user quota.
     */
    getUserQuota(requestParameters: AdminUsersApiGetUserQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<QuotaDTO>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:update` and scope `global.users:1` (userIDScope).
     * Update user quota.
     */
    updateUserQuotaRaw(requestParameters: AdminUsersApiUpdateUserQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:update` and scope `global.users:1` (userIDScope).
     * Update user quota.
     */
    updateUserQuota(requestParameters: AdminUsersApiUpdateUserQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface AnnotationsApiDeleteAnnotationByIDRequest {
    annotationId: string;
}
interface AnnotationsApiGetAnnotationByIDRequest {
    annotationId: string;
}
interface AnnotationsApiGetAnnotationTagsRequest {
    tag?: string;
    limit?: string;
}
interface AnnotationsApiGetAnnotationsRequest {
    from?: number;
    to?: number;
    userId?: number;
    alertId?: number;
    dashboardId?: number;
    dashboardUID?: string;
    panelId?: number;
    limit?: number;
    tags?: Array<string>;
    type?: GetAnnotationsTypeEnum;
    matchAny?: boolean;
}
interface AnnotationsApiMassDeleteAnnotationsRequest {
    body: MassDeleteAnnotationsCmd;
}
interface AnnotationsApiPatchAnnotationRequest {
    annotationId: string;
    body: PatchAnnotationsCmd;
}
interface AnnotationsApiPostAnnotationRequest {
    body: PostAnnotationsCmd;
}
interface AnnotationsApiPostGraphiteAnnotationRequest {
    body: PostGraphiteAnnotationsCmd;
}
interface AnnotationsApiUpdateAnnotationRequest {
    annotationId: string;
    body: UpdateAnnotationsCmd;
}
/**
 *
 */
declare class AnnotationsApi extends BaseAPI {
    /**
     * Deletes the annotation that matches the specified ID.
     * Delete Annotation By ID.
     */
    deleteAnnotationByIDRaw(requestParameters: AnnotationsApiDeleteAnnotationByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Deletes the annotation that matches the specified ID.
     * Delete Annotation By ID.
     */
    deleteAnnotationByID(requestParameters: AnnotationsApiDeleteAnnotationByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get Annotation by ID.
     */
    getAnnotationByIDRaw(requestParameters: AnnotationsApiGetAnnotationByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Annotation>>;
    /**
     * Get Annotation by ID.
     */
    getAnnotationByID(requestParameters: AnnotationsApiGetAnnotationByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Annotation>;
    /**
     * Find all the event tags created in the annotations.
     * Find Annotations Tags.
     */
    getAnnotationTagsRaw(requestParameters: AnnotationsApiGetAnnotationTagsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetAnnotationTagsResponse>>;
    /**
     * Find all the event tags created in the annotations.
     * Find Annotations Tags.
     */
    getAnnotationTags(requestParameters?: AnnotationsApiGetAnnotationTagsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<GetAnnotationTagsResponse>;
    /**
     * Starting in Grafana v6.4 regions annotations are now returned in one entity that now includes the timeEnd property.
     * Find Annotations.
     */
    getAnnotationsRaw(requestParameters: AnnotationsApiGetAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Annotation>>>;
    /**
     * Starting in Grafana v6.4 regions annotations are now returned in one entity that now includes the timeEnd property.
     * Find Annotations.
     */
    getAnnotations(requestParameters?: AnnotationsApiGetAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Annotation>>;
    /**
     * Delete multiple annotations.
     */
    massDeleteAnnotationsRaw(requestParameters: AnnotationsApiMassDeleteAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete multiple annotations.
     */
    massDeleteAnnotations(requestParameters: AnnotationsApiMassDeleteAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Updates one or more properties of an annotation that matches the specified ID. This operation currently supports updating of the `text`, `tags`, `time` and `timeEnd` properties. This is available in Grafana 6.0.0-beta2 and above.
     * Patch Annotation.
     */
    patchAnnotationRaw(requestParameters: AnnotationsApiPatchAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Updates one or more properties of an annotation that matches the specified ID. This operation currently supports updating of the `text`, `tags`, `time` and `timeEnd` properties. This is available in Grafana 6.0.0-beta2 and above.
     * Patch Annotation.
     */
    patchAnnotation(requestParameters: AnnotationsApiPatchAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Creates an annotation in the Grafana database. The dashboardId and panelId fields are optional. If they are not specified then an organization annotation is created and can be queried in any dashboard that adds the Grafana annotations data source. When creating a region annotation include the timeEnd property. The format for `time` and `timeEnd` should be epoch numbers in millisecond resolution. The response for this HTTP request is slightly different in versions prior to v6.4. In prior versions you would also get an endId if you where creating a region. But in 6.4 regions are represented using a single event with time and timeEnd properties.
     * Create Annotation.
     */
    postAnnotationRaw(requestParameters: AnnotationsApiPostAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostAnnotation200Response>>;
    /**
     * Creates an annotation in the Grafana database. The dashboardId and panelId fields are optional. If they are not specified then an organization annotation is created and can be queried in any dashboard that adds the Grafana annotations data source. When creating a region annotation include the timeEnd property. The format for `time` and `timeEnd` should be epoch numbers in millisecond resolution. The response for this HTTP request is slightly different in versions prior to v6.4. In prior versions you would also get an endId if you where creating a region. But in 6.4 regions are represented using a single event with time and timeEnd properties.
     * Create Annotation.
     */
    postAnnotation(requestParameters: AnnotationsApiPostAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostAnnotation200Response>;
    /**
     * Creates an annotation by using Graphite-compatible event format. The `when` and `data` fields are optional. If `when` is not specified then the current time will be used as annotation’s timestamp. The `tags` field can also be in prior to Graphite `0.10.0` format (string with multiple tags being separated by a space).
     * Create Annotation in Graphite format.
     */
    postGraphiteAnnotationRaw(requestParameters: AnnotationsApiPostGraphiteAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostAnnotation200Response>>;
    /**
     * Creates an annotation by using Graphite-compatible event format. The `when` and `data` fields are optional. If `when` is not specified then the current time will be used as annotation’s timestamp. The `tags` field can also be in prior to Graphite `0.10.0` format (string with multiple tags being separated by a space).
     * Create Annotation in Graphite format.
     */
    postGraphiteAnnotation(requestParameters: AnnotationsApiPostGraphiteAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostAnnotation200Response>;
    /**
     * Updates all properties of an annotation that matches the specified id. To only update certain property, consider using the Patch Annotation operation.
     * Update Annotation.
     */
    updateAnnotationRaw(requestParameters: AnnotationsApiUpdateAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Updates all properties of an annotation that matches the specified id. To only update certain property, consider using the Patch Annotation operation.
     * Update Annotation.
     */
    updateAnnotation(requestParameters: AnnotationsApiUpdateAnnotationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}
/**
 * @export
 */
declare const GetAnnotationsTypeEnum: {
    readonly Alert: "alert";
    readonly Annotation: "annotation";
};
type GetAnnotationsTypeEnum = typeof GetAnnotationsTypeEnum[keyof typeof GetAnnotationsTypeEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface ApiKeysApiAddAPIkeyRequest {
    body: AddAPIKeyCommand;
}
interface ApiKeysApiDeleteAPIkeyRequest {
    id: number;
}
interface ApiKeysApiGetAPIkeysRequest {
    includeExpired?: boolean;
}
/**
 *
 */
declare class ApiKeysApi extends BaseAPI {
    /**
     * Will return details of the created API key.
     * Creates an API key.
     * @deprecated
     */
    addAPIkeyRaw(requestParameters: ApiKeysApiAddAPIkeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<NewApiKeyResult>>;
    /**
     * Will return details of the created API key.
     * Creates an API key.
     * @deprecated
     */
    addAPIkey(requestParameters: ApiKeysApiAddAPIkeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<NewApiKeyResult>;
    /**
     * Deletes an API key. Deprecated. See: https://grafana.com/docs/grafana/next/administration/api-keys/#migrate-api-keys-to-grafana-service-accounts-using-the-api.
     * Delete API key.
     * @deprecated
     */
    deleteAPIkeyRaw(requestParameters: ApiKeysApiDeleteAPIkeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Deletes an API key. Deprecated. See: https://grafana.com/docs/grafana/next/administration/api-keys/#migrate-api-keys-to-grafana-service-accounts-using-the-api.
     * Delete API key.
     * @deprecated
     */
    deleteAPIkey(requestParameters: ApiKeysApiDeleteAPIkeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Will return auth keys.  Deprecated: true.  Deprecated. Please use GET /api/serviceaccounts and GET /api/serviceaccounts/{id}/tokens instead see https://grafana.com/docs/grafana/next/administration/api-keys/#migrate-api-keys-to-grafana-service-accounts-using-the-api.
     * Get auth keys.
     */
    getAPIkeysRaw(requestParameters: ApiKeysApiGetAPIkeysRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<ApiKeyDTO>>>;
    /**
     * Will return auth keys.  Deprecated: true.  Deprecated. Please use GET /api/serviceaccounts and GET /api/serviceaccounts/{id}/tokens instead see https://grafana.com/docs/grafana/next/administration/api-keys/#migrate-api-keys-to-grafana-service-accounts-using-the-api.
     * Get auth keys.
     */
    getAPIkeys(requestParameters?: ApiKeysApiGetAPIkeysRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<ApiKeyDTO>>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface CorrelationsApiCreateCorrelationRequest {
    sourceUID: string;
    body: CreateCorrelationCommand;
}
interface CorrelationsApiDeleteCorrelationRequest {
    uid: string;
    correlationUID: string;
}
interface CorrelationsApiGetCorrelationRequest {
    sourceUID: string;
    correlationUID: string;
}
interface CorrelationsApiGetCorrelationsRequest {
    limit?: number;
    page?: number;
    sourceUID?: Array<string>;
}
interface CorrelationsApiGetCorrelationsBySourceUIDRequest {
    sourceUID: string;
}
interface CorrelationsApiUpdateCorrelationRequest {
    sourceUID: string;
    correlationUID: string;
    body?: UpdateCorrelationCommand;
}
/**
 *
 */
declare class CorrelationsApi extends BaseAPI {
    /**
     * Add correlation.
     */
    createCorrelationRaw(requestParameters: CorrelationsApiCreateCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateCorrelationResponseBody>>;
    /**
     * Add correlation.
     */
    createCorrelation(requestParameters: CorrelationsApiCreateCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateCorrelationResponseBody>;
    /**
     * Delete a correlation.
     */
    deleteCorrelationRaw(requestParameters: CorrelationsApiDeleteCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DeleteCorrelationResponseBody>>;
    /**
     * Delete a correlation.
     */
    deleteCorrelation(requestParameters: CorrelationsApiDeleteCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DeleteCorrelationResponseBody>;
    /**
     * Gets a correlation.
     */
    getCorrelationRaw(requestParameters: CorrelationsApiGetCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Correlation>>;
    /**
     * Gets a correlation.
     */
    getCorrelation(requestParameters: CorrelationsApiGetCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Correlation>;
    /**
     * Gets all correlations.
     */
    getCorrelationsRaw(requestParameters: CorrelationsApiGetCorrelationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Correlation>>>;
    /**
     * Gets all correlations.
     */
    getCorrelations(requestParameters?: CorrelationsApiGetCorrelationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Correlation>>;
    /**
     * Gets all correlations originating from the given data source.
     */
    getCorrelationsBySourceUIDRaw(requestParameters: CorrelationsApiGetCorrelationsBySourceUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Correlation>>>;
    /**
     * Gets all correlations originating from the given data source.
     */
    getCorrelationsBySourceUID(requestParameters: CorrelationsApiGetCorrelationsBySourceUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Correlation>>;
    /**
     * Updates a correlation.
     */
    updateCorrelationRaw(requestParameters: CorrelationsApiUpdateCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<UpdateCorrelationResponseBody>>;
    /**
     * Updates a correlation.
     */
    updateCorrelation(requestParameters: CorrelationsApiUpdateCorrelationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<UpdateCorrelationResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DashboardPermissionsApiGetDashboardPermissionsListByIDRequest {
    dashboardID: number;
}
interface DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest {
    uid: string;
}
interface DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest {
    dashboardID: number;
    body: UpdateDashboardACLCommand;
}
interface DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest {
    uid: string;
    body: UpdateDashboardACLCommand;
}
/**
 *
 */
declare class DashboardPermissionsApi extends BaseAPI {
    /**
     * Please refer to [updated API](#/dashboard_permissions/getDashboardPermissionsListByUID) instead
     * Gets all existing permissions for the given dashboard.
     * @deprecated
     */
    getDashboardPermissionsListByIDRaw(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardACLInfoDTO>>>;
    /**
     * Please refer to [updated API](#/dashboard_permissions/getDashboardPermissionsListByUID) instead
     * Gets all existing permissions for the given dashboard.
     * @deprecated
     */
    getDashboardPermissionsListByID(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>>;
    /**
     * Gets all existing permissions for the given dashboard.
     */
    getDashboardPermissionsListByUIDRaw(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardACLInfoDTO>>>;
    /**
     * Gets all existing permissions for the given dashboard.
     */
    getDashboardPermissionsListByUID(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>>;
    /**
     * Please refer to [updated API](#/dashboard_permissions/updateDashboardPermissionsByUID) instead  This operation will remove existing permissions if they’re not included in the request.
     * Updates permissions for a dashboard.
     * @deprecated
     */
    updateDashboardPermissionsByIDRaw(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Please refer to [updated API](#/dashboard_permissions/updateDashboardPermissionsByUID) instead  This operation will remove existing permissions if they’re not included in the request.
     * Updates permissions for a dashboard.
     * @deprecated
     */
    updateDashboardPermissionsByID(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * This operation will remove existing permissions if they’re not included in the request.
     * Updates permissions for a dashboard.
     */
    updateDashboardPermissionsByUIDRaw(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * This operation will remove existing permissions if they’re not included in the request.
     * Updates permissions for a dashboard.
     */
    updateDashboardPermissionsByUID(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DashboardPublicApiCreatePublicDashboardRequest {
    dashboardUid: string;
    body: PublicDashboardDTO;
}
interface DashboardPublicApiDeletePublicDashboardRequest {
    dashboardUid: string;
    uid: string;
}
interface DashboardPublicApiGetPublicAnnotationsRequest {
    accessToken: string;
}
interface DashboardPublicApiGetPublicDashboardRequest {
    dashboardUid: string;
}
interface DashboardPublicApiQueryPublicDashboardRequest {
    accessToken: string;
    panelId: number;
}
interface DashboardPublicApiUpdatePublicDashboardRequest {
    dashboardUid: string;
    uid: string;
    body: PublicDashboardDTO;
}
interface DashboardPublicApiViewPublicDashboardRequest {
    accessToken: string;
}
/**
 *
 */
declare class DashboardPublicApi extends BaseAPI {
    /**
     * Create public dashboard for a dashboard
     */
    createPublicDashboardRaw(requestParameters: DashboardPublicApiCreatePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PublicDashboard>>;
    /**
     * Create public dashboard for a dashboard
     */
    createPublicDashboard(requestParameters: DashboardPublicApiCreatePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PublicDashboard>;
    /**
     * Delete public dashboard for a dashboard
     */
    deletePublicDashboardRaw(requestParameters: DashboardPublicApiDeletePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete public dashboard for a dashboard
     */
    deletePublicDashboard(requestParameters: DashboardPublicApiDeletePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get annotations for a public dashboard
     */
    getPublicAnnotationsRaw(requestParameters: DashboardPublicApiGetPublicAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<AnnotationEvent>>>;
    /**
     * Get annotations for a public dashboard
     */
    getPublicAnnotations(requestParameters: DashboardPublicApiGetPublicAnnotationsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<AnnotationEvent>>;
    /**
     * Get public dashboard by dashboardUid
     */
    getPublicDashboardRaw(requestParameters: DashboardPublicApiGetPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PublicDashboard>>;
    /**
     * Get public dashboard by dashboardUid
     */
    getPublicDashboard(requestParameters: DashboardPublicApiGetPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PublicDashboard>;
    /**
     * Get list of public dashboards
     */
    listPublicDashboardsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PublicDashboardListResponseWithPagination>>;
    /**
     * Get list of public dashboards
     */
    listPublicDashboards(initOverrides?: RequestInit | InitOverrideFunction): Promise<PublicDashboardListResponseWithPagination>;
    /**
     * Get results for a given panel on a public dashboard
     */
    queryPublicDashboardRaw(requestParameters: DashboardPublicApiQueryPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryDataResponse>>;
    /**
     * Get results for a given panel on a public dashboard
     */
    queryPublicDashboard(requestParameters: DashboardPublicApiQueryPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryDataResponse>;
    /**
     * Update public dashboard for a dashboard
     */
    updatePublicDashboardRaw(requestParameters: DashboardPublicApiUpdatePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PublicDashboard>>;
    /**
     * Update public dashboard for a dashboard
     */
    updatePublicDashboard(requestParameters: DashboardPublicApiUpdatePublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PublicDashboard>;
    /**
     * Get public dashboard for view
     */
    viewPublicDashboardRaw(requestParameters: DashboardPublicApiViewPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DashboardFullWithMeta>>;
    /**
     * Get public dashboard for view
     */
    viewPublicDashboard(requestParameters: DashboardPublicApiViewPublicDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DashboardFullWithMeta>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DashboardVersionsApiGetDashboardVersionByIDRequest {
    dashboardID: number;
    dashboardVersionID: number;
}
interface DashboardVersionsApiGetDashboardVersionByUIDRequest {
    dashboardVersionID: number;
    uid: string;
}
interface DashboardVersionsApiGetDashboardVersionsByIDRequest {
    dashboardID: number;
}
interface DashboardVersionsApiGetDashboardVersionsByUIDRequest {
    uid: string;
    limit?: number;
    start?: number;
}
interface DashboardVersionsApiRestoreDashboardVersionByIDRequest {
    dashboardID: number;
    body: RestoreDashboardVersionCommand;
}
interface DashboardVersionsApiRestoreDashboardVersionByUIDRequest {
    uid: string;
    body: RestoreDashboardVersionCommand;
}
/**
 *
 */
declare class DashboardVersionsApi extends BaseAPI {
    /**
     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionByUID) instead
     * Get a specific dashboard version.
     * @deprecated
     */
    getDashboardVersionByIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DashboardVersionMeta>>;
    /**
     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionByUID) instead
     * Get a specific dashboard version.
     * @deprecated
     */
    getDashboardVersionByID(requestParameters: DashboardVersionsApiGetDashboardVersionByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DashboardVersionMeta>;
    /**
     * Get a specific dashboard version using UID.
     */
    getDashboardVersionByUIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DashboardVersionMeta>>;
    /**
     * Get a specific dashboard version using UID.
     */
    getDashboardVersionByUID(requestParameters: DashboardVersionsApiGetDashboardVersionByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DashboardVersionMeta>;
    /**
     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionsByUID) instead
     * Gets all existing versions for the dashboard.
     * @deprecated
     */
    getDashboardVersionsByIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionsByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardVersionMeta>>>;
    /**
     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionsByUID) instead
     * Gets all existing versions for the dashboard.
     * @deprecated
     */
    getDashboardVersionsByID(requestParameters: DashboardVersionsApiGetDashboardVersionsByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardVersionMeta>>;
    /**
     * Gets all existing versions for the dashboard using UID.
     */
    getDashboardVersionsByUIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionsByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardVersionMeta>>>;
    /**
     * Gets all existing versions for the dashboard using UID.
     */
    getDashboardVersionsByUID(requestParameters: DashboardVersionsApiGetDashboardVersionsByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardVersionMeta>>;
    /**
     * Please refer to [updated API](#/dashboard_versions/restoreDashboardVersionByUID) instead
     * Restore a dashboard to a given dashboard version.
     * @deprecated
     */
    restoreDashboardVersionByIDRaw(requestParameters: DashboardVersionsApiRestoreDashboardVersionByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostDashboard200Response>>;
    /**
     * Please refer to [updated API](#/dashboard_versions/restoreDashboardVersionByUID) instead
     * Restore a dashboard to a given dashboard version.
     * @deprecated
     */
    restoreDashboardVersionByID(requestParameters: DashboardVersionsApiRestoreDashboardVersionByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostDashboard200Response>;
    /**
     * Restore a dashboard to a given dashboard version using UID.
     */
    restoreDashboardVersionByUIDRaw(requestParameters: DashboardVersionsApiRestoreDashboardVersionByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostDashboard200Response>>;
    /**
     * Restore a dashboard to a given dashboard version using UID.
     */
    restoreDashboardVersionByUID(requestParameters: DashboardVersionsApiRestoreDashboardVersionByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostDashboard200Response>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DashboardsApiCalculateDashboardDiffOperationRequest {
    body: CalculateDashboardDiffRequest;
}
interface DashboardsApiDeleteDashboardByUIDRequest {
    uid: string;
}
interface DashboardsApiGetDashboardByUIDRequest {
    uid: string;
}
interface DashboardsApiHardDeleteDashboardByUIDRequest {
    uid: string;
}
interface DashboardsApiImportDashboardOperationRequest {
    body: ImportDashboardRequest;
}
interface DashboardsApiPostDashboardRequest {
    body: SaveDashboardCommand;
}
interface DashboardsApiRestoreDeletedDashboardByUIDRequest {
    uid: string;
    body: RestoreDeletedDashboardCommand;
}
/**
 *
 */
declare class DashboardsApi extends BaseAPI {
    /**
     * Perform diff on two dashboards.
     */
    calculateDashboardDiffRaw(requestParameters: DashboardsApiCalculateDashboardDiffOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Perform diff on two dashboards.
     */
    calculateDashboardDiff(requestParameters: DashboardsApiCalculateDashboardDiffOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Will delete the dashboard given the specified unique identifier (uid).
     * Delete dashboard by uid.
     */
    deleteDashboardByUIDRaw(requestParameters: DashboardsApiDeleteDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DeleteDashboardByUID200Response>>;
    /**
     * Will delete the dashboard given the specified unique identifier (uid).
     * Delete dashboard by uid.
     */
    deleteDashboardByUID(requestParameters: DashboardsApiDeleteDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DeleteDashboardByUID200Response>;
    /**
     * Will return the dashboard given the dashboard unique identifier (uid).
     * Get dashboard by uid.
     */
    getDashboardByUIDRaw(requestParameters: DashboardsApiGetDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DashboardFullWithMeta>>;
    /**
     * Will return the dashboard given the dashboard unique identifier (uid).
     * Get dashboard by uid.
     */
    getDashboardByUID(requestParameters: DashboardsApiGetDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DashboardFullWithMeta>;
    /**
     * Get all dashboards tags of an organisation.
     */
    getDashboardTagsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardTagCloudItem>>>;
    /**
     * Get all dashboards tags of an organisation.
     */
    getDashboardTags(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardTagCloudItem>>;
    /**
     * Get home dashboard.
     */
    getHomeDashboardRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetHomeDashboardResponse>>;
    /**
     * Get home dashboard.
     */
    getHomeDashboard(initOverrides?: RequestInit | InitOverrideFunction): Promise<GetHomeDashboardResponse>;
    /**
     * Will delete the dashboard given the specified unique identifier (uid).
     * Hard delete dashboard by uid.
     */
    hardDeleteDashboardByUIDRaw(requestParameters: DashboardsApiHardDeleteDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DeleteDashboardByUID200Response>>;
    /**
     * Will delete the dashboard given the specified unique identifier (uid).
     * Hard delete dashboard by uid.
     */
    hardDeleteDashboardByUID(requestParameters: DashboardsApiHardDeleteDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DeleteDashboardByUID200Response>;
    /**
     * Import dashboard.
     */
    importDashboardRaw(requestParameters: DashboardsApiImportDashboardOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ImportDashboardResponse>>;
    /**
     * Import dashboard.
     */
    importDashboard(requestParameters: DashboardsApiImportDashboardOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ImportDashboardResponse>;
    /**
     * Creates a new dashboard or updates an existing dashboard. Note: This endpoint is not intended for creating folders, use `POST /api/folders` for that.
     * Create / Update dashboard
     */
    postDashboardRaw(requestParameters: DashboardsApiPostDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostDashboard200Response>>;
    /**
     * Creates a new dashboard or updates an existing dashboard. Note: This endpoint is not intended for creating folders, use `POST /api/folders` for that.
     * Create / Update dashboard
     */
    postDashboard(requestParameters: DashboardsApiPostDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostDashboard200Response>;
    /**
     * Restore a dashboard to a given dashboard version using UID.
     */
    restoreDeletedDashboardByUIDRaw(requestParameters: DashboardsApiRestoreDeletedDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PostDashboard200Response>>;
    /**
     * Restore a dashboard to a given dashboard version using UID.
     */
    restoreDeletedDashboardByUID(requestParameters: DashboardsApiRestoreDeletedDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PostDashboard200Response>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DatasourcesApiAddDataSourceRequest {
    body: AddDataSourceCommand;
}
interface DatasourcesApiCallDatasourceResourceByIDRequest {
    datasourceProxyRoute: string;
    id: string;
}
interface DatasourcesApiCallDatasourceResourceWithUIDRequest {
    datasourceProxyRoute: string;
    uid: string;
}
interface DatasourcesApiCheckDatasourceHealthByIDRequest {
    id: string;
}
interface DatasourcesApiCheckDatasourceHealthWithUIDRequest {
    uid: string;
}
interface DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest {
    uid: string;
    datasourceProxyRoute: string;
}
interface DatasourcesApiDatasourceProxyDELETEcallsRequest {
    id: string;
    datasourceProxyRoute: string;
}
interface DatasourcesApiDatasourceProxyGETByUIDcallsRequest {
    datasourceProxyRoute: string;
    uid: string;
}
interface DatasourcesApiDatasourceProxyGETcallsRequest {
    datasourceProxyRoute: string;
    id: string;
}
interface DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest {
    datasourceProxyRoute: string;
    uid: string;
    datasourceProxyParam: object;
}
interface DatasourcesApiDatasourceProxyPOSTcallsRequest {
    datasourceProxyRoute: string;
    id: string;
    datasourceProxyParam: object;
}
interface DatasourcesApiDeleteDataSourceByIDRequest {
    id: string;
}
interface DatasourcesApiDeleteDataSourceByNameRequest {
    name: string;
}
interface DatasourcesApiDeleteDataSourceByUIDRequest {
    uid: string;
}
interface DatasourcesApiGetDataSourceByIDRequest {
    id: string;
}
interface DatasourcesApiGetDataSourceByNameRequest {
    name: string;
}
interface DatasourcesApiGetDataSourceByUIDRequest {
    uid: string;
}
interface DatasourcesApiGetDataSourceIdByNameRequest {
    name: string;
}
interface DatasourcesApiUpdateDataSourceByIDRequest {
    id: string;
    body: UpdateDataSourceCommand;
}
interface DatasourcesApiUpdateDataSourceByUIDRequest {
    uid: string;
    body: UpdateDataSourceCommand;
}
/**
 *
 */
declare class DatasourcesApi extends BaseAPI {
    /**
     * By defining `password` and `basicAuthPassword` under secureJsonData property Grafana encrypts them securely as an encrypted blob in the database. The response then lists the encrypted fields under secureJsonFields.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:create`
     * Create a data source.
     */
    addDataSourceRaw(requestParameters: DatasourcesApiAddDataSourceRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AddDataSource200Response>>;
    /**
     * By defining `password` and `basicAuthPassword` under secureJsonData property Grafana encrypts them securely as an encrypted blob in the database. The response then lists the encrypted fields under secureJsonFields.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:create`
     * Create a data source.
     */
    addDataSource(requestParameters: DatasourcesApiAddDataSourceRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AddDataSource200Response>;
    /**
     * Please refer to [updated API](#/datasources/callDatasourceResourceWithUID) instead
     * Fetch data source resources by Id.
     * @deprecated
     */
    callDatasourceResourceByIDRaw(requestParameters: DatasourcesApiCallDatasourceResourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Please refer to [updated API](#/datasources/callDatasourceResourceWithUID) instead
     * Fetch data source resources by Id.
     * @deprecated
     */
    callDatasourceResourceByID(requestParameters: DatasourcesApiCallDatasourceResourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Fetch data source resources.
     */
    callDatasourceResourceWithUIDRaw(requestParameters: DatasourcesApiCallDatasourceResourceWithUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Fetch data source resources.
     */
    callDatasourceResourceWithUID(requestParameters: DatasourcesApiCallDatasourceResourceWithUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Please refer to [updated API](#/datasources/checkDatasourceHealthWithUID) instead
     * Sends a health check request to the plugin datasource identified by the ID.
     * @deprecated
     */
    checkDatasourceHealthByIDRaw(requestParameters: DatasourcesApiCheckDatasourceHealthByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Please refer to [updated API](#/datasources/checkDatasourceHealthWithUID) instead
     * Sends a health check request to the plugin datasource identified by the ID.
     * @deprecated
     */
    checkDatasourceHealthByID(requestParameters: DatasourcesApiCheckDatasourceHealthByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Sends a health check request to the plugin datasource identified by the UID.
     */
    checkDatasourceHealthWithUIDRaw(requestParameters: DatasourcesApiCheckDatasourceHealthWithUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Sends a health check request to the plugin datasource identified by the UID.
     */
    checkDatasourceHealthWithUID(requestParameters: DatasourcesApiCheckDatasourceHealthWithUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Proxies all calls to the actual data source.
     * Data source proxy DELETE calls.
     */
    datasourceProxyDELETEByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source.
     * Data source proxy DELETE calls.
     */
    datasourceProxyDELETEByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyDELETEByUIDcalls) instead
     * Data source proxy DELETE calls.
     * @deprecated
     */
    datasourceProxyDELETEcallsRaw(requestParameters: DatasourcesApiDatasourceProxyDELETEcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyDELETEByUIDcalls) instead
     * Data source proxy DELETE calls.
     * @deprecated
     */
    datasourceProxyDELETEcalls(requestParameters: DatasourcesApiDatasourceProxyDELETEcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Proxies all calls to the actual data source.
     * Data source proxy GET calls.
     */
    datasourceProxyGETByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyGETByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source.
     * Data source proxy GET calls.
     */
    datasourceProxyGETByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyGETByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyGETByUIDcalls) instead
     * Data source proxy GET calls.
     * @deprecated
     */
    datasourceProxyGETcallsRaw(requestParameters: DatasourcesApiDatasourceProxyGETcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyGETByUIDcalls) instead
     * Data source proxy GET calls.
     * @deprecated
     */
    datasourceProxyGETcalls(requestParameters: DatasourcesApiDatasourceProxyGETcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined
     * Data source proxy POST calls.
     */
    datasourceProxyPOSTByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined
     * Data source proxy POST calls.
     */
    datasourceProxyPOSTByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined  Please refer to [updated API](#/datasources/datasourceProxyPOSTByUIDcalls) instead
     * Data source proxy POST calls.
     * @deprecated
     */
    datasourceProxyPOSTcallsRaw(requestParameters: DatasourcesApiDatasourceProxyPOSTcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined  Please refer to [updated API](#/datasources/datasourceProxyPOSTByUIDcalls) instead
     * Data source proxy POST calls.
     * @deprecated
     */
    datasourceProxyPOSTcalls(requestParameters: DatasourcesApiDatasourceProxyPOSTcallsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/deleteDataSourceByUID) instead
     * Delete an existing data source by id.
     * @deprecated
     */
    deleteDataSourceByIDRaw(requestParameters: DatasourcesApiDeleteDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/deleteDataSourceByUID) instead
     * Delete an existing data source by id.
     * @deprecated
     */
    deleteDataSourceByID(requestParameters: DatasourcesApiDeleteDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Delete an existing data source by name.
     */
    deleteDataSourceByNameRaw(requestParameters: DatasourcesApiDeleteDataSourceByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DeleteDataSourceByName200Response>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Delete an existing data source by name.
     */
    deleteDataSourceByName(requestParameters: DatasourcesApiDeleteDataSourceByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DeleteDataSourceByName200Response>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).
     * Delete an existing data source by UID.
     */
    deleteDataSourceByUIDRaw(requestParameters: DatasourcesApiDeleteDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).
     * Delete an existing data source by UID.
     */
    deleteDataSourceByUID(requestParameters: DatasourcesApiDeleteDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/getDataSourceByUID) instead
     * Get a single data source by Id.
     * @deprecated
     */
    getDataSourceByIDRaw(requestParameters: DatasourcesApiGetDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DataSource>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/getDataSourceByUID) instead
     * Get a single data source by Id.
     * @deprecated
     */
    getDataSourceByID(requestParameters: DatasourcesApiGetDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DataSource>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Get a single data source by Name.
     */
    getDataSourceByNameRaw(requestParameters: DatasourcesApiGetDataSourceByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DataSource>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Get a single data source by Name.
     */
    getDataSourceByName(requestParameters: DatasourcesApiGetDataSourceByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DataSource>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).
     * Get a single data source by UID.
     */
    getDataSourceByUIDRaw(requestParameters: DatasourcesApiGetDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DataSource>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).
     * Get a single data source by UID.
     */
    getDataSourceByUID(requestParameters: DatasourcesApiGetDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DataSource>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Get data source Id by Name.
     */
    getDataSourceIdByNameRaw(requestParameters: DatasourcesApiGetDataSourceIdByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetDataSourceIdByName200Response>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).
     * Get data source Id by Name.
     */
    getDataSourceIdByName(requestParameters: DatasourcesApiGetDataSourceIdByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<GetDataSourceIdByName200Response>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scope: `datasources:*`.
     * Get all data sources.
     */
    getDataSourcesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DataSourceListItemDTO>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scope: `datasources:*`.
     * Get all data sources.
     */
    getDataSources(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DataSourceListItemDTO>>;
    /**
     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/updateDataSourceByUID) instead
     * Update an existing data source by its sequential ID.
     * @deprecated
     */
    updateDataSourceByIDRaw(requestParameters: DatasourcesApiUpdateDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AddDataSource200Response>>;
    /**
     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/updateDataSourceByUID) instead
     * Update an existing data source by its sequential ID.
     * @deprecated
     */
    updateDataSourceByID(requestParameters: DatasourcesApiUpdateDataSourceByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AddDataSource200Response>;
    /**
     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:1` (single data source).
     * Update an existing data source.
     */
    updateDataSourceByUIDRaw(requestParameters: DatasourcesApiUpdateDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AddDataSource200Response>>;
    /**
     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:1` (single data source).
     * Update an existing data source.
     */
    updateDataSourceByUID(requestParameters: DatasourcesApiUpdateDataSourceByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AddDataSource200Response>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class DevicesApi extends BaseAPI {
    /**
     * Lists all devices within the last 30 days
     */
    listDevicesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DeviceDTO>>>;
    /**
     * Lists all devices within the last 30 days
     */
    listDevices(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DeviceDTO>>;
    /**
     * Lists all devices within the last 30 days
     */
    searchDevicesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchDeviceQueryResult>>;
    /**
     * Lists all devices within the last 30 days
     */
    searchDevices(initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchDeviceQueryResult>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface DsApiQueryMetricsWithExpressionsRequest {
    body: MetricRequest;
}
/**
 *
 */
declare class DsApi extends BaseAPI {
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:query`.
     * DataSource query metrics with expressions.
     */
    queryMetricsWithExpressionsRaw(requestParameters: DsApiQueryMetricsWithExpressionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryDataResponse>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:query`.
     * DataSource query metrics with expressions.
     */
    queryMetricsWithExpressions(requestParameters: DsApiQueryMetricsWithExpressionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryDataResponse>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface EnterpriseApiAddTeamGroupApiRequest {
    teamId: number;
    body: TeamGroupMapping;
}
interface EnterpriseApiAddTeamRoleRequest {
    teamId: number;
    body: AddTeamRoleCommand;
}
interface EnterpriseApiAddUserRoleRequest {
    userId: number;
    body: AddUserRoleCommand;
}
interface EnterpriseApiCleanDataSourceCacheRequest {
    dataSourceUID: string;
}
interface EnterpriseApiCreateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
interface EnterpriseApiCreateRecordingRuleWriteTargetRequest {
    body: PrometheusRemoteWriteTargetJSON;
}
interface EnterpriseApiCreateReportRequest {
    body: CreateOrUpdateReport;
}
interface EnterpriseApiCreateRoleRequest {
    body: CreateRoleForm;
}
interface EnterpriseApiDeleteLicenseTokenRequest {
    body: DeleteTokenCommand;
}
interface EnterpriseApiDeleteRecordingRuleRequest {
    recordingRuleID: number;
}
interface EnterpriseApiDeleteReportRequest {
    id: number;
}
interface EnterpriseApiDeleteRoleRequest {
    roleUID: string;
    force?: boolean;
    global?: boolean;
}
interface EnterpriseApiDisableDataSourceCacheRequest {
    dataSourceUID: string;
}
interface EnterpriseApiEnableDataSourceCacheRequest {
    dataSourceUID: string;
}
interface EnterpriseApiGetDataSourceCacheConfigRequest {
    dataSourceUID: string;
}
interface EnterpriseApiGetReportRequest {
    id: number;
}
interface EnterpriseApiGetRoleRequest {
    roleUID: string;
}
interface EnterpriseApiGetRoleAssignmentsRequest {
    roleUID: string;
}
interface EnterpriseApiGetTeamGroupsApiRequest {
    teamId: number;
}
interface EnterpriseApiGetTeamLBACRulesApiRequest {
    uid: string;
}
interface EnterpriseApiListRolesRequest {
    delegatable?: boolean;
    includeHidden?: boolean;
}
interface EnterpriseApiListTeamRolesRequest {
    teamId: number;
}
interface EnterpriseApiListTeamsRolesRequest {
    body: RolesSearchQuery;
}
interface EnterpriseApiListUserRolesRequest {
    userId: number;
}
interface EnterpriseApiListUsersRolesRequest {
    body: RolesSearchQuery;
}
interface EnterpriseApiPostACSRequest {
    relayState?: string;
}
interface EnterpriseApiPostLicenseTokenRequest {
    body: DeleteTokenCommand;
}
interface EnterpriseApiPostRenewLicenseTokenRequest {
    body: object;
}
interface EnterpriseApiPostSLORequest {
    sAMLRequest?: string;
    sAMLResponse?: string;
}
interface EnterpriseApiRemoveTeamGroupApiQueryRequest {
    teamId: number;
    groupId?: string;
}
interface EnterpriseApiRemoveTeamRoleRequest {
    roleUID: string;
    teamId: number;
}
interface EnterpriseApiRemoveUserRoleRequest {
    roleUID: string;
    userId: number;
    global?: boolean;
}
interface EnterpriseApiRenderReportCSVsRequest {
    dashboards?: string;
    title?: string;
}
interface EnterpriseApiRenderReportPDFsRequest {
    dashboards?: string;
    orientation?: string;
    layout?: string;
    title?: string;
    scaleFactor?: string;
    includeTables?: string;
}
interface EnterpriseApiSaveReportSettingsRequest {
    body: ReportSettings;
}
interface EnterpriseApiSendReportRequest {
    body: ReportEmail;
}
interface EnterpriseApiSendTestEmailRequest {
    body: CreateOrUpdateReport;
}
interface EnterpriseApiSetDataSourceCacheConfigRequest {
    dataSourceUID: string;
    body: CacheConfigSetter;
}
interface EnterpriseApiSetRoleAssignmentsRequest {
    roleUID: string;
    body: SetRoleAssignmentsCommand;
}
interface EnterpriseApiSetTeamRolesRequest {
    teamId: number;
}
interface EnterpriseApiSetUserRolesRequest {
    userId: number;
    body: SetUserRolesCommand;
}
interface EnterpriseApiTestCreateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
interface EnterpriseApiUpdateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
interface EnterpriseApiUpdateReportRequest {
    id: number;
    body: CreateOrUpdateReport;
}
interface EnterpriseApiUpdateRoleRequest {
    roleUID: string;
    body: UpdateRoleCommand;
}
interface EnterpriseApiUpdateTeamLBACRulesApiRequest {
    uid: string;
}
/**
 *
 */
declare class EnterpriseApi extends BaseAPI {
    /**
     * Add External Group.
     */
    addTeamGroupApiRaw(requestParameters: EnterpriseApiAddTeamGroupApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Add External Group.
     */
    addTeamGroupApi(requestParameters: EnterpriseApiAddTeamGroupApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.
     * Add team role.
     */
    addTeamRoleRaw(requestParameters: EnterpriseApiAddTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.
     * Add team role.
     */
    addTeamRole(requestParameters: EnterpriseApiAddTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Add a user role assignment.
     */
    addUserRoleRaw(requestParameters: EnterpriseApiAddUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Add a user role assignment.
     */
    addUserRole(requestParameters: EnterpriseApiAddUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.
     */
    adminProvisioningReloadAccessControlRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ErrorResponseBody>>;
    /**
     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.
     */
    adminProvisioningReloadAccessControl(initOverrides?: RequestInit | InitOverrideFunction): Promise<ErrorResponseBody>;
    /**
     * clean cache for a single data source
     */
    cleanDataSourceCacheRaw(requestParameters: EnterpriseApiCleanDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CacheConfigResponse>>;
    /**
     * clean cache for a single data source
     */
    cleanDataSourceCache(requestParameters: EnterpriseApiCleanDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CacheConfigResponse>;
    /**
     * Create a recording rule that is then registered and started.
     */
    createRecordingRuleRaw(requestParameters: EnterpriseApiCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RecordingRuleJSON>>;
    /**
     * Create a recording rule that is then registered and started.
     */
    createRecordingRule(requestParameters: EnterpriseApiCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RecordingRuleJSON>;
    /**
     * It returns a 422 if there is not an existing prometheus data source configured.
     * Create a remote write target.
     */
    createRecordingRuleWriteTargetRaw(requestParameters: EnterpriseApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PrometheusRemoteWriteTargetJSON>>;
    /**
     * It returns a 422 if there is not an existing prometheus data source configured.
     * Create a remote write target.
     */
    createRecordingRuleWriteTarget(requestParameters: EnterpriseApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.
     * Create a report.
     */
    createReportRaw(requestParameters: EnterpriseApiCreateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateReport200Response>>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.
     * Create a report.
     */
    createReport(requestParameters: EnterpriseApiCreateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateReport200Response>;
    /**
     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.
     * Create a new custom role.
     */
    createRoleRaw(requestParameters: EnterpriseApiCreateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.
     * Create a new custom role.
     */
    createRole(requestParameters: EnterpriseApiCreateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
    /**
     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.
     * Remove license from database.
     */
    deleteLicenseTokenRaw(requestParameters: EnterpriseApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ErrorResponseBody>>;
    /**
     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.
     * Remove license from database.
     */
    deleteLicenseToken(requestParameters: EnterpriseApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ErrorResponseBody>;
    /**
     * Delete removes the rule from the registry and stops it.
     */
    deleteRecordingRuleRaw(requestParameters: EnterpriseApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete removes the rule from the registry and stops it.
     */
    deleteRecordingRule(requestParameters: EnterpriseApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Delete the remote write target.
     */
    deleteRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete the remote write target.
     */
    deleteRecordingRuleWriteTarget(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.
     * Delete a report.
     */
    deleteReportRaw(requestParameters: EnterpriseApiDeleteReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.
     * Delete a report.
     */
    deleteReport(requestParameters: EnterpriseApiDeleteReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.
     * Delete a custom role.
     */
    deleteRoleRaw(requestParameters: EnterpriseApiDeleteRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.
     * Delete a custom role.
     */
    deleteRole(requestParameters: EnterpriseApiDeleteRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * disable cache for a single data source
     */
    disableDataSourceCacheRaw(requestParameters: EnterpriseApiDisableDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CacheConfigResponse>>;
    /**
     * disable cache for a single data source
     */
    disableDataSourceCache(requestParameters: EnterpriseApiDisableDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CacheConfigResponse>;
    /**
     * enable cache for a single data source
     */
    enableDataSourceCacheRaw(requestParameters: EnterpriseApiEnableDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CacheConfigResponse>>;
    /**
     * enable cache for a single data source
     */
    enableDataSourceCache(requestParameters: EnterpriseApiEnableDataSourceCacheRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CacheConfigResponse>;
    /**
     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.
     * Get status.
     */
    getAccessControlStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<number>>;
    /**
     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.
     * Get status.
     */
    getAccessControlStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<number>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report in CSV format.
     * @deprecated
     */
    getCustomPermissionsCSVRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report in CSV format.
     * @deprecated
     */
    getCustomPermissionsCSV(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report.
     * @deprecated
     */
    getCustomPermissionsReportRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report.
     * @deprecated
     */
    getCustomPermissionsReport(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * get cache config for a single data source
     */
    getDataSourceCacheConfigRaw(requestParameters: EnterpriseApiGetDataSourceCacheConfigRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CacheConfigResponse>>;
    /**
     * get cache config for a single data source
     */
    getDataSourceCacheConfig(requestParameters: EnterpriseApiGetDataSourceCacheConfigRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CacheConfigResponse>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Get license token.
     */
    getLicenseTokenRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Token>>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Get license token.
     */
    getLicenseToken(initOverrides?: RequestInit | InitOverrideFunction): Promise<Token>;
    /**
     * It exposes the SP (Grafana\'s) metadata for the IdP\'s consumption.
     */
    getMetadataRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * It exposes the SP (Grafana\'s) metadata for the IdP\'s consumption.
     */
    getMetadata(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Return the prometheus remote write target.
     */
    getRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PrometheusRemoteWriteTargetJSON>>;
    /**
     * Return the prometheus remote write target.
     */
    getRecordingRuleWriteTarget(initOverrides?: RequestInit | InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.
     * Get a report.
     */
    getReportRaw(requestParameters: EnterpriseApiGetReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Report>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.
     * Get a report.
     */
    getReport(requestParameters: EnterpriseApiGetReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Report>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.
     * Get report settings.
     */
    getReportSettingsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ReportSettings>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.
     * Get report settings.
     */
    getReportSettings(initOverrides?: RequestInit | InitOverrideFunction): Promise<ReportSettings>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.
     * List reports.
     */
    getReportsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Report>>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.
     * List reports.
     */
    getReports(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Report>>;
    /**
     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.
     * Get a role.
     */
    getRoleRaw(requestParameters: EnterpriseApiGetRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.
     * Get a role.
     */
    getRole(requestParameters: EnterpriseApiGetRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
    /**
     * Get role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.
     * Get role assignments.
     */
    getRoleAssignmentsRaw(requestParameters: EnterpriseApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleAssignmentsDTO>>;
    /**
     * Get role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.
     * Get role assignments.
     */
    getRoleAssignments(requestParameters: EnterpriseApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleAssignmentsDTO>;
    /**
     * GetLogout initiates single logout process.
     */
    getSAMLLogoutRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * GetLogout initiates single logout process.
     */
    getSAMLLogout(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    getSLORaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    getSLO(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.
     * Get custom branding report image.
     */
    getSettingsImageRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.
     * Get custom branding report image.
     */
    getSettingsImage(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Check license availability.
     */
    getStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Check license availability.
     */
    getStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `ldap.status:read`.
     * Returns the current state of the LDAP background sync integration.
     */
    getSyncStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ActiveSyncStatusDTO>>;
    /**
     * You need to have a permission with action `ldap.status:read`.
     * Returns the current state of the LDAP background sync integration.
     */
    getSyncStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<ActiveSyncStatusDTO>;
    /**
     * Get External Groups.
     */
    getTeamGroupsApiRaw(requestParameters: EnterpriseApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TeamGroupDTO>>>;
    /**
     * Get External Groups.
     */
    getTeamGroupsApi(requestParameters: EnterpriseApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TeamGroupDTO>>;
    /**
     * Retrieves LBAC rules for a team.
     */
    getTeamLBACRulesApiRaw(requestParameters: EnterpriseApiGetTeamLBACRulesApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Retrieves LBAC rules for a team.
     */
    getTeamLBACRulesApi(requestParameters: EnterpriseApiGetTeamLBACRulesApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Lists all rules in the database: active or deleted.
     */
    listRecordingRulesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RecordingRuleJSON>>>;
    /**
     * Lists all rules in the database: active or deleted.
     */
    listRecordingRules(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RecordingRuleJSON>>;
    /**
     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.
     * Get all roles.
     */
    listRolesRaw(requestParameters: EnterpriseApiListRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RoleDTO>>>;
    /**
     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.
     * Get all roles.
     */
    listRoles(requestParameters?: EnterpriseApiListRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RoleDTO>>;
    /**
     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.
     * Get team roles.
     */
    listTeamRolesRaw(requestParameters: EnterpriseApiListTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.
     * Get team roles.
     */
    listTeamRoles(requestParameters: EnterpriseApiListTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.
     * List roles assigned to multiple teams.
     */
    listTeamsRolesRaw(requestParameters: EnterpriseApiListTeamsRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: Array<RoleDTO>;
    }>>;
    /**
     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.
     * List roles assigned to multiple teams.
     */
    listTeamsRoles(requestParameters: EnterpriseApiListTeamsRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: Array<RoleDTO>;
    }>;
    /**
     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.
     * List roles assigned to a user.
     */
    listUserRolesRaw(requestParameters: EnterpriseApiListUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RoleDTO>>>;
    /**
     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.
     * List roles assigned to a user.
     */
    listUserRoles(requestParameters: EnterpriseApiListUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RoleDTO>>;
    /**
     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.
     * List roles assigned to multiple users.
     */
    listUsersRolesRaw(requestParameters: EnterpriseApiListUsersRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: Array<RoleDTO>;
    }>>;
    /**
     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.
     * List roles assigned to multiple users.
     */
    listUsersRoles(requestParameters: EnterpriseApiListUsersRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: Array<RoleDTO>;
    }>;
    /**
     * It performs Assertion Consumer Service (ACS).
     */
    postACSRaw(requestParameters: EnterpriseApiPostACSRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * It performs Assertion Consumer Service (ACS).
     */
    postACS(requestParameters?: EnterpriseApiPostACSRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing:update`.
     * Create license token.
     */
    postLicenseTokenRaw(requestParameters: EnterpriseApiPostLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Token>>;
    /**
     * You need to have a permission with action `licensing:update`.
     * Create license token.
     */
    postLicenseToken(requestParameters: EnterpriseApiPostLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Token>;
    /**
     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.
     * Manually force license refresh.
     */
    postRenewLicenseTokenRaw(requestParameters: EnterpriseApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.
     * Manually force license refresh.
     */
    postRenewLicenseToken(requestParameters: EnterpriseApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    postSLORaw(requestParameters: EnterpriseApiPostSLORequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    postSLO(requestParameters?: EnterpriseApiPostSLORequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Refresh license stats.
     */
    refreshLicenseStatsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ActiveUserStats>>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Refresh license stats.
     */
    refreshLicenseStats(initOverrides?: RequestInit | InitOverrideFunction): Promise<ActiveUserStats>;
    /**
     * Remove External Group.
     */
    removeTeamGroupApiQueryRaw(requestParameters: EnterpriseApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Remove External Group.
     */
    removeTeamGroupApiQuery(requestParameters: EnterpriseApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.
     * Remove team role.
     */
    removeTeamRoleRaw(requestParameters: EnterpriseApiRemoveTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.
     * Remove team role.
     */
    removeTeamRole(requestParameters: EnterpriseApiRemoveTeamRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Remove a user role assignment.
     */
    removeUserRoleRaw(requestParameters: EnterpriseApiRemoveUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Remove a user role assignment.
     */
    removeUserRole(requestParameters: EnterpriseApiRemoveUserRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to all users and with a valid license.
     * Download a CSV report.
     */
    renderReportCSVsRaw(requestParameters: EnterpriseApiRenderReportCSVsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to all users and with a valid license.
     * Download a CSV report.
     */
    renderReportCSVs(requestParameters?: EnterpriseApiRenderReportCSVsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Available to all users and with a valid license.
     * Render report for multiple dashboards.
     */
    renderReportPDFsRaw(requestParameters: EnterpriseApiRenderReportPDFsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to all users and with a valid license.
     * Render report for multiple dashboards.
     */
    renderReportPDFs(requestParameters?: EnterpriseApiRenderReportPDFsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.
     * Save settings.
     */
    saveReportSettingsRaw(requestParameters: EnterpriseApiSaveReportSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.
     * Save settings.
     */
    saveReportSettings(requestParameters: EnterpriseApiSaveReportSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Returns the result of the search through access-control role assignments.  You need to have a permission with action `teams.roles:read` on scope `teams:*` and a permission with action `users.roles:read` on scope `users:*`.
     * Debug permissions.
     */
    searchResultRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchResult>>;
    /**
     * Returns the result of the search through access-control role assignments.  You need to have a permission with action `teams.roles:read` on scope `teams:*` and a permission with action `users.roles:read` on scope `users:*`.
     * Debug permissions.
     */
    searchResult(initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchResult>;
    /**
     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.
     * Send a report.
     */
    sendReportRaw(requestParameters: EnterpriseApiSendReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.
     * Send a report.
     */
    sendReport(requestParameters: EnterpriseApiSendReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.
     * Send test report via email.
     */
    sendTestEmailRaw(requestParameters: EnterpriseApiSendTestEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.
     * Send test report via email.
     */
    sendTestEmail(requestParameters: EnterpriseApiSendTestEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * set cache config for a single data source
     */
    setDataSourceCacheConfigRaw(requestParameters: EnterpriseApiSetDataSourceCacheConfigRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CacheConfigResponse>>;
    /**
     * set cache config for a single data source
     */
    setDataSourceCacheConfig(requestParameters: EnterpriseApiSetDataSourceCacheConfigRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CacheConfigResponse>;
    /**
     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.
     * Set role assignments.
     */
    setRoleAssignmentsRaw(requestParameters: EnterpriseApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleAssignmentsDTO>>;
    /**
     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.
     * Set role assignments.
     */
    setRoleAssignments(requestParameters: EnterpriseApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleAssignmentsDTO>;
    /**
     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.
     * Update team role.
     */
    setTeamRolesRaw(requestParameters: EnterpriseApiSetTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.
     * Update team role.
     */
    setTeamRoles(requestParameters: EnterpriseApiSetTeamRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Set user role assignments.
     */
    setUserRolesRaw(requestParameters: EnterpriseApiSetUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.
     * Set user role assignments.
     */
    setUserRoles(requestParameters: EnterpriseApiSetUserRolesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Test a recording rule.
     */
    testCreateRecordingRuleRaw(requestParameters: EnterpriseApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Test a recording rule.
     */
    testCreateRecordingRule(requestParameters: EnterpriseApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update the active status of a rule.
     */
    updateRecordingRuleRaw(requestParameters: EnterpriseApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RecordingRuleJSON>>;
    /**
     * Update the active status of a rule.
     */
    updateRecordingRule(requestParameters: EnterpriseApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RecordingRuleJSON>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.
     * Update a report.
     */
    updateReportRaw(requestParameters: EnterpriseApiUpdateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.
     * Update a report.
     */
    updateReport(requestParameters: EnterpriseApiUpdateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.
     * Update a custom role.
     */
    updateRoleRaw(requestParameters: EnterpriseApiUpdateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RoleDTO>>;
    /**
     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.
     * Update a custom role.
     */
    updateRole(requestParameters: EnterpriseApiUpdateRoleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RoleDTO>;
    /**
     * Updates LBAC rules for a team.
     */
    updateTeamLBACRulesApiRaw(requestParameters: EnterpriseApiUpdateTeamLBACRulesApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Updates LBAC rules for a team.
     */
    updateTeamLBACRulesApi(requestParameters: EnterpriseApiUpdateTeamLBACRulesApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface FolderPermissionsApiGetFolderPermissionListRequest {
    folderUid: string;
}
interface FolderPermissionsApiUpdateFolderPermissionsRequest {
    folderUid: string;
    body: UpdateDashboardACLCommand;
}
/**
 *
 */
declare class FolderPermissionsApi extends BaseAPI {
    /**
     * Gets all existing permissions for the folder with the given `uid`.
     */
    getFolderPermissionListRaw(requestParameters: FolderPermissionsApiGetFolderPermissionListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardACLInfoDTO>>>;
    /**
     * Gets all existing permissions for the folder with the given `uid`.
     */
    getFolderPermissionList(requestParameters: FolderPermissionsApiGetFolderPermissionListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>>;
    /**
     * Updates permissions for a folder. This operation will remove existing permissions if they’re not included in the request.
     */
    updateFolderPermissionsRaw(requestParameters: FolderPermissionsApiUpdateFolderPermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Updates permissions for a folder. This operation will remove existing permissions if they’re not included in the request.
     */
    updateFolderPermissions(requestParameters: FolderPermissionsApiUpdateFolderPermissionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface FoldersApiCreateFolderRequest {
    body: CreateFolderCommand;
}
interface FoldersApiDeleteFolderRequest {
    folderUid: string;
    forceDeleteRules?: boolean;
}
interface FoldersApiGetFolderByIDRequest {
    folderId: number;
}
interface FoldersApiGetFolderByUIDRequest {
    folderUid: string;
}
interface FoldersApiGetFolderDescendantCountsRequest {
    folderUid: string;
}
interface FoldersApiGetFoldersRequest {
    limit?: number;
    page?: number;
    parentUid?: string;
    permission?: GetFoldersPermissionEnum;
}
interface FoldersApiMoveFolderRequest {
    folderUid: string;
    body: MoveFolderCommand;
}
interface FoldersApiUpdateFolderRequest {
    folderUid: string;
    body: UpdateFolderCommand;
}
/**
 *
 */
declare class FoldersApi extends BaseAPI {
    /**
     * If nested folders are enabled then it additionally expects the parent folder UID.
     * Create folder.
     */
    createFolderRaw(requestParameters: FoldersApiCreateFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Folder>>;
    /**
     * If nested folders are enabled then it additionally expects the parent folder UID.
     * Create folder.
     */
    createFolder(requestParameters: FoldersApiCreateFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Folder>;
    /**
     * Deletes an existing folder identified by UID along with all dashboards (and their alerts) stored in the folder. This operation cannot be reverted. If nested folders are enabled then it also deletes all the subfolders.
     * Delete folder.
     */
    deleteFolderRaw(requestParameters: FoldersApiDeleteFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<DeleteFolder200Response>>;
    /**
     * Deletes an existing folder identified by UID along with all dashboards (and their alerts) stored in the folder. This operation cannot be reverted. If nested folders are enabled then it also deletes all the subfolders.
     * Delete folder.
     */
    deleteFolder(requestParameters: FoldersApiDeleteFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<DeleteFolder200Response>;
    /**
     * Returns the folder identified by id. This is deprecated. Please refer to [updated API](#/folders/getFolderByUID) instead
     * Get folder by id.
     * @deprecated
     */
    getFolderByIDRaw(requestParameters: FoldersApiGetFolderByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Folder>>;
    /**
     * Returns the folder identified by id. This is deprecated. Please refer to [updated API](#/folders/getFolderByUID) instead
     * Get folder by id.
     * @deprecated
     */
    getFolderByID(requestParameters: FoldersApiGetFolderByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Folder>;
    /**
     * Get folder by uid.
     */
    getFolderByUIDRaw(requestParameters: FoldersApiGetFolderByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Folder>>;
    /**
     * Get folder by uid.
     */
    getFolderByUID(requestParameters: FoldersApiGetFolderByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Folder>;
    /**
     * Gets the count of each descendant of a folder by kind. The folder is identified by UID.
     */
    getFolderDescendantCountsRaw(requestParameters: FoldersApiGetFolderDescendantCountsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: number;
    }>>;
    /**
     * Gets the count of each descendant of a folder by kind. The folder is identified by UID.
     */
    getFolderDescendantCounts(requestParameters: FoldersApiGetFolderDescendantCountsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: number;
    }>;
    /**
     * It returns all folders that the authenticated user has permission to view. If nested folders are enabled, it expects an additional query parameter with the parent folder UID and returns the immediate subfolders that the authenticated user has permission to view. If the parameter is not supplied then it returns immediate subfolders under the root that the authenticated user has permission to view.
     * Get all folders.
     */
    getFoldersRaw(requestParameters: FoldersApiGetFoldersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<FolderSearchHit>>>;
    /**
     * It returns all folders that the authenticated user has permission to view. If nested folders are enabled, it expects an additional query parameter with the parent folder UID and returns the immediate subfolders that the authenticated user has permission to view. If the parameter is not supplied then it returns immediate subfolders under the root that the authenticated user has permission to view.
     * Get all folders.
     */
    getFolders(requestParameters?: FoldersApiGetFoldersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<FolderSearchHit>>;
    /**
     * Move folder.
     */
    moveFolderRaw(requestParameters: FoldersApiMoveFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Folder>>;
    /**
     * Move folder.
     */
    moveFolder(requestParameters: FoldersApiMoveFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Folder>;
    /**
     * Update folder.
     */
    updateFolderRaw(requestParameters: FoldersApiUpdateFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Folder>>;
    /**
     * Update folder.
     */
    updateFolder(requestParameters: FoldersApiUpdateFolderRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Folder>;
}
/**
 * @export
 */
declare const GetFoldersPermissionEnum: {
    readonly Edit: "Edit";
    readonly View: "View";
};
type GetFoldersPermissionEnum = typeof GetFoldersPermissionEnum[keyof typeof GetFoldersPermissionEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class GetCurrentOrgApi extends BaseAPI {
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).
     * Fetch Organization quota.
     */
    getCurrentOrgQuotaRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<QuotaDTO>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).
     * Fetch Organization quota.
     */
    getCurrentOrgQuota(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<QuotaDTO>>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class HealthApi extends BaseAPI {
    /**
     * apiHealthHandler will return ok if Grafana\'s web server is running and it can access the database. If the database cannot be accessed it will return http status code 503.
     */
    getHealthRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<HealthResponse>>;
    /**
     * apiHealthHandler will return ok if Grafana\'s web server is running and it can access the database. If the database cannot be accessed it will return http status code 503.
     */
    getHealth(initOverrides?: RequestInit | InitOverrideFunction): Promise<HealthResponse>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class LdapDebugApi extends BaseAPI {
    /**
     * You need to have a permission with action `ldap.status:read`.
     * Returns the current state of the LDAP background sync integration.
     */
    getSyncStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ActiveSyncStatusDTO>>;
    /**
     * You need to have a permission with action `ldap.status:read`.
     * Returns the current state of the LDAP background sync integration.
     */
    getSyncStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<ActiveSyncStatusDTO>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface LibraryElementsApiCreateLibraryElementRequest {
    body: CreateLibraryElementCommand;
}
interface LibraryElementsApiDeleteLibraryElementByUIDRequest {
    libraryElementUid: string;
}
interface LibraryElementsApiGetLibraryElementByNameRequest {
    libraryElementName: string;
}
interface LibraryElementsApiGetLibraryElementByUIDRequest {
    libraryElementUid: string;
}
interface LibraryElementsApiGetLibraryElementConnectionsRequest {
    libraryElementUid: string;
}
interface LibraryElementsApiGetLibraryElementsRequest {
    searchString?: string;
    kind?: GetLibraryElementsKindEnum;
    sortDirection?: GetLibraryElementsSortDirectionEnum;
    typeFilter?: string;
    excludeUid?: string;
    folderFilter?: string;
    perPage?: number;
    page?: number;
}
interface LibraryElementsApiUpdateLibraryElementRequest {
    libraryElementUid: string;
    body: PatchLibraryElementCommand;
}
/**
 *
 */
declare class LibraryElementsApi extends BaseAPI {
    /**
     * Creates a new library element.
     * Create library element.
     */
    createLibraryElementRaw(requestParameters: LibraryElementsApiCreateLibraryElementRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementResponse>>;
    /**
     * Creates a new library element.
     * Create library element.
     */
    createLibraryElement(requestParameters: LibraryElementsApiCreateLibraryElementRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementResponse>;
    /**
     * Deletes an existing library element as specified by the UID. This operation cannot be reverted. You cannot delete a library element that is connected. This operation cannot be reverted.
     * Delete library element.
     */
    deleteLibraryElementByUIDRaw(requestParameters: LibraryElementsApiDeleteLibraryElementByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Deletes an existing library element as specified by the UID. This operation cannot be reverted. You cannot delete a library element that is connected. This operation cannot be reverted.
     * Delete library element.
     */
    deleteLibraryElementByUID(requestParameters: LibraryElementsApiDeleteLibraryElementByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Returns a library element with the given name.
     * Get library element by name.
     */
    getLibraryElementByNameRaw(requestParameters: LibraryElementsApiGetLibraryElementByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementArrayResponse>>;
    /**
     * Returns a library element with the given name.
     * Get library element by name.
     */
    getLibraryElementByName(requestParameters: LibraryElementsApiGetLibraryElementByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementArrayResponse>;
    /**
     * Returns a library element with the given UID.
     * Get library element by UID.
     */
    getLibraryElementByUIDRaw(requestParameters: LibraryElementsApiGetLibraryElementByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementResponse>>;
    /**
     * Returns a library element with the given UID.
     * Get library element by UID.
     */
    getLibraryElementByUID(requestParameters: LibraryElementsApiGetLibraryElementByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementResponse>;
    /**
     * Returns a list of connections for a library element based on the UID specified.
     * Get library element connections.
     */
    getLibraryElementConnectionsRaw(requestParameters: LibraryElementsApiGetLibraryElementConnectionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementConnectionsResponse>>;
    /**
     * Returns a list of connections for a library element based on the UID specified.
     * Get library element connections.
     */
    getLibraryElementConnections(requestParameters: LibraryElementsApiGetLibraryElementConnectionsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementConnectionsResponse>;
    /**
     * Returns a list of all library elements the authenticated user has permission to view. Use the `perPage` query parameter to control the maximum number of library elements returned; the default limit is `100`. You can also use the `page` query parameter to fetch library elements from any page other than the first one.
     * Get all library elements.
     */
    getLibraryElementsRaw(requestParameters: LibraryElementsApiGetLibraryElementsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementSearchResponse>>;
    /**
     * Returns a list of all library elements the authenticated user has permission to view. Use the `perPage` query parameter to control the maximum number of library elements returned; the default limit is `100`. You can also use the `page` query parameter to fetch library elements from any page other than the first one.
     * Get all library elements.
     */
    getLibraryElements(requestParameters?: LibraryElementsApiGetLibraryElementsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementSearchResponse>;
    /**
     * Updates an existing library element identified by uid.
     * Update library element.
     */
    updateLibraryElementRaw(requestParameters: LibraryElementsApiUpdateLibraryElementRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<LibraryElementResponse>>;
    /**
     * Updates an existing library element identified by uid.
     * Update library element.
     */
    updateLibraryElement(requestParameters: LibraryElementsApiUpdateLibraryElementRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<LibraryElementResponse>;
}
/**
 * @export
 */
declare const GetLibraryElementsKindEnum: {
    readonly NUMBER_1: 1;
    readonly NUMBER_2: 2;
};
type GetLibraryElementsKindEnum = typeof GetLibraryElementsKindEnum[keyof typeof GetLibraryElementsKindEnum];
/**
 * @export
 */
declare const GetLibraryElementsSortDirectionEnum: {
    readonly Asc: "alpha-asc";
    readonly Desc: "alpha-desc";
};
type GetLibraryElementsSortDirectionEnum = typeof GetLibraryElementsSortDirectionEnum[keyof typeof GetLibraryElementsSortDirectionEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface LicensingApiDeleteLicenseTokenRequest {
    body: DeleteTokenCommand;
}
interface LicensingApiPostLicenseTokenRequest {
    body: DeleteTokenCommand;
}
interface LicensingApiPostRenewLicenseTokenRequest {
    body: object;
}
/**
 *
 */
declare class LicensingApi extends BaseAPI {
    /**
     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.
     * Remove license from database.
     */
    deleteLicenseTokenRaw(requestParameters: LicensingApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ErrorResponseBody>>;
    /**
     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.
     * Remove license from database.
     */
    deleteLicenseToken(requestParameters: LicensingApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ErrorResponseBody>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report in CSV format.
     * @deprecated
     */
    getCustomPermissionsCSVRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report in CSV format.
     * @deprecated
     */
    getCustomPermissionsCSV(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report.
     * @deprecated
     */
    getCustomPermissionsReportRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * You need to have a permission with action `licensing.reports:read`.
     * Get custom permissions report.
     * @deprecated
     */
    getCustomPermissionsReport(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Get license token.
     */
    getLicenseTokenRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Token>>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Get license token.
     */
    getLicenseToken(initOverrides?: RequestInit | InitOverrideFunction): Promise<Token>;
    /**
     * Check license availability.
     */
    getStatusRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Check license availability.
     */
    getStatus(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing:update`.
     * Create license token.
     */
    postLicenseTokenRaw(requestParameters: LicensingApiPostLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Token>>;
    /**
     * You need to have a permission with action `licensing:update`.
     * Create license token.
     */
    postLicenseToken(requestParameters: LicensingApiPostLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Token>;
    /**
     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.
     * Manually force license refresh.
     */
    postRenewLicenseTokenRaw(requestParameters: LicensingApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.
     * Manually force license refresh.
     */
    postRenewLicenseToken(requestParameters: LicensingApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Refresh license stats.
     */
    refreshLicenseStatsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ActiveUserStats>>;
    /**
     * You need to have a permission with action `licensing:read`.
     * Refresh license stats.
     */
    refreshLicenseStats(initOverrides?: RequestInit | InitOverrideFunction): Promise<ActiveUserStats>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface MigrationsApiCancelSnapshotRequest {
    uid: string;
    snapshotUid: string;
}
interface MigrationsApiCreateSessionRequest {
    body: CloudMigrationSessionRequestDTO;
}
interface MigrationsApiCreateSnapshotRequest {
    uid: string;
}
interface MigrationsApiDeleteCloudMigrationTokenRequest {
    uid: string;
}
interface MigrationsApiDeleteSessionRequest {
    uid: string;
}
interface MigrationsApiGetCloudMigrationRunRequest {
    runUID: string;
}
interface MigrationsApiGetCloudMigrationRunListRequest {
    uid: string;
}
interface MigrationsApiGetSessionRequest {
    uid: string;
}
interface MigrationsApiGetShapshotListRequest {
    uid: string;
    page?: number;
    limit?: number;
}
interface MigrationsApiGetSnapshotRequest {
    uid: string;
    snapshotUid: string;
    resultPage?: number;
    resultLimit?: number;
}
interface MigrationsApiRunCloudMigrationRequest {
    uid: string;
}
interface MigrationsApiUploadSnapshotRequest {
    uid: string;
    snapshotUid: string;
}
/**
 *
 */
declare class MigrationsApi extends BaseAPI {
    /**
     * TODO: Implement
     * Cancel a snapshot, wherever it is in its processing chain.
     */
    cancelSnapshotRaw(requestParameters: MigrationsApiCancelSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * TODO: Implement
     * Cancel a snapshot, wherever it is in its processing chain.
     */
    cancelSnapshot(requestParameters: MigrationsApiCancelSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Create gcom access token.
     */
    createCloudMigrationTokenRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateAccessTokenResponseDTO>>;
    /**
     * Create gcom access token.
     */
    createCloudMigrationToken(initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateAccessTokenResponseDTO>;
    /**
     * Create a migration session.
     */
    createSessionRaw(requestParameters: MigrationsApiCreateSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CloudMigrationSessionResponseDTO>>;
    /**
     * Create a migration session.
     */
    createSession(requestParameters: MigrationsApiCreateSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CloudMigrationSessionResponseDTO>;
    /**
     * If the snapshot initialization is successful, the snapshot uid is returned.
     * Trigger the creation of an instance snapshot associated with the provided session.
     */
    createSnapshotRaw(requestParameters: MigrationsApiCreateSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateSnapshotResponseDTO>>;
    /**
     * If the snapshot initialization is successful, the snapshot uid is returned.
     * Trigger the creation of an instance snapshot associated with the provided session.
     */
    createSnapshot(requestParameters: MigrationsApiCreateSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateSnapshotResponseDTO>;
    /**
     * Deletes a cloud migration token.
     */
    deleteCloudMigrationTokenRaw(requestParameters: MigrationsApiDeleteCloudMigrationTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Deletes a cloud migration token.
     */
    deleteCloudMigrationToken(requestParameters: MigrationsApiDeleteCloudMigrationTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Delete a migration session by its uid.
     */
    deleteSessionRaw(requestParameters: MigrationsApiDeleteSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete a migration session by its uid.
     */
    deleteSession(requestParameters: MigrationsApiDeleteSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Get the result of a single migration run.
     */
    getCloudMigrationRunRaw(requestParameters: MigrationsApiGetCloudMigrationRunRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<MigrateDataResponseDTO>>;
    /**
     * Get the result of a single migration run.
     */
    getCloudMigrationRun(requestParameters: MigrationsApiGetCloudMigrationRunRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<MigrateDataResponseDTO>;
    /**
     * Get a list of migration runs for a migration.
     */
    getCloudMigrationRunListRaw(requestParameters: MigrationsApiGetCloudMigrationRunListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CloudMigrationRunListDTO>>;
    /**
     * Get a list of migration runs for a migration.
     */
    getCloudMigrationRunList(requestParameters: MigrationsApiGetCloudMigrationRunListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CloudMigrationRunListDTO>;
    /**
     * Fetch the cloud migration token if it exists.
     */
    getCloudMigrationTokenRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetAccessTokenResponseDTO>>;
    /**
     * Fetch the cloud migration token if it exists.
     */
    getCloudMigrationToken(initOverrides?: RequestInit | InitOverrideFunction): Promise<GetAccessTokenResponseDTO>;
    /**
     * Get a cloud migration session by its uid.
     */
    getSessionRaw(requestParameters: MigrationsApiGetSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CloudMigrationSessionResponseDTO>>;
    /**
     * Get a cloud migration session by its uid.
     */
    getSession(requestParameters: MigrationsApiGetSessionRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CloudMigrationSessionResponseDTO>;
    /**
     * Get a list of all cloud migration sessions that have been created.
     */
    getSessionListRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CloudMigrationSessionListResponseDTO>>;
    /**
     * Get a list of all cloud migration sessions that have been created.
     */
    getSessionList(initOverrides?: RequestInit | InitOverrideFunction): Promise<CloudMigrationSessionListResponseDTO>;
    /**
     * Get a list of snapshots for a session.
     */
    getShapshotListRaw(requestParameters: MigrationsApiGetShapshotListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SnapshotListResponseDTO>>;
    /**
     * Get a list of snapshots for a session.
     */
    getShapshotList(requestParameters: MigrationsApiGetShapshotListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SnapshotListResponseDTO>;
    /**
     * Get metadata about a snapshot, including where it is in its processing and final results.
     */
    getSnapshotRaw(requestParameters: MigrationsApiGetSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetSnapshotResponseDTO>>;
    /**
     * Get metadata about a snapshot, including where it is in its processing and final results.
     */
    getSnapshot(requestParameters: MigrationsApiGetSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<GetSnapshotResponseDTO>;
    /**
     * It returns migrations that has been created.
     * Trigger the run of a migration to the Grafana Cloud.
     */
    runCloudMigrationRaw(requestParameters: MigrationsApiRunCloudMigrationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<MigrateDataResponseDTO>>;
    /**
     * It returns migrations that has been created.
     * Trigger the run of a migration to the Grafana Cloud.
     */
    runCloudMigration(requestParameters: MigrationsApiRunCloudMigrationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<MigrateDataResponseDTO>;
    /**
     * Upload a snapshot to the Grafana Migration Service for processing.
     */
    uploadSnapshotRaw(requestParameters: MigrationsApiUploadSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Upload a snapshot to the Grafana Migration Service for processing.
     */
    uploadSnapshot(requestParameters: MigrationsApiUploadSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface OrgApiAddOrgUserToCurrentOrgRequest {
    body: AddOrgUserCommand;
}
interface OrgApiGetOrgUsersForCurrentOrgLookupRequest {
    query?: string;
    limit?: number;
}
interface OrgApiRemoveOrgUserForCurrentOrgRequest {
    userId: number;
}
interface OrgApiUpdateCurrentOrgRequest {
    body: UpdateOrgForm;
}
interface OrgApiUpdateCurrentOrgAddressRequest {
    body: UpdateOrgAddressForm;
}
interface OrgApiUpdateOrgUserForCurrentOrgRequest {
    userId: number;
    body: UpdateOrgUserCommand;
}
/**
 *
 */
declare class OrgApi extends BaseAPI {
    /**
     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.
     * Add a new user to the current organization.
     */
    addOrgUserToCurrentOrgRaw(requestParameters: OrgApiAddOrgUserToCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.
     * Add a new user to the current organization.
     */
    addOrgUserToCurrentOrg(requestParameters: OrgApiAddOrgUserToCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get current Organization.
     */
    getCurrentOrgRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<OrgDetailsDTO>>;
    /**
     * Get current Organization.
     */
    getCurrentOrg(initOverrides?: RequestInit | InitOverrideFunction): Promise<OrgDetailsDTO>;
    /**
     * Returns all org users within the current organization. Accessible to users with org admin role. If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Get all users within the current organization.
     */
    getOrgUsersForCurrentOrgRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<OrgUserDTO>>>;
    /**
     * Returns all org users within the current organization. Accessible to users with org admin role. If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Get all users within the current organization.
     */
    getOrgUsersForCurrentOrg(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<OrgUserDTO>>;
    /**
     * Returns all org users within the current organization, but with less detailed information. Accessible to users with org admin role, admin in any folder or admin of any team. Mainly used by Grafana UI for providing list of users when adding team members and when editing folder/dashboard permissions.
     * Get all users within the current organization (lookup)
     */
    getOrgUsersForCurrentOrgLookupRaw(requestParameters: OrgApiGetOrgUsersForCurrentOrgLookupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserLookupDTO>>>;
    /**
     * Returns all org users within the current organization, but with less detailed information. Accessible to users with org admin role, admin in any folder or admin of any team. Mainly used by Grafana UI for providing list of users when adding team members and when editing folder/dashboard permissions.
     * Get all users within the current organization (lookup)
     */
    getOrgUsersForCurrentOrgLookup(requestParameters?: OrgApiGetOrgUsersForCurrentOrgLookupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserLookupDTO>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.
     * Delete user in current organization.
     */
    removeOrgUserForCurrentOrgRaw(requestParameters: OrgApiRemoveOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.
     * Delete user in current organization.
     */
    removeOrgUserForCurrentOrg(requestParameters: OrgApiRemoveOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update current Organization.
     */
    updateCurrentOrgRaw(requestParameters: OrgApiUpdateCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update current Organization.
     */
    updateCurrentOrg(requestParameters: OrgApiUpdateCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update current Organization\'s address.
     */
    updateCurrentOrgAddressRaw(requestParameters: OrgApiUpdateCurrentOrgAddressRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update current Organization\'s address.
     */
    updateCurrentOrgAddress(requestParameters: OrgApiUpdateCurrentOrgAddressRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.
     * Updates the given user.
     */
    updateOrgUserForCurrentOrgRaw(requestParameters: OrgApiUpdateOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.
     * Updates the given user.
     */
    updateOrgUserForCurrentOrg(requestParameters: OrgApiUpdateOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface OrgInvitesApiAddOrgInviteRequest {
    body: AddInviteForm;
}
interface OrgInvitesApiRevokeInviteRequest {
    invitationCode: string;
}
/**
 *
 */
declare class OrgInvitesApi extends BaseAPI {
    /**
     * Add invite.
     */
    addOrgInviteRaw(requestParameters: OrgInvitesApiAddOrgInviteRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Add invite.
     */
    addOrgInvite(requestParameters: OrgInvitesApiAddOrgInviteRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get pending invites.
     */
    getPendingOrgInvitesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TempUserDTO>>>;
    /**
     * Get pending invites.
     */
    getPendingOrgInvites(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TempUserDTO>>;
    /**
     * Revoke invite.
     */
    revokeInviteRaw(requestParameters: OrgInvitesApiRevokeInviteRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Revoke invite.
     */
    revokeInvite(requestParameters: OrgInvitesApiRevokeInviteRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface OrgPreferencesApiPatchOrgPreferencesRequest {
    body: PatchPrefsCmd;
}
interface OrgPreferencesApiUpdateOrgPreferencesRequest {
    body: UpdatePrefsCmd;
}
/**
 *
 */
declare class OrgPreferencesApi extends BaseAPI {
    /**
     * Get Current Org Prefs.
     */
    getOrgPreferencesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Preferences>>;
    /**
     * Get Current Org Prefs.
     */
    getOrgPreferences(initOverrides?: RequestInit | InitOverrideFunction): Promise<Preferences>;
    /**
     * Patch Current Org Prefs.
     */
    patchOrgPreferencesRaw(requestParameters: OrgPreferencesApiPatchOrgPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Patch Current Org Prefs.
     */
    patchOrgPreferences(requestParameters: OrgPreferencesApiPatchOrgPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update Current Org Prefs.
     */
    updateOrgPreferencesRaw(requestParameters: OrgPreferencesApiUpdateOrgPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Current Org Prefs.
     */
    updateOrgPreferences(requestParameters: OrgPreferencesApiUpdateOrgPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface OrgsApiAddOrgUserRequest {
    orgId: number;
    body: AddOrgUserCommand;
}
interface OrgsApiCreateOrgRequest {
    body: CreateOrgCommand;
}
interface OrgsApiDeleteOrgByIDRequest {
    orgId: number;
}
interface OrgsApiGetOrgByIDRequest {
    orgId: number;
}
interface OrgsApiGetOrgByNameRequest {
    orgName: string;
}
interface OrgsApiGetOrgQuotaRequest {
    orgId: number;
}
interface OrgsApiGetOrgUsersRequest {
    orgId: number;
}
interface OrgsApiRemoveOrgUserRequest {
    orgId: number;
    userId: number;
}
interface OrgsApiSearchOrgUsersRequest {
    orgId: number;
}
interface OrgsApiSearchOrgsRequest {
    page?: number;
    perpage?: number;
    name?: string;
    query?: string;
}
interface OrgsApiUpdateOrgRequest {
    orgId: number;
    body: UpdateOrgForm;
}
interface OrgsApiUpdateOrgAddressRequest {
    orgId: number;
    body: UpdateOrgAddressForm;
}
interface OrgsApiUpdateOrgQuotaRequest {
    quotaTarget: string;
    orgId: number;
    body: UpdateQuotaCmd;
}
interface OrgsApiUpdateOrgUserRequest {
    orgId: number;
    userId: number;
    body: UpdateOrgUserCommand;
}
/**
 *
 */
declare class OrgsApi extends BaseAPI {
    /**
     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.
     * Add a new user to the current organization.
     */
    addOrgUserRaw(requestParameters: OrgsApiAddOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.
     * Add a new user to the current organization.
     */
    addOrgUser(requestParameters: OrgsApiAddOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Only works if [users.allow_org_create](https://grafana.com/docs/grafana/latest/administration/configuration/#allow_org_create) is set.
     * Create Organization.
     */
    createOrgRaw(requestParameters: OrgsApiCreateOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateOrg200Response>>;
    /**
     * Only works if [users.allow_org_create](https://grafana.com/docs/grafana/latest/administration/configuration/#allow_org_create) is set.
     * Create Organization.
     */
    createOrg(requestParameters: OrgsApiCreateOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateOrg200Response>;
    /**
     * Delete Organization.
     */
    deleteOrgByIDRaw(requestParameters: OrgsApiDeleteOrgByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete Organization.
     */
    deleteOrgByID(requestParameters: OrgsApiDeleteOrgByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get Organization by ID.
     */
    getOrgByIDRaw(requestParameters: OrgsApiGetOrgByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<OrgDetailsDTO>>;
    /**
     * Get Organization by ID.
     */
    getOrgByID(requestParameters: OrgsApiGetOrgByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<OrgDetailsDTO>;
    /**
     * Get Organization by ID.
     */
    getOrgByNameRaw(requestParameters: OrgsApiGetOrgByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<OrgDetailsDTO>>;
    /**
     * Get Organization by ID.
     */
    getOrgByName(requestParameters: OrgsApiGetOrgByNameRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<OrgDetailsDTO>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).
     * Fetch Organization quota.
     */
    getOrgQuotaRaw(requestParameters: OrgsApiGetOrgQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<QuotaDTO>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).
     * Fetch Organization quota.
     */
    getOrgQuota(requestParameters: OrgsApiGetOrgQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<QuotaDTO>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Get Users in Organization.
     */
    getOrgUsersRaw(requestParameters: OrgsApiGetOrgUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<OrgUserDTO>>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Get Users in Organization.
     */
    getOrgUsers(requestParameters: OrgsApiGetOrgUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<OrgUserDTO>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.
     * Delete user in current organization.
     */
    removeOrgUserRaw(requestParameters: OrgsApiRemoveOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.
     * Delete user in current organization.
     */
    removeOrgUser(requestParameters: OrgsApiRemoveOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Search Users in Organization.
     */
    searchOrgUsersRaw(requestParameters: OrgsApiSearchOrgUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchOrgUsersQueryResult>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.
     * Search Users in Organization.
     */
    searchOrgUsers(requestParameters: OrgsApiSearchOrgUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchOrgUsersQueryResult>;
    /**
     * Search all Organizations.
     */
    searchOrgsRaw(requestParameters: OrgsApiSearchOrgsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<OrgDTO>>>;
    /**
     * Search all Organizations.
     */
    searchOrgs(requestParameters?: OrgsApiSearchOrgsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<OrgDTO>>;
    /**
     * Update Organization.
     */
    updateOrgRaw(requestParameters: OrgsApiUpdateOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Organization.
     */
    updateOrg(requestParameters: OrgsApiUpdateOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update Organization\'s address.
     */
    updateOrgAddressRaw(requestParameters: OrgsApiUpdateOrgAddressRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Organization\'s address.
     */
    updateOrgAddress(requestParameters: OrgsApiUpdateOrgAddressRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:write` and scope `org:id:1` (orgIDScope).
     * Update user quota.
     */
    updateOrgQuotaRaw(requestParameters: OrgsApiUpdateOrgQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:write` and scope `org:id:1` (orgIDScope).
     * Update user quota.
     */
    updateOrgQuota(requestParameters: OrgsApiUpdateOrgQuotaRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.
     * Update Users in Organization.
     */
    updateOrgUserRaw(requestParameters: OrgsApiUpdateOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.
     * Update Users in Organization.
     */
    updateOrgUser(requestParameters: OrgsApiUpdateOrgUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface PlaylistsApiCreatePlaylistRequest {
    body: CreatePlaylistCommand;
}
interface PlaylistsApiDeletePlaylistRequest {
    uid: string;
}
interface PlaylistsApiGetPlaylistRequest {
    uid: string;
}
interface PlaylistsApiGetPlaylistItemsRequest {
    uid: string;
}
interface PlaylistsApiSearchPlaylistsRequest {
    query?: string;
    limit?: number;
}
interface PlaylistsApiUpdatePlaylistRequest {
    uid: string;
    body: UpdatePlaylistCommand;
}
/**
 *
 */
declare class PlaylistsApi extends BaseAPI {
    /**
     * Create playlist.
     */
    createPlaylistRaw(requestParameters: PlaylistsApiCreatePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Playlist>>;
    /**
     * Create playlist.
     */
    createPlaylist(requestParameters: PlaylistsApiCreatePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Playlist>;
    /**
     * Delete playlist.
     */
    deletePlaylistRaw(requestParameters: PlaylistsApiDeletePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete playlist.
     */
    deletePlaylist(requestParameters: PlaylistsApiDeletePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get playlist.
     */
    getPlaylistRaw(requestParameters: PlaylistsApiGetPlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PlaylistDTO>>;
    /**
     * Get playlist.
     */
    getPlaylist(requestParameters: PlaylistsApiGetPlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PlaylistDTO>;
    /**
     * Get playlist items.
     */
    getPlaylistItemsRaw(requestParameters: PlaylistsApiGetPlaylistItemsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<PlaylistItemDTO>>>;
    /**
     * Get playlist items.
     */
    getPlaylistItems(requestParameters: PlaylistsApiGetPlaylistItemsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<PlaylistItemDTO>>;
    /**
     * Get playlists.
     */
    searchPlaylistsRaw(requestParameters: PlaylistsApiSearchPlaylistsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Playlist>>>;
    /**
     * Get playlists.
     */
    searchPlaylists(requestParameters?: PlaylistsApiSearchPlaylistsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Playlist>>;
    /**
     * Update playlist.
     */
    updatePlaylistRaw(requestParameters: PlaylistsApiUpdatePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PlaylistDTO>>;
    /**
     * Update playlist.
     */
    updatePlaylist(requestParameters: PlaylistsApiUpdatePlaylistRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PlaylistDTO>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface ProvisioningApiRouteDeleteAlertRuleRequest {
    uID: string;
    xDisableProvenance?: string;
}
interface ProvisioningApiRouteDeleteAlertRuleGroupRequest {
    folderUID: string;
    group: string;
}
interface ProvisioningApiRouteDeleteContactpointsRequest {
    uID: string;
}
interface ProvisioningApiRouteDeleteMuteTimingRequest {
    name: string;
    version?: string;
    xDisableProvenance?: string;
}
interface ProvisioningApiRouteDeleteTemplateRequest {
    name: string;
    version?: string;
}
interface ProvisioningApiRouteExportMuteTimingRequest {
    name: string;
    download?: boolean;
    format?: RouteExportMuteTimingFormatEnum;
}
interface ProvisioningApiRouteExportMuteTimingsRequest {
    download?: boolean;
    format?: RouteExportMuteTimingsFormatEnum;
}
interface ProvisioningApiRouteGetAlertRuleRequest {
    uID: string;
}
interface ProvisioningApiRouteGetAlertRuleExportRequest {
    uID: string;
    download?: boolean;
    format?: RouteGetAlertRuleExportFormatEnum;
}
interface ProvisioningApiRouteGetAlertRuleGroupRequest {
    folderUID: string;
    group: string;
}
interface ProvisioningApiRouteGetAlertRuleGroupExportRequest {
    folderUID: string;
    group: string;
    download?: boolean;
    format?: RouteGetAlertRuleGroupExportFormatEnum;
}
interface ProvisioningApiRouteGetAlertRulesExportRequest {
    download?: boolean;
    format?: RouteGetAlertRulesExportFormatEnum;
    folderUid?: Array<string>;
    group?: string;
    ruleUid?: string;
}
interface ProvisioningApiRouteGetContactpointsRequest {
    name?: string;
}
interface ProvisioningApiRouteGetContactpointsExportRequest {
    download?: boolean;
    format?: RouteGetContactpointsExportFormatEnum;
    decrypt?: boolean;
    name?: string;
}
interface ProvisioningApiRouteGetMuteTimingRequest {
    name: string;
}
interface ProvisioningApiRouteGetTemplateRequest {
    name: string;
}
interface ProvisioningApiRoutePostAlertRuleRequest {
    xDisableProvenance?: string;
    body?: Omit<ProvisionedAlertRule, 'updated'>;
}
interface ProvisioningApiRoutePostContactpointsRequest {
    xDisableProvenance?: string;
    body?: Omit<EmbeddedContactPoint, 'provenance'>;
}
interface ProvisioningApiRoutePostMuteTimingRequest {
    xDisableProvenance?: string;
    body?: MuteTimeInterval;
}
interface ProvisioningApiRoutePutAlertRuleRequest {
    uID: string;
    xDisableProvenance?: string;
    body?: Omit<ProvisionedAlertRule, 'updated'>;
}
interface ProvisioningApiRoutePutAlertRuleGroupRequest {
    folderUID: string;
    group: string;
    xDisableProvenance?: string;
    body?: AlertRuleGroup;
}
interface ProvisioningApiRoutePutContactpointRequest {
    uID: string;
    xDisableProvenance?: string;
    body?: Omit<EmbeddedContactPoint, 'provenance'>;
}
interface ProvisioningApiRoutePutMuteTimingRequest {
    name: string;
    xDisableProvenance?: string;
    body?: MuteTimeInterval;
}
interface ProvisioningApiRoutePutPolicyTreeRequest {
    xDisableProvenance?: string;
    body?: Route;
}
interface ProvisioningApiRoutePutTemplateRequest {
    name: string;
    xDisableProvenance?: string;
    body?: NotificationTemplateContent;
}
/**
 *
 */
declare class ProvisioningApi extends BaseAPI {
    /**
     * Delete a specific alert rule by UID.
     */
    routeDeleteAlertRuleRaw(requestParameters: ProvisioningApiRouteDeleteAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete a specific alert rule by UID.
     */
    routeDeleteAlertRule(requestParameters: ProvisioningApiRouteDeleteAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Delete rule group
     */
    routeDeleteAlertRuleGroupRaw(requestParameters: ProvisioningApiRouteDeleteAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete rule group
     */
    routeDeleteAlertRuleGroup(requestParameters: ProvisioningApiRouteDeleteAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Delete a contact point.
     */
    routeDeleteContactpointsRaw(requestParameters: ProvisioningApiRouteDeleteContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete a contact point.
     */
    routeDeleteContactpoints(requestParameters: ProvisioningApiRouteDeleteContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Delete a mute timing.
     */
    routeDeleteMuteTimingRaw(requestParameters: ProvisioningApiRouteDeleteMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete a mute timing.
     */
    routeDeleteMuteTiming(requestParameters: ProvisioningApiRouteDeleteMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Delete a template.
     */
    routeDeleteTemplateRaw(requestParameters: ProvisioningApiRouteDeleteTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Delete a template.
     */
    routeDeleteTemplate(requestParameters: ProvisioningApiRouteDeleteTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Export a mute timing in provisioning format.
     */
    routeExportMuteTimingRaw(requestParameters: ProvisioningApiRouteExportMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export a mute timing in provisioning format.
     */
    routeExportMuteTiming(requestParameters: ProvisioningApiRouteExportMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Export all mute timings in provisioning format.
     */
    routeExportMuteTimingsRaw(requestParameters: ProvisioningApiRouteExportMuteTimingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export all mute timings in provisioning format.
     */
    routeExportMuteTimings(requestParameters?: ProvisioningApiRouteExportMuteTimingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get a specific alert rule by UID.
     */
    routeGetAlertRuleRaw(requestParameters: ProvisioningApiRouteGetAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ProvisionedAlertRule>>;
    /**
     * Get a specific alert rule by UID.
     */
    routeGetAlertRule(requestParameters: ProvisioningApiRouteGetAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ProvisionedAlertRule>;
    /**
     * Export an alert rule in provisioning file format.
     */
    routeGetAlertRuleExportRaw(requestParameters: ProvisioningApiRouteGetAlertRuleExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export an alert rule in provisioning file format.
     */
    routeGetAlertRuleExport(requestParameters: ProvisioningApiRouteGetAlertRuleExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get a rule group.
     */
    routeGetAlertRuleGroupRaw(requestParameters: ProvisioningApiRouteGetAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertRuleGroup>>;
    /**
     * Get a rule group.
     */
    routeGetAlertRuleGroup(requestParameters: ProvisioningApiRouteGetAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertRuleGroup>;
    /**
     * Export an alert rule group in provisioning file format.
     */
    routeGetAlertRuleGroupExportRaw(requestParameters: ProvisioningApiRouteGetAlertRuleGroupExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export an alert rule group in provisioning file format.
     */
    routeGetAlertRuleGroupExport(requestParameters: ProvisioningApiRouteGetAlertRuleGroupExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get all the alert rules.
     */
    routeGetAlertRulesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<ProvisionedAlertRule>>>;
    /**
     * Get all the alert rules.
     */
    routeGetAlertRules(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<ProvisionedAlertRule>>;
    /**
     * Export all alert rules in provisioning file format.
     */
    routeGetAlertRulesExportRaw(requestParameters: ProvisioningApiRouteGetAlertRulesExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export all alert rules in provisioning file format.
     */
    routeGetAlertRulesExport(requestParameters?: ProvisioningApiRouteGetAlertRulesExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get all the contact points.
     */
    routeGetContactpointsRaw(requestParameters: ProvisioningApiRouteGetContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<EmbeddedContactPoint>>>;
    /**
     * Get all the contact points.
     */
    routeGetContactpoints(requestParameters?: ProvisioningApiRouteGetContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<EmbeddedContactPoint>>;
    /**
     * Export all contact points in provisioning file format.
     */
    routeGetContactpointsExportRaw(requestParameters: ProvisioningApiRouteGetContactpointsExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export all contact points in provisioning file format.
     */
    routeGetContactpointsExport(requestParameters?: ProvisioningApiRouteGetContactpointsExportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get a mute timing.
     */
    routeGetMuteTimingRaw(requestParameters: ProvisioningApiRouteGetMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<MuteTimeInterval>>;
    /**
     * Get a mute timing.
     */
    routeGetMuteTiming(requestParameters: ProvisioningApiRouteGetMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<MuteTimeInterval>;
    /**
     * Get all the mute timings.
     */
    routeGetMuteTimingsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<MuteTimeInterval>>>;
    /**
     * Get all the mute timings.
     */
    routeGetMuteTimings(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<MuteTimeInterval>>;
    /**
     * Get the notification policy tree.
     */
    routeGetPolicyTreeRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Route>>;
    /**
     * Get the notification policy tree.
     */
    routeGetPolicyTree(initOverrides?: RequestInit | InitOverrideFunction): Promise<Route>;
    /**
     * Export the notification policy tree in provisioning file format.
     */
    routeGetPolicyTreeExportRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertingFileExport>>;
    /**
     * Export the notification policy tree in provisioning file format.
     */
    routeGetPolicyTreeExport(initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertingFileExport>;
    /**
     * Get a notification template.
     */
    routeGetTemplateRaw(requestParameters: ProvisioningApiRouteGetTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<NotificationTemplate>>;
    /**
     * Get a notification template.
     */
    routeGetTemplate(requestParameters: ProvisioningApiRouteGetTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<NotificationTemplate>;
    /**
     * Get all notification templates.
     */
    routeGetTemplatesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<NotificationTemplate>>>;
    /**
     * Get all notification templates.
     */
    routeGetTemplates(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<NotificationTemplate>>;
    /**
     * Create a new alert rule.
     */
    routePostAlertRuleRaw(requestParameters: ProvisioningApiRoutePostAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ProvisionedAlertRule>>;
    /**
     * Create a new alert rule.
     */
    routePostAlertRule(requestParameters?: ProvisioningApiRoutePostAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ProvisionedAlertRule>;
    /**
     * Create a contact point.
     */
    routePostContactpointsRaw(requestParameters: ProvisioningApiRoutePostContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<EmbeddedContactPoint>>;
    /**
     * Create a contact point.
     */
    routePostContactpoints(requestParameters?: ProvisioningApiRoutePostContactpointsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<EmbeddedContactPoint>;
    /**
     * Create a new mute timing.
     */
    routePostMuteTimingRaw(requestParameters: ProvisioningApiRoutePostMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<MuteTimeInterval>>;
    /**
     * Create a new mute timing.
     */
    routePostMuteTiming(requestParameters?: ProvisioningApiRoutePostMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<MuteTimeInterval>;
    /**
     * Update an existing alert rule.
     */
    routePutAlertRuleRaw(requestParameters: ProvisioningApiRoutePutAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ProvisionedAlertRule>>;
    /**
     * Update an existing alert rule.
     */
    routePutAlertRule(requestParameters: ProvisioningApiRoutePutAlertRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ProvisionedAlertRule>;
    /**
     * Create or update alert rule group.
     */
    routePutAlertRuleGroupRaw(requestParameters: ProvisioningApiRoutePutAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<AlertRuleGroup>>;
    /**
     * Create or update alert rule group.
     */
    routePutAlertRuleGroup(requestParameters: ProvisioningApiRoutePutAlertRuleGroupRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<AlertRuleGroup>;
    /**
     * Update an existing contact point.
     */
    routePutContactpointRaw(requestParameters: ProvisioningApiRoutePutContactpointRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<object>>;
    /**
     * Update an existing contact point.
     */
    routePutContactpoint(requestParameters: ProvisioningApiRoutePutContactpointRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<object>;
    /**
     * Replace an existing mute timing.
     */
    routePutMuteTimingRaw(requestParameters: ProvisioningApiRoutePutMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<MuteTimeInterval>>;
    /**
     * Replace an existing mute timing.
     */
    routePutMuteTiming(requestParameters: ProvisioningApiRoutePutMuteTimingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<MuteTimeInterval>;
    /**
     * Sets the notification policy tree.
     */
    routePutPolicyTreeRaw(requestParameters: ProvisioningApiRoutePutPolicyTreeRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<object>>;
    /**
     * Sets the notification policy tree.
     */
    routePutPolicyTree(requestParameters?: ProvisioningApiRoutePutPolicyTreeRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<object>;
    /**
     * Updates an existing notification template.
     */
    routePutTemplateRaw(requestParameters: ProvisioningApiRoutePutTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<NotificationTemplate>>;
    /**
     * Updates an existing notification template.
     */
    routePutTemplate(requestParameters: ProvisioningApiRoutePutTemplateRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<NotificationTemplate>;
    /**
     * Clears the notification policy tree.
     */
    routeResetPolicyTreeRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<object>>;
    /**
     * Clears the notification policy tree.
     */
    routeResetPolicyTree(initOverrides?: RequestInit | InitOverrideFunction): Promise<object>;
}
/**
 * @export
 */
declare const RouteExportMuteTimingFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteExportMuteTimingFormatEnum = typeof RouteExportMuteTimingFormatEnum[keyof typeof RouteExportMuteTimingFormatEnum];
/**
 * @export
 */
declare const RouteExportMuteTimingsFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteExportMuteTimingsFormatEnum = typeof RouteExportMuteTimingsFormatEnum[keyof typeof RouteExportMuteTimingsFormatEnum];
/**
 * @export
 */
declare const RouteGetAlertRuleExportFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteGetAlertRuleExportFormatEnum = typeof RouteGetAlertRuleExportFormatEnum[keyof typeof RouteGetAlertRuleExportFormatEnum];
/**
 * @export
 */
declare const RouteGetAlertRuleGroupExportFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteGetAlertRuleGroupExportFormatEnum = typeof RouteGetAlertRuleGroupExportFormatEnum[keyof typeof RouteGetAlertRuleGroupExportFormatEnum];
/**
 * @export
 */
declare const RouteGetAlertRulesExportFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteGetAlertRulesExportFormatEnum = typeof RouteGetAlertRulesExportFormatEnum[keyof typeof RouteGetAlertRulesExportFormatEnum];
/**
 * @export
 */
declare const RouteGetContactpointsExportFormatEnum: {
    readonly Yaml: "yaml";
    readonly Json: "json";
    readonly Hcl: "hcl";
};
type RouteGetContactpointsExportFormatEnum = typeof RouteGetContactpointsExportFormatEnum[keyof typeof RouteGetContactpointsExportFormatEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface QueryHistoryApiCreateQueryRequest {
    body: CreateQueryInQueryHistoryCommand;
}
interface QueryHistoryApiDeleteQueryRequest {
    queryHistoryUid: string;
}
interface QueryHistoryApiPatchQueryCommentRequest {
    queryHistoryUid: string;
    body: PatchQueryCommentInQueryHistoryCommand;
}
interface QueryHistoryApiSearchQueriesRequest {
    datasourceUid?: Array<string>;
    searchString?: string;
    onlyStarred?: boolean;
    sort?: SearchQueriesSortEnum;
    page?: number;
    limit?: number;
    from?: number;
    to?: number;
}
interface QueryHistoryApiStarQueryRequest {
    queryHistoryUid: string;
}
interface QueryHistoryApiUnstarQueryRequest {
    queryHistoryUid: string;
}
/**
 *
 */
declare class QueryHistoryApi extends BaseAPI {
    /**
     * Adds new query to query history.
     * Add query to query history.
     */
    createQueryRaw(requestParameters: QueryHistoryApiCreateQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistoryResponse>>;
    /**
     * Adds new query to query history.
     * Add query to query history.
     */
    createQuery(requestParameters: QueryHistoryApiCreateQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistoryResponse>;
    /**
     * Deletes an existing query in query history as specified by the UID. This operation cannot be reverted.
     * Delete query in query history.
     */
    deleteQueryRaw(requestParameters: QueryHistoryApiDeleteQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistoryDeleteQueryResponse>>;
    /**
     * Deletes an existing query in query history as specified by the UID. This operation cannot be reverted.
     * Delete query in query history.
     */
    deleteQuery(requestParameters: QueryHistoryApiDeleteQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistoryDeleteQueryResponse>;
    /**
     * Updates comment for query in query history as specified by the UID.
     * Update comment for query in query history.
     */
    patchQueryCommentRaw(requestParameters: QueryHistoryApiPatchQueryCommentRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistoryResponse>>;
    /**
     * Updates comment for query in query history as specified by the UID.
     * Update comment for query in query history.
     */
    patchQueryComment(requestParameters: QueryHistoryApiPatchQueryCommentRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistoryResponse>;
    /**
     * Returns a list of queries in the query history that matches the search criteria. Query history search supports pagination. Use the `limit` parameter to control the maximum number of queries returned; the default limit is 100. You can also use the `page` query parameter to fetch queries from any page other than the first one.
     * Query history search.
     */
    searchQueriesRaw(requestParameters: QueryHistoryApiSearchQueriesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistorySearchResponse>>;
    /**
     * Returns a list of queries in the query history that matches the search criteria. Query history search supports pagination. Use the `limit` parameter to control the maximum number of queries returned; the default limit is 100. You can also use the `page` query parameter to fetch queries from any page other than the first one.
     * Query history search.
     */
    searchQueries(requestParameters?: QueryHistoryApiSearchQueriesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistorySearchResponse>;
    /**
     * Adds star to query in query history as specified by the UID.
     * Add star to query in query history.
     */
    starQueryRaw(requestParameters: QueryHistoryApiStarQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistoryResponse>>;
    /**
     * Adds star to query in query history as specified by the UID.
     * Add star to query in query history.
     */
    starQuery(requestParameters: QueryHistoryApiStarQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistoryResponse>;
    /**
     * Removes star from query in query history as specified by the UID.
     * Remove star to query in query history.
     */
    unstarQueryRaw(requestParameters: QueryHistoryApiUnstarQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QueryHistoryResponse>>;
    /**
     * Removes star from query in query history as specified by the UID.
     * Remove star to query in query history.
     */
    unstarQuery(requestParameters: QueryHistoryApiUnstarQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QueryHistoryResponse>;
}
/**
 * @export
 */
declare const SearchQueriesSortEnum: {
    readonly Desc: "time-desc";
    readonly Asc: "time-asc";
};
type SearchQueriesSortEnum = typeof SearchQueriesSortEnum[keyof typeof SearchQueriesSortEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface RecordingRulesApiCreateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
interface RecordingRulesApiCreateRecordingRuleWriteTargetRequest {
    body: PrometheusRemoteWriteTargetJSON;
}
interface RecordingRulesApiDeleteRecordingRuleRequest {
    recordingRuleID: number;
}
interface RecordingRulesApiTestCreateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
interface RecordingRulesApiUpdateRecordingRuleRequest {
    body: RecordingRuleJSON;
}
/**
 *
 */
declare class RecordingRulesApi extends BaseAPI {
    /**
     * Create a recording rule that is then registered and started.
     */
    createRecordingRuleRaw(requestParameters: RecordingRulesApiCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RecordingRuleJSON>>;
    /**
     * Create a recording rule that is then registered and started.
     */
    createRecordingRule(requestParameters: RecordingRulesApiCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RecordingRuleJSON>;
    /**
     * It returns a 422 if there is not an existing prometheus data source configured.
     * Create a remote write target.
     */
    createRecordingRuleWriteTargetRaw(requestParameters: RecordingRulesApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PrometheusRemoteWriteTargetJSON>>;
    /**
     * It returns a 422 if there is not an existing prometheus data source configured.
     * Create a remote write target.
     */
    createRecordingRuleWriteTarget(requestParameters: RecordingRulesApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON>;
    /**
     * Delete removes the rule from the registry and stops it.
     */
    deleteRecordingRuleRaw(requestParameters: RecordingRulesApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete removes the rule from the registry and stops it.
     */
    deleteRecordingRule(requestParameters: RecordingRulesApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Delete the remote write target.
     */
    deleteRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete the remote write target.
     */
    deleteRecordingRuleWriteTarget(initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Return the prometheus remote write target.
     */
    getRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<PrometheusRemoteWriteTargetJSON>>;
    /**
     * Return the prometheus remote write target.
     */
    getRecordingRuleWriteTarget(initOverrides?: RequestInit | InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON>;
    /**
     * Lists all rules in the database: active or deleted.
     */
    listRecordingRulesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<RecordingRuleJSON>>>;
    /**
     * Lists all rules in the database: active or deleted.
     */
    listRecordingRules(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<RecordingRuleJSON>>;
    /**
     * Test a recording rule.
     */
    testCreateRecordingRuleRaw(requestParameters: RecordingRulesApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Test a recording rule.
     */
    testCreateRecordingRule(requestParameters: RecordingRulesApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update the active status of a rule.
     */
    updateRecordingRuleRaw(requestParameters: RecordingRulesApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RecordingRuleJSON>>;
    /**
     * Update the active status of a rule.
     */
    updateRecordingRule(requestParameters: RecordingRulesApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<RecordingRuleJSON>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface ReportsApiCreateReportRequest {
    body: CreateOrUpdateReport;
}
interface ReportsApiDeleteReportRequest {
    id: number;
}
interface ReportsApiGetReportRequest {
    id: number;
}
interface ReportsApiRenderReportCSVsRequest {
    dashboards?: string;
    title?: string;
}
interface ReportsApiRenderReportPDFsRequest {
    dashboards?: string;
    orientation?: string;
    layout?: string;
    title?: string;
    scaleFactor?: string;
    includeTables?: string;
}
interface ReportsApiSaveReportSettingsRequest {
    body: ReportSettings;
}
interface ReportsApiSendReportRequest {
    body: ReportEmail;
}
interface ReportsApiSendTestEmailRequest {
    body: CreateOrUpdateReport;
}
interface ReportsApiUpdateReportRequest {
    id: number;
    body: CreateOrUpdateReport;
}
/**
 *
 */
declare class ReportsApi extends BaseAPI {
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.
     * Create a report.
     */
    createReportRaw(requestParameters: ReportsApiCreateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateReport200Response>>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.
     * Create a report.
     */
    createReport(requestParameters: ReportsApiCreateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateReport200Response>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.
     * Delete a report.
     */
    deleteReportRaw(requestParameters: ReportsApiDeleteReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.
     * Delete a report.
     */
    deleteReport(requestParameters: ReportsApiDeleteReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.
     * Get a report.
     */
    getReportRaw(requestParameters: ReportsApiGetReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Report>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.
     * Get a report.
     */
    getReport(requestParameters: ReportsApiGetReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Report>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.
     * Get report settings.
     */
    getReportSettingsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ReportSettings>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.
     * Get report settings.
     */
    getReportSettings(initOverrides?: RequestInit | InitOverrideFunction): Promise<ReportSettings>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.
     * List reports.
     */
    getReportsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Report>>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.
     * List reports.
     */
    getReports(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Report>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.
     * Get custom branding report image.
     */
    getSettingsImageRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.
     * Get custom branding report image.
     */
    getSettingsImage(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Available to all users and with a valid license.
     * Download a CSV report.
     */
    renderReportCSVsRaw(requestParameters: ReportsApiRenderReportCSVsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to all users and with a valid license.
     * Download a CSV report.
     */
    renderReportCSVs(requestParameters?: ReportsApiRenderReportCSVsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Available to all users and with a valid license.
     * Render report for multiple dashboards.
     */
    renderReportPDFsRaw(requestParameters: ReportsApiRenderReportPDFsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * Available to all users and with a valid license.
     * Render report for multiple dashboards.
     */
    renderReportPDFs(requestParameters?: ReportsApiRenderReportPDFsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.
     * Save settings.
     */
    saveReportSettingsRaw(requestParameters: ReportsApiSaveReportSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.
     * Save settings.
     */
    saveReportSettings(requestParameters: ReportsApiSaveReportSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.
     * Send a report.
     */
    sendReportRaw(requestParameters: ReportsApiSendReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.
     * Send a report.
     */
    sendReport(requestParameters: ReportsApiSendReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.
     * Send test report via email.
     */
    sendTestEmailRaw(requestParameters: ReportsApiSendTestEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.
     * Send test report via email.
     */
    sendTestEmail(requestParameters: ReportsApiSendTestEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.
     * Update a report.
     */
    updateReportRaw(requestParameters: ReportsApiUpdateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.
     * Update a report.
     */
    updateReport(requestParameters: ReportsApiUpdateReportRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SamlApiPostACSRequest {
    relayState?: string;
}
interface SamlApiPostSLORequest {
    sAMLRequest?: string;
    sAMLResponse?: string;
}
/**
 *
 */
declare class SamlApi extends BaseAPI {
    /**
     * It exposes the SP (Grafana\'s) metadata for the IdP\'s consumption.
     */
    getMetadataRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<number>>>;
    /**
     * It exposes the SP (Grafana\'s) metadata for the IdP\'s consumption.
     */
    getMetadata(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<number>>;
    /**
     * GetLogout initiates single logout process.
     */
    getSAMLLogoutRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * GetLogout initiates single logout process.
     */
    getSAMLLogout(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    getSLORaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    getSLO(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * It performs Assertion Consumer Service (ACS).
     */
    postACSRaw(requestParameters: SamlApiPostACSRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * It performs Assertion Consumer Service (ACS).
     */
    postACS(requestParameters?: SamlApiPostACSRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    postSLORaw(requestParameters: SamlApiPostSLORequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.
     * It performs Single Logout (SLO) callback.
     */
    postSLO(requestParameters?: SamlApiPostSLORequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SearchApiSearchRequest {
    query?: string;
    tag?: Array<string>;
    type?: SearchTypeEnum;
    dashboardIds?: Array<number>;
    dashboardUIDs?: Array<string>;
    folderIds?: Array<number>;
    folderUIDs?: Array<string>;
    starred?: boolean;
    limit?: number;
    page?: number;
    permission?: SearchPermissionEnum;
    sort?: SearchSortEnum;
    deleted?: boolean;
}
/**
 *
 */
declare class SearchApi extends BaseAPI {
    /**
     * List search sorting options.
     */
    listSortOptionsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ListSortOptions200Response>>;
    /**
     * List search sorting options.
     */
    listSortOptions(initOverrides?: RequestInit | InitOverrideFunction): Promise<ListSortOptions200Response>;
    /**
     */
    searchRaw(requestParameters: SearchApiSearchRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<Hit>>>;
    /**
     */
    search(requestParameters?: SearchApiSearchRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<Hit>>;
}
/**
 * @export
 */
declare const SearchTypeEnum: {
    readonly Folder: "dash-folder";
    readonly Db: "dash-db";
};
type SearchTypeEnum = typeof SearchTypeEnum[keyof typeof SearchTypeEnum];
/**
 * @export
 */
declare const SearchPermissionEnum: {
    readonly Edit: "Edit";
    readonly View: "View";
};
type SearchPermissionEnum = typeof SearchPermissionEnum[keyof typeof SearchPermissionEnum];
/**
 * @export
 */
declare const SearchSortEnum: {
    readonly Asc: "alpha-asc";
    readonly Desc: "alpha-desc";
};
type SearchSortEnum = typeof SearchSortEnum[keyof typeof SearchSortEnum];

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface ServiceAccountsApiCreateServiceAccountRequest {
    body?: CreateServiceAccountForm;
}
interface ServiceAccountsApiCreateTokenRequest {
    serviceAccountId: number;
    body?: AddServiceAccountTokenCommand;
}
interface ServiceAccountsApiDeleteServiceAccountRequest {
    serviceAccountId: number;
}
interface ServiceAccountsApiDeleteTokenRequest {
    tokenId: number;
    serviceAccountId: number;
}
interface ServiceAccountsApiListTokensRequest {
    serviceAccountId: number;
}
interface ServiceAccountsApiRetrieveServiceAccountRequest {
    serviceAccountId: number;
}
interface ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest {
    disabled?: boolean;
    expiredTokens?: boolean;
    query?: string;
    perpage?: number;
    page?: number;
}
interface ServiceAccountsApiUpdateServiceAccountRequest {
    serviceAccountId: number;
    body?: UpdateServiceAccountForm;
}
/**
 *
 */
declare class ServiceAccountsApi extends BaseAPI {
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:*`  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * Create service account
     */
    createServiceAccountRaw(requestParameters: ServiceAccountsApiCreateServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ServiceAccountDTO>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:*`  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * Create service account
     */
    createServiceAccount(requestParameters?: ServiceAccountsApiCreateServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ServiceAccountDTO>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)
     * CreateNewToken adds a token to a service account
     */
    createTokenRaw(requestParameters: ServiceAccountsApiCreateTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<NewApiKeyResult>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)
     * CreateNewToken adds a token to a service account
     */
    createToken(requestParameters: ServiceAccountsApiCreateTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<NewApiKeyResult>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:delete` scope: `serviceaccounts:id:1` (single service account)
     * Delete service account
     */
    deleteServiceAccountRaw(requestParameters: ServiceAccountsApiDeleteServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:delete` scope: `serviceaccounts:id:1` (single service account)
     * Delete service account
     */
    deleteServiceAccount(requestParameters: ServiceAccountsApiDeleteServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * DeleteToken deletes service account tokens
     */
    deleteTokenRaw(requestParameters: ServiceAccountsApiDeleteTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * DeleteToken deletes service account tokens
     */
    deleteToken(requestParameters: ServiceAccountsApiDeleteTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `global:serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * Get service account tokens
     */
    listTokensRaw(requestParameters: ServiceAccountsApiListTokensRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TokenDTO>>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `global:serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.
     * Get service account tokens
     */
    listTokens(requestParameters: ServiceAccountsApiListTokensRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TokenDTO>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:id:1` (single service account)
     * Get single serviceaccount by Id
     */
    retrieveServiceAccountRaw(requestParameters: ServiceAccountsApiRetrieveServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ServiceAccountDTO>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:id:1` (single service account)
     * Get single serviceaccount by Id
     */
    retrieveServiceAccount(requestParameters: ServiceAccountsApiRetrieveServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ServiceAccountDTO>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:*`
     * Search service accounts with paging
     */
    searchOrgServiceAccountsWithPagingRaw(requestParameters: ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchOrgServiceAccountsResult>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:*`
     * Search service accounts with paging
     */
    searchOrgServiceAccountsWithPaging(requestParameters?: ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchOrgServiceAccountsResult>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)
     * Update service account
     */
    updateServiceAccountRaw(requestParameters: ServiceAccountsApiUpdateServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<UpdateServiceAccount200Response>>;
    /**
     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)
     * Update service account
     */
    updateServiceAccount(requestParameters: ServiceAccountsApiUpdateServiceAccountRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<UpdateServiceAccount200Response>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SignedInUserApiChangeUserPasswordRequest {
    body: ChangeUserPasswordCommand;
}
interface SignedInUserApiRevokeUserAuthTokenRequest {
    body: RevokeAuthTokenCmd;
}
interface SignedInUserApiSetHelpFlagRequest {
    flagId: string;
}
interface SignedInUserApiStarDashboardRequest {
    dashboardId: string;
}
interface SignedInUserApiStarDashboardByUIDRequest {
    dashboardUid: string;
}
interface SignedInUserApiUnstarDashboardRequest {
    dashboardId: string;
}
interface SignedInUserApiUnstarDashboardByUIDRequest {
    dashboardUid: string;
}
interface SignedInUserApiUpdateSignedInUserRequest {
    body: UpdateUserCommand;
}
interface SignedInUserApiUserSetUsingOrgRequest {
    orgId: number;
}
/**
 *
 */
declare class SignedInUserApi extends BaseAPI {
    /**
     * Changes the password for the user.
     * Change Password.
     */
    changeUserPasswordRaw(requestParameters: SignedInUserApiChangeUserPasswordRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Changes the password for the user.
     * Change Password.
     */
    changeUserPassword(requestParameters: SignedInUserApiChangeUserPasswordRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Clear user help flag.
     */
    clearHelpFlagsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ClearHelpFlags200Response>>;
    /**
     * Clear user help flag.
     */
    clearHelpFlags(initOverrides?: RequestInit | InitOverrideFunction): Promise<ClearHelpFlags200Response>;
    /**
     * Get (current authenticated user)
     */
    getSignedInUserRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<UserProfileDTO>>;
    /**
     * Get (current authenticated user)
     */
    getSignedInUser(initOverrides?: RequestInit | InitOverrideFunction): Promise<UserProfileDTO>;
    /**
     * Return a list of all organizations of the current user.
     * Organizations of the actual User.
     */
    getSignedInUserOrgListRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserOrgDTO>>>;
    /**
     * Return a list of all organizations of the current user.
     * Organizations of the actual User.
     */
    getSignedInUserOrgList(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserOrgDTO>>;
    /**
     * Return a list of all teams that the current user is member of.
     * Teams that the actual User is member of.
     */
    getSignedInUserTeamListRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TeamDTO>>>;
    /**
     * Return a list of all teams that the current user is member of.
     * Teams that the actual User is member of.
     */
    getSignedInUserTeamList(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TeamDTO>>;
    /**
     * Return a list of all auth tokens (devices) that the actual user currently have logged in from.
     * Auth tokens of the actual User.
     */
    getUserAuthTokensRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserToken>>>;
    /**
     * Return a list of all auth tokens (devices) that the actual user currently have logged in from.
     * Auth tokens of the actual User.
     */
    getUserAuthTokens(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserToken>>;
    /**
     * Fetch user quota.
     */
    getUserQuotasRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<QuotaDTO>>>;
    /**
     * Fetch user quota.
     */
    getUserQuotas(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<QuotaDTO>>;
    /**
     * Revokes the given auth token (device) for the actual user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.
     * Revoke an auth token of the actual User.
     */
    revokeUserAuthTokenRaw(requestParameters: SignedInUserApiRevokeUserAuthTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Revokes the given auth token (device) for the actual user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.
     * Revoke an auth token of the actual User.
     */
    revokeUserAuthToken(requestParameters: SignedInUserApiRevokeUserAuthTokenRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Set user help flag.
     */
    setHelpFlagRaw(requestParameters: SignedInUserApiSetHelpFlagRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ClearHelpFlags200Response>>;
    /**
     * Set user help flag.
     */
    setHelpFlag(requestParameters: SignedInUserApiSetHelpFlagRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ClearHelpFlags200Response>;
    /**
     * Stars the given Dashboard for the actual user.
     * Star a dashboard.
     * @deprecated
     */
    starDashboardRaw(requestParameters: SignedInUserApiStarDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Stars the given Dashboard for the actual user.
     * Star a dashboard.
     * @deprecated
     */
    starDashboard(requestParameters: SignedInUserApiStarDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Stars the given Dashboard for the actual user.
     * Star a dashboard.
     */
    starDashboardByUIDRaw(requestParameters: SignedInUserApiStarDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Stars the given Dashboard for the actual user.
     * Star a dashboard.
     */
    starDashboardByUID(requestParameters: SignedInUserApiStarDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Deletes the starring of the given Dashboard for the actual user.
     * Unstar a dashboard.
     * @deprecated
     */
    unstarDashboardRaw(requestParameters: SignedInUserApiUnstarDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Deletes the starring of the given Dashboard for the actual user.
     * Unstar a dashboard.
     * @deprecated
     */
    unstarDashboard(requestParameters: SignedInUserApiUnstarDashboardRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Deletes the starring of the given Dashboard for the actual user.
     * Unstar a dashboard.
     */
    unstarDashboardByUIDRaw(requestParameters: SignedInUserApiUnstarDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Deletes the starring of the given Dashboard for the actual user.
     * Unstar a dashboard.
     */
    unstarDashboardByUID(requestParameters: SignedInUserApiUnstarDashboardByUIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update signed in User.
     */
    updateSignedInUserRaw(requestParameters: SignedInUserApiUpdateSignedInUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update signed in User.
     */
    updateSignedInUser(requestParameters: SignedInUserApiUpdateSignedInUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Switch user context to the given organization.
     * Switch user context for signed in user.
     */
    userSetUsingOrgRaw(requestParameters: SignedInUserApiUserSetUsingOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Switch user context to the given organization.
     * Switch user context for signed in user.
     */
    userSetUsingOrg(requestParameters: SignedInUserApiUserSetUsingOrgRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class SigningKeysApi extends BaseAPI {
    /**
     * Required permissions None
     * Get JSON Web Key Set (JWKS) with all the keys that can be used to verify tokens (public keys)
     */
    retrieveJWKSRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<RetrieveJWKS200Response>>;
    /**
     * Required permissions None
     * Get JSON Web Key Set (JWKS) with all the keys that can be used to verify tokens (public keys)
     */
    retrieveJWKS(initOverrides?: RequestInit | InitOverrideFunction): Promise<RetrieveJWKS200Response>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SnapshotsApiCreateDashboardSnapshotRequest {
    body: CreateDashboardSnapshotCommand;
}
interface SnapshotsApiDeleteDashboardSnapshotRequest {
    key: string;
}
interface SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest {
    deleteKey: string;
}
interface SnapshotsApiGetDashboardSnapshotRequest {
    key: string;
}
interface SnapshotsApiSearchDashboardSnapshotsRequest {
    query?: string;
    limit?: number;
}
/**
 *
 */
declare class SnapshotsApi extends BaseAPI {
    /**
     * Snapshot public mode should be enabled or authentication is required.
     * When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.
     */
    createDashboardSnapshotRaw(requestParameters: SnapshotsApiCreateDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateDashboardSnapshot200Response>>;
    /**
     * Snapshot public mode should be enabled or authentication is required.
     * When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.
     */
    createDashboardSnapshot(requestParameters: SnapshotsApiCreateDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateDashboardSnapshot200Response>;
    /**
     * Delete Snapshot by Key.
     */
    deleteDashboardSnapshotRaw(requestParameters: SnapshotsApiDeleteDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete Snapshot by Key.
     */
    deleteDashboardSnapshot(requestParameters: SnapshotsApiDeleteDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Snapshot public mode should be enabled or authentication is required.
     * Delete Snapshot by deleteKey.
     */
    deleteDashboardSnapshotByDeleteKeyRaw(requestParameters: SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Snapshot public mode should be enabled or authentication is required.
     * Delete Snapshot by deleteKey.
     */
    deleteDashboardSnapshotByDeleteKey(requestParameters: SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get Snapshot by Key.
     */
    getDashboardSnapshotRaw(requestParameters: SnapshotsApiGetDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Get Snapshot by Key.
     */
    getDashboardSnapshot(requestParameters: SnapshotsApiGetDashboardSnapshotRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
    /**
     * Get snapshot sharing settings.
     */
    getSharingOptionsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<GetSharingOptions200Response>>;
    /**
     * Get snapshot sharing settings.
     */
    getSharingOptions(initOverrides?: RequestInit | InitOverrideFunction): Promise<GetSharingOptions200Response>;
    /**
     * List snapshots.
     */
    searchDashboardSnapshotsRaw(requestParameters: SnapshotsApiSearchDashboardSnapshotsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<DashboardSnapshotDTO>>>;
    /**
     * List snapshots.
     */
    searchDashboardSnapshots(requestParameters?: SnapshotsApiSearchDashboardSnapshotsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<DashboardSnapshotDTO>>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SsoSettingsApiGetProviderSettingsRequest {
    key: string;
}
interface SsoSettingsApiRemoveProviderSettingsRequest {
    key: string;
}
interface SsoSettingsApiUpdateProviderSettingsOperationRequest {
    key: string;
    body: UpdateProviderSettingsRequest;
}
/**
 *
 */
declare class SsoSettingsApi extends BaseAPI {
    /**
     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.
     * Get an SSO Settings entry by Key
     */
    getProviderSettingsRaw(requestParameters: SsoSettingsApiGetProviderSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<ListAllProvidersSettings200ResponseInner>>;
    /**
     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.
     * Get an SSO Settings entry by Key
     */
    getProviderSettings(requestParameters: SsoSettingsApiGetProviderSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ListAllProvidersSettings200ResponseInner>;
    /**
     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.
     * List all SSO Settings entries
     */
    listAllProvidersSettingsRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<ListAllProvidersSettings200ResponseInner>>>;
    /**
     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.
     * List all SSO Settings entries
     */
    listAllProvidersSettings(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<ListAllProvidersSettings200ResponseInner>>;
    /**
     * Removes the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.
     * Remove SSO Settings
     */
    removeProviderSettingsRaw(requestParameters: SsoSettingsApiRemoveProviderSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Removes the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.
     * Remove SSO Settings
     */
    removeProviderSettings(requestParameters: SsoSettingsApiRemoveProviderSettingsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Inserts or updates the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.
     * Update SSO Settings
     */
    updateProviderSettingsRaw(requestParameters: SsoSettingsApiUpdateProviderSettingsOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Inserts or updates the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.
     * Update SSO Settings
     */
    updateProviderSettings(requestParameters: SsoSettingsApiUpdateProviderSettingsOperationRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface SyncTeamGroupsApiAddTeamGroupApiRequest {
    teamId: number;
    body: TeamGroupMapping;
}
interface SyncTeamGroupsApiGetTeamGroupsApiRequest {
    teamId: number;
}
interface SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest {
    teamId: number;
    groupId?: string;
}
/**
 *
 */
declare class SyncTeamGroupsApi extends BaseAPI {
    /**
     * Add External Group.
     */
    addTeamGroupApiRaw(requestParameters: SyncTeamGroupsApiAddTeamGroupApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Add External Group.
     */
    addTeamGroupApi(requestParameters: SyncTeamGroupsApiAddTeamGroupApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get External Groups.
     */
    getTeamGroupsApiRaw(requestParameters: SyncTeamGroupsApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TeamGroupDTO>>>;
    /**
     * Get External Groups.
     */
    getTeamGroupsApi(requestParameters: SyncTeamGroupsApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TeamGroupDTO>>;
    /**
     * Remove External Group.
     */
    removeTeamGroupApiQueryRaw(requestParameters: SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Remove External Group.
     */
    removeTeamGroupApiQuery(requestParameters: SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface TeamsApiAddTeamMemberRequest {
    teamId: string;
    body: AddTeamMemberCommand;
}
interface TeamsApiCreateTeamRequest {
    body: CreateTeamCommand;
}
interface TeamsApiDeleteTeamByIDRequest {
    teamId: string;
}
interface TeamsApiGetTeamByIDRequest {
    teamId: string;
}
interface TeamsApiGetTeamMembersRequest {
    teamId: string;
}
interface TeamsApiGetTeamPreferencesRequest {
    teamId: string;
}
interface TeamsApiRemoveTeamMemberRequest {
    teamId: string;
    userId: number;
}
interface TeamsApiSearchTeamsRequest {
    page?: number;
    perpage?: number;
    name?: string;
    query?: string;
}
interface TeamsApiSetTeamMembershipsRequest {
    teamId: string;
    body: SetTeamMembershipsCommand;
}
interface TeamsApiUpdateTeamRequest {
    teamId: string;
    body: UpdateTeamCommand;
}
interface TeamsApiUpdateTeamMemberRequest {
    teamId: string;
    userId: number;
    body: UpdateTeamMemberCommand;
}
interface TeamsApiUpdateTeamPreferencesRequest {
    teamId: string;
    body: UpdatePrefsCmd;
}
/**
 *
 */
declare class TeamsApi extends BaseAPI {
    /**
     * Add Team Member.
     */
    addTeamMemberRaw(requestParameters: TeamsApiAddTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Add Team Member.
     */
    addTeamMember(requestParameters: TeamsApiAddTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Add Team.
     */
    createTeamRaw(requestParameters: TeamsApiCreateTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<CreateTeam200Response>>;
    /**
     * Add Team.
     */
    createTeam(requestParameters: TeamsApiCreateTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<CreateTeam200Response>;
    /**
     * Delete Team By ID.
     */
    deleteTeamByIDRaw(requestParameters: TeamsApiDeleteTeamByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Delete Team By ID.
     */
    deleteTeamByID(requestParameters: TeamsApiDeleteTeamByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Get Team By ID.
     */
    getTeamByIDRaw(requestParameters: TeamsApiGetTeamByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<TeamDTO>>;
    /**
     * Get Team By ID.
     */
    getTeamByID(requestParameters: TeamsApiGetTeamByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<TeamDTO>;
    /**
     * Get Team Members.
     */
    getTeamMembersRaw(requestParameters: TeamsApiGetTeamMembersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TeamMemberDTO>>>;
    /**
     * Get Team Members.
     */
    getTeamMembers(requestParameters: TeamsApiGetTeamMembersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TeamMemberDTO>>;
    /**
     * Get Team Preferences.
     */
    getTeamPreferencesRaw(requestParameters: TeamsApiGetTeamPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Preferences>>;
    /**
     * Get Team Preferences.
     */
    getTeamPreferences(requestParameters: TeamsApiGetTeamPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Preferences>;
    /**
     * Remove Member From Team.
     */
    removeTeamMemberRaw(requestParameters: TeamsApiRemoveTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Remove Member From Team.
     */
    removeTeamMember(requestParameters: TeamsApiRemoveTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Team Search With Paging.
     */
    searchTeamsRaw(requestParameters: TeamsApiSearchTeamsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchTeamQueryResult>>;
    /**
     * Team Search With Paging.
     */
    searchTeams(requestParameters?: TeamsApiSearchTeamsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchTeamQueryResult>;
    /**
     * Takes user emails, and updates team members and admins to the provided lists of users. Any current team members and admins not in the provided lists will be removed.
     * Set team memberships.
     */
    setTeamMembershipsRaw(requestParameters: TeamsApiSetTeamMembershipsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Takes user emails, and updates team members and admins to the provided lists of users. Any current team members and admins not in the provided lists will be removed.
     * Set team memberships.
     */
    setTeamMemberships(requestParameters: TeamsApiSetTeamMembershipsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update Team.
     */
    updateTeamRaw(requestParameters: TeamsApiUpdateTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Team.
     */
    updateTeam(requestParameters: TeamsApiUpdateTeamRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update Team Member.
     */
    updateTeamMemberRaw(requestParameters: TeamsApiUpdateTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Team Member.
     */
    updateTeamMember(requestParameters: TeamsApiUpdateTeamMemberRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Update Team Preferences.
     */
    updateTeamPreferencesRaw(requestParameters: TeamsApiUpdateTeamPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update Team Preferences.
     */
    updateTeamPreferences(requestParameters: TeamsApiUpdateTeamPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 */
declare class UserApi extends BaseAPI {
    /**
     * Update the email of user given a verification code.
     * Update user email.
     */
    updateUserEmailRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<void>>;
    /**
     * Update the email of user given a verification code.
     * Update user email.
     */
    updateUserEmail(initOverrides?: RequestInit | InitOverrideFunction): Promise<void>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface UserPreferencesApiPatchUserPreferencesRequest {
    body: PatchPrefsCmd;
}
interface UserPreferencesApiUpdateUserPreferencesRequest {
    body: UpdatePrefsCmd;
}
/**
 *
 */
declare class UserPreferencesApi extends BaseAPI {
    /**
     * Get user preferences.
     */
    getUserPreferencesRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Preferences>>;
    /**
     * Get user preferences.
     */
    getUserPreferences(initOverrides?: RequestInit | InitOverrideFunction): Promise<Preferences>;
    /**
     * Patch user preferences.
     */
    patchUserPreferencesRaw(requestParameters: UserPreferencesApiPatchUserPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Patch user preferences.
     */
    patchUserPreferences(requestParameters: UserPreferencesApiPatchUserPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
    /**
     * Omitting a key (`theme`, `homeDashboardId`, `timezone`) will cause the current value to be replaced with the system default value.
     * Update user preferences.
     */
    updateUserPreferencesRaw(requestParameters: UserPreferencesApiUpdateUserPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Omitting a key (`theme`, `homeDashboardId`, `timezone`) will cause the current value to be replaced with the system default value.
     * Update user preferences.
     */
    updateUserPreferences(requestParameters: UserPreferencesApiUpdateUserPreferencesRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

/**
 * Grafana HTTP API.
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface UsersApiGetUserByIDRequest {
    userId: number;
}
interface UsersApiGetUserByLoginOrEmailRequest {
    loginOrEmail: string;
}
interface UsersApiGetUserOrgListRequest {
    userId: number;
}
interface UsersApiGetUserTeamsRequest {
    userId: number;
}
interface UsersApiSearchUsersRequest {
    perpage?: number;
    page?: number;
}
interface UsersApiUpdateUserRequest {
    userId: number;
    body: UpdateUserCommand;
}
/**
 *
 */
declare class UsersApi extends BaseAPI {
    /**
     * Get user by id.
     */
    getUserByIDRaw(requestParameters: UsersApiGetUserByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<UserProfileDTO>>;
    /**
     * Get user by id.
     */
    getUserByID(requestParameters: UsersApiGetUserByIDRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<UserProfileDTO>;
    /**
     * Get user by login or email.
     */
    getUserByLoginOrEmailRaw(requestParameters: UsersApiGetUserByLoginOrEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<UserProfileDTO>>;
    /**
     * Get user by login or email.
     */
    getUserByLoginOrEmail(requestParameters: UsersApiGetUserByLoginOrEmailRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<UserProfileDTO>;
    /**
     * Get organizations for user identified by id.
     * Get organizations for user.
     */
    getUserOrgListRaw(requestParameters: UsersApiGetUserOrgListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserOrgDTO>>>;
    /**
     * Get organizations for user identified by id.
     * Get organizations for user.
     */
    getUserOrgList(requestParameters: UsersApiGetUserOrgListRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserOrgDTO>>;
    /**
     * Get teams for user identified by id.
     * Get teams for user.
     */
    getUserTeamsRaw(requestParameters: UsersApiGetUserTeamsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<TeamDTO>>>;
    /**
     * Get teams for user identified by id.
     * Get teams for user.
     */
    getUserTeams(requestParameters: UsersApiGetUserTeamsRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<TeamDTO>>;
    /**
     * Returns all users that the authenticated user has permission to view, admin permission required.
     * Get users.
     */
    searchUsersRaw(requestParameters: UsersApiSearchUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<UserSearchHitDTO>>>;
    /**
     * Returns all users that the authenticated user has permission to view, admin permission required.
     * Get users.
     */
    searchUsers(requestParameters?: UsersApiSearchUsersRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<UserSearchHitDTO>>;
    /**
     * Get users with paging.
     */
    searchUsersWithPagingRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SearchUserQueryResult>>;
    /**
     * Get users with paging.
     */
    searchUsersWithPaging(initOverrides?: RequestInit | InitOverrideFunction): Promise<SearchUserQueryResult>;
    /**
     * Update the user identified by id.
     * Update user.
     */
    updateUserRaw(requestParameters: UsersApiUpdateUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SuccessResponseBody>>;
    /**
     * Update the user identified by id.
     * Update user.
     */
    updateUser(requestParameters: UsersApiUpdateUserRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SuccessResponseBody>;
}

export { AccessControlApi, type AccessControlApiAddTeamRoleRequest, type AccessControlApiAddUserRoleRequest, type AccessControlApiCreateRoleRequest, type AccessControlApiDeleteRoleRequest, type AccessControlApiGetResourceDescriptionRequest, type AccessControlApiGetResourcePermissionsRequest, type AccessControlApiGetRoleAssignmentsRequest, type AccessControlApiGetRoleRequest, type AccessControlApiListRolesRequest, type AccessControlApiListTeamRolesRequest, type AccessControlApiListTeamsRolesRequest, type AccessControlApiListUserRolesRequest, type AccessControlApiListUsersRolesRequest, type AccessControlApiRemoveTeamRoleRequest, type AccessControlApiRemoveUserRoleRequest, type AccessControlApiSetResourcePermissionsForBuiltInRoleRequest, type AccessControlApiSetResourcePermissionsForTeamRequest, type AccessControlApiSetResourcePermissionsForUserRequest, type AccessControlApiSetResourcePermissionsRequest, type AccessControlApiSetRoleAssignmentsRequest, type AccessControlApiSetTeamRolesRequest, type AccessControlApiSetUserRolesRequest, type AccessControlApiUpdateRoleRequest, AccessControlProvisioningApi, type ActiveSyncStatusDTO, ActiveSyncStatusDTOFromJSON, ActiveSyncStatusDTOFromJSONTyped, ActiveSyncStatusDTOToJSON, ActiveSyncStatusDTOToJSONTyped, type ActiveUserStats, ActiveUserStatsFromJSON, ActiveUserStatsFromJSONTyped, ActiveUserStatsToJSON, ActiveUserStatsToJSONTyped, type AddAPIKeyCommand, AddAPIKeyCommandFromJSON, AddAPIKeyCommandFromJSONTyped, AddAPIKeyCommandRoleEnum, AddAPIKeyCommandToJSON, AddAPIKeyCommandToJSONTyped, type AddDataSource200Response, AddDataSource200ResponseFromJSON, AddDataSource200ResponseFromJSONTyped, AddDataSource200ResponseToJSON, AddDataSource200ResponseToJSONTyped, type AddDataSourceCommand, AddDataSourceCommandFromJSON, AddDataSourceCommandFromJSONTyped, AddDataSourceCommandToJSON, AddDataSourceCommandToJSONTyped, type AddInviteForm, AddInviteFormFromJSON, AddInviteFormFromJSONTyped, AddInviteFormRoleEnum, AddInviteFormToJSON, AddInviteFormToJSONTyped, type AddOrgUserCommand, AddOrgUserCommandFromJSON, AddOrgUserCommandFromJSONTyped, AddOrgUserCommandRoleEnum, AddOrgUserCommandToJSON, AddOrgUserCommandToJSONTyped, type AddServiceAccountTokenCommand, AddServiceAccountTokenCommandFromJSON, AddServiceAccountTokenCommandFromJSONTyped, AddServiceAccountTokenCommandToJSON, AddServiceAccountTokenCommandToJSONTyped, type AddTeamMemberCommand, AddTeamMemberCommandFromJSON, AddTeamMemberCommandFromJSONTyped, AddTeamMemberCommandToJSON, AddTeamMemberCommandToJSONTyped, type AddTeamRoleCommand, AddTeamRoleCommandFromJSON, AddTeamRoleCommandFromJSONTyped, AddTeamRoleCommandToJSON, AddTeamRoleCommandToJSONTyped, type AddUserRoleCommand, AddUserRoleCommandFromJSON, AddUserRoleCommandFromJSONTyped, AddUserRoleCommandToJSON, AddUserRoleCommandToJSONTyped, type Address, AddressFromJSON, AddressFromJSONTyped, AddressToJSON, AddressToJSONTyped, AdminApi, type AdminCreateUserForm, AdminCreateUserFormFromJSON, AdminCreateUserFormFromJSONTyped, AdminCreateUserFormToJSON, AdminCreateUserFormToJSONTyped, type AdminCreateUserResponse, AdminCreateUserResponseFromJSON, AdminCreateUserResponseFromJSONTyped, AdminCreateUserResponseToJSON, AdminCreateUserResponseToJSONTyped, AdminLdapApi, type AdminLdapApiGetUserFromLDAPRequest, type AdminLdapApiPostSyncUserWithLDAPRequest, AdminProvisioningApi, type AdminStats, AdminStatsFromJSON, AdminStatsFromJSONTyped, AdminStatsToJSON, AdminStatsToJSONTyped, type AdminUpdateUserPasswordForm, AdminUpdateUserPasswordFormFromJSON, AdminUpdateUserPasswordFormFromJSONTyped, AdminUpdateUserPasswordFormToJSON, AdminUpdateUserPasswordFormToJSONTyped, type AdminUpdateUserPermissionsForm, AdminUpdateUserPermissionsFormFromJSON, AdminUpdateUserPermissionsFormFromJSONTyped, AdminUpdateUserPermissionsFormToJSON, AdminUpdateUserPermissionsFormToJSONTyped, AdminUsersApi, type AdminUsersApiAdminCreateUserRequest, type AdminUsersApiAdminDeleteUserRequest, type AdminUsersApiAdminDisableUserRequest, type AdminUsersApiAdminEnableUserRequest, type AdminUsersApiAdminGetUserAuthTokensRequest, type AdminUsersApiAdminLogoutUserRequest, type AdminUsersApiAdminRevokeUserAuthTokenRequest, type AdminUsersApiAdminUpdateUserPasswordRequest, type AdminUsersApiAdminUpdateUserPermissionsRequest, type AdminUsersApiGetUserQuotaRequest, type AdminUsersApiUpdateUserQuotaRequest, type Alert, type AlertDiscovery, AlertDiscoveryFromJSON, AlertDiscoveryFromJSONTyped, AlertDiscoveryToJSON, AlertDiscoveryToJSONTyped, AlertFromJSON, AlertFromJSONTyped, type AlertGroup, AlertGroupFromJSON, AlertGroupFromJSONTyped, AlertGroupToJSON, AlertGroupToJSONTyped, type AlertInstancesResponse, AlertInstancesResponseFromJSON, AlertInstancesResponseFromJSONTyped, AlertInstancesResponseToJSON, AlertInstancesResponseToJSONTyped, type AlertManager, AlertManagerFromJSON, AlertManagerFromJSONTyped, AlertManagerToJSON, AlertManagerToJSONTyped, type AlertManagersResult, AlertManagersResultFromJSON, AlertManagersResultFromJSONTyped, AlertManagersResultToJSON, AlertManagersResultToJSONTyped, type AlertQuery, type AlertQueryExport, AlertQueryExportFromJSON, AlertQueryExportFromJSONTyped, AlertQueryExportToJSON, AlertQueryExportToJSONTyped, AlertQueryFromJSON, AlertQueryFromJSONTyped, AlertQueryToJSON, AlertQueryToJSONTyped, type AlertResponse, AlertResponseFromJSON, AlertResponseFromJSONTyped, AlertResponseToJSON, AlertResponseToJSONTyped, type AlertRuleExport, AlertRuleExportExecErrStateEnum, AlertRuleExportFromJSON, AlertRuleExportFromJSONTyped, AlertRuleExportNoDataStateEnum, AlertRuleExportToJSON, AlertRuleExportToJSONTyped, type AlertRuleGroup, type AlertRuleGroupExport, AlertRuleGroupExportFromJSON, AlertRuleGroupExportFromJSONTyped, AlertRuleGroupExportToJSON, AlertRuleGroupExportToJSONTyped, AlertRuleGroupFromJSON, AlertRuleGroupFromJSONTyped, type AlertRuleGroupMetadata, AlertRuleGroupMetadataFromJSON, AlertRuleGroupMetadataFromJSONTyped, AlertRuleGroupMetadataToJSON, AlertRuleGroupMetadataToJSONTyped, AlertRuleGroupToJSON, AlertRuleGroupToJSONTyped, type AlertRuleNotificationSettings, type AlertRuleNotificationSettingsExport, AlertRuleNotificationSettingsExportFromJSON, AlertRuleNotificationSettingsExportFromJSONTyped, AlertRuleNotificationSettingsExportToJSON, AlertRuleNotificationSettingsExportToJSONTyped, AlertRuleNotificationSettingsFromJSON, AlertRuleNotificationSettingsFromJSONTyped, AlertRuleNotificationSettingsToJSON, AlertRuleNotificationSettingsToJSONTyped, type AlertRuleRecordExport, AlertRuleRecordExportFromJSON, AlertRuleRecordExportFromJSONTyped, AlertRuleRecordExportToJSON, AlertRuleRecordExportToJSONTyped, type AlertStatus, AlertStatusFromJSON, AlertStatusFromJSONTyped, AlertStatusStateEnum, AlertStatusToJSON, AlertStatusToJSONTyped, AlertToJSON, AlertToJSONTyped, type AlertingFileExport, AlertingFileExportFromJSON, AlertingFileExportFromJSONTyped, AlertingFileExportToJSON, AlertingFileExportToJSONTyped, type AlertingRule, AlertingRuleFromJSON, AlertingRuleFromJSONTyped, AlertingRuleToJSON, AlertingRuleToJSONTyped, type AlertingStatus, AlertingStatusAlertmanagersChoiceEnum, AlertingStatusFromJSON, AlertingStatusFromJSONTyped, AlertingStatusToJSON, AlertingStatusToJSONTyped, type AlertmanagerConfig, AlertmanagerConfigFromJSON, AlertmanagerConfigFromJSONTyped, AlertmanagerConfigToJSON, AlertmanagerConfigToJSONTyped, type AlertmanagerStatus, AlertmanagerStatusFromJSON, AlertmanagerStatusFromJSONTyped, AlertmanagerStatusToJSON, AlertmanagerStatusToJSONTyped, type Annotation, type AnnotationActions, AnnotationActionsFromJSON, AnnotationActionsFromJSONTyped, AnnotationActionsToJSON, AnnotationActionsToJSONTyped, type AnnotationEvent, AnnotationEventFromJSON, AnnotationEventFromJSONTyped, AnnotationEventToJSON, AnnotationEventToJSONTyped, AnnotationFromJSON, AnnotationFromJSONTyped, type AnnotationPanelFilter, AnnotationPanelFilterFromJSON, AnnotationPanelFilterFromJSONTyped, AnnotationPanelFilterToJSON, AnnotationPanelFilterToJSONTyped, type AnnotationPermission, AnnotationPermissionFromJSON, AnnotationPermissionFromJSONTyped, AnnotationPermissionToJSON, AnnotationPermissionToJSONTyped, type AnnotationQuery, AnnotationQueryFromJSON, AnnotationQueryFromJSONTyped, AnnotationQueryToJSON, AnnotationQueryToJSONTyped, type AnnotationTarget, AnnotationTargetFromJSON, AnnotationTargetFromJSONTyped, AnnotationTargetToJSON, AnnotationTargetToJSONTyped, AnnotationToJSON, AnnotationToJSONTyped, AnnotationsApi, type AnnotationsApiDeleteAnnotationByIDRequest, type AnnotationsApiGetAnnotationByIDRequest, type AnnotationsApiGetAnnotationTagsRequest, type AnnotationsApiGetAnnotationsRequest, type AnnotationsApiMassDeleteAnnotationsRequest, type AnnotationsApiPatchAnnotationRequest, type AnnotationsApiPostAnnotationRequest, type AnnotationsApiPostGraphiteAnnotationRequest, type AnnotationsApiUpdateAnnotationRequest, type ApiKeyDTO, ApiKeyDTOFromJSON, ApiKeyDTOFromJSONTyped, ApiKeyDTORoleEnum, ApiKeyDTOToJSON, ApiKeyDTOToJSONTyped, ApiKeysApi, type ApiKeysApiAddAPIkeyRequest, type ApiKeysApiDeleteAPIkeyRequest, type ApiKeysApiGetAPIkeysRequest, type ApiResponse, type ApiRuleNode, ApiRuleNodeFromJSON, ApiRuleNodeFromJSONTyped, ApiRuleNodeToJSON, ApiRuleNodeToJSONTyped, type Assignments, AssignmentsFromJSON, AssignmentsFromJSONTyped, AssignmentsToJSON, AssignmentsToJSONTyped, type AttributeTypeAndValue, AttributeTypeAndValueFromJSON, AttributeTypeAndValueFromJSONTyped, AttributeTypeAndValueToJSON, AttributeTypeAndValueToJSONTyped, type Authorization, AuthorizationFromJSON, AuthorizationFromJSONTyped, AuthorizationToJSON, AuthorizationToJSONTyped, BASE_PATH, type BacktestConfig, BacktestConfigFromJSON, BacktestConfigFromJSONTyped, BacktestConfigNoDataStateEnum, BacktestConfigToJSON, BacktestConfigToJSONTyped, BaseAPI, type BasicAuth, BasicAuthFromJSON, BasicAuthFromJSONTyped, BasicAuthToJSON, BasicAuthToJSONTyped, BlobApiResponse, COLLECTION_FORMATS, type CacheConfig, CacheConfigFromJSON, CacheConfigFromJSONTyped, type CacheConfigResponse, CacheConfigResponseFromJSON, CacheConfigResponseFromJSONTyped, CacheConfigResponseToJSON, CacheConfigResponseToJSONTyped, type CacheConfigSetter, CacheConfigSetterFromJSON, CacheConfigSetterFromJSONTyped, CacheConfigSetterToJSON, CacheConfigSetterToJSONTyped, CacheConfigToJSON, CacheConfigToJSONTyped, type CalculateDashboardDiffRequest, CalculateDashboardDiffRequestDiffTypeEnum, CalculateDashboardDiffRequestFromJSON, CalculateDashboardDiffRequestFromJSONTyped, CalculateDashboardDiffRequestToJSON, CalculateDashboardDiffRequestToJSONTyped, type CalculateDiffTarget, CalculateDiffTargetFromJSON, CalculateDiffTargetFromJSONTyped, CalculateDiffTargetToJSON, CalculateDiffTargetToJSONTyped, type Certificate, CertificateFromJSON, CertificateFromJSONTyped, CertificateToJSON, CertificateToJSONTyped, type ChangeUserPasswordCommand, ChangeUserPasswordCommandFromJSON, ChangeUserPasswordCommandFromJSONTyped, ChangeUserPasswordCommandToJSON, ChangeUserPasswordCommandToJSONTyped, type ClearHelpFlags200Response, ClearHelpFlags200ResponseFromJSON, ClearHelpFlags200ResponseFromJSONTyped, ClearHelpFlags200ResponseToJSON, ClearHelpFlags200ResponseToJSONTyped, type CloudMigrationRunListDTO, CloudMigrationRunListDTOFromJSON, CloudMigrationRunListDTOFromJSONTyped, CloudMigrationRunListDTOToJSON, CloudMigrationRunListDTOToJSONTyped, type CloudMigrationSessionListResponseDTO, CloudMigrationSessionListResponseDTOFromJSON, CloudMigrationSessionListResponseDTOFromJSONTyped, CloudMigrationSessionListResponseDTOToJSON, CloudMigrationSessionListResponseDTOToJSONTyped, type CloudMigrationSessionRequestDTO, CloudMigrationSessionRequestDTOFromJSON, CloudMigrationSessionRequestDTOFromJSONTyped, CloudMigrationSessionRequestDTOToJSON, CloudMigrationSessionRequestDTOToJSONTyped, type CloudMigrationSessionResponseDTO, CloudMigrationSessionResponseDTOFromJSON, CloudMigrationSessionResponseDTOFromJSONTyped, CloudMigrationSessionResponseDTOToJSON, CloudMigrationSessionResponseDTOToJSONTyped, type ClusterStatus, ClusterStatusFromJSON, ClusterStatusFromJSONTyped, ClusterStatusStatusEnum, ClusterStatusToJSON, ClusterStatusToJSONTyped, type Config, ConfigFromJSON, ConfigFromJSONTyped, ConfigToJSON, ConfigToJSONTyped, Configuration, type ConfigurationParameters, type Consume, type ContactPointExport, ContactPointExportFromJSON, ContactPointExportFromJSONTyped, ContactPointExportToJSON, ContactPointExportToJSONTyped, type CookiePreferences, CookiePreferencesFromJSON, CookiePreferencesFromJSONTyped, CookiePreferencesToJSON, CookiePreferencesToJSONTyped, type Correlation, type CorrelationConfig, CorrelationConfigFromJSON, CorrelationConfigFromJSONTyped, CorrelationConfigToJSON, CorrelationConfigToJSONTyped, type CorrelationConfigUpdateDTO, CorrelationConfigUpdateDTOFromJSON, CorrelationConfigUpdateDTOFromJSONTyped, CorrelationConfigUpdateDTOToJSON, CorrelationConfigUpdateDTOToJSONTyped, CorrelationFromJSON, CorrelationFromJSONTyped, CorrelationToJSON, CorrelationToJSONTyped, CorrelationsApi, type CorrelationsApiCreateCorrelationRequest, type CorrelationsApiDeleteCorrelationRequest, type CorrelationsApiGetCorrelationRequest, type CorrelationsApiGetCorrelationsBySourceUIDRequest, type CorrelationsApiGetCorrelationsRequest, type CorrelationsApiUpdateCorrelationRequest, type CreateAccessTokenResponseDTO, CreateAccessTokenResponseDTOFromJSON, CreateAccessTokenResponseDTOFromJSONTyped, CreateAccessTokenResponseDTOToJSON, CreateAccessTokenResponseDTOToJSONTyped, type CreateCorrelationCommand, CreateCorrelationCommandFromJSON, CreateCorrelationCommandFromJSONTyped, CreateCorrelationCommandToJSON, CreateCorrelationCommandToJSONTyped, type CreateCorrelationResponseBody, CreateCorrelationResponseBodyFromJSON, CreateCorrelationResponseBodyFromJSONTyped, CreateCorrelationResponseBodyToJSON, CreateCorrelationResponseBodyToJSONTyped, type CreateDashboardSnapshot200Response, CreateDashboardSnapshot200ResponseFromJSON, CreateDashboardSnapshot200ResponseFromJSONTyped, CreateDashboardSnapshot200ResponseToJSON, CreateDashboardSnapshot200ResponseToJSONTyped, type CreateDashboardSnapshotCommand, CreateDashboardSnapshotCommandFromJSON, CreateDashboardSnapshotCommandFromJSONTyped, CreateDashboardSnapshotCommandToJSON, CreateDashboardSnapshotCommandToJSONTyped, type CreateFolderCommand, CreateFolderCommandFromJSON, CreateFolderCommandFromJSONTyped, CreateFolderCommandToJSON, CreateFolderCommandToJSONTyped, type CreateLibraryElementCommand, CreateLibraryElementCommandFromJSON, CreateLibraryElementCommandFromJSONTyped, CreateLibraryElementCommandKindEnum, CreateLibraryElementCommandToJSON, CreateLibraryElementCommandToJSONTyped, type CreateOrUpdateReport, CreateOrUpdateReportFromJSON, CreateOrUpdateReportFromJSONTyped, CreateOrUpdateReportToJSON, CreateOrUpdateReportToJSONTyped, type CreateOrg200Response, CreateOrg200ResponseFromJSON, CreateOrg200ResponseFromJSONTyped, CreateOrg200ResponseToJSON, CreateOrg200ResponseToJSONTyped, type CreateOrgCommand, CreateOrgCommandFromJSON, CreateOrgCommandFromJSONTyped, CreateOrgCommandToJSON, CreateOrgCommandToJSONTyped, type CreatePlaylistCommand, CreatePlaylistCommandFromJSON, CreatePlaylistCommandFromJSONTyped, CreatePlaylistCommandToJSON, CreatePlaylistCommandToJSONTyped, type CreateQueryInQueryHistoryCommand, CreateQueryInQueryHistoryCommandFromJSON, CreateQueryInQueryHistoryCommandFromJSONTyped, CreateQueryInQueryHistoryCommandToJSON, CreateQueryInQueryHistoryCommandToJSONTyped, type CreateReport200Response, CreateReport200ResponseFromJSON, CreateReport200ResponseFromJSONTyped, CreateReport200ResponseToJSON, CreateReport200ResponseToJSONTyped, type CreateRoleForm, CreateRoleFormFromJSON, CreateRoleFormFromJSONTyped, CreateRoleFormToJSON, CreateRoleFormToJSONTyped, type CreateServiceAccountForm, CreateServiceAccountFormFromJSON, CreateServiceAccountFormFromJSONTyped, CreateServiceAccountFormRoleEnum, CreateServiceAccountFormToJSON, CreateServiceAccountFormToJSONTyped, type CreateSnapshotResponseDTO, CreateSnapshotResponseDTOFromJSON, CreateSnapshotResponseDTOFromJSONTyped, CreateSnapshotResponseDTOToJSON, CreateSnapshotResponseDTOToJSONTyped, type CreateTeam200Response, CreateTeam200ResponseFromJSON, CreateTeam200ResponseFromJSONTyped, CreateTeam200ResponseToJSON, CreateTeam200ResponseToJSONTyped, type CreateTeamCommand, CreateTeamCommandFromJSON, CreateTeamCommandFromJSONTyped, CreateTeamCommandToJSON, CreateTeamCommandToJSONTyped, type DashboardACLInfoDTO, DashboardACLInfoDTOFromJSON, DashboardACLInfoDTOFromJSONTyped, DashboardACLInfoDTORoleEnum, DashboardACLInfoDTOToJSON, DashboardACLInfoDTOToJSONTyped, type DashboardACLUpdateItem, DashboardACLUpdateItemFromJSON, DashboardACLUpdateItemFromJSONTyped, DashboardACLUpdateItemRoleEnum, DashboardACLUpdateItemToJSON, DashboardACLUpdateItemToJSONTyped, type DashboardCreateCommand, DashboardCreateCommandFromJSON, DashboardCreateCommandFromJSONTyped, DashboardCreateCommandToJSON, DashboardCreateCommandToJSONTyped, type DashboardFullWithMeta, DashboardFullWithMetaFromJSON, DashboardFullWithMetaFromJSONTyped, DashboardFullWithMetaToJSON, DashboardFullWithMetaToJSONTyped, type DashboardMeta, DashboardMetaFromJSON, DashboardMetaFromJSONTyped, DashboardMetaToJSON, DashboardMetaToJSONTyped, DashboardPermissionsApi, type DashboardPermissionsApiGetDashboardPermissionsListByIDRequest, type DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest, type DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest, type DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest, DashboardPublicApi, type DashboardPublicApiCreatePublicDashboardRequest, type DashboardPublicApiDeletePublicDashboardRequest, type DashboardPublicApiGetPublicAnnotationsRequest, type DashboardPublicApiGetPublicDashboardRequest, type DashboardPublicApiQueryPublicDashboardRequest, type DashboardPublicApiUpdatePublicDashboardRequest, type DashboardPublicApiViewPublicDashboardRequest, type DashboardRedirect, DashboardRedirectFromJSON, DashboardRedirectFromJSONTyped, DashboardRedirectToJSON, DashboardRedirectToJSONTyped, type DashboardSnapshotDTO, DashboardSnapshotDTOFromJSON, DashboardSnapshotDTOFromJSONTyped, DashboardSnapshotDTOToJSON, DashboardSnapshotDTOToJSONTyped, type DashboardTagCloudItem, DashboardTagCloudItemFromJSON, DashboardTagCloudItemFromJSONTyped, DashboardTagCloudItemToJSON, DashboardTagCloudItemToJSONTyped, type DashboardVersionMeta, DashboardVersionMetaFromJSON, DashboardVersionMetaFromJSONTyped, DashboardVersionMetaToJSON, DashboardVersionMetaToJSONTyped, DashboardVersionsApi, type DashboardVersionsApiGetDashboardVersionByIDRequest, type DashboardVersionsApiGetDashboardVersionByUIDRequest, type DashboardVersionsApiGetDashboardVersionsByIDRequest, type DashboardVersionsApiGetDashboardVersionsByUIDRequest, type DashboardVersionsApiRestoreDashboardVersionByIDRequest, type DashboardVersionsApiRestoreDashboardVersionByUIDRequest, DashboardsApi, type DashboardsApiCalculateDashboardDiffOperationRequest, type DashboardsApiDeleteDashboardByUIDRequest, type DashboardsApiGetDashboardByUIDRequest, type DashboardsApiHardDeleteDashboardByUIDRequest, type DashboardsApiImportDashboardOperationRequest, type DashboardsApiPostDashboardRequest, type DashboardsApiRestoreDeletedDashboardByUIDRequest, type DataLink, DataLinkFromJSON, DataLinkFromJSONTyped, DataLinkToJSON, DataLinkToJSONTyped, type DataResponse, DataResponseFromJSON, DataResponseFromJSONTyped, DataResponseToJSON, DataResponseToJSONTyped, type DataSource, DataSourceFromJSON, DataSourceFromJSONTyped, type DataSourceListItemDTO, DataSourceListItemDTOFromJSON, DataSourceListItemDTOFromJSONTyped, DataSourceListItemDTOToJSON, DataSourceListItemDTOToJSONTyped, type DataSourceRef, DataSourceRefFromJSON, DataSourceRefFromJSONTyped, DataSourceRefToJSON, DataSourceRefToJSONTyped, DataSourceToJSON, DataSourceToJSONTyped, DatasourcesApi, type DatasourcesApiAddDataSourceRequest, type DatasourcesApiCallDatasourceResourceByIDRequest, type DatasourcesApiCallDatasourceResourceWithUIDRequest, type DatasourcesApiCheckDatasourceHealthByIDRequest, type DatasourcesApiCheckDatasourceHealthWithUIDRequest, type DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest, type DatasourcesApiDatasourceProxyDELETEcallsRequest, type DatasourcesApiDatasourceProxyGETByUIDcallsRequest, type DatasourcesApiDatasourceProxyGETcallsRequest, type DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest, type DatasourcesApiDatasourceProxyPOSTcallsRequest, type DatasourcesApiDeleteDataSourceByIDRequest, type DatasourcesApiDeleteDataSourceByNameRequest, type DatasourcesApiDeleteDataSourceByUIDRequest, type DatasourcesApiGetDataSourceByIDRequest, type DatasourcesApiGetDataSourceByNameRequest, type DatasourcesApiGetDataSourceByUIDRequest, type DatasourcesApiGetDataSourceIdByNameRequest, type DatasourcesApiUpdateDataSourceByIDRequest, type DatasourcesApiUpdateDataSourceByUIDRequest, DefaultConfig, type DeleteCorrelationResponseBody, DeleteCorrelationResponseBodyFromJSON, DeleteCorrelationResponseBodyFromJSONTyped, DeleteCorrelationResponseBodyToJSON, DeleteCorrelationResponseBodyToJSONTyped, type DeleteDashboardByUID200Response, DeleteDashboardByUID200ResponseFromJSON, DeleteDashboardByUID200ResponseFromJSONTyped, DeleteDashboardByUID200ResponseToJSON, DeleteDashboardByUID200ResponseToJSONTyped, type DeleteDataSourceByName200Response, DeleteDataSourceByName200ResponseFromJSON, DeleteDataSourceByName200ResponseFromJSONTyped, DeleteDataSourceByName200ResponseToJSON, DeleteDataSourceByName200ResponseToJSONTyped, type DeleteFolder200Response, DeleteFolder200ResponseFromJSON, DeleteFolder200ResponseFromJSONTyped, DeleteFolder200ResponseToJSON, DeleteFolder200ResponseToJSONTyped, type DeleteTokenCommand, DeleteTokenCommandFromJSON, DeleteTokenCommandFromJSONTyped, DeleteTokenCommandToJSON, DeleteTokenCommandToJSONTyped, type Description, DescriptionFromJSON, DescriptionFromJSONTyped, DescriptionToJSON, DescriptionToJSONTyped, type DeviceDTO, DeviceDTOFromJSON, DeviceDTOFromJSONTyped, DeviceDTOToJSON, DeviceDTOToJSONTyped, type DeviceSearchHitDTO, DeviceSearchHitDTOFromJSON, DeviceSearchHitDTOFromJSONTyped, DeviceSearchHitDTOToJSON, DeviceSearchHitDTOToJSONTyped, DevicesApi, type DiscordConfig, DiscordConfigFromJSON, DiscordConfigFromJSONTyped, DiscordConfigToJSON, DiscordConfigToJSONTyped, type DiscoveryBase, DiscoveryBaseFromJSON, DiscoveryBaseFromJSONTyped, DiscoveryBaseToJSON, DiscoveryBaseToJSONTyped, DsApi, type DsApiQueryMetricsWithExpressionsRequest, type EmailConfig, EmailConfigFromJSON, EmailConfigFromJSONTyped, EmailConfigToJSON, EmailConfigToJSONTyped, type EmailDTO, EmailDTOFromJSON, EmailDTOFromJSONTyped, EmailDTOToJSON, EmailDTOToJSONTyped, type EmbeddedContactPoint, EmbeddedContactPointFromJSON, EmbeddedContactPointFromJSONTyped, EmbeddedContactPointToJSON, EmbeddedContactPointToJSONTyped, EmbeddedContactPointTypeEnum, EnterpriseApi, type EnterpriseApiAddTeamGroupApiRequest, type EnterpriseApiAddTeamRoleRequest, type EnterpriseApiAddUserRoleRequest, type EnterpriseApiCleanDataSourceCacheRequest, type EnterpriseApiCreateRecordingRuleRequest, type EnterpriseApiCreateRecordingRuleWriteTargetRequest, type EnterpriseApiCreateReportRequest, type EnterpriseApiCreateRoleRequest, type EnterpriseApiDeleteLicenseTokenRequest, type EnterpriseApiDeleteRecordingRuleRequest, type EnterpriseApiDeleteReportRequest, type EnterpriseApiDeleteRoleRequest, type EnterpriseApiDisableDataSourceCacheRequest, type EnterpriseApiEnableDataSourceCacheRequest, type EnterpriseApiGetDataSourceCacheConfigRequest, type EnterpriseApiGetReportRequest, type EnterpriseApiGetRoleAssignmentsRequest, type EnterpriseApiGetRoleRequest, type EnterpriseApiGetTeamGroupsApiRequest, type EnterpriseApiGetTeamLBACRulesApiRequest, type EnterpriseApiListRolesRequest, type EnterpriseApiListTeamRolesRequest, type EnterpriseApiListTeamsRolesRequest, type EnterpriseApiListUserRolesRequest, type EnterpriseApiListUsersRolesRequest, type EnterpriseApiPostACSRequest, type EnterpriseApiPostLicenseTokenRequest, type EnterpriseApiPostRenewLicenseTokenRequest, type EnterpriseApiPostSLORequest, type EnterpriseApiRemoveTeamGroupApiQueryRequest, type EnterpriseApiRemoveTeamRoleRequest, type EnterpriseApiRemoveUserRoleRequest, type EnterpriseApiRenderReportCSVsRequest, type EnterpriseApiRenderReportPDFsRequest, type EnterpriseApiSaveReportSettingsRequest, type EnterpriseApiSendReportRequest, type EnterpriseApiSendTestEmailRequest, type EnterpriseApiSetDataSourceCacheConfigRequest, type EnterpriseApiSetRoleAssignmentsRequest, type EnterpriseApiSetTeamRolesRequest, type EnterpriseApiSetUserRolesRequest, type EnterpriseApiTestCreateRecordingRuleRequest, type EnterpriseApiUpdateRecordingRuleRequest, type EnterpriseApiUpdateReportRequest, type EnterpriseApiUpdateRoleRequest, type EnterpriseApiUpdateTeamLBACRulesApiRequest, type EnumFieldConfig, EnumFieldConfigFromJSON, EnumFieldConfigFromJSONTyped, EnumFieldConfigToJSON, EnumFieldConfigToJSONTyped, type ErrorContext, type ErrorResponseBody, ErrorResponseBodyFromJSON, ErrorResponseBodyFromJSONTyped, ErrorResponseBodyToJSON, ErrorResponseBodyToJSONTyped, type EvalAlertConditionCommand, EvalAlertConditionCommandFromJSON, EvalAlertConditionCommandFromJSONTyped, EvalAlertConditionCommandToJSON, EvalAlertConditionCommandToJSONTyped, type EvalQueriesPayload, EvalQueriesPayloadFromJSON, EvalQueriesPayloadFromJSONTyped, EvalQueriesPayloadToJSON, EvalQueriesPayloadToJSONTyped, type ExtendedReceiver, ExtendedReceiverFromJSON, ExtendedReceiverFromJSONTyped, ExtendedReceiverToJSON, ExtendedReceiverToJSONTyped, type Extension, ExtensionFromJSON, ExtensionFromJSONTyped, ExtensionToJSON, ExtensionToJSONTyped, type FailedUser, FailedUserFromJSON, FailedUserFromJSONTyped, FailedUserToJSON, FailedUserToJSONTyped, type FetchAPI, FetchError, type FetchParams, type Field, type FieldConfig, FieldConfigFromJSON, FieldConfigFromJSONTyped, FieldConfigToJSON, FieldConfigToJSONTyped, FieldFromJSON, FieldFromJSONTyped, FieldToJSON, FieldToJSONTyped, type FieldTypeConfig, FieldTypeConfigFromJSON, FieldTypeConfigFromJSONTyped, FieldTypeConfigToJSON, FieldTypeConfigToJSONTyped, type FindTagsResult, FindTagsResultFromJSON, FindTagsResultFromJSONTyped, FindTagsResultToJSON, FindTagsResultToJSONTyped, type FloatHistogram, FloatHistogramFromJSON, FloatHistogramFromJSONTyped, FloatHistogramToJSON, FloatHistogramToJSONTyped, type Folder, FolderFromJSON, FolderFromJSONTyped, FolderPermissionsApi, type FolderPermissionsApiGetFolderPermissionListRequest, type FolderPermissionsApiUpdateFolderPermissionsRequest, type FolderSearchHit, FolderSearchHitFromJSON, FolderSearchHitFromJSONTyped, FolderSearchHitToJSON, FolderSearchHitToJSONTyped, FolderToJSON, FolderToJSONTyped, FoldersApi, type FoldersApiCreateFolderRequest, type FoldersApiDeleteFolderRequest, type FoldersApiGetFolderByIDRequest, type FoldersApiGetFolderByUIDRequest, type FoldersApiGetFolderDescendantCountsRequest, type FoldersApiGetFoldersRequest, type FoldersApiMoveFolderRequest, type FoldersApiUpdateFolderRequest, type ForbiddenError, ForbiddenErrorFromJSON, ForbiddenErrorFromJSONTyped, ForbiddenErrorToJSON, ForbiddenErrorToJSONTyped, type Frame, FrameFromJSON, FrameFromJSONTyped, type FrameMeta, FrameMetaFromJSON, FrameMetaFromJSONTyped, FrameMetaToJSON, FrameMetaToJSONTyped, FrameToJSON, FrameToJSONTyped, type GenericPublicError, GenericPublicErrorFromJSON, GenericPublicErrorFromJSONTyped, GenericPublicErrorToJSON, GenericPublicErrorToJSONTyped, type GetAccessTokenResponseDTO, GetAccessTokenResponseDTOFromJSON, GetAccessTokenResponseDTOFromJSONTyped, GetAccessTokenResponseDTOToJSON, GetAccessTokenResponseDTOToJSONTyped, type GetAnnotationTagsResponse, GetAnnotationTagsResponseFromJSON, GetAnnotationTagsResponseFromJSONTyped, GetAnnotationTagsResponseToJSON, GetAnnotationTagsResponseToJSONTyped, GetAnnotationsTypeEnum, GetCurrentOrgApi, type GetDataSourceIdByName200Response, GetDataSourceIdByName200ResponseFromJSON, GetDataSourceIdByName200ResponseFromJSONTyped, GetDataSourceIdByName200ResponseToJSON, GetDataSourceIdByName200ResponseToJSONTyped, GetFoldersPermissionEnum, type GetHomeDashboardResponse, GetHomeDashboardResponseFromJSON, GetHomeDashboardResponseFromJSONTyped, GetHomeDashboardResponseToJSON, GetHomeDashboardResponseToJSONTyped, GetLibraryElementsKindEnum, GetLibraryElementsSortDirectionEnum, type GetSharingOptions200Response, GetSharingOptions200ResponseFromJSON, GetSharingOptions200ResponseFromJSONTyped, GetSharingOptions200ResponseToJSON, GetSharingOptions200ResponseToJSONTyped, type GetSnapshotResponseDTO, GetSnapshotResponseDTOFromJSON, GetSnapshotResponseDTOFromJSONTyped, GetSnapshotResponseDTOStatusEnum, GetSnapshotResponseDTOToJSON, GetSnapshotResponseDTOToJSONTyped, type GettableAlert, GettableAlertFromJSON, GettableAlertFromJSONTyped, GettableAlertToJSON, GettableAlertToJSONTyped, type GettableAlertmanagers, GettableAlertmanagersFromJSON, GettableAlertmanagersFromJSONTyped, GettableAlertmanagersToJSON, GettableAlertmanagersToJSONTyped, type GettableApiAlertingConfig, GettableApiAlertingConfigFromJSON, GettableApiAlertingConfigFromJSONTyped, GettableApiAlertingConfigToJSON, GettableApiAlertingConfigToJSONTyped, type GettableApiReceiver, GettableApiReceiverFromJSON, GettableApiReceiverFromJSONTyped, GettableApiReceiverToJSON, GettableApiReceiverToJSONTyped, type GettableExtendedRuleNode, GettableExtendedRuleNodeFromJSON, GettableExtendedRuleNodeFromJSONTyped, GettableExtendedRuleNodeToJSON, GettableExtendedRuleNodeToJSONTyped, type GettableGrafanaReceiver, GettableGrafanaReceiverFromJSON, GettableGrafanaReceiverFromJSONTyped, GettableGrafanaReceiverToJSON, GettableGrafanaReceiverToJSONTyped, type GettableGrafanaReceivers, GettableGrafanaReceiversFromJSON, GettableGrafanaReceiversFromJSONTyped, GettableGrafanaReceiversToJSON, GettableGrafanaReceiversToJSONTyped, type GettableGrafanaRule, GettableGrafanaRuleExecErrStateEnum, GettableGrafanaRuleFromJSON, GettableGrafanaRuleFromJSONTyped, GettableGrafanaRuleNoDataStateEnum, GettableGrafanaRuleToJSON, GettableGrafanaRuleToJSONTyped, type GettableGrafanaSilence, GettableGrafanaSilenceFromJSON, GettableGrafanaSilenceFromJSONTyped, GettableGrafanaSilenceToJSON, GettableGrafanaSilenceToJSONTyped, type GettableHistoricUserConfig, GettableHistoricUserConfigFromJSON, GettableHistoricUserConfigFromJSONTyped, GettableHistoricUserConfigToJSON, GettableHistoricUserConfigToJSONTyped, type GettableNGalertConfig, GettableNGalertConfigAlertmanagersChoiceEnum, GettableNGalertConfigFromJSON, GettableNGalertConfigFromJSONTyped, GettableNGalertConfigToJSON, GettableNGalertConfigToJSONTyped, type GettableRuleGroupConfig, GettableRuleGroupConfigFromJSON, GettableRuleGroupConfigFromJSONTyped, GettableRuleGroupConfigToJSON, GettableRuleGroupConfigToJSONTyped, type GettableSilence, GettableSilenceFromJSON, GettableSilenceFromJSONTyped, GettableSilenceToJSON, GettableSilenceToJSONTyped, type GettableStatus, GettableStatusFromJSON, GettableStatusFromJSONTyped, GettableStatusToJSON, GettableStatusToJSONTyped, type GettableTimeIntervals, GettableTimeIntervalsFromJSON, GettableTimeIntervalsFromJSONTyped, GettableTimeIntervalsToJSON, GettableTimeIntervalsToJSONTyped, type GettableUserConfig, GettableUserConfigFromJSON, GettableUserConfigFromJSONTyped, GettableUserConfigToJSON, GettableUserConfigToJSONTyped, type GlobalConfig, GlobalConfigFromJSON, GlobalConfigFromJSONTyped, GlobalConfigToJSON, GlobalConfigToJSONTyped, type HTTPBody, type HTTPClientConfig, HTTPClientConfigFromJSON, HTTPClientConfigFromJSONTyped, HTTPClientConfigToJSON, HTTPClientConfigToJSONTyped, type HTTPHeaders, type HTTPMethod, type HTTPQuery, type HTTPRequestInit, type Header, HeaderFromJSON, HeaderFromJSONTyped, HeaderToJSON, HeaderToJSONTyped, type Headers, HeadersFromJSON, HeadersFromJSONTyped, HeadersToJSON, HeadersToJSONTyped, HealthApi, type HealthResponse, HealthResponseFromJSON, HealthResponseFromJSONTyped, HealthResponseToJSON, HealthResponseToJSONTyped, type Hit, HitFromJSON, HitFromJSONTyped, HitToJSON, HitToJSONTyped, type HostPort, HostPortFromJSON, HostPortFromJSONTyped, HostPortToJSON, HostPortToJSONTyped, type IPNet, IPNetFromJSON, IPNetFromJSONTyped, IPNetToJSON, IPNetToJSONTyped, type ImportDashboardInput, ImportDashboardInputFromJSON, ImportDashboardInputFromJSONTyped, ImportDashboardInputToJSON, ImportDashboardInputToJSONTyped, type ImportDashboardRequest, ImportDashboardRequestFromJSON, ImportDashboardRequestFromJSONTyped, ImportDashboardRequestToJSON, ImportDashboardRequestToJSONTyped, type ImportDashboardResponse, ImportDashboardResponseFromJSON, ImportDashboardResponseFromJSONTyped, ImportDashboardResponseToJSON, ImportDashboardResponseToJSONTyped, type InhibitRule, InhibitRuleFromJSON, InhibitRuleFromJSONTyped, InhibitRuleToJSON, InhibitRuleToJSONTyped, type InitOverrideFunction, type InternalDataLink, InternalDataLinkFromJSON, InternalDataLinkFromJSONTyped, InternalDataLinkToJSON, InternalDataLinkToJSONTyped, JSONApiResponse, type JSONWebKey, JSONWebKeyFromJSON, JSONWebKeyFromJSONTyped, JSONWebKeyToJSON, JSONWebKeyToJSONTyped, type Json, type Label, LabelFromJSON, LabelFromJSONTyped, LabelToJSON, LabelToJSONTyped, LdapDebugApi, type LibraryElementArrayResponse, LibraryElementArrayResponseFromJSON, LibraryElementArrayResponseFromJSONTyped, LibraryElementArrayResponseToJSON, LibraryElementArrayResponseToJSONTyped, type LibraryElementConnectionDTO, LibraryElementConnectionDTOFromJSON, LibraryElementConnectionDTOFromJSONTyped, LibraryElementConnectionDTOToJSON, LibraryElementConnectionDTOToJSONTyped, type LibraryElementConnectionsResponse, LibraryElementConnectionsResponseFromJSON, LibraryElementConnectionsResponseFromJSONTyped, LibraryElementConnectionsResponseToJSON, LibraryElementConnectionsResponseToJSONTyped, type LibraryElementDTO, LibraryElementDTOFromJSON, LibraryElementDTOFromJSONTyped, type LibraryElementDTOMeta, LibraryElementDTOMetaFromJSON, LibraryElementDTOMetaFromJSONTyped, LibraryElementDTOMetaToJSON, LibraryElementDTOMetaToJSONTyped, type LibraryElementDTOMetaUser, LibraryElementDTOMetaUserFromJSON, LibraryElementDTOMetaUserFromJSONTyped, LibraryElementDTOMetaUserToJSON, LibraryElementDTOMetaUserToJSONTyped, LibraryElementDTOToJSON, LibraryElementDTOToJSONTyped, type LibraryElementResponse, LibraryElementResponseFromJSON, LibraryElementResponseFromJSONTyped, LibraryElementResponseToJSON, LibraryElementResponseToJSONTyped, type LibraryElementSearchResponse, LibraryElementSearchResponseFromJSON, LibraryElementSearchResponseFromJSONTyped, LibraryElementSearchResponseToJSON, LibraryElementSearchResponseToJSONTyped, type LibraryElementSearchResult, LibraryElementSearchResultFromJSON, LibraryElementSearchResultFromJSONTyped, LibraryElementSearchResultToJSON, LibraryElementSearchResultToJSONTyped, LibraryElementsApi, type LibraryElementsApiCreateLibraryElementRequest, type LibraryElementsApiDeleteLibraryElementByUIDRequest, type LibraryElementsApiGetLibraryElementByNameRequest, type LibraryElementsApiGetLibraryElementByUIDRequest, type LibraryElementsApiGetLibraryElementConnectionsRequest, type LibraryElementsApiGetLibraryElementsRequest, type LibraryElementsApiUpdateLibraryElementRequest, LicensingApi, type LicensingApiDeleteLicenseTokenRequest, type LicensingApiPostLicenseTokenRequest, type LicensingApiPostRenewLicenseTokenRequest, type LinkTransformationConfig, LinkTransformationConfigFromJSON, LinkTransformationConfigFromJSONTyped, LinkTransformationConfigToJSON, LinkTransformationConfigToJSONTyped, type ListAllProvidersSettings200ResponseInner, ListAllProvidersSettings200ResponseInnerFromJSON, ListAllProvidersSettings200ResponseInnerFromJSONTyped, ListAllProvidersSettings200ResponseInnerToJSON, ListAllProvidersSettings200ResponseInnerToJSONTyped, type ListSortOptions200Response, ListSortOptions200ResponseFromJSON, ListSortOptions200ResponseFromJSONTyped, ListSortOptions200ResponseToJSON, ListSortOptions200ResponseToJSONTyped, type MSTeamsConfig, MSTeamsConfigFromJSON, MSTeamsConfigFromJSONTyped, MSTeamsConfigToJSON, MSTeamsConfigToJSONTyped, type MassDeleteAnnotationsCmd, MassDeleteAnnotationsCmdFromJSON, MassDeleteAnnotationsCmdFromJSONTyped, MassDeleteAnnotationsCmdToJSON, MassDeleteAnnotationsCmdToJSONTyped, type Matcher, MatcherFromJSON, MatcherFromJSONTyped, MatcherToJSON, MatcherToJSONTyped, type MetricRequest, MetricRequestFromJSON, MetricRequestFromJSONTyped, MetricRequestToJSON, MetricRequestToJSONTyped, type Middleware, type MigrateDataResponseDTO, MigrateDataResponseDTOFromJSON, MigrateDataResponseDTOFromJSONTyped, MigrateDataResponseDTOToJSON, MigrateDataResponseDTOToJSONTyped, type MigrateDataResponseItemDTO, MigrateDataResponseItemDTOFromJSON, MigrateDataResponseItemDTOFromJSONTyped, MigrateDataResponseItemDTOStatusEnum, MigrateDataResponseItemDTOToJSON, MigrateDataResponseItemDTOToJSONTyped, MigrateDataResponseItemDTOTypeEnum, type MigrateDataResponseListDTO, MigrateDataResponseListDTOFromJSON, MigrateDataResponseListDTOFromJSONTyped, MigrateDataResponseListDTOToJSON, MigrateDataResponseListDTOToJSONTyped, MigrationsApi, type MigrationsApiCancelSnapshotRequest, type MigrationsApiCreateSessionRequest, type MigrationsApiCreateSnapshotRequest, type MigrationsApiDeleteCloudMigrationTokenRequest, type MigrationsApiDeleteSessionRequest, type MigrationsApiGetCloudMigrationRunListRequest, type MigrationsApiGetCloudMigrationRunRequest, type MigrationsApiGetSessionRequest, type MigrationsApiGetShapshotListRequest, type MigrationsApiGetSnapshotRequest, type MigrationsApiRunCloudMigrationRequest, type MigrationsApiUploadSnapshotRequest, type ModelPropertyNaming, type MoveFolderCommand, MoveFolderCommandFromJSON, MoveFolderCommandFromJSONTyped, MoveFolderCommandToJSON, MoveFolderCommandToJSONTyped, type MuteTimeInterval, type MuteTimeIntervalExport, MuteTimeIntervalExportFromJSON, MuteTimeIntervalExportFromJSONTyped, MuteTimeIntervalExportToJSON, MuteTimeIntervalExportToJSONTyped, MuteTimeIntervalFromJSON, MuteTimeIntervalFromJSONTyped, MuteTimeIntervalToJSON, MuteTimeIntervalToJSONTyped, type Name, NameFromJSON, NameFromJSONTyped, NameToJSON, NameToJSONTyped, type NavbarPreference, NavbarPreferenceFromJSON, NavbarPreferenceFromJSONTyped, NavbarPreferenceToJSON, NavbarPreferenceToJSONTyped, type NewApiKeyResult, NewApiKeyResultFromJSON, NewApiKeyResultFromJSONTyped, NewApiKeyResultToJSON, NewApiKeyResultToJSONTyped, type Notice, NoticeFromJSON, NoticeFromJSONTyped, NoticeToJSON, NoticeToJSONTyped, type NotificationPolicyExport, NotificationPolicyExportFromJSON, NotificationPolicyExportFromJSONTyped, NotificationPolicyExportToJSON, NotificationPolicyExportToJSONTyped, type NotificationTemplate, type NotificationTemplateContent, NotificationTemplateContentFromJSON, NotificationTemplateContentFromJSONTyped, NotificationTemplateContentToJSON, NotificationTemplateContentToJSONTyped, NotificationTemplateFromJSON, NotificationTemplateFromJSONTyped, NotificationTemplateToJSON, NotificationTemplateToJSONTyped, type NotifierConfig, NotifierConfigFromJSON, NotifierConfigFromJSONTyped, NotifierConfigToJSON, NotifierConfigToJSONTyped, type OAuth2, OAuth2FromJSON, OAuth2FromJSONTyped, OAuth2ToJSON, OAuth2ToJSONTyped, type OpsGenieConfig, OpsGenieConfigFromJSON, OpsGenieConfigFromJSONTyped, type OpsGenieConfigResponder, OpsGenieConfigResponderFromJSON, OpsGenieConfigResponderFromJSONTyped, OpsGenieConfigResponderToJSON, OpsGenieConfigResponderToJSONTyped, OpsGenieConfigToJSON, OpsGenieConfigToJSONTyped, OrgApi, type OrgApiAddOrgUserToCurrentOrgRequest, type OrgApiGetOrgUsersForCurrentOrgLookupRequest, type OrgApiRemoveOrgUserForCurrentOrgRequest, type OrgApiUpdateCurrentOrgAddressRequest, type OrgApiUpdateCurrentOrgRequest, type OrgApiUpdateOrgUserForCurrentOrgRequest, type OrgDTO, OrgDTOFromJSON, OrgDTOFromJSONTyped, OrgDTOToJSON, OrgDTOToJSONTyped, type OrgDetailsDTO, OrgDetailsDTOFromJSON, OrgDetailsDTOFromJSONTyped, OrgDetailsDTOToJSON, OrgDetailsDTOToJSONTyped, OrgInvitesApi, type OrgInvitesApiAddOrgInviteRequest, type OrgInvitesApiRevokeInviteRequest, OrgPreferencesApi, type OrgPreferencesApiPatchOrgPreferencesRequest, type OrgPreferencesApiUpdateOrgPreferencesRequest, type OrgUserDTO, OrgUserDTOFromJSON, OrgUserDTOFromJSONTyped, OrgUserDTOToJSON, OrgUserDTOToJSONTyped, OrgsApi, type OrgsApiAddOrgUserRequest, type OrgsApiCreateOrgRequest, type OrgsApiDeleteOrgByIDRequest, type OrgsApiGetOrgByIDRequest, type OrgsApiGetOrgByNameRequest, type OrgsApiGetOrgQuotaRequest, type OrgsApiGetOrgUsersRequest, type OrgsApiRemoveOrgUserRequest, type OrgsApiSearchOrgUsersRequest, type OrgsApiSearchOrgsRequest, type OrgsApiUpdateOrgAddressRequest, type OrgsApiUpdateOrgQuotaRequest, type OrgsApiUpdateOrgRequest, type OrgsApiUpdateOrgUserRequest, type PagerdutyConfig, PagerdutyConfigFromJSON, PagerdutyConfigFromJSONTyped, PagerdutyConfigToJSON, PagerdutyConfigToJSONTyped, type PagerdutyImage, PagerdutyImageFromJSON, PagerdutyImageFromJSONTyped, PagerdutyImageToJSON, PagerdutyImageToJSONTyped, type PagerdutyLink, PagerdutyLinkFromJSON, PagerdutyLinkFromJSONTyped, PagerdutyLinkToJSON, PagerdutyLinkToJSONTyped, type PatchAnnotationsCmd, PatchAnnotationsCmdFromJSON, PatchAnnotationsCmdFromJSONTyped, PatchAnnotationsCmdToJSON, PatchAnnotationsCmdToJSONTyped, type PatchLibraryElementCommand, PatchLibraryElementCommandFromJSON, PatchLibraryElementCommandFromJSONTyped, PatchLibraryElementCommandKindEnum, PatchLibraryElementCommandToJSON, PatchLibraryElementCommandToJSONTyped, type PatchPrefsCmd, PatchPrefsCmdFromJSON, PatchPrefsCmdFromJSONTyped, PatchPrefsCmdThemeEnum, PatchPrefsCmdTimezoneEnum, PatchPrefsCmdToJSON, PatchPrefsCmdToJSONTyped, type PatchQueryCommentInQueryHistoryCommand, PatchQueryCommentInQueryHistoryCommandFromJSON, PatchQueryCommentInQueryHistoryCommandFromJSONTyped, PatchQueryCommentInQueryHistoryCommandToJSON, PatchQueryCommentInQueryHistoryCommandToJSONTyped, type PeerStatus, PeerStatusFromJSON, PeerStatusFromJSONTyped, PeerStatusToJSON, PeerStatusToJSONTyped, type Permission, PermissionFromJSON, PermissionFromJSONTyped, PermissionToJSON, PermissionToJSONTyped, type Playlist, type PlaylistDTO, PlaylistDTOFromJSON, PlaylistDTOFromJSONTyped, PlaylistDTOToJSON, PlaylistDTOToJSONTyped, type PlaylistDashboard, PlaylistDashboardFromJSON, PlaylistDashboardFromJSONTyped, PlaylistDashboardToJSON, PlaylistDashboardToJSONTyped, PlaylistFromJSON, PlaylistFromJSONTyped, type PlaylistItem, type PlaylistItemDTO, PlaylistItemDTOFromJSON, PlaylistItemDTOFromJSONTyped, PlaylistItemDTOToJSON, PlaylistItemDTOToJSONTyped, PlaylistItemFromJSON, PlaylistItemFromJSONTyped, PlaylistItemToJSON, PlaylistItemToJSONTyped, PlaylistToJSON, PlaylistToJSONTyped, PlaylistsApi, type PlaylistsApiCreatePlaylistRequest, type PlaylistsApiDeletePlaylistRequest, type PlaylistsApiGetPlaylistItemsRequest, type PlaylistsApiGetPlaylistRequest, type PlaylistsApiSearchPlaylistsRequest, type PlaylistsApiUpdatePlaylistRequest, type PostAnnotation200Response, PostAnnotation200ResponseFromJSON, PostAnnotation200ResponseFromJSONTyped, PostAnnotation200ResponseToJSON, PostAnnotation200ResponseToJSONTyped, type PostAnnotationsCmd, PostAnnotationsCmdFromJSON, PostAnnotationsCmdFromJSONTyped, PostAnnotationsCmdToJSON, PostAnnotationsCmdToJSONTyped, type PostDashboard200Response, PostDashboard200ResponseFromJSON, PostDashboard200ResponseFromJSONTyped, PostDashboard200ResponseToJSON, PostDashboard200ResponseToJSONTyped, type PostGraphiteAnnotationsCmd, PostGraphiteAnnotationsCmdFromJSON, PostGraphiteAnnotationsCmdFromJSONTyped, PostGraphiteAnnotationsCmdToJSON, PostGraphiteAnnotationsCmdToJSONTyped, type PostSilencesOKBody, PostSilencesOKBodyFromJSON, PostSilencesOKBodyFromJSONTyped, PostSilencesOKBodyToJSON, PostSilencesOKBodyToJSONTyped, type PostableAlert, PostableAlertFromJSON, PostableAlertFromJSONTyped, PostableAlertToJSON, PostableAlertToJSONTyped, type PostableApiAlertingConfig, PostableApiAlertingConfigFromJSON, PostableApiAlertingConfigFromJSONTyped, PostableApiAlertingConfigToJSON, PostableApiAlertingConfigToJSONTyped, type PostableApiReceiver, PostableApiReceiverFromJSON, PostableApiReceiverFromJSONTyped, PostableApiReceiverToJSON, PostableApiReceiverToJSONTyped, type PostableExtendedRuleNode, type PostableExtendedRuleNodeExtended, PostableExtendedRuleNodeExtendedFromJSON, PostableExtendedRuleNodeExtendedFromJSONTyped, PostableExtendedRuleNodeExtendedToJSON, PostableExtendedRuleNodeExtendedToJSONTyped, PostableExtendedRuleNodeFromJSON, PostableExtendedRuleNodeFromJSONTyped, PostableExtendedRuleNodeToJSON, PostableExtendedRuleNodeToJSONTyped, type PostableGrafanaReceiver, PostableGrafanaReceiverFromJSON, PostableGrafanaReceiverFromJSONTyped, PostableGrafanaReceiverToJSON, PostableGrafanaReceiverToJSONTyped, type PostableGrafanaReceivers, PostableGrafanaReceiversFromJSON, PostableGrafanaReceiversFromJSONTyped, PostableGrafanaReceiversToJSON, PostableGrafanaReceiversToJSONTyped, type PostableGrafanaRule, PostableGrafanaRuleExecErrStateEnum, PostableGrafanaRuleFromJSON, PostableGrafanaRuleFromJSONTyped, PostableGrafanaRuleNoDataStateEnum, PostableGrafanaRuleToJSON, PostableGrafanaRuleToJSONTyped, type PostableNGalertConfig, PostableNGalertConfigAlertmanagersChoiceEnum, PostableNGalertConfigFromJSON, PostableNGalertConfigFromJSONTyped, PostableNGalertConfigToJSON, PostableNGalertConfigToJSONTyped, type PostableRuleGroupConfig, PostableRuleGroupConfigFromJSON, PostableRuleGroupConfigFromJSONTyped, PostableRuleGroupConfigToJSON, PostableRuleGroupConfigToJSONTyped, type PostableSilence, PostableSilenceFromJSON, PostableSilenceFromJSONTyped, PostableSilenceToJSON, PostableSilenceToJSONTyped, type PostableTimeIntervals, PostableTimeIntervalsFromJSON, PostableTimeIntervalsFromJSONTyped, PostableTimeIntervalsToJSON, PostableTimeIntervalsToJSONTyped, type PostableUserConfig, PostableUserConfigFromJSON, PostableUserConfigFromJSONTyped, PostableUserConfigToJSON, PostableUserConfigToJSONTyped, type Preferences, PreferencesFromJSON, PreferencesFromJSONTyped, PreferencesToJSON, PreferencesToJSONTyped, type PrometheusRemoteWriteTargetJSON, PrometheusRemoteWriteTargetJSONFromJSON, PrometheusRemoteWriteTargetJSONFromJSONTyped, PrometheusRemoteWriteTargetJSONToJSON, PrometheusRemoteWriteTargetJSONToJSONTyped, type ProvisionedAlertRule, ProvisionedAlertRuleExecErrStateEnum, ProvisionedAlertRuleFromJSON, ProvisionedAlertRuleFromJSONTyped, ProvisionedAlertRuleNoDataStateEnum, ProvisionedAlertRuleToJSON, ProvisionedAlertRuleToJSONTyped, ProvisioningApi, type ProvisioningApiRouteDeleteAlertRuleGroupRequest, type ProvisioningApiRouteDeleteAlertRuleRequest, type ProvisioningApiRouteDeleteContactpointsRequest, type ProvisioningApiRouteDeleteMuteTimingRequest, type ProvisioningApiRouteDeleteTemplateRequest, type ProvisioningApiRouteExportMuteTimingRequest, type ProvisioningApiRouteExportMuteTimingsRequest, type ProvisioningApiRouteGetAlertRuleExportRequest, type ProvisioningApiRouteGetAlertRuleGroupExportRequest, type ProvisioningApiRouteGetAlertRuleGroupRequest, type ProvisioningApiRouteGetAlertRuleRequest, type ProvisioningApiRouteGetAlertRulesExportRequest, type ProvisioningApiRouteGetContactpointsExportRequest, type ProvisioningApiRouteGetContactpointsRequest, type ProvisioningApiRouteGetMuteTimingRequest, type ProvisioningApiRouteGetTemplateRequest, type ProvisioningApiRoutePostAlertRuleRequest, type ProvisioningApiRoutePostContactpointsRequest, type ProvisioningApiRoutePostMuteTimingRequest, type ProvisioningApiRoutePutAlertRuleGroupRequest, type ProvisioningApiRoutePutAlertRuleRequest, type ProvisioningApiRoutePutContactpointRequest, type ProvisioningApiRoutePutMuteTimingRequest, type ProvisioningApiRoutePutPolicyTreeRequest, type ProvisioningApiRoutePutTemplateRequest, type ProxyConfig, ProxyConfigFromJSON, ProxyConfigFromJSONTyped, ProxyConfigToJSON, ProxyConfigToJSONTyped, type PublicDashboard, type PublicDashboardDTO, PublicDashboardDTOFromJSON, PublicDashboardDTOFromJSONTyped, PublicDashboardDTOToJSON, PublicDashboardDTOToJSONTyped, PublicDashboardFromJSON, PublicDashboardFromJSONTyped, type PublicDashboardListResponse, PublicDashboardListResponseFromJSON, PublicDashboardListResponseFromJSONTyped, PublicDashboardListResponseToJSON, PublicDashboardListResponseToJSONTyped, type PublicDashboardListResponseWithPagination, PublicDashboardListResponseWithPaginationFromJSON, PublicDashboardListResponseWithPaginationFromJSONTyped, PublicDashboardListResponseWithPaginationToJSON, PublicDashboardListResponseWithPaginationToJSONTyped, PublicDashboardToJSON, PublicDashboardToJSONTyped, type PublicError, PublicErrorFromJSON, PublicErrorFromJSONTyped, PublicErrorToJSON, PublicErrorToJSONTyped, type PushoverConfig, PushoverConfigFromJSON, PushoverConfigFromJSONTyped, PushoverConfigToJSON, PushoverConfigToJSONTyped, type QueryDataResponse, QueryDataResponseFromJSON, QueryDataResponseFromJSONTyped, QueryDataResponseToJSON, QueryDataResponseToJSONTyped, QueryHistoryApi, type QueryHistoryApiCreateQueryRequest, type QueryHistoryApiDeleteQueryRequest, type QueryHistoryApiPatchQueryCommentRequest, type QueryHistoryApiSearchQueriesRequest, type QueryHistoryApiStarQueryRequest, type QueryHistoryApiUnstarQueryRequest, type QueryHistoryDTO, QueryHistoryDTOFromJSON, QueryHistoryDTOFromJSONTyped, QueryHistoryDTOToJSON, QueryHistoryDTOToJSONTyped, type QueryHistoryDeleteQueryResponse, QueryHistoryDeleteQueryResponseFromJSON, QueryHistoryDeleteQueryResponseFromJSONTyped, QueryHistoryDeleteQueryResponseToJSON, QueryHistoryDeleteQueryResponseToJSONTyped, type QueryHistoryPreference, QueryHistoryPreferenceFromJSON, QueryHistoryPreferenceFromJSONTyped, QueryHistoryPreferenceToJSON, QueryHistoryPreferenceToJSONTyped, type QueryHistoryResponse, QueryHistoryResponseFromJSON, QueryHistoryResponseFromJSONTyped, QueryHistoryResponseToJSON, QueryHistoryResponseToJSONTyped, type QueryHistorySearchResponse, QueryHistorySearchResponseFromJSON, QueryHistorySearchResponseFromJSONTyped, QueryHistorySearchResponseToJSON, QueryHistorySearchResponseToJSONTyped, type QueryHistorySearchResult, QueryHistorySearchResultFromJSON, QueryHistorySearchResultFromJSONTyped, QueryHistorySearchResultToJSON, QueryHistorySearchResultToJSONTyped, type QueryStat, QueryStatFromJSON, QueryStatFromJSONTyped, QueryStatToJSON, QueryStatToJSONTyped, type QuotaDTO, QuotaDTOFromJSON, QuotaDTOFromJSONTyped, QuotaDTOToJSON, QuotaDTOToJSONTyped, type Receiver, type ReceiverExport, ReceiverExportFromJSON, ReceiverExportFromJSONTyped, ReceiverExportToJSON, ReceiverExportToJSONTyped, ReceiverFromJSON, ReceiverFromJSONTyped, ReceiverToJSON, ReceiverToJSONTyped, type Record, RecordFromJSON, RecordFromJSONTyped, RecordToJSON, RecordToJSONTyped, type RecordingRuleJSON, RecordingRuleJSONFromJSON, RecordingRuleJSONFromJSONTyped, RecordingRuleJSONToJSON, RecordingRuleJSONToJSONTyped, RecordingRulesApi, type RecordingRulesApiCreateRecordingRuleRequest, type RecordingRulesApiCreateRecordingRuleWriteTargetRequest, type RecordingRulesApiDeleteRecordingRuleRequest, type RecordingRulesApiTestCreateRecordingRuleRequest, type RecordingRulesApiUpdateRecordingRuleRequest, type RelativeTimeRange, type RelativeTimeRangeExport, RelativeTimeRangeExportFromJSON, RelativeTimeRangeExportFromJSONTyped, RelativeTimeRangeExportToJSON, RelativeTimeRangeExportToJSONTyped, RelativeTimeRangeFromJSON, RelativeTimeRangeFromJSONTyped, RelativeTimeRangeToJSON, RelativeTimeRangeToJSONTyped, type Report, type ReportBrandingOptions, ReportBrandingOptionsFromJSON, ReportBrandingOptionsFromJSONTyped, ReportBrandingOptionsToJSON, ReportBrandingOptionsToJSONTyped, type ReportDashboard, ReportDashboardFromJSON, ReportDashboardFromJSONTyped, type ReportDashboardID, ReportDashboardIDFromJSON, ReportDashboardIDFromJSONTyped, ReportDashboardIDToJSON, ReportDashboardIDToJSONTyped, ReportDashboardToJSON, ReportDashboardToJSONTyped, type ReportEmail, ReportEmailFromJSON, ReportEmailFromJSONTyped, ReportEmailToJSON, ReportEmailToJSONTyped, ReportFromJSON, ReportFromJSONTyped, type ReportOptions, ReportOptionsFromJSON, ReportOptionsFromJSONTyped, ReportOptionsToJSON, ReportOptionsToJSONTyped, type ReportSchedule, ReportScheduleFromJSON, ReportScheduleFromJSONTyped, ReportScheduleToJSON, ReportScheduleToJSONTyped, type ReportSettings, ReportSettingsFromJSON, ReportSettingsFromJSONTyped, ReportSettingsToJSON, ReportSettingsToJSONTyped, type ReportTimeRange, ReportTimeRangeFromJSON, ReportTimeRangeFromJSONTyped, ReportTimeRangeToJSON, ReportTimeRangeToJSONTyped, ReportToJSON, ReportToJSONTyped, ReportsApi, type ReportsApiCreateReportRequest, type ReportsApiDeleteReportRequest, type ReportsApiGetReportRequest, type ReportsApiRenderReportCSVsRequest, type ReportsApiRenderReportPDFsRequest, type ReportsApiSaveReportSettingsRequest, type ReportsApiSendReportRequest, type ReportsApiSendTestEmailRequest, type ReportsApiUpdateReportRequest, type RequestContext, type RequestOpts, RequiredError, type ResourcePermissionDTO, ResourcePermissionDTOFromJSON, ResourcePermissionDTOFromJSONTyped, ResourcePermissionDTOToJSON, ResourcePermissionDTOToJSONTyped, type ResponseContext, type ResponseDetails, ResponseDetailsFromJSON, ResponseDetailsFromJSONTyped, ResponseDetailsToJSON, ResponseDetailsToJSONTyped, ResponseError, type ResponseTransformer, type RestoreDashboardVersionCommand, RestoreDashboardVersionCommandFromJSON, RestoreDashboardVersionCommandFromJSONTyped, RestoreDashboardVersionCommandToJSON, RestoreDashboardVersionCommandToJSONTyped, type RestoreDeletedDashboardCommand, RestoreDeletedDashboardCommandFromJSON, RestoreDeletedDashboardCommandFromJSONTyped, RestoreDeletedDashboardCommandToJSON, RestoreDeletedDashboardCommandToJSONTyped, type RetrieveJWKS200Response, RetrieveJWKS200ResponseFromJSON, RetrieveJWKS200ResponseFromJSONTyped, RetrieveJWKS200ResponseToJSON, RetrieveJWKS200ResponseToJSONTyped, type RevokeAuthTokenCmd, RevokeAuthTokenCmdFromJSON, RevokeAuthTokenCmdFromJSONTyped, RevokeAuthTokenCmdToJSON, RevokeAuthTokenCmdToJSONTyped, type RoleAssignmentsDTO, RoleAssignmentsDTOFromJSON, RoleAssignmentsDTOFromJSONTyped, RoleAssignmentsDTOToJSON, RoleAssignmentsDTOToJSONTyped, type RoleDTO, RoleDTOFromJSON, RoleDTOFromJSONTyped, RoleDTOToJSON, RoleDTOToJSONTyped, type RolesSearchQuery, RolesSearchQueryFromJSON, RolesSearchQueryFromJSONTyped, RolesSearchQueryToJSON, RolesSearchQueryToJSONTyped, type Route, type RouteExport, RouteExportFromJSON, RouteExportFromJSONTyped, RouteExportMuteTimingFormatEnum, RouteExportMuteTimingsFormatEnum, RouteExportToJSON, RouteExportToJSONTyped, RouteFromJSON, RouteFromJSONTyped, RouteGetAlertRuleExportFormatEnum, RouteGetAlertRuleGroupExportFormatEnum, RouteGetAlertRulesExportFormatEnum, RouteGetContactpointsExportFormatEnum, RouteToJSON, RouteToJSONTyped, type Rule, type RuleDiscovery, RuleDiscoveryFromJSON, RuleDiscoveryFromJSONTyped, RuleDiscoveryToJSON, RuleDiscoveryToJSONTyped, RuleFromJSON, RuleFromJSONTyped, type RuleGroup, type RuleGroupConfigResponse, RuleGroupConfigResponseFromJSON, RuleGroupConfigResponseFromJSONTyped, RuleGroupConfigResponseToJSON, RuleGroupConfigResponseToJSONTyped, RuleGroupFromJSON, RuleGroupFromJSONTyped, RuleGroupToJSON, RuleGroupToJSONTyped, type RuleResponse, RuleResponseFromJSON, RuleResponseFromJSONTyped, RuleResponseToJSON, RuleResponseToJSONTyped, RuleToJSON, RuleToJSONTyped, type SNSConfig, SNSConfigFromJSON, SNSConfigFromJSONTyped, SNSConfigToJSON, SNSConfigToJSONTyped, SamlApi, type SamlApiPostACSRequest, type SamlApiPostSLORequest, type Sample, SampleFromJSON, SampleFromJSONTyped, SampleToJSON, SampleToJSONTyped, type SaveDashboardCommand, SaveDashboardCommandFromJSON, SaveDashboardCommandFromJSONTyped, SaveDashboardCommandToJSON, SaveDashboardCommandToJSONTyped, SearchApi, type SearchApiSearchRequest, type SearchDTO, SearchDTOFromJSON, SearchDTOFromJSONTyped, SearchDTOToJSON, SearchDTOToJSONTyped, type SearchDeviceQueryResult, SearchDeviceQueryResultFromJSON, SearchDeviceQueryResultFromJSONTyped, SearchDeviceQueryResultToJSON, SearchDeviceQueryResultToJSONTyped, type SearchOrgServiceAccountsResult, SearchOrgServiceAccountsResultFromJSON, SearchOrgServiceAccountsResultFromJSONTyped, SearchOrgServiceAccountsResultToJSON, SearchOrgServiceAccountsResultToJSONTyped, type SearchOrgUsersQueryResult, SearchOrgUsersQueryResultFromJSON, SearchOrgUsersQueryResultFromJSONTyped, SearchOrgUsersQueryResultToJSON, SearchOrgUsersQueryResultToJSONTyped, SearchPermissionEnum, SearchQueriesSortEnum, type SearchResult, SearchResultFromJSON, SearchResultFromJSONTyped, type SearchResultItem, SearchResultItemFromJSON, SearchResultItemFromJSONTyped, SearchResultItemToJSON, SearchResultItemToJSONTyped, SearchResultToJSON, SearchResultToJSONTyped, SearchSortEnum, type SearchTeamQueryResult, SearchTeamQueryResultFromJSON, SearchTeamQueryResultFromJSONTyped, SearchTeamQueryResultToJSON, SearchTeamQueryResultToJSONTyped, SearchTypeEnum, type SearchUserQueryResult, SearchUserQueryResultFromJSON, SearchUserQueryResultFromJSONTyped, SearchUserQueryResultToJSON, SearchUserQueryResultToJSONTyped, type ServiceAccountDTO, ServiceAccountDTOFromJSON, ServiceAccountDTOFromJSONTyped, ServiceAccountDTOToJSON, ServiceAccountDTOToJSONTyped, type ServiceAccountProfileDTO, ServiceAccountProfileDTOFromJSON, ServiceAccountProfileDTOFromJSONTyped, ServiceAccountProfileDTOToJSON, ServiceAccountProfileDTOToJSONTyped, ServiceAccountsApi, type ServiceAccountsApiCreateServiceAccountRequest, type ServiceAccountsApiCreateTokenRequest, type ServiceAccountsApiDeleteServiceAccountRequest, type ServiceAccountsApiDeleteTokenRequest, type ServiceAccountsApiListTokensRequest, type ServiceAccountsApiRetrieveServiceAccountRequest, type ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest, type ServiceAccountsApiUpdateServiceAccountRequest, type SetPermissionCommand, SetPermissionCommandFromJSON, SetPermissionCommandFromJSONTyped, SetPermissionCommandToJSON, SetPermissionCommandToJSONTyped, type SetPermissionsCommand, SetPermissionsCommandFromJSON, SetPermissionsCommandFromJSONTyped, SetPermissionsCommandToJSON, SetPermissionsCommandToJSONTyped, type SetResourcePermissionCommand, SetResourcePermissionCommandFromJSON, SetResourcePermissionCommandFromJSONTyped, SetResourcePermissionCommandToJSON, SetResourcePermissionCommandToJSONTyped, type SetRoleAssignmentsCommand, SetRoleAssignmentsCommandFromJSON, SetRoleAssignmentsCommandFromJSONTyped, SetRoleAssignmentsCommandToJSON, SetRoleAssignmentsCommandToJSONTyped, type SetTeamMembershipsCommand, SetTeamMembershipsCommandFromJSON, SetTeamMembershipsCommandFromJSONTyped, SetTeamMembershipsCommandToJSON, SetTeamMembershipsCommandToJSONTyped, type SetUserRolesCommand, SetUserRolesCommandFromJSON, SetUserRolesCommandFromJSONTyped, SetUserRolesCommandToJSON, SetUserRolesCommandToJSONTyped, type SigV4Config, SigV4ConfigFromJSON, SigV4ConfigFromJSONTyped, SigV4ConfigToJSON, SigV4ConfigToJSONTyped, SignedInUserApi, type SignedInUserApiChangeUserPasswordRequest, type SignedInUserApiRevokeUserAuthTokenRequest, type SignedInUserApiSetHelpFlagRequest, type SignedInUserApiStarDashboardByUIDRequest, type SignedInUserApiStarDashboardRequest, type SignedInUserApiUnstarDashboardByUIDRequest, type SignedInUserApiUnstarDashboardRequest, type SignedInUserApiUpdateSignedInUserRequest, type SignedInUserApiUserSetUsingOrgRequest, SigningKeysApi, type Silence, SilenceFromJSON, SilenceFromJSONTyped, type SilenceMetadata, SilenceMetadataFromJSON, SilenceMetadataFromJSONTyped, SilenceMetadataToJSON, SilenceMetadataToJSONTyped, type SilenceStatus, SilenceStatusFromJSON, SilenceStatusFromJSONTyped, SilenceStatusStateEnum, SilenceStatusToJSON, SilenceStatusToJSONTyped, SilenceToJSON, SilenceToJSONTyped, type SlackAction, SlackActionFromJSON, SlackActionFromJSONTyped, SlackActionToJSON, SlackActionToJSONTyped, type SlackConfig, SlackConfigFromJSON, SlackConfigFromJSONTyped, SlackConfigToJSON, SlackConfigToJSONTyped, type SlackConfirmationField, SlackConfirmationFieldFromJSON, SlackConfirmationFieldFromJSONTyped, SlackConfirmationFieldToJSON, SlackConfirmationFieldToJSONTyped, type SlackField, SlackFieldFromJSON, SlackFieldFromJSONTyped, SlackFieldToJSON, SlackFieldToJSONTyped, type SnapshotDTO, SnapshotDTOFromJSON, SnapshotDTOFromJSONTyped, SnapshotDTOStatusEnum, SnapshotDTOToJSON, SnapshotDTOToJSONTyped, type SnapshotListResponseDTO, SnapshotListResponseDTOFromJSON, SnapshotListResponseDTOFromJSONTyped, SnapshotListResponseDTOToJSON, SnapshotListResponseDTOToJSONTyped, type SnapshotResourceStats, SnapshotResourceStatsFromJSON, SnapshotResourceStatsFromJSONTyped, SnapshotResourceStatsToJSON, SnapshotResourceStatsToJSONTyped, SnapshotsApi, type SnapshotsApiCreateDashboardSnapshotRequest, type SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest, type SnapshotsApiDeleteDashboardSnapshotRequest, type SnapshotsApiGetDashboardSnapshotRequest, type SnapshotsApiSearchDashboardSnapshotsRequest, type Span, SpanFromJSON, SpanFromJSONTyped, SpanToJSON, SpanToJSONTyped, SsoSettingsApi, type SsoSettingsApiGetProviderSettingsRequest, type SsoSettingsApiRemoveProviderSettingsRequest, type SsoSettingsApiUpdateProviderSettingsOperationRequest, type SuccessResponseBody, SuccessResponseBodyFromJSON, SuccessResponseBodyFromJSONTyped, SuccessResponseBodyToJSON, SuccessResponseBodyToJSONTyped, type SyncResult, SyncResultFromJSON, SyncResultFromJSONTyped, SyncResultToJSON, SyncResultToJSONTyped, SyncTeamGroupsApi, type SyncTeamGroupsApiAddTeamGroupApiRequest, type SyncTeamGroupsApiGetTeamGroupsApiRequest, type SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest, type TLSConfig, TLSConfigFromJSON, TLSConfigFromJSONTyped, TLSConfigToJSON, TLSConfigToJSONTyped, type TagsDTO, TagsDTOFromJSON, TagsDTOFromJSONTyped, TagsDTOToJSON, TagsDTOToJSONTyped, type TeamDTO, TeamDTOFromJSON, TeamDTOFromJSONTyped, TeamDTOToJSON, TeamDTOToJSONTyped, type TeamGroupDTO, TeamGroupDTOFromJSON, TeamGroupDTOFromJSONTyped, TeamGroupDTOToJSON, TeamGroupDTOToJSONTyped, type TeamGroupMapping, TeamGroupMappingFromJSON, TeamGroupMappingFromJSONTyped, TeamGroupMappingToJSON, TeamGroupMappingToJSONTyped, type TeamMemberDTO, TeamMemberDTOFromJSON, TeamMemberDTOFromJSONTyped, TeamMemberDTOToJSON, TeamMemberDTOToJSONTyped, TeamsApi, type TeamsApiAddTeamMemberRequest, type TeamsApiCreateTeamRequest, type TeamsApiDeleteTeamByIDRequest, type TeamsApiGetTeamByIDRequest, type TeamsApiGetTeamMembersRequest, type TeamsApiGetTeamPreferencesRequest, type TeamsApiRemoveTeamMemberRequest, type TeamsApiSearchTeamsRequest, type TeamsApiSetTeamMembershipsRequest, type TeamsApiUpdateTeamMemberRequest, type TeamsApiUpdateTeamPreferencesRequest, type TeamsApiUpdateTeamRequest, type TelegramConfig, TelegramConfigFromJSON, TelegramConfigFromJSONTyped, TelegramConfigToJSON, TelegramConfigToJSONTyped, type TempUserDTO, TempUserDTOFromJSON, TempUserDTOFromJSONTyped, TempUserDTORoleEnum, TempUserDTOToJSON, TempUserDTOToJSONTyped, type TestReceiverConfigResult, TestReceiverConfigResultFromJSON, TestReceiverConfigResultFromJSONTyped, TestReceiverConfigResultToJSON, TestReceiverConfigResultToJSONTyped, type TestReceiverResult, TestReceiverResultFromJSON, TestReceiverResultFromJSONTyped, TestReceiverResultToJSON, TestReceiverResultToJSONTyped, type TestReceiversConfigAlertParams, TestReceiversConfigAlertParamsFromJSON, TestReceiversConfigAlertParamsFromJSONTyped, TestReceiversConfigAlertParamsToJSON, TestReceiversConfigAlertParamsToJSONTyped, type TestReceiversConfigBodyParams, TestReceiversConfigBodyParamsFromJSON, TestReceiversConfigBodyParamsFromJSONTyped, TestReceiversConfigBodyParamsToJSON, TestReceiversConfigBodyParamsToJSONTyped, type TestReceiversResult, TestReceiversResultFromJSON, TestReceiversResultFromJSONTyped, TestReceiversResultToJSON, TestReceiversResultToJSONTyped, type TestRulePayload, TestRulePayloadFromJSON, TestRulePayloadFromJSONTyped, TestRulePayloadToJSON, TestRulePayloadToJSONTyped, type TestRuleResponse, TestRuleResponseFromJSON, TestRuleResponseFromJSONTyped, TestRuleResponseToJSON, TestRuleResponseToJSONTyped, type TestTemplatesConfigBodyParams, TestTemplatesConfigBodyParamsFromJSON, TestTemplatesConfigBodyParamsFromJSONTyped, TestTemplatesConfigBodyParamsToJSON, TestTemplatesConfigBodyParamsToJSONTyped, type TestTemplatesErrorResult, TestTemplatesErrorResultFromJSON, TestTemplatesErrorResultFromJSONTyped, TestTemplatesErrorResultKindEnum, TestTemplatesErrorResultToJSON, TestTemplatesErrorResultToJSONTyped, type TestTemplatesResult, TestTemplatesResultFromJSON, TestTemplatesResultFromJSONTyped, TestTemplatesResultToJSON, TestTemplatesResultToJSONTyped, type TestTemplatesResults, TestTemplatesResultsFromJSON, TestTemplatesResultsFromJSONTyped, TestTemplatesResultsToJSON, TestTemplatesResultsToJSONTyped, TextApiResponse, type Threshold, ThresholdFromJSON, ThresholdFromJSONTyped, ThresholdToJSON, ThresholdToJSONTyped, type ThresholdsConfig, ThresholdsConfigFromJSON, ThresholdsConfigFromJSONTyped, ThresholdsConfigToJSON, ThresholdsConfigToJSONTyped, type TimeInterval, TimeIntervalFromJSON, TimeIntervalFromJSONTyped, type TimeIntervalItem, TimeIntervalItemFromJSON, TimeIntervalItemFromJSONTyped, TimeIntervalItemToJSON, TimeIntervalItemToJSONTyped, type TimeIntervalTimeRange, TimeIntervalTimeRangeFromJSON, TimeIntervalTimeRangeFromJSONTyped, TimeIntervalTimeRangeToJSON, TimeIntervalTimeRangeToJSONTyped, TimeIntervalToJSON, TimeIntervalToJSONTyped, type TimeRange, TimeRangeFromJSON, TimeRangeFromJSONTyped, TimeRangeToJSON, TimeRangeToJSONTyped, type Token, type TokenDTO, TokenDTOFromJSON, TokenDTOFromJSONTyped, TokenDTOToJSON, TokenDTOToJSONTyped, TokenFromJSON, TokenFromJSONTyped, TokenToJSON, TokenToJSONTyped, type Transformation, TransformationFromJSON, TransformationFromJSONTyped, TransformationToJSON, TransformationToJSONTyped, TransformationTypeEnum, type TypeMeta, TypeMetaFromJSON, TypeMetaFromJSONTyped, TypeMetaToJSON, TypeMetaToJSONTyped, type URL, URLFromJSON, URLFromJSONTyped, URLToJSON, URLToJSONTyped, type Unstructured, UnstructuredFromJSON, UnstructuredFromJSONTyped, UnstructuredToJSON, UnstructuredToJSONTyped, type UpdateAnnotationsCmd, UpdateAnnotationsCmdFromJSON, UpdateAnnotationsCmdFromJSONTyped, UpdateAnnotationsCmdToJSON, UpdateAnnotationsCmdToJSONTyped, type UpdateCorrelationCommand, UpdateCorrelationCommandFromJSON, UpdateCorrelationCommandFromJSONTyped, UpdateCorrelationCommandToJSON, UpdateCorrelationCommandToJSONTyped, type UpdateCorrelationResponseBody, UpdateCorrelationResponseBodyFromJSON, UpdateCorrelationResponseBodyFromJSONTyped, UpdateCorrelationResponseBodyToJSON, UpdateCorrelationResponseBodyToJSONTyped, type UpdateDashboardACLCommand, UpdateDashboardACLCommandFromJSON, UpdateDashboardACLCommandFromJSONTyped, UpdateDashboardACLCommandToJSON, UpdateDashboardACLCommandToJSONTyped, type UpdateDataSourceCommand, UpdateDataSourceCommandFromJSON, UpdateDataSourceCommandFromJSONTyped, UpdateDataSourceCommandToJSON, UpdateDataSourceCommandToJSONTyped, type UpdateFolderCommand, UpdateFolderCommandFromJSON, UpdateFolderCommandFromJSONTyped, UpdateFolderCommandToJSON, UpdateFolderCommandToJSONTyped, type UpdateOrgAddressForm, UpdateOrgAddressFormFromJSON, UpdateOrgAddressFormFromJSONTyped, UpdateOrgAddressFormToJSON, UpdateOrgAddressFormToJSONTyped, type UpdateOrgForm, UpdateOrgFormFromJSON, UpdateOrgFormFromJSONTyped, UpdateOrgFormToJSON, UpdateOrgFormToJSONTyped, type UpdateOrgUserCommand, UpdateOrgUserCommandFromJSON, UpdateOrgUserCommandFromJSONTyped, UpdateOrgUserCommandRoleEnum, UpdateOrgUserCommandToJSON, UpdateOrgUserCommandToJSONTyped, type UpdatePlaylistCommand, UpdatePlaylistCommandFromJSON, UpdatePlaylistCommandFromJSONTyped, UpdatePlaylistCommandToJSON, UpdatePlaylistCommandToJSONTyped, type UpdatePrefsCmd, UpdatePrefsCmdFromJSON, UpdatePrefsCmdFromJSONTyped, UpdatePrefsCmdThemeEnum, UpdatePrefsCmdTimezoneEnum, UpdatePrefsCmdToJSON, UpdatePrefsCmdToJSONTyped, type UpdateProviderSettingsRequest, UpdateProviderSettingsRequestFromJSON, UpdateProviderSettingsRequestFromJSONTyped, UpdateProviderSettingsRequestToJSON, UpdateProviderSettingsRequestToJSONTyped, type UpdateQuotaCmd, UpdateQuotaCmdFromJSON, UpdateQuotaCmdFromJSONTyped, UpdateQuotaCmdToJSON, UpdateQuotaCmdToJSONTyped, type UpdateRoleCommand, UpdateRoleCommandFromJSON, UpdateRoleCommandFromJSONTyped, UpdateRoleCommandToJSON, UpdateRoleCommandToJSONTyped, type UpdateRuleGroupResponse, UpdateRuleGroupResponseFromJSON, UpdateRuleGroupResponseFromJSONTyped, UpdateRuleGroupResponseToJSON, UpdateRuleGroupResponseToJSONTyped, type UpdateServiceAccount200Response, UpdateServiceAccount200ResponseFromJSON, UpdateServiceAccount200ResponseFromJSONTyped, UpdateServiceAccount200ResponseToJSON, UpdateServiceAccount200ResponseToJSONTyped, type UpdateServiceAccountForm, UpdateServiceAccountFormFromJSON, UpdateServiceAccountFormFromJSONTyped, UpdateServiceAccountFormRoleEnum, UpdateServiceAccountFormToJSON, UpdateServiceAccountFormToJSONTyped, type UpdateTeamCommand, UpdateTeamCommandFromJSON, UpdateTeamCommandFromJSONTyped, UpdateTeamCommandToJSON, UpdateTeamCommandToJSONTyped, type UpdateTeamMemberCommand, UpdateTeamMemberCommandFromJSON, UpdateTeamMemberCommandFromJSONTyped, UpdateTeamMemberCommandToJSON, UpdateTeamMemberCommandToJSONTyped, type UpdateUserCommand, UpdateUserCommandFromJSON, UpdateUserCommandFromJSONTyped, UpdateUserCommandToJSON, UpdateUserCommandToJSONTyped, UserApi, type UserLookupDTO, UserLookupDTOFromJSON, UserLookupDTOFromJSONTyped, UserLookupDTOToJSON, UserLookupDTOToJSONTyped, type UserOrgDTO, UserOrgDTOFromJSON, UserOrgDTOFromJSONTyped, UserOrgDTORoleEnum, UserOrgDTOToJSON, UserOrgDTOToJSONTyped, UserPreferencesApi, type UserPreferencesApiPatchUserPreferencesRequest, type UserPreferencesApiUpdateUserPreferencesRequest, type UserProfileDTO, UserProfileDTOFromJSON, UserProfileDTOFromJSONTyped, UserProfileDTOToJSON, UserProfileDTOToJSONTyped, type UserSearchHitDTO, UserSearchHitDTOFromJSON, UserSearchHitDTOFromJSONTyped, UserSearchHitDTOToJSON, UserSearchHitDTOToJSONTyped, type UserToken, UserTokenFromJSON, UserTokenFromJSONTyped, UserTokenToJSON, UserTokenToJSONTyped, UsersApi, type UsersApiGetUserByIDRequest, type UsersApiGetUserByLoginOrEmailRequest, type UsersApiGetUserOrgListRequest, type UsersApiGetUserTeamsRequest, type UsersApiSearchUsersRequest, type UsersApiUpdateUserRequest, type ValidationError, ValidationErrorFromJSON, ValidationErrorFromJSONTyped, ValidationErrorToJSON, ValidationErrorToJSONTyped, type VersionInfo, VersionInfoFromJSON, VersionInfoFromJSONTyped, VersionInfoToJSON, VersionInfoToJSONTyped, type VictorOpsConfig, VictorOpsConfigFromJSON, VictorOpsConfigFromJSONTyped, VictorOpsConfigToJSON, VictorOpsConfigToJSONTyped, VoidApiResponse, type WebexConfig, WebexConfigFromJSON, WebexConfigFromJSONTyped, WebexConfigToJSON, WebexConfigToJSONTyped, type WebhookConfig, WebhookConfigFromJSON, WebhookConfigFromJSONTyped, WebhookConfigToJSON, WebhookConfigToJSONTyped, type WechatConfig, WechatConfigFromJSON, WechatConfigFromJSONTyped, WechatConfigToJSON, WechatConfigToJSONTyped, canConsumeForm, exists, instanceOfActiveSyncStatusDTO, instanceOfActiveUserStats, instanceOfAddAPIKeyCommand, instanceOfAddDataSource200Response, instanceOfAddDataSourceCommand, instanceOfAddInviteForm, instanceOfAddOrgUserCommand, instanceOfAddServiceAccountTokenCommand, instanceOfAddTeamMemberCommand, instanceOfAddTeamRoleCommand, instanceOfAddUserRoleCommand, instanceOfAddress, instanceOfAdminCreateUserForm, instanceOfAdminCreateUserResponse, instanceOfAdminStats, instanceOfAdminUpdateUserPasswordForm, instanceOfAdminUpdateUserPermissionsForm, instanceOfAlert, instanceOfAlertDiscovery, instanceOfAlertGroup, instanceOfAlertInstancesResponse, instanceOfAlertManager, instanceOfAlertManagersResult, instanceOfAlertQuery, instanceOfAlertQueryExport, instanceOfAlertResponse, instanceOfAlertRuleExport, instanceOfAlertRuleGroup, instanceOfAlertRuleGroupExport, instanceOfAlertRuleGroupMetadata, instanceOfAlertRuleNotificationSettings, instanceOfAlertRuleNotificationSettingsExport, instanceOfAlertRuleRecordExport, instanceOfAlertStatus, instanceOfAlertingFileExport, instanceOfAlertingRule, instanceOfAlertingStatus, instanceOfAlertmanagerConfig, instanceOfAlertmanagerStatus, instanceOfAnnotation, instanceOfAnnotationActions, instanceOfAnnotationEvent, instanceOfAnnotationPanelFilter, instanceOfAnnotationPermission, instanceOfAnnotationQuery, instanceOfAnnotationTarget, instanceOfApiKeyDTO, instanceOfApiRuleNode, instanceOfAssignments, instanceOfAttributeTypeAndValue, instanceOfAuthorization, instanceOfBacktestConfig, instanceOfBasicAuth, instanceOfCacheConfig, instanceOfCacheConfigResponse, instanceOfCacheConfigSetter, instanceOfCalculateDashboardDiffRequest, instanceOfCalculateDiffTarget, instanceOfCertificate, instanceOfChangeUserPasswordCommand, instanceOfClearHelpFlags200Response, instanceOfCloudMigrationRunListDTO, instanceOfCloudMigrationSessionListResponseDTO, instanceOfCloudMigrationSessionRequestDTO, instanceOfCloudMigrationSessionResponseDTO, instanceOfClusterStatus, instanceOfConfig, instanceOfContactPointExport, instanceOfCookiePreferences, instanceOfCorrelation, instanceOfCorrelationConfig, instanceOfCorrelationConfigUpdateDTO, instanceOfCreateAccessTokenResponseDTO, instanceOfCreateCorrelationCommand, instanceOfCreateCorrelationResponseBody, instanceOfCreateDashboardSnapshot200Response, instanceOfCreateDashboardSnapshotCommand, instanceOfCreateFolderCommand, instanceOfCreateLibraryElementCommand, instanceOfCreateOrUpdateReport, instanceOfCreateOrg200Response, instanceOfCreateOrgCommand, instanceOfCreatePlaylistCommand, instanceOfCreateQueryInQueryHistoryCommand, instanceOfCreateReport200Response, instanceOfCreateRoleForm, instanceOfCreateServiceAccountForm, instanceOfCreateSnapshotResponseDTO, instanceOfCreateTeam200Response, instanceOfCreateTeamCommand, instanceOfDashboardACLInfoDTO, instanceOfDashboardACLUpdateItem, instanceOfDashboardCreateCommand, instanceOfDashboardFullWithMeta, instanceOfDashboardMeta, instanceOfDashboardRedirect, instanceOfDashboardSnapshotDTO, instanceOfDashboardTagCloudItem, instanceOfDashboardVersionMeta, instanceOfDataLink, instanceOfDataResponse, instanceOfDataSource, instanceOfDataSourceListItemDTO, instanceOfDataSourceRef, instanceOfDeleteCorrelationResponseBody, instanceOfDeleteDashboardByUID200Response, instanceOfDeleteDataSourceByName200Response, instanceOfDeleteFolder200Response, instanceOfDeleteTokenCommand, instanceOfDescription, instanceOfDeviceDTO, instanceOfDeviceSearchHitDTO, instanceOfDiscordConfig, instanceOfDiscoveryBase, instanceOfEmailConfig, instanceOfEmailDTO, instanceOfEmbeddedContactPoint, instanceOfEnumFieldConfig, instanceOfErrorResponseBody, instanceOfEvalAlertConditionCommand, instanceOfEvalQueriesPayload, instanceOfExtendedReceiver, instanceOfExtension, instanceOfFailedUser, instanceOfField, instanceOfFieldConfig, instanceOfFieldTypeConfig, instanceOfFindTagsResult, instanceOfFloatHistogram, instanceOfFolder, instanceOfFolderSearchHit, instanceOfForbiddenError, instanceOfFrame, instanceOfFrameMeta, instanceOfGenericPublicError, instanceOfGetAccessTokenResponseDTO, instanceOfGetAnnotationTagsResponse, instanceOfGetDataSourceIdByName200Response, instanceOfGetHomeDashboardResponse, instanceOfGetSharingOptions200Response, instanceOfGetSnapshotResponseDTO, instanceOfGettableAlert, instanceOfGettableAlertmanagers, instanceOfGettableApiAlertingConfig, instanceOfGettableApiReceiver, instanceOfGettableExtendedRuleNode, instanceOfGettableGrafanaReceiver, instanceOfGettableGrafanaReceivers, instanceOfGettableGrafanaRule, instanceOfGettableGrafanaSilence, instanceOfGettableHistoricUserConfig, instanceOfGettableNGalertConfig, instanceOfGettableRuleGroupConfig, instanceOfGettableSilence, instanceOfGettableStatus, instanceOfGettableTimeIntervals, instanceOfGettableUserConfig, instanceOfGlobalConfig, instanceOfHTTPClientConfig, instanceOfHeader, instanceOfHeaders, instanceOfHealthResponse, instanceOfHit, instanceOfHostPort, instanceOfIPNet, instanceOfImportDashboardInput, instanceOfImportDashboardRequest, instanceOfImportDashboardResponse, instanceOfInhibitRule, instanceOfInternalDataLink, instanceOfJSONWebKey, instanceOfLabel, instanceOfLibraryElementArrayResponse, instanceOfLibraryElementConnectionDTO, instanceOfLibraryElementConnectionsResponse, instanceOfLibraryElementDTO, instanceOfLibraryElementDTOMeta, instanceOfLibraryElementDTOMetaUser, instanceOfLibraryElementResponse, instanceOfLibraryElementSearchResponse, instanceOfLibraryElementSearchResult, instanceOfLinkTransformationConfig, instanceOfListAllProvidersSettings200ResponseInner, instanceOfListSortOptions200Response, instanceOfMSTeamsConfig, instanceOfMassDeleteAnnotationsCmd, instanceOfMatcher, instanceOfMetricRequest, instanceOfMigrateDataResponseDTO, instanceOfMigrateDataResponseItemDTO, instanceOfMigrateDataResponseListDTO, instanceOfMoveFolderCommand, instanceOfMuteTimeInterval, instanceOfMuteTimeIntervalExport, instanceOfName, instanceOfNavbarPreference, instanceOfNewApiKeyResult, instanceOfNotice, instanceOfNotificationPolicyExport, instanceOfNotificationTemplate, instanceOfNotificationTemplateContent, instanceOfNotifierConfig, instanceOfOAuth2, instanceOfOpsGenieConfig, instanceOfOpsGenieConfigResponder, instanceOfOrgDTO, instanceOfOrgDetailsDTO, instanceOfOrgUserDTO, instanceOfPagerdutyConfig, instanceOfPagerdutyImage, instanceOfPagerdutyLink, instanceOfPatchAnnotationsCmd, instanceOfPatchLibraryElementCommand, instanceOfPatchPrefsCmd, instanceOfPatchQueryCommentInQueryHistoryCommand, instanceOfPeerStatus, instanceOfPermission, instanceOfPlaylist, instanceOfPlaylistDTO, instanceOfPlaylistDashboard, instanceOfPlaylistItem, instanceOfPlaylistItemDTO, instanceOfPostAnnotation200Response, instanceOfPostAnnotationsCmd, instanceOfPostDashboard200Response, instanceOfPostGraphiteAnnotationsCmd, instanceOfPostSilencesOKBody, instanceOfPostableAlert, instanceOfPostableApiAlertingConfig, instanceOfPostableApiReceiver, instanceOfPostableExtendedRuleNode, instanceOfPostableExtendedRuleNodeExtended, instanceOfPostableGrafanaReceiver, instanceOfPostableGrafanaReceivers, instanceOfPostableGrafanaRule, instanceOfPostableNGalertConfig, instanceOfPostableRuleGroupConfig, instanceOfPostableSilence, instanceOfPostableTimeIntervals, instanceOfPostableUserConfig, instanceOfPreferences, instanceOfPrometheusRemoteWriteTargetJSON, instanceOfProvisionedAlertRule, instanceOfProxyConfig, instanceOfPublicDashboard, instanceOfPublicDashboardDTO, instanceOfPublicDashboardListResponse, instanceOfPublicDashboardListResponseWithPagination, instanceOfPublicError, instanceOfPushoverConfig, instanceOfQueryDataResponse, instanceOfQueryHistoryDTO, instanceOfQueryHistoryDeleteQueryResponse, instanceOfQueryHistoryPreference, instanceOfQueryHistoryResponse, instanceOfQueryHistorySearchResponse, instanceOfQueryHistorySearchResult, instanceOfQueryStat, instanceOfQuotaDTO, instanceOfReceiver, instanceOfReceiverExport, instanceOfRecord, instanceOfRecordingRuleJSON, instanceOfRelativeTimeRange, instanceOfRelativeTimeRangeExport, instanceOfReport, instanceOfReportBrandingOptions, instanceOfReportDashboard, instanceOfReportDashboardID, instanceOfReportEmail, instanceOfReportOptions, instanceOfReportSchedule, instanceOfReportSettings, instanceOfReportTimeRange, instanceOfResourcePermissionDTO, instanceOfResponseDetails, instanceOfRestoreDashboardVersionCommand, instanceOfRestoreDeletedDashboardCommand, instanceOfRetrieveJWKS200Response, instanceOfRevokeAuthTokenCmd, instanceOfRoleAssignmentsDTO, instanceOfRoleDTO, instanceOfRolesSearchQuery, instanceOfRoute, instanceOfRouteExport, instanceOfRule, instanceOfRuleDiscovery, instanceOfRuleGroup, instanceOfRuleGroupConfigResponse, instanceOfRuleResponse, instanceOfSNSConfig, instanceOfSample, instanceOfSaveDashboardCommand, instanceOfSearchDTO, instanceOfSearchDeviceQueryResult, instanceOfSearchOrgServiceAccountsResult, instanceOfSearchOrgUsersQueryResult, instanceOfSearchResult, instanceOfSearchResultItem, instanceOfSearchTeamQueryResult, instanceOfSearchUserQueryResult, instanceOfServiceAccountDTO, instanceOfServiceAccountProfileDTO, instanceOfSetPermissionCommand, instanceOfSetPermissionsCommand, instanceOfSetResourcePermissionCommand, instanceOfSetRoleAssignmentsCommand, instanceOfSetTeamMembershipsCommand, instanceOfSetUserRolesCommand, instanceOfSigV4Config, instanceOfSilence, instanceOfSilenceMetadata, instanceOfSilenceStatus, instanceOfSlackAction, instanceOfSlackConfig, instanceOfSlackConfirmationField, instanceOfSlackField, instanceOfSnapshotDTO, instanceOfSnapshotListResponseDTO, instanceOfSnapshotResourceStats, instanceOfSpan, instanceOfSuccessResponseBody, instanceOfSyncResult, instanceOfTLSConfig, instanceOfTagsDTO, instanceOfTeamDTO, instanceOfTeamGroupDTO, instanceOfTeamGroupMapping, instanceOfTeamMemberDTO, instanceOfTelegramConfig, instanceOfTempUserDTO, instanceOfTestReceiverConfigResult, instanceOfTestReceiverResult, instanceOfTestReceiversConfigAlertParams, instanceOfTestReceiversConfigBodyParams, instanceOfTestReceiversResult, instanceOfTestRulePayload, instanceOfTestRuleResponse, instanceOfTestTemplatesConfigBodyParams, instanceOfTestTemplatesErrorResult, instanceOfTestTemplatesResult, instanceOfTestTemplatesResults, instanceOfThreshold, instanceOfThresholdsConfig, instanceOfTimeInterval, instanceOfTimeIntervalItem, instanceOfTimeIntervalTimeRange, instanceOfTimeRange, instanceOfToken, instanceOfTokenDTO, instanceOfTransformation, instanceOfTypeMeta, instanceOfURL, instanceOfUnstructured, instanceOfUpdateAnnotationsCmd, instanceOfUpdateCorrelationCommand, instanceOfUpdateCorrelationResponseBody, instanceOfUpdateDashboardACLCommand, instanceOfUpdateDataSourceCommand, instanceOfUpdateFolderCommand, instanceOfUpdateOrgAddressForm, instanceOfUpdateOrgForm, instanceOfUpdateOrgUserCommand, instanceOfUpdatePlaylistCommand, instanceOfUpdatePrefsCmd, instanceOfUpdateProviderSettingsRequest, instanceOfUpdateQuotaCmd, instanceOfUpdateRoleCommand, instanceOfUpdateRuleGroupResponse, instanceOfUpdateServiceAccount200Response, instanceOfUpdateServiceAccountForm, instanceOfUpdateTeamCommand, instanceOfUpdateTeamMemberCommand, instanceOfUpdateUserCommand, instanceOfUserLookupDTO, instanceOfUserOrgDTO, instanceOfUserProfileDTO, instanceOfUserSearchHitDTO, instanceOfUserToken, instanceOfValidationError, instanceOfVersionInfo, instanceOfVictorOpsConfig, instanceOfWebexConfig, instanceOfWebhookConfig, instanceOfWechatConfig, mapValues, querystring };
