{"version":3,"sources":["../runtime.ts","../models/FailedUser.ts","../models/SyncResult.ts","../models/ActiveSyncStatusDTO.ts","../models/ActiveUserStats.ts","../models/AddAPIKeyCommand.ts","../models/DataSource.ts","../models/AddDataSource200Response.ts","../models/AddDataSourceCommand.ts","../models/AddInviteForm.ts","../models/AddOrgUserCommand.ts","../models/AddServiceAccountTokenCommand.ts","../models/AddTeamMemberCommand.ts","../models/AddTeamRoleCommand.ts","../models/AddUserRoleCommand.ts","../models/Address.ts","../models/AdminCreateUserForm.ts","../models/AdminCreateUserResponse.ts","../models/AdminStats.ts","../models/AdminUpdateUserPasswordForm.ts","../models/AdminUpdateUserPermissionsForm.ts","../models/Alert.ts","../models/AlertDiscovery.ts","../models/AlertStatus.ts","../models/Receiver.ts","../models/GettableAlert.ts","../models/AlertGroup.ts","../models/AlertInstancesResponse.ts","../models/AlertManager.ts","../models/AlertManagersResult.ts","../models/RelativeTimeRange.ts","../models/AlertQuery.ts","../models/RelativeTimeRangeExport.ts","../models/AlertQueryExport.ts","../models/AlertResponse.ts","../models/AlertRuleEditorSettings.ts","../models/AlertRuleRecordExport.ts","../models/AlertRuleNotificationSettingsExport.ts","../models/AlertRuleExport.ts","../models/AlertRuleNotificationSettings.ts","../models/Record.ts","../models/ProvisionedAlertRule.ts","../models/AlertRuleGroup.ts","../models/AlertRuleGroupExport.ts","../models/AlertRuleGroupMetadata.ts","../models/AlertRuleMetadata.ts","../models/ReceiverExport.ts","../models/ContactPointExport.ts","../models/Matcher.ts","../models/RouteExport.ts","../models/NotificationPolicyExport.ts","../models/TimeInterval.ts","../models/MuteTimeIntervalExport.ts","../models/AlertingFileExport.ts","../models/Label.ts","../models/AlertingRule.ts","../models/AlertingStatus.ts","../models/AlertmanagerConfig.ts","../models/VersionInfo.ts","../models/PeerStatus.ts","../models/ClusterStatus.ts","../models/AlertmanagerStatus.ts","../models/Annotation.ts","../models/AnnotationActions.ts","../models/AnnotationTarget.ts","../models/DataSourceRef.ts","../models/AnnotationPanelFilter.ts","../models/AnnotationQuery.ts","../models/AnnotationEvent.ts","../models/AnnotationPermission.ts","../models/ApiKeyDTO.ts","../models/ApiRuleNode.ts","../models/Assignments.ts","../models/AttributeTypeAndValue.ts","../models/Authorization.ts","../models/BacktestConfig.ts","../models/BasicAuth.ts","../models/CacheConfig.ts","../models/CacheConfigResponse.ts","../models/CacheConfigSetter.ts","../models/CalculateDiffTarget.ts","../models/CalculateDashboardDiffRequest.ts","../models/Extension.ts","../models/IPNet.ts","../models/URL.ts","../models/Name.ts","../models/Certificate.ts","../models/ChangeUserPasswordCommand.ts","../models/ClearHelpFlags200Response.ts","../models/MigrateDataResponseListDTO.ts","../models/CloudMigrationRunListDTO.ts","../models/CloudMigrationSessionResponseDTO.ts","../models/CloudMigrationSessionListResponseDTO.ts","../models/CloudMigrationSessionRequestDTO.ts","../models/InhibitRule.ts","../models/MuteTimeInterval.ts","../models/HostPort.ts","../models/TLSConfig.ts","../models/OAuth2.ts","../models/Header.ts","../models/Headers.ts","../models/HTTPClientConfig.ts","../models/GlobalConfig.ts","../models/Route.ts","../models/Config.ts","../models/CookiePreferences.ts","../models/Transformation.ts","../models/CorrelationConfig.ts","../models/Correlation.ts","../models/CorrelationConfigUpdateDTO.ts","../models/CreateAccessTokenResponseDTO.ts","../models/CreateCorrelationCommand.ts","../models/CreateCorrelationResponseBody.ts","../models/CreateDashboardSnapshot200Response.ts","../models/Unstructured.ts","../models/CreateDashboardSnapshotCommand.ts","../models/CreateFolderCommand.ts","../models/CreateLibraryElementCommand.ts","../models/ReportDashboardID.ts","../models/ReportTimeRange.ts","../models/ReportDashboard.ts","../models/ReportSchedule.ts","../models/ReportOptions.ts","../models/CreateOrUpdateReport.ts","../models/CreateOrg200Response.ts","../models/CreateOrgCommand.ts","../models/PlaylistItem.ts","../models/CreatePlaylistCommand.ts","../models/CreateQueryInQueryHistoryCommand.ts","../models/CreateReport200Response.ts","../models/Permission.ts","../models/CreateRoleForm.ts","../models/CreateServiceAccountForm.ts","../models/CreateSnapshotResponseDTO.ts","../models/CreateTeam200Response.ts","../models/CreateTeamCommand.ts","../models/DashboardACLInfoDTO.ts","../models/DashboardACLUpdateItem.ts","../models/DashboardCreateCommand.ts","../models/DashboardMeta.ts","../models/DashboardFullWithMeta.ts","../models/DashboardRedirect.ts","../models/DashboardSnapshotDTO.ts","../models/DashboardTagCloudItem.ts","../models/DashboardVersionMeta.ts","../models/TimeRange.ts","../models/LinkTransformationConfig.ts","../models/InternalDataLink.ts","../models/DataLink.ts","../models/Threshold.ts","../models/ThresholdsConfig.ts","../models/EnumFieldConfig.ts","../models/FieldTypeConfig.ts","../models/FieldConfig.ts","../models/Field.ts","../models/QueryStat.ts","../models/Notice.ts","../models/FrameMeta.ts","../models/Frame.ts","../models/DataResponse.ts","../models/DataSourceListItemDTO.ts","../models/DeleteCorrelationResponseBody.ts","../models/DeleteDashboardByUID200Response.ts","../models/DeleteDataSourceByName200Response.ts","../models/DeleteFolder200Response.ts","../models/DeleteTokenCommand.ts","../models/Description.ts","../models/DeviceDTO.ts","../models/DeviceSearchHitDTO.ts","../models/DiscordConfig.ts","../models/DiscoveryBase.ts","../models/EmailConfig.ts","../models/EmailDTO.ts","../models/EmbeddedContactPoint.ts","../models/ErrorResponseBody.ts","../models/EvalAlertConditionCommand.ts","../models/EvalQueriesPayload.ts","../models/SlackField.ts","../models/SlackConfirmationField.ts","../models/SlackAction.ts","../models/SlackConfig.ts","../models/PostableGrafanaReceiver.ts","../models/WebhookConfig.ts","../models/VictorOpsConfig.ts","../models/OpsGenieConfigResponder.ts","../models/OpsGenieConfig.ts","../models/PushoverConfig.ts","../models/PagerdutyImage.ts","../models/PagerdutyLink.ts","../models/PagerdutyConfig.ts","../models/WechatConfig.ts","../models/ExtendedReceiver.ts","../models/TagsDTO.ts","../models/FindTagsResult.ts","../models/Span.ts","../models/FloatHistogram.ts","../models/Folder.ts","../models/FolderSearchHit.ts","../models/PublicError.ts","../models/ForbiddenError.ts","../models/GetAccessTokenResponseDTO.ts","../models/GetAnnotationTagsResponse.ts","../models/GetDataSourceIdByName200Response.ts","../models/GetHomeDashboardResponse.ts","../models/GetSharingOptions200Response.ts","../models/MigrateDataResponseItemDTO.ts","../models/SnapshotResourceStats.ts","../models/GetSnapshotResponseDTO.ts","../models/GettableAlertmanagers.ts","../models/WebexConfig.ts","../models/TelegramConfig.ts","../models/GettableGrafanaReceiver.ts","../models/SigV4Config.ts","../models/SNSConfig.ts","../models/MSTeamsConfig.ts","../models/GettableApiReceiver.ts","../models/GettableApiAlertingConfig.ts","../models/GettableGrafanaRule.ts","../models/GettableExtendedRuleNode.ts","../models/GettableGrafanaReceivers.ts","../models/SilenceStatus.ts","../models/SilenceMetadata.ts","../models/GettableGrafanaSilence.ts","../models/GettableHistoricUserConfig.ts","../models/GettableNGalertConfig.ts","../models/GettableRuleGroupConfig.ts","../models/GettableSilence.ts","../models/PostableApiReceiver.ts","../models/PostableApiAlertingConfig.ts","../models/GettableStatus.ts","../models/TimeIntervalTimeRange.ts","../models/TimeIntervalItem.ts","../models/GettableTimeIntervals.ts","../models/GettableUserConfig.ts","../models/HealthResponse.ts","../models/Hit.ts","../models/ImportDashboardInput.ts","../models/ImportDashboardRequest.ts","../models/ImportDashboardResponse.ts","../models/JSONWebKey.ts","../models/LibraryElementDTOMetaUser.ts","../models/LibraryElementDTOMeta.ts","../models/LibraryElementDTO.ts","../models/LibraryElementArrayResponse.ts","../models/LibraryElementConnectionDTO.ts","../models/LibraryElementConnectionsResponse.ts","../models/LibraryElementResponse.ts","../models/LibraryElementSearchResult.ts","../models/LibraryElementSearchResponse.ts","../models/ListAllProvidersSettings200ResponseInner.ts","../models/ListSortOptions200Response.ts","../models/MassDeleteAnnotationsCmd.ts","../models/MetricRequest.ts","../models/MigrateDataResponseDTO.ts","../models/MoveFolderCommand.ts","../models/NavbarPreference.ts","../models/NewApiKeyResult.ts","../models/NotificationTemplate.ts","../models/NotificationTemplateContent.ts","../models/NotifierConfig.ts","../models/OrgDTO.ts","../models/OrgDetailsDTO.ts","../models/OrgUserDTO.ts","../models/PatchAnnotationsCmd.ts","../models/PatchLibraryElementCommand.ts","../models/QueryHistoryPreference.ts","../models/PatchPrefsCmd.ts","../models/PatchQueryCommentInQueryHistoryCommand.ts","../models/Playlist.ts","../models/PlaylistItemDTO.ts","../models/PlaylistDTO.ts","../models/PlaylistDashboard.ts","../models/PostAnnotation200Response.ts","../models/PostAnnotationsCmd.ts","../models/PostDashboard200Response.ts","../models/PostGraphiteAnnotationsCmd.ts","../models/PostSilencesOKBody.ts","../models/PostableAlert.ts","../models/PostableGrafanaRule.ts","../models/PostableExtendedRuleNode.ts","../models/PostableExtendedRuleNodeExtended.ts","../models/PostableGrafanaReceivers.ts","../models/PostableNGalertConfig.ts","../models/PostableRuleGroupConfig.ts","../models/PostableSilence.ts","../models/PostableTimeIntervals.ts","../models/PostableUserConfig.ts","../models/Preferences.ts","../models/PrometheusRemoteWriteTargetJSON.ts","../models/ProxyConfig.ts","../models/PublicDashboard.ts","../models/PublicDashboardDTO.ts","../models/PublicDashboardListResponse.ts","../models/PublicDashboardListResponseWithPagination.ts","../models/QueryDataResponse.ts","../models/QueryHistoryDTO.ts","../models/QueryHistoryDeleteQueryResponse.ts","../models/QueryHistoryResponse.ts","../models/QueryHistorySearchResult.ts","../models/QueryHistorySearchResponse.ts","../models/QuotaDTO.ts","../models/RecordingRuleJSON.ts","../models/Report.ts","../models/ReportBrandingOptions.ts","../models/ReportEmail.ts","../models/ReportSettings.ts","../models/ResourcePermissionDTO.ts","../models/ResponseDetails.ts","../models/RestoreDashboardVersionCommand.ts","../models/RestoreDeletedDashboardCommand.ts","../models/RetrieveJWKS200Response.ts","../models/RevokeAuthTokenCmd.ts","../models/RoleAssignmentsDTO.ts","../models/RoleDTO.ts","../models/RolesSearchQuery.ts","../models/Rule.ts","../models/RuleGroup.ts","../models/RuleDiscovery.ts","../models/RuleGroupConfigResponse.ts","../models/RuleResponse.ts","../models/Sample.ts","../models/SaveDashboardCommand.ts","../models/SearchDTO.ts","../models/SearchDeviceQueryResult.ts","../models/ServiceAccountDTO.ts","../models/SearchOrgServiceAccountsResult.ts","../models/SearchOrgUsersQueryResult.ts","../models/SearchResultItem.ts","../models/SearchResult.ts","../models/TeamDTO.ts","../models/SearchTeamQueryResult.ts","../models/UserSearchHitDTO.ts","../models/SearchUserQueryResult.ts","../models/ServiceAccountProfileDTO.ts","../models/SetPermissionCommand.ts","../models/SetResourcePermissionCommand.ts","../models/SetPermissionsCommand.ts","../models/SetRoleAssignmentsCommand.ts","../models/SetTeamMembershipsCommand.ts","../models/SetUserRolesCommand.ts","../models/Silence.ts","../models/SnapshotDTO.ts","../models/SnapshotListResponseDTO.ts","../models/SuccessResponseBody.ts","../models/TeamGroupDTO.ts","../models/TeamGroupMapping.ts","../models/TeamLBACRule.ts","../models/TeamLBACRules.ts","../models/TeamMemberDTO.ts","../models/TempUserDTO.ts","../models/TestReceiverConfigResult.ts","../models/TestReceiverResult.ts","../models/TestReceiversConfigAlertParams.ts","../models/TestReceiversConfigBodyParams.ts","../models/TestReceiversResult.ts","../models/TestRulePayload.ts","../models/TestRuleResponse.ts","../models/TestTemplatesConfigBodyParams.ts","../models/TestTemplatesErrorResult.ts","../models/TestTemplatesResult.ts","../models/TestTemplatesResults.ts","../models/Token.ts","../models/TokenDTO.ts","../models/TypeMeta.ts","../models/UpdateAnnotationsCmd.ts","../models/UpdateCorrelationCommand.ts","../models/UpdateCorrelationResponseBody.ts","../models/UpdateDashboardACLCommand.ts","../models/UpdateDataSourceCommand.ts","../models/UpdateFolderCommand.ts","../models/UpdateOrgAddressForm.ts","../models/UpdateOrgForm.ts","../models/UpdateOrgUserCommand.ts","../models/UpdatePlaylistCommand.ts","../models/UpdatePrefsCmd.ts","../models/UpdateProviderSettingsRequest.ts","../models/UpdateQuotaCmd.ts","../models/UpdateRoleCommand.ts","../models/UpdateRuleGroupResponse.ts","../models/UpdateServiceAccount200Response.ts","../models/UpdateServiceAccountForm.ts","../models/UpdateTeamCommand.ts","../models/UpdateTeamLBACCommand.ts","../models/UpdateTeamLBACRulesApi200Response.ts","../models/UpdateTeamMemberCommand.ts","../models/UpdateUserCommand.ts","../models/UserLookupDTO.ts","../models/UserOrgDTO.ts","../models/UserProfileDTO.ts","../models/UserToken.ts","../models/ValidationError.ts","../apis/AccessControlApi.ts","../apis/AccessControlProvisioningApi.ts","../apis/AdminApi.ts","../apis/AdminLdapApi.ts","../apis/AdminProvisioningApi.ts","../apis/AdminUsersApi.ts","../apis/AnnotationsApi.ts","../apis/ApiKeysApi.ts","../apis/CorrelationsApi.ts","../apis/DashboardPermissionsApi.ts","../apis/DashboardPublicApi.ts","../apis/DashboardVersionsApi.ts","../apis/DashboardsApi.ts","../apis/DatasourcesApi.ts","../apis/DevicesApi.ts","../apis/DsApi.ts","../apis/EnterpriseApi.ts","../apis/FolderPermissionsApi.ts","../apis/FoldersApi.ts","../apis/GetCurrentOrgApi.ts","../apis/HealthApi.ts","../apis/LdapDebugApi.ts","../apis/LibraryElementsApi.ts","../apis/LicensingApi.ts","../apis/MigrationsApi.ts","../apis/OrgApi.ts","../apis/OrgInvitesApi.ts","../apis/OrgPreferencesApi.ts","../apis/OrgsApi.ts","../apis/PlaylistsApi.ts","../apis/ProvisioningApi.ts","../apis/QueryHistoryApi.ts","../apis/RecordingRulesApi.ts","../apis/ReportsApi.ts","../apis/SamlApi.ts","../apis/SearchApi.ts","../apis/ServiceAccountsApi.ts","../apis/SignedInUserApi.ts","../apis/SigningKeysApi.ts","../apis/SnapshotsApi.ts","../apis/SsoSettingsApi.ts","../apis/SyncTeamGroupsApi.ts","../apis/TeamsApi.ts","../apis/UserApi.ts","../apis/UserPreferencesApi.ts","../apis/UsersApi.ts"],"names":[],"mappings":"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","file":"index.mjs","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"/api\".replace(/\\/+$/, \"\");\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | Promise<string> | ((name: string) => string | Promise<string>); // parameter for apiKey security\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    set config(configuration: Configuration) {\n        this.configuration = configuration;\n    }\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI | undefined {\n        return this.configuration.fetchApi;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string | Promise<string>) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : async () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n}\n\nexport const DefaultConfig = new Configuration();\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private static readonly jsonRegex = new RegExp('^(:?application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(:?;.*)?$', 'i');\n    private middleware: Middleware[];\n\n    constructor(protected configuration = DefaultConfig) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    protected isJsonMime(mime: string | null | undefined): boolean {\n        if (!mime) {\n            return false;\n        }\n        return BaseAPI.jsonRegex.test(mime);\n    }\n\n    protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {\n        const { url, init } = await this.createFetchParams(context, initOverrides);\n        const response = await this.fetchApi(url, init);\n        if (response && (response.status >= 200 && response.status < 300)) {\n            return response;\n        }\n        throw new ResponseError(response, 'Response returned an error code');\n    }\n\n    private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});\n\n        const initOverrideFn =\n            typeof initOverrides === \"function\"\n                ? initOverrides\n                : async () => initOverrides;\n\n        const initParams = {\n            method: context.method,\n            headers,\n            body: context.body,\n            credentials: this.configuration.credentials,\n        };\n\n        const overriddenInit: RequestInit = {\n            ...initParams,\n            ...(await initOverrideFn({\n                init: initParams,\n                context,\n            }))\n        };\n\n        let body: any;\n        if (isFormData(overriddenInit.body)\n            || (overriddenInit.body instanceof URLSearchParams)\n            || isBlob(overriddenInit.body)) {\n          body = overriddenInit.body;\n        } else if (this.isJsonMime(headers['Content-Type'])) {\n          body = JSON.stringify(overriddenInit.body);\n        } else {\n          body = overriddenInit.body;\n        }\n\n        const init: RequestInit = {\n            ...overriddenInit,\n            body\n        };\n\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response: Response | undefined = undefined;\n        try {\n            response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n        } catch (e) {\n            for (const middleware of this.middleware) {\n                if (middleware.onError) {\n                    response = await middleware.onError({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        error: e,\n                        response: response ? response.clone() : undefined,\n                    }) || response;\n                }\n            }\n            if (response === undefined) {\n              if (e instanceof Error) {\n                throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');\n              } else {\n                throw e;\n              }\n            }\n        }\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url: fetchParams.url,\n                    init: fetchParams.init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nfunction isBlob(value: any): value is Blob {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n\nfunction isFormData(value: any): value is FormData {\n    return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\n\nexport class ResponseError extends Error {\n    override name: \"ResponseError\" = \"ResponseError\";\n    constructor(public response: Response, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class FetchError extends Error {\n    override name: \"FetchError\" = \"FetchError\";\n    constructor(public cause: Error, msg?: string) {\n        super(msg);\n    }\n}\n\nexport class RequiredError extends Error {\n    override name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope['fetch'];\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type HTTPRequestInit = { headers?: HTTPHeaders; method: HTTPMethod; credentials?: RequestCredentials; body?: HTTPBody };\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport type InitOverrideFunction = (requestContext: { init: HTTPRequestInit, context: RequestOpts }) => Promise<RequestInit>\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map(key => querystringSingleKey(key, params[key], prefix))\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nfunction querystringSingleKey(key: string, value: string | number | null | undefined | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery, keyPrefix: string = ''): string {\n    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n    if (value instanceof Array) {\n        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n            .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n    }\n    if (value instanceof Set) {\n        const valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n    }\n    if (value instanceof Object) {\n        return querystring(value as HTTPQuery, fullKey);\n    }\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string;\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface ErrorContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    error: unknown;\n    response?: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n    onError?(context: ErrorContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * FailedUser holds the information of an user that failed\n * @export\n * @interface FailedUser\n */\nexport interface FailedUser {\n    /**\n     * \n     * @type {string}\n     * @memberof FailedUser\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FailedUser\n     */\n    login?: string;\n}\n\n/**\n * Check if a given object implements the FailedUser interface.\n */\nexport function instanceOfFailedUser(value: object): value is FailedUser {\n    return true;\n}\n\nexport function FailedUserFromJSON(json: any): FailedUser {\n    return FailedUserFromJSONTyped(json, false);\n}\n\nexport function FailedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): FailedUser {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'error': json['Error'] == null ? undefined : json['Error'],\n        'login': json['Login'] == null ? undefined : json['Login'],\n    };\n}\n\nexport function FailedUserToJSON(json: any): FailedUser {\n    return FailedUserToJSONTyped(json, false);\n}\n\nexport function FailedUserToJSONTyped(value?: FailedUser | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Error': value['error'],\n        'Login': value['login'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { FailedUser } from './FailedUser';\nimport {\n    FailedUserFromJSON,\n    FailedUserFromJSONTyped,\n    FailedUserToJSON,\n    FailedUserToJSONTyped,\n} from './FailedUser';\n\n/**\n * \n * @export\n * @interface SyncResult\n */\nexport interface SyncResult {\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof SyncResult\n     */\n    elapsed?: number;\n    /**\n     * \n     * @type {Array<FailedUser>}\n     * @memberof SyncResult\n     */\n    failedUsers?: Array<FailedUser>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof SyncResult\n     */\n    missingUserIds?: Array<number>;\n    /**\n     * \n     * @type {Date}\n     * @memberof SyncResult\n     */\n    started?: Date;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof SyncResult\n     */\n    updatedUserIds?: Array<number>;\n}\n\n/**\n * Check if a given object implements the SyncResult interface.\n */\nexport function instanceOfSyncResult(value: object): value is SyncResult {\n    return true;\n}\n\nexport function SyncResultFromJSON(json: any): SyncResult {\n    return SyncResultFromJSONTyped(json, false);\n}\n\nexport function SyncResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'elapsed': json['Elapsed'] == null ? undefined : json['Elapsed'],\n        'failedUsers': json['FailedUsers'] == null ? undefined : ((json['FailedUsers'] as Array<any>).map(FailedUserFromJSON)),\n        'missingUserIds': json['MissingUserIds'] == null ? undefined : json['MissingUserIds'],\n        'started': json['Started'] == null ? undefined : (new Date(json['Started'])),\n        'updatedUserIds': json['UpdatedUserIds'] == null ? undefined : json['UpdatedUserIds'],\n    };\n}\n\nexport function SyncResultToJSON(json: any): SyncResult {\n    return SyncResultToJSONTyped(json, false);\n}\n\nexport function SyncResultToJSONTyped(value?: SyncResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Elapsed': value['elapsed'],\n        'FailedUsers': value['failedUsers'] == null ? undefined : ((value['failedUsers'] as Array<any>).map(FailedUserToJSON)),\n        'MissingUserIds': value['missingUserIds'],\n        'Started': value['started'] == null ? undefined : ((value['started']).toISOString()),\n        'UpdatedUserIds': value['updatedUserIds'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SyncResult } from './SyncResult';\nimport {\n    SyncResultFromJSON,\n    SyncResultFromJSONTyped,\n    SyncResultToJSON,\n    SyncResultToJSONTyped,\n} from './SyncResult';\n\n/**\n * ActiveSyncStatusDTO holds the information for LDAP background Sync\n * @export\n * @interface ActiveSyncStatusDTO\n */\nexport interface ActiveSyncStatusDTO {\n    /**\n     * \n     * @type {boolean}\n     * @memberof ActiveSyncStatusDTO\n     */\n    enabled?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof ActiveSyncStatusDTO\n     */\n    nextSync?: Date;\n    /**\n     * \n     * @type {SyncResult}\n     * @memberof ActiveSyncStatusDTO\n     */\n    prevSync?: SyncResult;\n    /**\n     * \n     * @type {string}\n     * @memberof ActiveSyncStatusDTO\n     */\n    schedule?: string;\n}\n\n/**\n * Check if a given object implements the ActiveSyncStatusDTO interface.\n */\nexport function instanceOfActiveSyncStatusDTO(value: object): value is ActiveSyncStatusDTO {\n    return true;\n}\n\nexport function ActiveSyncStatusDTOFromJSON(json: any): ActiveSyncStatusDTO {\n    return ActiveSyncStatusDTOFromJSONTyped(json, false);\n}\n\nexport function ActiveSyncStatusDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveSyncStatusDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'enabled': json['enabled'] == null ? undefined : json['enabled'],\n        'nextSync': json['nextSync'] == null ? undefined : (new Date(json['nextSync'])),\n        'prevSync': json['prevSync'] == null ? undefined : SyncResultFromJSON(json['prevSync']),\n        'schedule': json['schedule'] == null ? undefined : json['schedule'],\n    };\n}\n\nexport function ActiveSyncStatusDTOToJSON(json: any): ActiveSyncStatusDTO {\n    return ActiveSyncStatusDTOToJSONTyped(json, false);\n}\n\nexport function ActiveSyncStatusDTOToJSONTyped(value?: ActiveSyncStatusDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'enabled': value['enabled'],\n        'nextSync': value['nextSync'] == null ? undefined : ((value['nextSync']).toISOString()),\n        'prevSync': SyncResultToJSON(value['prevSync']),\n        'schedule': value['schedule'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ActiveUserStats\n */\nexport interface ActiveUserStats {\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveUserStats\n     */\n    activeAdminsAndEditors?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveUserStats\n     */\n    activeAnonymousDevices?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveUserStats\n     */\n    activeUsers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ActiveUserStats\n     */\n    activeViewers?: number;\n}\n\n/**\n * Check if a given object implements the ActiveUserStats interface.\n */\nexport function instanceOfActiveUserStats(value: object): value is ActiveUserStats {\n    return true;\n}\n\nexport function ActiveUserStatsFromJSON(json: any): ActiveUserStats {\n    return ActiveUserStatsFromJSONTyped(json, false);\n}\n\nexport function ActiveUserStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveUserStats {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'activeAdminsAndEditors': json['active_admins_and_editors'] == null ? undefined : json['active_admins_and_editors'],\n        'activeAnonymousDevices': json['active_anonymous_devices'] == null ? undefined : json['active_anonymous_devices'],\n        'activeUsers': json['active_users'] == null ? undefined : json['active_users'],\n        'activeViewers': json['active_viewers'] == null ? undefined : json['active_viewers'],\n    };\n}\n\nexport function ActiveUserStatsToJSON(json: any): ActiveUserStats {\n    return ActiveUserStatsToJSONTyped(json, false);\n}\n\nexport function ActiveUserStatsToJSONTyped(value?: ActiveUserStats | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'active_admins_and_editors': value['activeAdminsAndEditors'],\n        'active_anonymous_devices': value['activeAnonymousDevices'],\n        'active_users': value['activeUsers'],\n        'active_viewers': value['activeViewers'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddAPIKeyCommand\n */\nexport interface AddAPIKeyCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof AddAPIKeyCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddAPIKeyCommand\n     */\n    role?: AddAPIKeyCommandRoleEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof AddAPIKeyCommand\n     */\n    secondsToLive?: number;\n}\n\n\n/**\n * @export\n */\nexport const AddAPIKeyCommandRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type AddAPIKeyCommandRoleEnum = typeof AddAPIKeyCommandRoleEnum[keyof typeof AddAPIKeyCommandRoleEnum];\n\n\n/**\n * Check if a given object implements the AddAPIKeyCommand interface.\n */\nexport function instanceOfAddAPIKeyCommand(value: object): value is AddAPIKeyCommand {\n    return true;\n}\n\nexport function AddAPIKeyCommandFromJSON(json: any): AddAPIKeyCommand {\n    return AddAPIKeyCommandFromJSONTyped(json, false);\n}\n\nexport function AddAPIKeyCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddAPIKeyCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'secondsToLive': json['secondsToLive'] == null ? undefined : json['secondsToLive'],\n    };\n}\n\nexport function AddAPIKeyCommandToJSON(json: any): AddAPIKeyCommand {\n    return AddAPIKeyCommandToJSONTyped(json, false);\n}\n\nexport function AddAPIKeyCommandToJSONTyped(value?: AddAPIKeyCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'role': value['role'],\n        'secondsToLive': value['secondsToLive'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DataSource\n */\nexport interface DataSource {\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    access?: string;\n    /**\n     * Metadata contains user accesses for a given resource\n     * Ex: map[string]bool{\"create\":true, \"delete\": true}\n     * @type {{ [key: string]: boolean; }}\n     * @memberof DataSource\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSource\n     */\n    basicAuth?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    basicAuthUser?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    database?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DataSource\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSource\n     */\n    isDefault?: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof DataSource\n     */\n    jsonData?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DataSource\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSource\n     */\n    readOnly?: boolean;\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof DataSource\n     */\n    secureJsonFields?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    typeLogoUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    uid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSource\n     */\n    user?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DataSource\n     */\n    version?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSource\n     */\n    withCredentials?: boolean;\n}\n\n/**\n * Check if a given object implements the DataSource interface.\n */\nexport function instanceOfDataSource(value: object): value is DataSource {\n    return true;\n}\n\nexport function DataSourceFromJSON(json: any): DataSource {\n    return DataSourceFromJSONTyped(json, false);\n}\n\nexport function DataSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSource {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'access': json['access'] == null ? undefined : json['access'],\n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'basicAuth': json['basicAuth'] == null ? undefined : json['basicAuth'],\n        'basicAuthUser': json['basicAuthUser'] == null ? undefined : json['basicAuthUser'],\n        'database': json['database'] == null ? undefined : json['database'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],\n        'jsonData': json['jsonData'] == null ? undefined : json['jsonData'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],\n        'secureJsonFields': json['secureJsonFields'] == null ? undefined : json['secureJsonFields'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'typeLogoUrl': json['typeLogoUrl'] == null ? undefined : json['typeLogoUrl'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'user': json['user'] == null ? undefined : json['user'],\n        'version': json['version'] == null ? undefined : json['version'],\n        'withCredentials': json['withCredentials'] == null ? undefined : json['withCredentials'],\n    };\n}\n\nexport function DataSourceToJSON(json: any): DataSource {\n    return DataSourceToJSONTyped(json, false);\n}\n\nexport function DataSourceToJSONTyped(value?: DataSource | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'access': value['access'],\n        'accessControl': value['accessControl'],\n        'basicAuth': value['basicAuth'],\n        'basicAuthUser': value['basicAuthUser'],\n        'database': value['database'],\n        'id': value['id'],\n        'isDefault': value['isDefault'],\n        'jsonData': value['jsonData'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'readOnly': value['readOnly'],\n        'secureJsonFields': value['secureJsonFields'],\n        'type': value['type'],\n        'typeLogoUrl': value['typeLogoUrl'],\n        'uid': value['uid'],\n        'url': value['url'],\n        'user': value['user'],\n        'version': value['version'],\n        'withCredentials': value['withCredentials'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DataSource } from './DataSource';\nimport {\n    DataSourceFromJSON,\n    DataSourceFromJSONTyped,\n    DataSourceToJSON,\n    DataSourceToJSONTyped,\n} from './DataSource';\n\n/**\n * \n * @export\n * @interface AddDataSource200Response\n */\nexport interface AddDataSource200Response {\n    /**\n     * \n     * @type {DataSource}\n     * @memberof AddDataSource200Response\n     */\n    datasource: DataSource;\n    /**\n     * ID Identifier of the new data source.\n     * @type {number}\n     * @memberof AddDataSource200Response\n     */\n    id: number;\n    /**\n     * Message Message of the deleted dashboard.\n     * @type {string}\n     * @memberof AddDataSource200Response\n     */\n    message: string;\n    /**\n     * Name of the new data source.\n     * @type {string}\n     * @memberof AddDataSource200Response\n     */\n    name: string;\n}\n\n/**\n * Check if a given object implements the AddDataSource200Response interface.\n */\nexport function instanceOfAddDataSource200Response(value: object): value is AddDataSource200Response {\n    if (!('datasource' in value) || value['datasource'] === undefined) return false;\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('message' in value) || value['message'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    return true;\n}\n\nexport function AddDataSource200ResponseFromJSON(json: any): AddDataSource200Response {\n    return AddDataSource200ResponseFromJSONTyped(json, false);\n}\n\nexport function AddDataSource200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddDataSource200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'datasource': DataSourceFromJSON(json['datasource']),\n        'id': json['id'],\n        'message': json['message'],\n        'name': json['name'],\n    };\n}\n\nexport function AddDataSource200ResponseToJSON(json: any): AddDataSource200Response {\n    return AddDataSource200ResponseToJSONTyped(json, false);\n}\n\nexport function AddDataSource200ResponseToJSONTyped(value?: AddDataSource200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'datasource': DataSourceToJSON(value['datasource']),\n        'id': value['id'],\n        'message': value['message'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Also acts as api DTO\n * @export\n * @interface AddDataSourceCommand\n */\nexport interface AddDataSourceCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    access?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AddDataSourceCommand\n     */\n    basicAuth?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    basicAuthUser?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    database?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AddDataSourceCommand\n     */\n    isDefault?: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof AddDataSourceCommand\n     */\n    jsonData?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof AddDataSourceCommand\n     */\n    secureJsonData?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    uid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddDataSourceCommand\n     */\n    user?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AddDataSourceCommand\n     */\n    withCredentials?: boolean;\n}\n\n/**\n * Check if a given object implements the AddDataSourceCommand interface.\n */\nexport function instanceOfAddDataSourceCommand(value: object): value is AddDataSourceCommand {\n    return true;\n}\n\nexport function AddDataSourceCommandFromJSON(json: any): AddDataSourceCommand {\n    return AddDataSourceCommandFromJSONTyped(json, false);\n}\n\nexport function AddDataSourceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddDataSourceCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'access': json['access'] == null ? undefined : json['access'],\n        'basicAuth': json['basicAuth'] == null ? undefined : json['basicAuth'],\n        'basicAuthUser': json['basicAuthUser'] == null ? undefined : json['basicAuthUser'],\n        'database': json['database'] == null ? undefined : json['database'],\n        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],\n        'jsonData': json['jsonData'] == null ? undefined : json['jsonData'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'secureJsonData': json['secureJsonData'] == null ? undefined : json['secureJsonData'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'user': json['user'] == null ? undefined : json['user'],\n        'withCredentials': json['withCredentials'] == null ? undefined : json['withCredentials'],\n    };\n}\n\nexport function AddDataSourceCommandToJSON(json: any): AddDataSourceCommand {\n    return AddDataSourceCommandToJSONTyped(json, false);\n}\n\nexport function AddDataSourceCommandToJSONTyped(value?: AddDataSourceCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'access': value['access'],\n        'basicAuth': value['basicAuth'],\n        'basicAuthUser': value['basicAuthUser'],\n        'database': value['database'],\n        'isDefault': value['isDefault'],\n        'jsonData': value['jsonData'],\n        'name': value['name'],\n        'secureJsonData': value['secureJsonData'],\n        'type': value['type'],\n        'uid': value['uid'],\n        'url': value['url'],\n        'user': value['user'],\n        'withCredentials': value['withCredentials'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddInviteForm\n */\nexport interface AddInviteForm {\n    /**\n     * \n     * @type {string}\n     * @memberof AddInviteForm\n     */\n    loginOrEmail?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddInviteForm\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddInviteForm\n     */\n    role?: AddInviteFormRoleEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AddInviteForm\n     */\n    sendEmail?: boolean;\n}\n\n\n/**\n * @export\n */\nexport const AddInviteFormRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type AddInviteFormRoleEnum = typeof AddInviteFormRoleEnum[keyof typeof AddInviteFormRoleEnum];\n\n\n/**\n * Check if a given object implements the AddInviteForm interface.\n */\nexport function instanceOfAddInviteForm(value: object): value is AddInviteForm {\n    return true;\n}\n\nexport function AddInviteFormFromJSON(json: any): AddInviteForm {\n    return AddInviteFormFromJSONTyped(json, false);\n}\n\nexport function AddInviteFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddInviteForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'loginOrEmail': json['loginOrEmail'] == null ? undefined : json['loginOrEmail'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'sendEmail': json['sendEmail'] == null ? undefined : json['sendEmail'],\n    };\n}\n\nexport function AddInviteFormToJSON(json: any): AddInviteForm {\n    return AddInviteFormToJSONTyped(json, false);\n}\n\nexport function AddInviteFormToJSONTyped(value?: AddInviteForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'loginOrEmail': value['loginOrEmail'],\n        'name': value['name'],\n        'role': value['role'],\n        'sendEmail': value['sendEmail'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddOrgUserCommand\n */\nexport interface AddOrgUserCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof AddOrgUserCommand\n     */\n    loginOrEmail?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AddOrgUserCommand\n     */\n    role?: AddOrgUserCommandRoleEnum;\n}\n\n\n/**\n * @export\n */\nexport const AddOrgUserCommandRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type AddOrgUserCommandRoleEnum = typeof AddOrgUserCommandRoleEnum[keyof typeof AddOrgUserCommandRoleEnum];\n\n\n/**\n * Check if a given object implements the AddOrgUserCommand interface.\n */\nexport function instanceOfAddOrgUserCommand(value: object): value is AddOrgUserCommand {\n    return true;\n}\n\nexport function AddOrgUserCommandFromJSON(json: any): AddOrgUserCommand {\n    return AddOrgUserCommandFromJSONTyped(json, false);\n}\n\nexport function AddOrgUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOrgUserCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'loginOrEmail': json['loginOrEmail'] == null ? undefined : json['loginOrEmail'],\n        'role': json['role'] == null ? undefined : json['role'],\n    };\n}\n\nexport function AddOrgUserCommandToJSON(json: any): AddOrgUserCommand {\n    return AddOrgUserCommandToJSONTyped(json, false);\n}\n\nexport function AddOrgUserCommandToJSONTyped(value?: AddOrgUserCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'loginOrEmail': value['loginOrEmail'],\n        'role': value['role'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddServiceAccountTokenCommand\n */\nexport interface AddServiceAccountTokenCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof AddServiceAccountTokenCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AddServiceAccountTokenCommand\n     */\n    secondsToLive?: number;\n}\n\n/**\n * Check if a given object implements the AddServiceAccountTokenCommand interface.\n */\nexport function instanceOfAddServiceAccountTokenCommand(value: object): value is AddServiceAccountTokenCommand {\n    return true;\n}\n\nexport function AddServiceAccountTokenCommandFromJSON(json: any): AddServiceAccountTokenCommand {\n    return AddServiceAccountTokenCommandFromJSONTyped(json, false);\n}\n\nexport function AddServiceAccountTokenCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddServiceAccountTokenCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'secondsToLive': json['secondsToLive'] == null ? undefined : json['secondsToLive'],\n    };\n}\n\nexport function AddServiceAccountTokenCommandToJSON(json: any): AddServiceAccountTokenCommand {\n    return AddServiceAccountTokenCommandToJSONTyped(json, false);\n}\n\nexport function AddServiceAccountTokenCommandToJSONTyped(value?: AddServiceAccountTokenCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'secondsToLive': value['secondsToLive'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddTeamMemberCommand\n */\nexport interface AddTeamMemberCommand {\n    /**\n     * \n     * @type {number}\n     * @memberof AddTeamMemberCommand\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the AddTeamMemberCommand interface.\n */\nexport function instanceOfAddTeamMemberCommand(value: object): value is AddTeamMemberCommand {\n    return true;\n}\n\nexport function AddTeamMemberCommandFromJSON(json: any): AddTeamMemberCommand {\n    return AddTeamMemberCommandFromJSONTyped(json, false);\n}\n\nexport function AddTeamMemberCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddTeamMemberCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function AddTeamMemberCommandToJSON(json: any): AddTeamMemberCommand {\n    return AddTeamMemberCommandToJSONTyped(json, false);\n}\n\nexport function AddTeamMemberCommandToJSONTyped(value?: AddTeamMemberCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddTeamRoleCommand\n */\nexport interface AddTeamRoleCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof AddTeamRoleCommand\n     */\n    roleUid?: string;\n}\n\n/**\n * Check if a given object implements the AddTeamRoleCommand interface.\n */\nexport function instanceOfAddTeamRoleCommand(value: object): value is AddTeamRoleCommand {\n    return true;\n}\n\nexport function AddTeamRoleCommandFromJSON(json: any): AddTeamRoleCommand {\n    return AddTeamRoleCommandFromJSONTyped(json, false);\n}\n\nexport function AddTeamRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddTeamRoleCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'roleUid': json['roleUid'] == null ? undefined : json['roleUid'],\n    };\n}\n\nexport function AddTeamRoleCommandToJSON(json: any): AddTeamRoleCommand {\n    return AddTeamRoleCommandToJSONTyped(json, false);\n}\n\nexport function AddTeamRoleCommandToJSONTyped(value?: AddTeamRoleCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'roleUid': value['roleUid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AddUserRoleCommand\n */\nexport interface AddUserRoleCommand {\n    /**\n     * \n     * @type {boolean}\n     * @memberof AddUserRoleCommand\n     */\n    global?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof AddUserRoleCommand\n     */\n    roleUid?: string;\n}\n\n/**\n * Check if a given object implements the AddUserRoleCommand interface.\n */\nexport function instanceOfAddUserRoleCommand(value: object): value is AddUserRoleCommand {\n    return true;\n}\n\nexport function AddUserRoleCommandFromJSON(json: any): AddUserRoleCommand {\n    return AddUserRoleCommandFromJSONTyped(json, false);\n}\n\nexport function AddUserRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddUserRoleCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'global': json['global'] == null ? undefined : json['global'],\n        'roleUid': json['roleUid'] == null ? undefined : json['roleUid'],\n    };\n}\n\nexport function AddUserRoleCommandToJSON(json: any): AddUserRoleCommand {\n    return AddUserRoleCommandToJSONTyped(json, false);\n}\n\nexport function AddUserRoleCommandToJSONTyped(value?: AddUserRoleCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'global': value['global'],\n        'roleUid': value['roleUid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Address\n */\nexport interface Address {\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    address1?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    address2?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    city?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    country?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    state?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Address\n     */\n    zipCode?: string;\n}\n\n/**\n * Check if a given object implements the Address interface.\n */\nexport function instanceOfAddress(value: object): value is Address {\n    return true;\n}\n\nexport function AddressFromJSON(json: any): Address {\n    return AddressFromJSONTyped(json, false);\n}\n\nexport function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'address1': json['address1'] == null ? undefined : json['address1'],\n        'address2': json['address2'] == null ? undefined : json['address2'],\n        'city': json['city'] == null ? undefined : json['city'],\n        'country': json['country'] == null ? undefined : json['country'],\n        'state': json['state'] == null ? undefined : json['state'],\n        'zipCode': json['zipCode'] == null ? undefined : json['zipCode'],\n    };\n}\n\nexport function AddressToJSON(json: any): Address {\n    return AddressToJSONTyped(json, false);\n}\n\nexport function AddressToJSONTyped(value?: Address | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'address1': value['address1'],\n        'address2': value['address2'],\n        'city': value['city'],\n        'country': value['country'],\n        'state': value['state'],\n        'zipCode': value['zipCode'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AdminCreateUserForm\n */\nexport interface AdminCreateUserForm {\n    /**\n     * \n     * @type {string}\n     * @memberof AdminCreateUserForm\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AdminCreateUserForm\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AdminCreateUserForm\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminCreateUserForm\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AdminCreateUserForm\n     */\n    password?: string;\n}\n\n/**\n * Check if a given object implements the AdminCreateUserForm interface.\n */\nexport function instanceOfAdminCreateUserForm(value: object): value is AdminCreateUserForm {\n    return true;\n}\n\nexport function AdminCreateUserFormFromJSON(json: any): AdminCreateUserForm {\n    return AdminCreateUserFormFromJSONTyped(json, false);\n}\n\nexport function AdminCreateUserFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminCreateUserForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'] == null ? undefined : json['email'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'password': json['password'] == null ? undefined : json['password'],\n    };\n}\n\nexport function AdminCreateUserFormToJSON(json: any): AdminCreateUserForm {\n    return AdminCreateUserFormToJSONTyped(json, false);\n}\n\nexport function AdminCreateUserFormToJSONTyped(value?: AdminCreateUserForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'email': value['email'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'password': value['password'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AdminCreateUserResponse\n */\nexport interface AdminCreateUserResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof AdminCreateUserResponse\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AdminCreateUserResponse\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the AdminCreateUserResponse interface.\n */\nexport function instanceOfAdminCreateUserResponse(value: object): value is AdminCreateUserResponse {\n    return true;\n}\n\nexport function AdminCreateUserResponseFromJSON(json: any): AdminCreateUserResponse {\n    return AdminCreateUserResponseFromJSONTyped(json, false);\n}\n\nexport function AdminCreateUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminCreateUserResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function AdminCreateUserResponseToJSON(json: any): AdminCreateUserResponse {\n    return AdminCreateUserResponseToJSONTyped(json, false);\n}\n\nexport function AdminCreateUserResponseToJSONTyped(value?: AdminCreateUserResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AdminStats\n */\nexport interface AdminStats {\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeAdmins?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeDevices?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeEditors?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeSessions?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeUsers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    activeViewers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    admins?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    alerts?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dailyActiveAdmins?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dailyActiveEditors?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dailyActiveSessions?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dailyActiveUsers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dailyActiveViewers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    dashboards?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    datasources?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    editors?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    monthlyActiveUsers?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    orgs?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    playlists?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    snapshots?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    stars?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    tags?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    users?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AdminStats\n     */\n    viewers?: number;\n}\n\n/**\n * Check if a given object implements the AdminStats interface.\n */\nexport function instanceOfAdminStats(value: object): value is AdminStats {\n    return true;\n}\n\nexport function AdminStatsFromJSON(json: any): AdminStats {\n    return AdminStatsFromJSONTyped(json, false);\n}\n\nexport function AdminStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminStats {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'activeAdmins': json['activeAdmins'] == null ? undefined : json['activeAdmins'],\n        'activeDevices': json['activeDevices'] == null ? undefined : json['activeDevices'],\n        'activeEditors': json['activeEditors'] == null ? undefined : json['activeEditors'],\n        'activeSessions': json['activeSessions'] == null ? undefined : json['activeSessions'],\n        'activeUsers': json['activeUsers'] == null ? undefined : json['activeUsers'],\n        'activeViewers': json['activeViewers'] == null ? undefined : json['activeViewers'],\n        'admins': json['admins'] == null ? undefined : json['admins'],\n        'alerts': json['alerts'] == null ? undefined : json['alerts'],\n        'dailyActiveAdmins': json['dailyActiveAdmins'] == null ? undefined : json['dailyActiveAdmins'],\n        'dailyActiveEditors': json['dailyActiveEditors'] == null ? undefined : json['dailyActiveEditors'],\n        'dailyActiveSessions': json['dailyActiveSessions'] == null ? undefined : json['dailyActiveSessions'],\n        'dailyActiveUsers': json['dailyActiveUsers'] == null ? undefined : json['dailyActiveUsers'],\n        'dailyActiveViewers': json['dailyActiveViewers'] == null ? undefined : json['dailyActiveViewers'],\n        'dashboards': json['dashboards'] == null ? undefined : json['dashboards'],\n        'datasources': json['datasources'] == null ? undefined : json['datasources'],\n        'editors': json['editors'] == null ? undefined : json['editors'],\n        'monthlyActiveUsers': json['monthlyActiveUsers'] == null ? undefined : json['monthlyActiveUsers'],\n        'orgs': json['orgs'] == null ? undefined : json['orgs'],\n        'playlists': json['playlists'] == null ? undefined : json['playlists'],\n        'snapshots': json['snapshots'] == null ? undefined : json['snapshots'],\n        'stars': json['stars'] == null ? undefined : json['stars'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'users': json['users'] == null ? undefined : json['users'],\n        'viewers': json['viewers'] == null ? undefined : json['viewers'],\n    };\n}\n\nexport function AdminStatsToJSON(json: any): AdminStats {\n    return AdminStatsToJSONTyped(json, false);\n}\n\nexport function AdminStatsToJSONTyped(value?: AdminStats | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'activeAdmins': value['activeAdmins'],\n        'activeDevices': value['activeDevices'],\n        'activeEditors': value['activeEditors'],\n        'activeSessions': value['activeSessions'],\n        'activeUsers': value['activeUsers'],\n        'activeViewers': value['activeViewers'],\n        'admins': value['admins'],\n        'alerts': value['alerts'],\n        'dailyActiveAdmins': value['dailyActiveAdmins'],\n        'dailyActiveEditors': value['dailyActiveEditors'],\n        'dailyActiveSessions': value['dailyActiveSessions'],\n        'dailyActiveUsers': value['dailyActiveUsers'],\n        'dailyActiveViewers': value['dailyActiveViewers'],\n        'dashboards': value['dashboards'],\n        'datasources': value['datasources'],\n        'editors': value['editors'],\n        'monthlyActiveUsers': value['monthlyActiveUsers'],\n        'orgs': value['orgs'],\n        'playlists': value['playlists'],\n        'snapshots': value['snapshots'],\n        'stars': value['stars'],\n        'tags': value['tags'],\n        'users': value['users'],\n        'viewers': value['viewers'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AdminUpdateUserPasswordForm\n */\nexport interface AdminUpdateUserPasswordForm {\n    /**\n     * \n     * @type {string}\n     * @memberof AdminUpdateUserPasswordForm\n     */\n    password?: string;\n}\n\n/**\n * Check if a given object implements the AdminUpdateUserPasswordForm interface.\n */\nexport function instanceOfAdminUpdateUserPasswordForm(value: object): value is AdminUpdateUserPasswordForm {\n    return true;\n}\n\nexport function AdminUpdateUserPasswordFormFromJSON(json: any): AdminUpdateUserPasswordForm {\n    return AdminUpdateUserPasswordFormFromJSONTyped(json, false);\n}\n\nexport function AdminUpdateUserPasswordFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUpdateUserPasswordForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'password': json['password'] == null ? undefined : json['password'],\n    };\n}\n\nexport function AdminUpdateUserPasswordFormToJSON(json: any): AdminUpdateUserPasswordForm {\n    return AdminUpdateUserPasswordFormToJSONTyped(json, false);\n}\n\nexport function AdminUpdateUserPasswordFormToJSONTyped(value?: AdminUpdateUserPasswordForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'password': value['password'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AdminUpdateUserPermissionsForm\n */\nexport interface AdminUpdateUserPermissionsForm {\n    /**\n     * \n     * @type {boolean}\n     * @memberof AdminUpdateUserPermissionsForm\n     */\n    isGrafanaAdmin?: boolean;\n}\n\n/**\n * Check if a given object implements the AdminUpdateUserPermissionsForm interface.\n */\nexport function instanceOfAdminUpdateUserPermissionsForm(value: object): value is AdminUpdateUserPermissionsForm {\n    return true;\n}\n\nexport function AdminUpdateUserPermissionsFormFromJSON(json: any): AdminUpdateUserPermissionsForm {\n    return AdminUpdateUserPermissionsFormFromJSONTyped(json, false);\n}\n\nexport function AdminUpdateUserPermissionsFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminUpdateUserPermissionsForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'isGrafanaAdmin': json['isGrafanaAdmin'] == null ? undefined : json['isGrafanaAdmin'],\n    };\n}\n\nexport function AdminUpdateUserPermissionsFormToJSON(json: any): AdminUpdateUserPermissionsForm {\n    return AdminUpdateUserPermissionsFormToJSONTyped(json, false);\n}\n\nexport function AdminUpdateUserPermissionsFormToJSONTyped(value?: AdminUpdateUserPermissionsForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'isGrafanaAdmin': value['isGrafanaAdmin'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Alert alert\n * @export\n * @interface Alert\n */\nexport interface Alert {\n    /**\n     * generator URL\n     * Format: uri\n     * @type {string}\n     * @memberof Alert\n     */\n    generatorURL?: string;\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof Alert\n     */\n    labels: { [key: string]: string; };\n}\n\n/**\n * Check if a given object implements the Alert interface.\n */\nexport function instanceOfAlert(value: object): value is Alert {\n    if (!('labels' in value) || value['labels'] === undefined) return false;\n    return true;\n}\n\nexport function AlertFromJSON(json: any): Alert {\n    return AlertFromJSONTyped(json, false);\n}\n\nexport function AlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alert {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'generatorURL': json['generatorURL'] == null ? undefined : json['generatorURL'],\n        'labels': json['labels'],\n    };\n}\n\nexport function AlertToJSON(json: any): Alert {\n    return AlertToJSONTyped(json, false);\n}\n\nexport function AlertToJSONTyped(value?: Alert | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'generatorURL': value['generatorURL'],\n        'labels': value['labels'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Alert } from './Alert';\nimport {\n    AlertFromJSON,\n    AlertFromJSONTyped,\n    AlertToJSON,\n    AlertToJSONTyped,\n} from './Alert';\n\n/**\n * \n * @export\n * @interface AlertDiscovery\n */\nexport interface AlertDiscovery {\n    /**\n     * \n     * @type {Array<Alert>}\n     * @memberof AlertDiscovery\n     */\n    alerts: Array<Alert>;\n}\n\n/**\n * Check if a given object implements the AlertDiscovery interface.\n */\nexport function instanceOfAlertDiscovery(value: object): value is AlertDiscovery {\n    if (!('alerts' in value) || value['alerts'] === undefined) return false;\n    return true;\n}\n\nexport function AlertDiscoveryFromJSON(json: any): AlertDiscovery {\n    return AlertDiscoveryFromJSONTyped(json, false);\n}\n\nexport function AlertDiscoveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertDiscovery {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alerts': ((json['alerts'] as Array<any>).map(AlertFromJSON)),\n    };\n}\n\nexport function AlertDiscoveryToJSON(json: any): AlertDiscovery {\n    return AlertDiscoveryToJSONTyped(json, false);\n}\n\nexport function AlertDiscoveryToJSONTyped(value?: AlertDiscovery | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alerts': ((value['alerts'] as Array<any>).map(AlertToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * AlertStatus alert status\n * @export\n * @interface AlertStatus\n */\nexport interface AlertStatus {\n    /**\n     * inhibited by\n     * @type {Array<string>}\n     * @memberof AlertStatus\n     */\n    inhibitedBy: Array<string>;\n    /**\n     * silenced by\n     * @type {Array<string>}\n     * @memberof AlertStatus\n     */\n    silencedBy: Array<string>;\n    /**\n     * state\n     * @type {string}\n     * @memberof AlertStatus\n     */\n    state: AlertStatusStateEnum;\n}\n\n\n/**\n * @export\n */\nexport const AlertStatusStateEnum = {\n    UnprocessedActiveSuppressed: '[unprocessed active suppressed]'\n} as const;\nexport type AlertStatusStateEnum = typeof AlertStatusStateEnum[keyof typeof AlertStatusStateEnum];\n\n\n/**\n * Check if a given object implements the AlertStatus interface.\n */\nexport function instanceOfAlertStatus(value: object): value is AlertStatus {\n    if (!('inhibitedBy' in value) || value['inhibitedBy'] === undefined) return false;\n    if (!('silencedBy' in value) || value['silencedBy'] === undefined) return false;\n    if (!('state' in value) || value['state'] === undefined) return false;\n    return true;\n}\n\nexport function AlertStatusFromJSON(json: any): AlertStatus {\n    return AlertStatusFromJSONTyped(json, false);\n}\n\nexport function AlertStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'inhibitedBy': json['inhibitedBy'],\n        'silencedBy': json['silencedBy'],\n        'state': json['state'],\n    };\n}\n\nexport function AlertStatusToJSON(json: any): AlertStatus {\n    return AlertStatusToJSONTyped(json, false);\n}\n\nexport function AlertStatusToJSONTyped(value?: AlertStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'inhibitedBy': value['inhibitedBy'],\n        'silencedBy': value['silencedBy'],\n        'state': value['state'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Receiver receiver\n * @export\n * @interface Receiver\n */\nexport interface Receiver {\n    /**\n     * name\n     * @type {string}\n     * @memberof Receiver\n     */\n    name: string;\n}\n\n/**\n * Check if a given object implements the Receiver interface.\n */\nexport function instanceOfReceiver(value: object): value is Receiver {\n    if (!('name' in value) || value['name'] === undefined) return false;\n    return true;\n}\n\nexport function ReceiverFromJSON(json: any): Receiver {\n    return ReceiverFromJSONTyped(json, false);\n}\n\nexport function ReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): Receiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'],\n    };\n}\n\nexport function ReceiverToJSON(json: any): Receiver {\n    return ReceiverToJSONTyped(json, false);\n}\n\nexport function ReceiverToJSONTyped(value?: Receiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertStatus } from './AlertStatus';\nimport {\n    AlertStatusFromJSON,\n    AlertStatusFromJSONTyped,\n    AlertStatusToJSON,\n    AlertStatusToJSONTyped,\n} from './AlertStatus';\nimport type { Receiver } from './Receiver';\nimport {\n    ReceiverFromJSON,\n    ReceiverFromJSONTyped,\n    ReceiverToJSON,\n    ReceiverToJSONTyped,\n} from './Receiver';\n\n/**\n * GettableAlert gettable alert\n * @export\n * @interface GettableAlert\n */\nexport interface GettableAlert {\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof GettableAlert\n     */\n    annotations: { [key: string]: string; };\n    /**\n     * ends at\n     * @type {Date}\n     * @memberof GettableAlert\n     */\n    endsAt: Date;\n    /**\n     * fingerprint\n     * @type {string}\n     * @memberof GettableAlert\n     */\n    fingerprint: string;\n    /**\n     * generator URL\n     * Format: uri\n     * @type {string}\n     * @memberof GettableAlert\n     */\n    generatorURL?: string;\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof GettableAlert\n     */\n    labels: { [key: string]: string; };\n    /**\n     * receivers\n     * @type {Array<Receiver>}\n     * @memberof GettableAlert\n     */\n    receivers: Array<Receiver>;\n    /**\n     * starts at\n     * @type {Date}\n     * @memberof GettableAlert\n     */\n    startsAt: Date;\n    /**\n     * \n     * @type {AlertStatus}\n     * @memberof GettableAlert\n     */\n    status: AlertStatus;\n    /**\n     * updated at\n     * @type {Date}\n     * @memberof GettableAlert\n     */\n    updatedAt: Date;\n}\n\n/**\n * Check if a given object implements the GettableAlert interface.\n */\nexport function instanceOfGettableAlert(value: object): value is GettableAlert {\n    if (!('annotations' in value) || value['annotations'] === undefined) return false;\n    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;\n    if (!('fingerprint' in value) || value['fingerprint'] === undefined) return false;\n    if (!('labels' in value) || value['labels'] === undefined) return false;\n    if (!('receivers' in value) || value['receivers'] === undefined) return false;\n    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;\n    if (!('status' in value) || value['status'] === undefined) return false;\n    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;\n    return true;\n}\n\nexport function GettableAlertFromJSON(json: any): GettableAlert {\n    return GettableAlertFromJSONTyped(json, false);\n}\n\nexport function GettableAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableAlert {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'],\n        'endsAt': (new Date(json['endsAt'])),\n        'fingerprint': json['fingerprint'],\n        'generatorURL': json['generatorURL'] == null ? undefined : json['generatorURL'],\n        'labels': json['labels'],\n        'receivers': ((json['receivers'] as Array<any>).map(ReceiverFromJSON)),\n        'startsAt': (new Date(json['startsAt'])),\n        'status': AlertStatusFromJSON(json['status']),\n        'updatedAt': (new Date(json['updatedAt'])),\n    };\n}\n\nexport function GettableAlertToJSON(json: any): GettableAlert {\n    return GettableAlertToJSONTyped(json, false);\n}\n\nexport function GettableAlertToJSONTyped(value?: GettableAlert | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'endsAt': ((value['endsAt']).toISOString()),\n        'fingerprint': value['fingerprint'],\n        'generatorURL': value['generatorURL'],\n        'labels': value['labels'],\n        'receivers': ((value['receivers'] as Array<any>).map(ReceiverToJSON)),\n        'startsAt': ((value['startsAt']).toISOString()),\n        'status': AlertStatusToJSON(value['status']),\n        'updatedAt': ((value['updatedAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableAlert } from './GettableAlert';\nimport {\n    GettableAlertFromJSON,\n    GettableAlertFromJSONTyped,\n    GettableAlertToJSON,\n    GettableAlertToJSONTyped,\n} from './GettableAlert';\nimport type { Receiver } from './Receiver';\nimport {\n    ReceiverFromJSON,\n    ReceiverFromJSONTyped,\n    ReceiverToJSON,\n    ReceiverToJSONTyped,\n} from './Receiver';\n\n/**\n * AlertGroup alert group\n * @export\n * @interface AlertGroup\n */\nexport interface AlertGroup {\n    /**\n     * alerts\n     * @type {Array<GettableAlert>}\n     * @memberof AlertGroup\n     */\n    alerts: Array<GettableAlert>;\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof AlertGroup\n     */\n    labels: { [key: string]: string; };\n    /**\n     * \n     * @type {Receiver}\n     * @memberof AlertGroup\n     */\n    receiver: Receiver;\n}\n\n/**\n * Check if a given object implements the AlertGroup interface.\n */\nexport function instanceOfAlertGroup(value: object): value is AlertGroup {\n    if (!('alerts' in value) || value['alerts'] === undefined) return false;\n    if (!('labels' in value) || value['labels'] === undefined) return false;\n    if (!('receiver' in value) || value['receiver'] === undefined) return false;\n    return true;\n}\n\nexport function AlertGroupFromJSON(json: any): AlertGroup {\n    return AlertGroupFromJSONTyped(json, false);\n}\n\nexport function AlertGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertGroup {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alerts': ((json['alerts'] as Array<any>).map(GettableAlertFromJSON)),\n        'labels': json['labels'],\n        'receiver': ReceiverFromJSON(json['receiver']),\n    };\n}\n\nexport function AlertGroupToJSON(json: any): AlertGroup {\n    return AlertGroupToJSONTyped(json, false);\n}\n\nexport function AlertGroupToJSONTyped(value?: AlertGroup | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alerts': ((value['alerts'] as Array<any>).map(GettableAlertToJSON)),\n        'labels': value['labels'],\n        'receiver': ReceiverToJSON(value['receiver']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertInstancesResponse\n */\nexport interface AlertInstancesResponse {\n    /**\n     * Instances is an array of arrow encoded dataframes\n     * each frame has a single row, and a column for each instance (alert identified by unique labels) with a boolean value (firing/not firing)\n     * @type {Array<Array<number>>}\n     * @memberof AlertInstancesResponse\n     */\n    instances?: Array<Array<number>>;\n}\n\n/**\n * Check if a given object implements the AlertInstancesResponse interface.\n */\nexport function instanceOfAlertInstancesResponse(value: object): value is AlertInstancesResponse {\n    return true;\n}\n\nexport function AlertInstancesResponseFromJSON(json: any): AlertInstancesResponse {\n    return AlertInstancesResponseFromJSONTyped(json, false);\n}\n\nexport function AlertInstancesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertInstancesResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'instances': json['instances'] == null ? undefined : json['instances'],\n    };\n}\n\nexport function AlertInstancesResponseToJSON(json: any): AlertInstancesResponse {\n    return AlertInstancesResponseToJSONTyped(json, false);\n}\n\nexport function AlertInstancesResponseToJSONTyped(value?: AlertInstancesResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'instances': value['instances'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertManager\n */\nexport interface AlertManager {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertManager\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the AlertManager interface.\n */\nexport function instanceOfAlertManager(value: object): value is AlertManager {\n    return true;\n}\n\nexport function AlertManagerFromJSON(json: any): AlertManager {\n    return AlertManagerFromJSONTyped(json, false);\n}\n\nexport function AlertManagerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertManager {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function AlertManagerToJSON(json: any): AlertManager {\n    return AlertManagerToJSONTyped(json, false);\n}\n\nexport function AlertManagerToJSONTyped(value?: AlertManager | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertManager } from './AlertManager';\nimport {\n    AlertManagerFromJSON,\n    AlertManagerFromJSONTyped,\n    AlertManagerToJSON,\n    AlertManagerToJSONTyped,\n} from './AlertManager';\n\n/**\n * \n * @export\n * @interface AlertManagersResult\n */\nexport interface AlertManagersResult {\n    /**\n     * \n     * @type {Array<AlertManager>}\n     * @memberof AlertManagersResult\n     */\n    activeAlertManagers?: Array<AlertManager>;\n    /**\n     * \n     * @type {Array<AlertManager>}\n     * @memberof AlertManagersResult\n     */\n    droppedAlertManagers?: Array<AlertManager>;\n}\n\n/**\n * Check if a given object implements the AlertManagersResult interface.\n */\nexport function instanceOfAlertManagersResult(value: object): value is AlertManagersResult {\n    return true;\n}\n\nexport function AlertManagersResultFromJSON(json: any): AlertManagersResult {\n    return AlertManagersResultFromJSONTyped(json, false);\n}\n\nexport function AlertManagersResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertManagersResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'activeAlertManagers': json['activeAlertManagers'] == null ? undefined : ((json['activeAlertManagers'] as Array<any>).map(AlertManagerFromJSON)),\n        'droppedAlertManagers': json['droppedAlertManagers'] == null ? undefined : ((json['droppedAlertManagers'] as Array<any>).map(AlertManagerFromJSON)),\n    };\n}\n\nexport function AlertManagersResultToJSON(json: any): AlertManagersResult {\n    return AlertManagersResultToJSONTyped(json, false);\n}\n\nexport function AlertManagersResultToJSONTyped(value?: AlertManagersResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'activeAlertManagers': value['activeAlertManagers'] == null ? undefined : ((value['activeAlertManagers'] as Array<any>).map(AlertManagerToJSON)),\n        'droppedAlertManagers': value['droppedAlertManagers'] == null ? undefined : ((value['droppedAlertManagers'] as Array<any>).map(AlertManagerToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * RelativeTimeRange is the per query start and end time\n * for requests.\n * @export\n * @interface RelativeTimeRange\n */\nexport interface RelativeTimeRange {\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof RelativeTimeRange\n     */\n    from?: number;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof RelativeTimeRange\n     */\n    to?: number;\n}\n\n/**\n * Check if a given object implements the RelativeTimeRange interface.\n */\nexport function instanceOfRelativeTimeRange(value: object): value is RelativeTimeRange {\n    return true;\n}\n\nexport function RelativeTimeRangeFromJSON(json: any): RelativeTimeRange {\n    return RelativeTimeRangeFromJSONTyped(json, false);\n}\n\nexport function RelativeTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelativeTimeRange {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'] == null ? undefined : json['from'],\n        'to': json['to'] == null ? undefined : json['to'],\n    };\n}\n\nexport function RelativeTimeRangeToJSON(json: any): RelativeTimeRange {\n    return RelativeTimeRangeToJSONTyped(json, false);\n}\n\nexport function RelativeTimeRangeToJSONTyped(value?: RelativeTimeRange | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'],\n        'to': value['to'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { RelativeTimeRange } from './RelativeTimeRange';\nimport {\n    RelativeTimeRangeFromJSON,\n    RelativeTimeRangeFromJSONTyped,\n    RelativeTimeRangeToJSON,\n    RelativeTimeRangeToJSONTyped,\n} from './RelativeTimeRange';\n\n/**\n * \n * @export\n * @interface AlertQuery\n */\nexport interface AlertQuery {\n    /**\n     * Grafana data source unique identifier; it should be '__expr__' for a Server Side Expression operation.\n     * @type {string}\n     * @memberof AlertQuery\n     */\n    datasourceUid?: string;\n    /**\n     * JSON is the raw JSON query and includes the above properties as well as custom properties.\n     * @type {object}\n     * @memberof AlertQuery\n     */\n    model?: object;\n    /**\n     * QueryType is an optional identifier for the type of query.\n     * It can be used to distinguish different types of queries.\n     * @type {string}\n     * @memberof AlertQuery\n     */\n    queryType?: string;\n    /**\n     * RefID is the unique identifier of the query, set by the frontend call.\n     * @type {string}\n     * @memberof AlertQuery\n     */\n    refId?: string;\n    /**\n     * \n     * @type {RelativeTimeRange}\n     * @memberof AlertQuery\n     */\n    relativeTimeRange?: RelativeTimeRange;\n}\n\n/**\n * Check if a given object implements the AlertQuery interface.\n */\nexport function instanceOfAlertQuery(value: object): value is AlertQuery {\n    return true;\n}\n\nexport function AlertQueryFromJSON(json: any): AlertQuery {\n    return AlertQueryFromJSONTyped(json, false);\n}\n\nexport function AlertQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertQuery {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],\n        'model': json['model'] == null ? undefined : json['model'],\n        'queryType': json['queryType'] == null ? undefined : json['queryType'],\n        'refId': json['refId'] == null ? undefined : json['refId'],\n        'relativeTimeRange': json['relativeTimeRange'] == null ? undefined : RelativeTimeRangeFromJSON(json['relativeTimeRange']),\n    };\n}\n\nexport function AlertQueryToJSON(json: any): AlertQuery {\n    return AlertQueryToJSONTyped(json, false);\n}\n\nexport function AlertQueryToJSONTyped(value?: AlertQuery | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'datasourceUid': value['datasourceUid'],\n        'model': value['model'],\n        'queryType': value['queryType'],\n        'refId': value['refId'],\n        'relativeTimeRange': RelativeTimeRangeToJSON(value['relativeTimeRange']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RelativeTimeRangeExport\n */\nexport interface RelativeTimeRangeExport {\n    /**\n     * \n     * @type {number}\n     * @memberof RelativeTimeRangeExport\n     */\n    from?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof RelativeTimeRangeExport\n     */\n    to?: number;\n}\n\n/**\n * Check if a given object implements the RelativeTimeRangeExport interface.\n */\nexport function instanceOfRelativeTimeRangeExport(value: object): value is RelativeTimeRangeExport {\n    return true;\n}\n\nexport function RelativeTimeRangeExportFromJSON(json: any): RelativeTimeRangeExport {\n    return RelativeTimeRangeExportFromJSONTyped(json, false);\n}\n\nexport function RelativeTimeRangeExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelativeTimeRangeExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'] == null ? undefined : json['from'],\n        'to': json['to'] == null ? undefined : json['to'],\n    };\n}\n\nexport function RelativeTimeRangeExportToJSON(json: any): RelativeTimeRangeExport {\n    return RelativeTimeRangeExportToJSONTyped(json, false);\n}\n\nexport function RelativeTimeRangeExportToJSONTyped(value?: RelativeTimeRangeExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'],\n        'to': value['to'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { RelativeTimeRangeExport } from './RelativeTimeRangeExport';\nimport {\n    RelativeTimeRangeExportFromJSON,\n    RelativeTimeRangeExportFromJSONTyped,\n    RelativeTimeRangeExportToJSON,\n    RelativeTimeRangeExportToJSONTyped,\n} from './RelativeTimeRangeExport';\n\n/**\n * \n * @export\n * @interface AlertQueryExport\n */\nexport interface AlertQueryExport {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertQueryExport\n     */\n    datasourceUid?: string;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof AlertQueryExport\n     */\n    model?: { [key: string]: object; };\n    /**\n     * \n     * @type {string}\n     * @memberof AlertQueryExport\n     */\n    queryType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertQueryExport\n     */\n    refId?: string;\n    /**\n     * \n     * @type {RelativeTimeRangeExport}\n     * @memberof AlertQueryExport\n     */\n    relativeTimeRange?: RelativeTimeRangeExport;\n}\n\n/**\n * Check if a given object implements the AlertQueryExport interface.\n */\nexport function instanceOfAlertQueryExport(value: object): value is AlertQueryExport {\n    return true;\n}\n\nexport function AlertQueryExportFromJSON(json: any): AlertQueryExport {\n    return AlertQueryExportFromJSONTyped(json, false);\n}\n\nexport function AlertQueryExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertQueryExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],\n        'model': json['model'] == null ? undefined : json['model'],\n        'queryType': json['queryType'] == null ? undefined : json['queryType'],\n        'refId': json['refId'] == null ? undefined : json['refId'],\n        'relativeTimeRange': json['relativeTimeRange'] == null ? undefined : RelativeTimeRangeExportFromJSON(json['relativeTimeRange']),\n    };\n}\n\nexport function AlertQueryExportToJSON(json: any): AlertQueryExport {\n    return AlertQueryExportToJSONTyped(json, false);\n}\n\nexport function AlertQueryExportToJSONTyped(value?: AlertQueryExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'datasourceUid': value['datasourceUid'],\n        'model': value['model'],\n        'queryType': value['queryType'],\n        'refId': value['refId'],\n        'relativeTimeRange': RelativeTimeRangeExportToJSON(value['relativeTimeRange']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertDiscovery } from './AlertDiscovery';\nimport {\n    AlertDiscoveryFromJSON,\n    AlertDiscoveryFromJSONTyped,\n    AlertDiscoveryToJSON,\n    AlertDiscoveryToJSONTyped,\n} from './AlertDiscovery';\n\n/**\n * \n * @export\n * @interface AlertResponse\n */\nexport interface AlertResponse {\n    /**\n     * \n     * @type {AlertDiscovery}\n     * @memberof AlertResponse\n     */\n    data?: AlertDiscovery;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertResponse\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertResponse\n     */\n    errorType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertResponse\n     */\n    status: string;\n}\n\n/**\n * Check if a given object implements the AlertResponse interface.\n */\nexport function instanceOfAlertResponse(value: object): value is AlertResponse {\n    if (!('status' in value) || value['status'] === undefined) return false;\n    return true;\n}\n\nexport function AlertResponseFromJSON(json: any): AlertResponse {\n    return AlertResponseFromJSONTyped(json, false);\n}\n\nexport function AlertResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : AlertDiscoveryFromJSON(json['data']),\n        'error': json['error'] == null ? undefined : json['error'],\n        'errorType': json['errorType'] == null ? undefined : json['errorType'],\n        'status': json['status'],\n    };\n}\n\nexport function AlertResponseToJSON(json: any): AlertResponse {\n    return AlertResponseToJSONTyped(json, false);\n}\n\nexport function AlertResponseToJSONTyped(value?: AlertResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': AlertDiscoveryToJSON(value['data']),\n        'error': value['error'],\n        'errorType': value['errorType'],\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertRuleEditorSettings\n */\nexport interface AlertRuleEditorSettings {\n    /**\n     * \n     * @type {boolean}\n     * @memberof AlertRuleEditorSettings\n     */\n    simplifiedQueryAndExpressionsSection?: boolean;\n}\n\n/**\n * Check if a given object implements the AlertRuleEditorSettings interface.\n */\nexport function instanceOfAlertRuleEditorSettings(value: object): value is AlertRuleEditorSettings {\n    return true;\n}\n\nexport function AlertRuleEditorSettingsFromJSON(json: any): AlertRuleEditorSettings {\n    return AlertRuleEditorSettingsFromJSONTyped(json, false);\n}\n\nexport function AlertRuleEditorSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleEditorSettings {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'simplifiedQueryAndExpressionsSection': json['simplified_query_and_expressions_section'] == null ? undefined : json['simplified_query_and_expressions_section'],\n    };\n}\n\nexport function AlertRuleEditorSettingsToJSON(json: any): AlertRuleEditorSettings {\n    return AlertRuleEditorSettingsToJSONTyped(json, false);\n}\n\nexport function AlertRuleEditorSettingsToJSONTyped(value?: AlertRuleEditorSettings | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'simplified_query_and_expressions_section': value['simplifiedQueryAndExpressionsSection'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertRuleRecordExport\n */\nexport interface AlertRuleRecordExport {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleRecordExport\n     */\n    from?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleRecordExport\n     */\n    metric?: string;\n}\n\n/**\n * Check if a given object implements the AlertRuleRecordExport interface.\n */\nexport function instanceOfAlertRuleRecordExport(value: object): value is AlertRuleRecordExport {\n    return true;\n}\n\nexport function AlertRuleRecordExportFromJSON(json: any): AlertRuleRecordExport {\n    return AlertRuleRecordExportFromJSONTyped(json, false);\n}\n\nexport function AlertRuleRecordExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleRecordExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'] == null ? undefined : json['from'],\n        'metric': json['metric'] == null ? undefined : json['metric'],\n    };\n}\n\nexport function AlertRuleRecordExportToJSON(json: any): AlertRuleRecordExport {\n    return AlertRuleRecordExportToJSONTyped(json, false);\n}\n\nexport function AlertRuleRecordExportToJSONTyped(value?: AlertRuleRecordExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'],\n        'metric': value['metric'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertRuleNotificationSettingsExport\n */\nexport interface AlertRuleNotificationSettingsExport {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    groupBy?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    groupInterval?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    groupWait?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    muteTimeIntervals?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    receiver?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleNotificationSettingsExport\n     */\n    repeatInterval?: string;\n}\n\n/**\n * Check if a given object implements the AlertRuleNotificationSettingsExport interface.\n */\nexport function instanceOfAlertRuleNotificationSettingsExport(value: object): value is AlertRuleNotificationSettingsExport {\n    return true;\n}\n\nexport function AlertRuleNotificationSettingsExportFromJSON(json: any): AlertRuleNotificationSettingsExport {\n    return AlertRuleNotificationSettingsExportFromJSONTyped(json, false);\n}\n\nexport function AlertRuleNotificationSettingsExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleNotificationSettingsExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'groupBy': json['group_by'] == null ? undefined : json['group_by'],\n        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],\n        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],\n        'receiver': json['receiver'] == null ? undefined : json['receiver'],\n        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],\n    };\n}\n\nexport function AlertRuleNotificationSettingsExportToJSON(json: any): AlertRuleNotificationSettingsExport {\n    return AlertRuleNotificationSettingsExportToJSONTyped(json, false);\n}\n\nexport function AlertRuleNotificationSettingsExportToJSONTyped(value?: AlertRuleNotificationSettingsExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'group_by': value['groupBy'],\n        'group_interval': value['groupInterval'],\n        'group_wait': value['groupWait'],\n        'mute_time_intervals': value['muteTimeIntervals'],\n        'receiver': value['receiver'],\n        'repeat_interval': value['repeatInterval'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertRuleRecordExport } from './AlertRuleRecordExport';\nimport {\n    AlertRuleRecordExportFromJSON,\n    AlertRuleRecordExportFromJSONTyped,\n    AlertRuleRecordExportToJSON,\n    AlertRuleRecordExportToJSONTyped,\n} from './AlertRuleRecordExport';\nimport type { AlertQueryExport } from './AlertQueryExport';\nimport {\n    AlertQueryExportFromJSON,\n    AlertQueryExportFromJSONTyped,\n    AlertQueryExportToJSON,\n    AlertQueryExportToJSONTyped,\n} from './AlertQueryExport';\nimport type { AlertRuleNotificationSettingsExport } from './AlertRuleNotificationSettingsExport';\nimport {\n    AlertRuleNotificationSettingsExportFromJSON,\n    AlertRuleNotificationSettingsExportFromJSONTyped,\n    AlertRuleNotificationSettingsExportToJSON,\n    AlertRuleNotificationSettingsExportToJSONTyped,\n} from './AlertRuleNotificationSettingsExport';\n\n/**\n * \n * @export\n * @interface AlertRuleExport\n */\nexport interface AlertRuleExport {\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof AlertRuleExport\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    condition?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    dashboardUid?: string;\n    /**\n     * \n     * @type {Array<AlertQueryExport>}\n     * @memberof AlertRuleExport\n     */\n    data?: Array<AlertQueryExport>;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    execErrState?: AlertRuleExportExecErrStateEnum;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof AlertRuleExport\n     */\n    _for?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AlertRuleExport\n     */\n    isPaused?: boolean;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof AlertRuleExport\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    noDataState?: AlertRuleExportNoDataStateEnum;\n    /**\n     * \n     * @type {AlertRuleNotificationSettingsExport}\n     * @memberof AlertRuleExport\n     */\n    notificationSettings?: AlertRuleNotificationSettingsExport;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertRuleExport\n     */\n    panelId?: number;\n    /**\n     * \n     * @type {AlertRuleRecordExport}\n     * @memberof AlertRuleExport\n     */\n    record?: AlertRuleRecordExport;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleExport\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const AlertRuleExportExecErrStateEnum = {\n    Ok: 'OK',\n    Alerting: 'Alerting',\n    Error: 'Error'\n} as const;\nexport type AlertRuleExportExecErrStateEnum = typeof AlertRuleExportExecErrStateEnum[keyof typeof AlertRuleExportExecErrStateEnum];\n\n/**\n * @export\n */\nexport const AlertRuleExportNoDataStateEnum = {\n    Alerting: 'Alerting',\n    NoData: 'NoData',\n    Ok: 'OK'\n} as const;\nexport type AlertRuleExportNoDataStateEnum = typeof AlertRuleExportNoDataStateEnum[keyof typeof AlertRuleExportNoDataStateEnum];\n\n\n/**\n * Check if a given object implements the AlertRuleExport interface.\n */\nexport function instanceOfAlertRuleExport(value: object): value is AlertRuleExport {\n    return true;\n}\n\nexport function AlertRuleExportFromJSON(json: any): AlertRuleExport {\n    return AlertRuleExportFromJSONTyped(json, false);\n}\n\nexport function AlertRuleExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'dashboardUid': json['dashboardUid'] == null ? undefined : json['dashboardUid'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryExportFromJSON)),\n        'execErrState': json['execErrState'] == null ? undefined : json['execErrState'],\n        '_for': json['for'] == null ? undefined : json['for'],\n        'isPaused': json['isPaused'] == null ? undefined : json['isPaused'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'noDataState': json['noDataState'] == null ? undefined : json['noDataState'],\n        'notificationSettings': json['notification_settings'] == null ? undefined : AlertRuleNotificationSettingsExportFromJSON(json['notification_settings']),\n        'panelId': json['panelId'] == null ? undefined : json['panelId'],\n        'record': json['record'] == null ? undefined : AlertRuleRecordExportFromJSON(json['record']),\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function AlertRuleExportToJSON(json: any): AlertRuleExport {\n    return AlertRuleExportToJSONTyped(json, false);\n}\n\nexport function AlertRuleExportToJSONTyped(value?: AlertRuleExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'condition': value['condition'],\n        'dashboardUid': value['dashboardUid'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryExportToJSON)),\n        'execErrState': value['execErrState'],\n        'for': value['_for'],\n        'isPaused': value['isPaused'],\n        'labels': value['labels'],\n        'noDataState': value['noDataState'],\n        'notification_settings': AlertRuleNotificationSettingsExportToJSON(value['notificationSettings']),\n        'panelId': value['panelId'],\n        'record': AlertRuleRecordExportToJSON(value['record']),\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertRuleNotificationSettings\n */\nexport interface AlertRuleNotificationSettings {\n    /**\n     * Override the labels by which incoming alerts are grouped together. For example, multiple alerts coming in for\n     * cluster=A and alertname=LatencyHigh would be batched into a single group. To aggregate by all possible labels\n     * use the special value '...' as the sole label name.\n     * This effectively disables aggregation entirely, passing through all alerts as-is. This is unlikely to be what\n     * you want, unless you have a very low alert volume or your upstream notification system performs its own grouping.\n     * Must include 'alertname' and 'grafana_folder' if not using '...'.\n     * @type {Array<string>}\n     * @memberof AlertRuleNotificationSettings\n     */\n    groupBy?: Array<string>;\n    /**\n     * Override how long to wait before sending a notification about new alerts that are added to a group of alerts for\n     * which an initial notification has already been sent. (Usually ~5m or more.)\n     * @type {string}\n     * @memberof AlertRuleNotificationSettings\n     */\n    groupInterval?: string;\n    /**\n     * Override how long to initially wait to send a notification for a group of alerts. Allows to wait for an\n     * inhibiting alert to arrive or collect more initial alerts for the same group. (Usually ~0s to few minutes.)\n     * @type {string}\n     * @memberof AlertRuleNotificationSettings\n     */\n    groupWait?: string;\n    /**\n     * Override the times when notifications should be muted. These must match the name of a mute time interval defined\n     * in the alertmanager configuration mute_time_intervals section. When muted it will not send any notifications, but\n     * otherwise acts normally.\n     * @type {Array<string>}\n     * @memberof AlertRuleNotificationSettings\n     */\n    muteTimeIntervals?: Array<string>;\n    /**\n     * Name of the receiver to send notifications to.\n     * @type {string}\n     * @memberof AlertRuleNotificationSettings\n     */\n    receiver: string;\n    /**\n     * Override how long to wait before sending a notification again if it has already been sent successfully for an\n     * alert. (Usually ~3h or more).\n     * Note that this parameter is implicitly bound by Alertmanager's `--data.retention` configuration flag.\n     * Notifications will be resent after either repeat_interval or the data retention period have passed, whichever\n     * occurs first. `repeat_interval` should not be less than `group_interval`.\n     * @type {string}\n     * @memberof AlertRuleNotificationSettings\n     */\n    repeatInterval?: string;\n}\n\n/**\n * Check if a given object implements the AlertRuleNotificationSettings interface.\n */\nexport function instanceOfAlertRuleNotificationSettings(value: object): value is AlertRuleNotificationSettings {\n    if (!('receiver' in value) || value['receiver'] === undefined) return false;\n    return true;\n}\n\nexport function AlertRuleNotificationSettingsFromJSON(json: any): AlertRuleNotificationSettings {\n    return AlertRuleNotificationSettingsFromJSONTyped(json, false);\n}\n\nexport function AlertRuleNotificationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleNotificationSettings {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'groupBy': json['group_by'] == null ? undefined : json['group_by'],\n        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],\n        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],\n        'receiver': json['receiver'],\n        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],\n    };\n}\n\nexport function AlertRuleNotificationSettingsToJSON(json: any): AlertRuleNotificationSettings {\n    return AlertRuleNotificationSettingsToJSONTyped(json, false);\n}\n\nexport function AlertRuleNotificationSettingsToJSONTyped(value?: AlertRuleNotificationSettings | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'group_by': value['groupBy'],\n        'group_interval': value['groupInterval'],\n        'group_wait': value['groupWait'],\n        'mute_time_intervals': value['muteTimeIntervals'],\n        'receiver': value['receiver'],\n        'repeat_interval': value['repeatInterval'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Record\n */\nexport interface Record {\n    /**\n     * Which expression node should be used as the input for the recorded metric.\n     * @type {string}\n     * @memberof Record\n     */\n    from: string;\n    /**\n     * Name of the recorded metric.\n     * @type {string}\n     * @memberof Record\n     */\n    metric: string;\n}\n\n/**\n * Check if a given object implements the Record interface.\n */\nexport function instanceOfRecord(value: object): value is Record {\n    if (!('from' in value) || value['from'] === undefined) return false;\n    if (!('metric' in value) || value['metric'] === undefined) return false;\n    return true;\n}\n\nexport function RecordFromJSON(json: any): Record {\n    return RecordFromJSONTyped(json, false);\n}\n\nexport function RecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Record {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'],\n        'metric': json['metric'],\n    };\n}\n\nexport function RecordToJSON(json: any): Record {\n    return RecordToJSONTyped(json, false);\n}\n\nexport function RecordToJSONTyped(value?: Record | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'],\n        'metric': value['metric'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\nimport type { AlertRuleNotificationSettings } from './AlertRuleNotificationSettings';\nimport {\n    AlertRuleNotificationSettingsFromJSON,\n    AlertRuleNotificationSettingsFromJSONTyped,\n    AlertRuleNotificationSettingsToJSON,\n    AlertRuleNotificationSettingsToJSONTyped,\n} from './AlertRuleNotificationSettings';\nimport type { Record } from './Record';\nimport {\n    RecordFromJSON,\n    RecordFromJSONTyped,\n    RecordToJSON,\n    RecordToJSONTyped,\n} from './Record';\n\n/**\n * \n * @export\n * @interface ProvisionedAlertRule\n */\nexport interface ProvisionedAlertRule {\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof ProvisionedAlertRule\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    condition: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof ProvisionedAlertRule\n     */\n    data: Array<AlertQuery>;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    execErrState: ProvisionedAlertRuleExecErrStateEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    folderUID: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    _for: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ProvisionedAlertRule\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ProvisionedAlertRule\n     */\n    isPaused?: boolean;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof ProvisionedAlertRule\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    noDataState: ProvisionedAlertRuleNoDataStateEnum;\n    /**\n     * \n     * @type {AlertRuleNotificationSettings}\n     * @memberof ProvisionedAlertRule\n     */\n    notificationSettings?: AlertRuleNotificationSettings;\n    /**\n     * \n     * @type {number}\n     * @memberof ProvisionedAlertRule\n     */\n    orgID: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {Record}\n     * @memberof ProvisionedAlertRule\n     */\n    record?: Record;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    ruleGroup: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    title: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ProvisionedAlertRule\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof ProvisionedAlertRule\n     */\n    readonly updated?: Date;\n}\n\n\n/**\n * @export\n */\nexport const ProvisionedAlertRuleExecErrStateEnum = {\n    Ok: 'OK',\n    Alerting: 'Alerting',\n    Error: 'Error'\n} as const;\nexport type ProvisionedAlertRuleExecErrStateEnum = typeof ProvisionedAlertRuleExecErrStateEnum[keyof typeof ProvisionedAlertRuleExecErrStateEnum];\n\n/**\n * @export\n */\nexport const ProvisionedAlertRuleNoDataStateEnum = {\n    Alerting: 'Alerting',\n    NoData: 'NoData',\n    Ok: 'OK'\n} as const;\nexport type ProvisionedAlertRuleNoDataStateEnum = typeof ProvisionedAlertRuleNoDataStateEnum[keyof typeof ProvisionedAlertRuleNoDataStateEnum];\n\n\n/**\n * Check if a given object implements the ProvisionedAlertRule interface.\n */\nexport function instanceOfProvisionedAlertRule(value: object): value is ProvisionedAlertRule {\n    if (!('condition' in value) || value['condition'] === undefined) return false;\n    if (!('data' in value) || value['data'] === undefined) return false;\n    if (!('execErrState' in value) || value['execErrState'] === undefined) return false;\n    if (!('folderUID' in value) || value['folderUID'] === undefined) return false;\n    if (!('_for' in value) || value['_for'] === undefined) return false;\n    if (!('noDataState' in value) || value['noDataState'] === undefined) return false;\n    if (!('orgID' in value) || value['orgID'] === undefined) return false;\n    if (!('ruleGroup' in value) || value['ruleGroup'] === undefined) return false;\n    if (!('title' in value) || value['title'] === undefined) return false;\n    return true;\n}\n\nexport function ProvisionedAlertRuleFromJSON(json: any): ProvisionedAlertRule {\n    return ProvisionedAlertRuleFromJSONTyped(json, false);\n}\n\nexport function ProvisionedAlertRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProvisionedAlertRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'condition': json['condition'],\n        'data': ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        'execErrState': json['execErrState'],\n        'folderUID': json['folderUID'],\n        '_for': json['for'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isPaused': json['isPaused'] == null ? undefined : json['isPaused'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'noDataState': json['noDataState'],\n        'notificationSettings': json['notification_settings'] == null ? undefined : AlertRuleNotificationSettingsFromJSON(json['notification_settings']),\n        'orgID': json['orgID'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'record': json['record'] == null ? undefined : RecordFromJSON(json['record']),\n        'ruleGroup': json['ruleGroup'],\n        'title': json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function ProvisionedAlertRuleToJSON(json: any): ProvisionedAlertRule {\n    return ProvisionedAlertRuleToJSONTyped(json, false);\n}\n\nexport function ProvisionedAlertRuleToJSONTyped(value?: Omit<ProvisionedAlertRule, 'updated'> | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'condition': value['condition'],\n        'data': ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'execErrState': value['execErrState'],\n        'folderUID': value['folderUID'],\n        'for': value['_for'],\n        'id': value['id'],\n        'isPaused': value['isPaused'],\n        'labels': value['labels'],\n        'noDataState': value['noDataState'],\n        'notification_settings': AlertRuleNotificationSettingsToJSON(value['notificationSettings']),\n        'orgID': value['orgID'],\n        'provenance': value['provenance'],\n        'record': RecordToJSON(value['record']),\n        'ruleGroup': value['ruleGroup'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ProvisionedAlertRule } from './ProvisionedAlertRule';\nimport {\n    ProvisionedAlertRuleFromJSON,\n    ProvisionedAlertRuleFromJSONTyped,\n    ProvisionedAlertRuleToJSON,\n    ProvisionedAlertRuleToJSONTyped,\n} from './ProvisionedAlertRule';\n\n/**\n * \n * @export\n * @interface AlertRuleGroup\n */\nexport interface AlertRuleGroup {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleGroup\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertRuleGroup\n     */\n    interval?: number;\n    /**\n     * \n     * @type {Array<ProvisionedAlertRule>}\n     * @memberof AlertRuleGroup\n     */\n    rules?: Array<ProvisionedAlertRule>;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleGroup\n     */\n    title?: string;\n}\n\n/**\n * Check if a given object implements the AlertRuleGroup interface.\n */\nexport function instanceOfAlertRuleGroup(value: object): value is AlertRuleGroup {\n    return true;\n}\n\nexport function AlertRuleGroupFromJSON(json: any): AlertRuleGroup {\n    return AlertRuleGroupFromJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroup {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(ProvisionedAlertRuleFromJSON)),\n        'title': json['title'] == null ? undefined : json['title'],\n    };\n}\n\nexport function AlertRuleGroupToJSON(json: any): AlertRuleGroup {\n    return AlertRuleGroupToJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupToJSONTyped(value?: AlertRuleGroup | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderUid': value['folderUid'],\n        'interval': value['interval'],\n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(ProvisionedAlertRuleToJSON)),\n        'title': value['title'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertRuleExport } from './AlertRuleExport';\nimport {\n    AlertRuleExportFromJSON,\n    AlertRuleExportFromJSONTyped,\n    AlertRuleExportToJSON,\n    AlertRuleExportToJSONTyped,\n} from './AlertRuleExport';\n\n/**\n * \n * @export\n * @interface AlertRuleGroupExport\n */\nexport interface AlertRuleGroupExport {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleGroupExport\n     */\n    folder?: string;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof AlertRuleGroupExport\n     */\n    interval?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertRuleGroupExport\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertRuleGroupExport\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {Array<AlertRuleExport>}\n     * @memberof AlertRuleGroupExport\n     */\n    rules?: Array<AlertRuleExport>;\n}\n\n/**\n * Check if a given object implements the AlertRuleGroupExport interface.\n */\nexport function instanceOfAlertRuleGroupExport(value: object): value is AlertRuleGroupExport {\n    return true;\n}\n\nexport function AlertRuleGroupExportFromJSON(json: any): AlertRuleGroupExport {\n    return AlertRuleGroupExportFromJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroupExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folder': json['folder'] == null ? undefined : json['folder'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(AlertRuleExportFromJSON)),\n    };\n}\n\nexport function AlertRuleGroupExportToJSON(json: any): AlertRuleGroupExport {\n    return AlertRuleGroupExportToJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupExportToJSONTyped(value?: AlertRuleGroupExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folder': value['folder'],\n        'interval': value['interval'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(AlertRuleExportToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertRuleGroupMetadata\n */\nexport interface AlertRuleGroupMetadata {\n    /**\n     * \n     * @type {number}\n     * @memberof AlertRuleGroupMetadata\n     */\n    interval?: number;\n}\n\n/**\n * Check if a given object implements the AlertRuleGroupMetadata interface.\n */\nexport function instanceOfAlertRuleGroupMetadata(value: object): value is AlertRuleGroupMetadata {\n    return true;\n}\n\nexport function AlertRuleGroupMetadataFromJSON(json: any): AlertRuleGroupMetadata {\n    return AlertRuleGroupMetadataFromJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleGroupMetadata {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'interval': json['interval'] == null ? undefined : json['interval'],\n    };\n}\n\nexport function AlertRuleGroupMetadataToJSON(json: any): AlertRuleGroupMetadata {\n    return AlertRuleGroupMetadataToJSONTyped(json, false);\n}\n\nexport function AlertRuleGroupMetadataToJSONTyped(value?: AlertRuleGroupMetadata | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'interval': value['interval'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertRuleEditorSettings } from './AlertRuleEditorSettings';\nimport {\n    AlertRuleEditorSettingsFromJSON,\n    AlertRuleEditorSettingsFromJSONTyped,\n    AlertRuleEditorSettingsToJSON,\n    AlertRuleEditorSettingsToJSONTyped,\n} from './AlertRuleEditorSettings';\n\n/**\n * \n * @export\n * @interface AlertRuleMetadata\n */\nexport interface AlertRuleMetadata {\n    /**\n     * \n     * @type {AlertRuleEditorSettings}\n     * @memberof AlertRuleMetadata\n     */\n    editorSettings?: AlertRuleEditorSettings;\n}\n\n/**\n * Check if a given object implements the AlertRuleMetadata interface.\n */\nexport function instanceOfAlertRuleMetadata(value: object): value is AlertRuleMetadata {\n    return true;\n}\n\nexport function AlertRuleMetadataFromJSON(json: any): AlertRuleMetadata {\n    return AlertRuleMetadataFromJSONTyped(json, false);\n}\n\nexport function AlertRuleMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertRuleMetadata {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'editorSettings': json['editor_settings'] == null ? undefined : AlertRuleEditorSettingsFromJSON(json['editor_settings']),\n    };\n}\n\nexport function AlertRuleMetadataToJSON(json: any): AlertRuleMetadata {\n    return AlertRuleMetadataToJSONTyped(json, false);\n}\n\nexport function AlertRuleMetadataToJSONTyped(value?: AlertRuleMetadata | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'editor_settings': AlertRuleEditorSettingsToJSON(value['editorSettings']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReceiverExport\n */\nexport interface ReceiverExport {\n    /**\n     * \n     * @type {boolean}\n     * @memberof ReceiverExport\n     */\n    disableResolveMessage?: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof ReceiverExport\n     */\n    settings?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof ReceiverExport\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReceiverExport\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the ReceiverExport interface.\n */\nexport function instanceOfReceiverExport(value: object): value is ReceiverExport {\n    return true;\n}\n\nexport function ReceiverExportFromJSON(json: any): ReceiverExport {\n    return ReceiverExportFromJSONTyped(json, false);\n}\n\nexport function ReceiverExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReceiverExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'disableResolveMessage': json['disableResolveMessage'] == null ? undefined : json['disableResolveMessage'],\n        'settings': json['settings'] == null ? undefined : json['settings'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function ReceiverExportToJSON(json: any): ReceiverExport {\n    return ReceiverExportToJSONTyped(json, false);\n}\n\nexport function ReceiverExportToJSONTyped(value?: ReceiverExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'disableResolveMessage': value['disableResolveMessage'],\n        'settings': value['settings'],\n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReceiverExport } from './ReceiverExport';\nimport {\n    ReceiverExportFromJSON,\n    ReceiverExportFromJSONTyped,\n    ReceiverExportToJSON,\n    ReceiverExportToJSONTyped,\n} from './ReceiverExport';\n\n/**\n * \n * @export\n * @interface ContactPointExport\n */\nexport interface ContactPointExport {\n    /**\n     * \n     * @type {string}\n     * @memberof ContactPointExport\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ContactPointExport\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {Array<ReceiverExport>}\n     * @memberof ContactPointExport\n     */\n    receivers?: Array<ReceiverExport>;\n}\n\n/**\n * Check if a given object implements the ContactPointExport interface.\n */\nexport function instanceOfContactPointExport(value: object): value is ContactPointExport {\n    return true;\n}\n\nexport function ContactPointExportFromJSON(json: any): ContactPointExport {\n    return ContactPointExportFromJSONTyped(json, false);\n}\n\nexport function ContactPointExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactPointExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(ReceiverExportFromJSON)),\n    };\n}\n\nexport function ContactPointExportToJSON(json: any): ContactPointExport {\n    return ContactPointExportToJSONTyped(json, false);\n}\n\nexport function ContactPointExportToJSONTyped(value?: ContactPointExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'orgId': value['orgId'],\n        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(ReceiverExportToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Matcher matcher\n * @export\n * @interface Matcher\n */\nexport interface Matcher {\n    /**\n     * is equal\n     * @type {boolean}\n     * @memberof Matcher\n     */\n    isEqual?: boolean;\n    /**\n     * is regex\n     * @type {boolean}\n     * @memberof Matcher\n     */\n    isRegex: boolean;\n    /**\n     * name\n     * @type {string}\n     * @memberof Matcher\n     */\n    name: string;\n    /**\n     * value\n     * @type {string}\n     * @memberof Matcher\n     */\n    value: string;\n}\n\n/**\n * Check if a given object implements the Matcher interface.\n */\nexport function instanceOfMatcher(value: object): value is Matcher {\n    if (!('isRegex' in value) || value['isRegex'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    if (!('value' in value) || value['value'] === undefined) return false;\n    return true;\n}\n\nexport function MatcherFromJSON(json: any): Matcher {\n    return MatcherFromJSONTyped(json, false);\n}\n\nexport function MatcherFromJSONTyped(json: any, ignoreDiscriminator: boolean): Matcher {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'isEqual': json['isEqual'] == null ? undefined : json['isEqual'],\n        'isRegex': json['isRegex'],\n        'name': json['name'],\n        'value': json['value'],\n    };\n}\n\nexport function MatcherToJSON(json: any): Matcher {\n    return MatcherToJSONTyped(json, false);\n}\n\nexport function MatcherToJSONTyped(value?: Matcher | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'isEqual': value['isEqual'],\n        'isRegex': value['isRegex'],\n        'name': value['name'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * RouteExport is the provisioned file export of definitions.Route. This is needed to hide fields that aren't useable in\n * provisioning file format. An alternative would be to define a custom MarshalJSON and MarshalYAML that excludes them.\n * @export\n * @interface RouteExport\n */\nexport interface RouteExport {\n    /**\n     * \n     * @type {boolean}\n     * @memberof RouteExport\n     */\n    _continue?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof RouteExport\n     */\n    groupBy?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteExport\n     */\n    groupInterval?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteExport\n     */\n    groupWait?: string;\n    /**\n     * Deprecated. Remove before v1.0 release.\n     * @type {{ [key: string]: string; }}\n     * @memberof RouteExport\n     */\n    match?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof RouteExport\n     */\n    matchRe?: { [key: string]: string; };\n    /**\n     * Matchers is a slice of Matchers that is sortable, implements Stringer, and\n     * provides a Matches method to match a LabelSet against all Matchers in the\n     * slice. Note that some users of Matchers might require it to be sorted.\n     * @type {Array<Matcher>}\n     * @memberof RouteExport\n     */\n    matchers?: Array<Matcher>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof RouteExport\n     */\n    muteTimeIntervals?: Array<string>;\n    /**\n     * \n     * @type {Array<Array<string>>}\n     * @memberof RouteExport\n     */\n    objectMatchers?: Array<Array<string>>;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteExport\n     */\n    receiver?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteExport\n     */\n    repeatInterval?: string;\n    /**\n     * \n     * @type {Array<RouteExport>}\n     * @memberof RouteExport\n     */\n    routes?: Array<RouteExport>;\n}\n\n/**\n * Check if a given object implements the RouteExport interface.\n */\nexport function instanceOfRouteExport(value: object): value is RouteExport {\n    return true;\n}\n\nexport function RouteExportFromJSON(json: any): RouteExport {\n    return RouteExportFromJSONTyped(json, false);\n}\n\nexport function RouteExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        '_continue': json['continue'] == null ? undefined : json['continue'],\n        'groupBy': json['group_by'] == null ? undefined : json['group_by'],\n        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],\n        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],\n        'match': json['match'] == null ? undefined : json['match'],\n        'matchRe': json['match_re'] == null ? undefined : json['match_re'],\n        'matchers': json['matchers'] == null ? undefined : ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],\n        'objectMatchers': json['object_matchers'] == null ? undefined : json['object_matchers'],\n        'receiver': json['receiver'] == null ? undefined : json['receiver'],\n        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],\n        'routes': json['routes'] == null ? undefined : ((json['routes'] as Array<any>).map(RouteExportFromJSON)),\n    };\n}\n\nexport function RouteExportToJSON(json: any): RouteExport {\n    return RouteExportToJSONTyped(json, false);\n}\n\nexport function RouteExportToJSONTyped(value?: RouteExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'continue': value['_continue'],\n        'group_by': value['groupBy'],\n        'group_interval': value['groupInterval'],\n        'group_wait': value['groupWait'],\n        'match': value['match'],\n        'match_re': value['matchRe'],\n        'matchers': value['matchers'] == null ? undefined : ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'mute_time_intervals': value['muteTimeIntervals'],\n        'object_matchers': value['objectMatchers'],\n        'receiver': value['receiver'],\n        'repeat_interval': value['repeatInterval'],\n        'routes': value['routes'] == null ? undefined : ((value['routes'] as Array<any>).map(RouteExportToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\nimport type { RouteExport } from './RouteExport';\nimport {\n    RouteExportFromJSON,\n    RouteExportFromJSONTyped,\n    RouteExportToJSON,\n    RouteExportToJSONTyped,\n} from './RouteExport';\n\n/**\n * \n * @export\n * @interface NotificationPolicyExport\n */\nexport interface NotificationPolicyExport {\n    /**\n     * \n     * @type {boolean}\n     * @memberof NotificationPolicyExport\n     */\n    _continue?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof NotificationPolicyExport\n     */\n    groupBy?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationPolicyExport\n     */\n    groupInterval?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationPolicyExport\n     */\n    groupWait?: string;\n    /**\n     * Deprecated. Remove before v1.0 release.\n     * @type {{ [key: string]: string; }}\n     * @memberof NotificationPolicyExport\n     */\n    match?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof NotificationPolicyExport\n     */\n    matchRe?: { [key: string]: string; };\n    /**\n     * Matchers is a slice of Matchers that is sortable, implements Stringer, and\n     * provides a Matches method to match a LabelSet against all Matchers in the\n     * slice. Note that some users of Matchers might require it to be sorted.\n     * @type {Array<Matcher>}\n     * @memberof NotificationPolicyExport\n     */\n    matchers?: Array<Matcher>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof NotificationPolicyExport\n     */\n    muteTimeIntervals?: Array<string>;\n    /**\n     * \n     * @type {Array<Array<string>>}\n     * @memberof NotificationPolicyExport\n     */\n    objectMatchers?: Array<Array<string>>;\n    /**\n     * \n     * @type {number}\n     * @memberof NotificationPolicyExport\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationPolicyExport\n     */\n    receiver?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationPolicyExport\n     */\n    repeatInterval?: string;\n    /**\n     * \n     * @type {Array<RouteExport>}\n     * @memberof NotificationPolicyExport\n     */\n    routes?: Array<RouteExport>;\n}\n\n/**\n * Check if a given object implements the NotificationPolicyExport interface.\n */\nexport function instanceOfNotificationPolicyExport(value: object): value is NotificationPolicyExport {\n    return true;\n}\n\nexport function NotificationPolicyExportFromJSON(json: any): NotificationPolicyExport {\n    return NotificationPolicyExportFromJSONTyped(json, false);\n}\n\nexport function NotificationPolicyExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationPolicyExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        '_continue': json['continue'] == null ? undefined : json['continue'],\n        'groupBy': json['group_by'] == null ? undefined : json['group_by'],\n        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],\n        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],\n        'match': json['match'] == null ? undefined : json['match'],\n        'matchRe': json['match_re'] == null ? undefined : json['match_re'],\n        'matchers': json['matchers'] == null ? undefined : ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],\n        'objectMatchers': json['object_matchers'] == null ? undefined : json['object_matchers'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'receiver': json['receiver'] == null ? undefined : json['receiver'],\n        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],\n        'routes': json['routes'] == null ? undefined : ((json['routes'] as Array<any>).map(RouteExportFromJSON)),\n    };\n}\n\nexport function NotificationPolicyExportToJSON(json: any): NotificationPolicyExport {\n    return NotificationPolicyExportToJSONTyped(json, false);\n}\n\nexport function NotificationPolicyExportToJSONTyped(value?: NotificationPolicyExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'continue': value['_continue'],\n        'group_by': value['groupBy'],\n        'group_interval': value['groupInterval'],\n        'group_wait': value['groupWait'],\n        'match': value['match'],\n        'match_re': value['matchRe'],\n        'matchers': value['matchers'] == null ? undefined : ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'mute_time_intervals': value['muteTimeIntervals'],\n        'object_matchers': value['objectMatchers'],\n        'orgId': value['orgId'],\n        'receiver': value['receiver'],\n        'repeat_interval': value['repeatInterval'],\n        'routes': value['routes'] == null ? undefined : ((value['routes'] as Array<any>).map(RouteExportToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TimeInterval\n */\nexport interface TimeInterval {\n    /**\n     * \n     * @type {string}\n     * @memberof TimeInterval\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof TimeInterval\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the TimeInterval interface.\n */\nexport function instanceOfTimeInterval(value: object): value is TimeInterval {\n    return true;\n}\n\nexport function TimeIntervalFromJSON(json: any): TimeInterval {\n    return TimeIntervalFromJSONTyped(json, false);\n}\n\nexport function TimeIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeInterval {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function TimeIntervalToJSON(json: any): TimeInterval {\n    return TimeIntervalToJSONTyped(json, false);\n}\n\nexport function TimeIntervalToJSONTyped(value?: TimeInterval | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeInterval } from './TimeInterval';\nimport {\n    TimeIntervalFromJSON,\n    TimeIntervalFromJSONTyped,\n    TimeIntervalToJSON,\n    TimeIntervalToJSONTyped,\n} from './TimeInterval';\n\n/**\n * \n * @export\n * @interface MuteTimeIntervalExport\n */\nexport interface MuteTimeIntervalExport {\n    /**\n     * \n     * @type {string}\n     * @memberof MuteTimeIntervalExport\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof MuteTimeIntervalExport\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof MuteTimeIntervalExport\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the MuteTimeIntervalExport interface.\n */\nexport function instanceOfMuteTimeIntervalExport(value: object): value is MuteTimeIntervalExport {\n    return true;\n}\n\nexport function MuteTimeIntervalExportFromJSON(json: any): MuteTimeIntervalExport {\n    return MuteTimeIntervalExportFromJSONTyped(json, false);\n}\n\nexport function MuteTimeIntervalExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): MuteTimeIntervalExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function MuteTimeIntervalExportToJSON(json: any): MuteTimeIntervalExport {\n    return MuteTimeIntervalExportToJSONTyped(json, false);\n}\n\nexport function MuteTimeIntervalExportToJSONTyped(value?: MuteTimeIntervalExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'orgId': value['orgId'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ContactPointExport } from './ContactPointExport';\nimport {\n    ContactPointExportFromJSON,\n    ContactPointExportFromJSONTyped,\n    ContactPointExportToJSON,\n    ContactPointExportToJSONTyped,\n} from './ContactPointExport';\nimport type { NotificationPolicyExport } from './NotificationPolicyExport';\nimport {\n    NotificationPolicyExportFromJSON,\n    NotificationPolicyExportFromJSONTyped,\n    NotificationPolicyExportToJSON,\n    NotificationPolicyExportToJSONTyped,\n} from './NotificationPolicyExport';\nimport type { MuteTimeIntervalExport } from './MuteTimeIntervalExport';\nimport {\n    MuteTimeIntervalExportFromJSON,\n    MuteTimeIntervalExportFromJSONTyped,\n    MuteTimeIntervalExportToJSON,\n    MuteTimeIntervalExportToJSONTyped,\n} from './MuteTimeIntervalExport';\nimport type { AlertRuleGroupExport } from './AlertRuleGroupExport';\nimport {\n    AlertRuleGroupExportFromJSON,\n    AlertRuleGroupExportFromJSONTyped,\n    AlertRuleGroupExportToJSON,\n    AlertRuleGroupExportToJSONTyped,\n} from './AlertRuleGroupExport';\n\n/**\n * \n * @export\n * @interface AlertingFileExport\n */\nexport interface AlertingFileExport {\n    /**\n     * \n     * @type {number}\n     * @memberof AlertingFileExport\n     */\n    apiVersion?: number;\n    /**\n     * \n     * @type {Array<ContactPointExport>}\n     * @memberof AlertingFileExport\n     */\n    contactPoints?: Array<ContactPointExport>;\n    /**\n     * \n     * @type {Array<AlertRuleGroupExport>}\n     * @memberof AlertingFileExport\n     */\n    groups?: Array<AlertRuleGroupExport>;\n    /**\n     * \n     * @type {Array<MuteTimeIntervalExport>}\n     * @memberof AlertingFileExport\n     */\n    muteTimes?: Array<MuteTimeIntervalExport>;\n    /**\n     * \n     * @type {Array<NotificationPolicyExport>}\n     * @memberof AlertingFileExport\n     */\n    policies?: Array<NotificationPolicyExport>;\n}\n\n/**\n * Check if a given object implements the AlertingFileExport interface.\n */\nexport function instanceOfAlertingFileExport(value: object): value is AlertingFileExport {\n    return true;\n}\n\nexport function AlertingFileExportFromJSON(json: any): AlertingFileExport {\n    return AlertingFileExportFromJSONTyped(json, false);\n}\n\nexport function AlertingFileExportFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingFileExport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],\n        'contactPoints': json['contactPoints'] == null ? undefined : ((json['contactPoints'] as Array<any>).map(ContactPointExportFromJSON)),\n        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(AlertRuleGroupExportFromJSON)),\n        'muteTimes': json['muteTimes'] == null ? undefined : ((json['muteTimes'] as Array<any>).map(MuteTimeIntervalExportFromJSON)),\n        'policies': json['policies'] == null ? undefined : ((json['policies'] as Array<any>).map(NotificationPolicyExportFromJSON)),\n    };\n}\n\nexport function AlertingFileExportToJSON(json: any): AlertingFileExport {\n    return AlertingFileExportToJSONTyped(json, false);\n}\n\nexport function AlertingFileExportToJSONTyped(value?: AlertingFileExport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'apiVersion': value['apiVersion'],\n        'contactPoints': value['contactPoints'] == null ? undefined : ((value['contactPoints'] as Array<any>).map(ContactPointExportToJSON)),\n        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(AlertRuleGroupExportToJSON)),\n        'muteTimes': value['muteTimes'] == null ? undefined : ((value['muteTimes'] as Array<any>).map(MuteTimeIntervalExportToJSON)),\n        'policies': value['policies'] == null ? undefined : ((value['policies'] as Array<any>).map(NotificationPolicyExportToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Label\n */\nexport interface Label {\n    /**\n     * \n     * @type {string}\n     * @memberof Label\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the Label interface.\n */\nexport function instanceOfLabel(value: object): value is Label {\n    return true;\n}\n\nexport function LabelFromJSON(json: any): Label {\n    return LabelFromJSONTyped(json, false);\n}\n\nexport function LabelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Label {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['Name'] == null ? undefined : json['Name'],\n    };\n}\n\nexport function LabelToJSON(json: any): Label {\n    return LabelToJSONTyped(json, false);\n}\n\nexport function LabelToJSONTyped(value?: Label | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Label } from './Label';\nimport {\n    LabelFromJSON,\n    LabelFromJSONTyped,\n    LabelToJSON,\n    LabelToJSONTyped,\n} from './Label';\nimport type { Alert } from './Alert';\nimport {\n    AlertFromJSON,\n    AlertFromJSONTyped,\n    AlertToJSON,\n    AlertToJSONTyped,\n} from './Alert';\n\n/**\n * adapted from cortex\n * @export\n * @interface AlertingRule\n */\nexport interface AlertingRule {\n    /**\n     * \n     * @type {Date}\n     * @memberof AlertingRule\n     */\n    activeAt: Date;\n    /**\n     * \n     * @type {Array<Alert>}\n     * @memberof AlertingRule\n     */\n    alerts?: Array<Alert>;\n    /**\n     * Labels is a sorted set of labels. Order has to be guaranteed upon\n     * instantiation.\n     * @type {Array<Label>}\n     * @memberof AlertingRule\n     */\n    annotations: Array<Label>;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertingRule\n     */\n    duration?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertingRule\n     */\n    evaluationTime?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingRule\n     */\n    health: string;\n    /**\n     * Labels is a sorted set of labels. Order has to be guaranteed upon\n     * instantiation.\n     * @type {Array<Label>}\n     * @memberof AlertingRule\n     */\n    labels?: Array<Label>;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingRule\n     */\n    lastError?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof AlertingRule\n     */\n    lastEvaluation?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingRule\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingRule\n     */\n    query: string;\n    /**\n     * State can be \"pending\", \"firing\", \"inactive\".\n     * @type {string}\n     * @memberof AlertingRule\n     */\n    state: string;\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof AlertingRule\n     */\n    totals?: { [key: string]: number; };\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof AlertingRule\n     */\n    totalsFiltered?: { [key: string]: number; };\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingRule\n     */\n    type: string;\n}\n\n/**\n * Check if a given object implements the AlertingRule interface.\n */\nexport function instanceOfAlertingRule(value: object): value is AlertingRule {\n    if (!('activeAt' in value) || value['activeAt'] === undefined) return false;\n    if (!('annotations' in value) || value['annotations'] === undefined) return false;\n    if (!('health' in value) || value['health'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    if (!('query' in value) || value['query'] === undefined) return false;\n    if (!('state' in value) || value['state'] === undefined) return false;\n    if (!('type' in value) || value['type'] === undefined) return false;\n    return true;\n}\n\nexport function AlertingRuleFromJSON(json: any): AlertingRule {\n    return AlertingRuleFromJSONTyped(json, false);\n}\n\nexport function AlertingRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'activeAt': (new Date(json['activeAt'])),\n        'alerts': json['alerts'] == null ? undefined : ((json['alerts'] as Array<any>).map(AlertFromJSON)),\n        'annotations': ((json['annotations'] as Array<any>).map(LabelFromJSON)),\n        'duration': json['duration'] == null ? undefined : json['duration'],\n        'evaluationTime': json['evaluationTime'] == null ? undefined : json['evaluationTime'],\n        'health': json['health'],\n        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelFromJSON)),\n        'lastError': json['lastError'] == null ? undefined : json['lastError'],\n        'lastEvaluation': json['lastEvaluation'] == null ? undefined : (new Date(json['lastEvaluation'])),\n        'name': json['name'],\n        'query': json['query'],\n        'state': json['state'],\n        'totals': json['totals'] == null ? undefined : json['totals'],\n        'totalsFiltered': json['totalsFiltered'] == null ? undefined : json['totalsFiltered'],\n        'type': json['type'],\n    };\n}\n\nexport function AlertingRuleToJSON(json: any): AlertingRule {\n    return AlertingRuleToJSONTyped(json, false);\n}\n\nexport function AlertingRuleToJSONTyped(value?: AlertingRule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'activeAt': ((value['activeAt']).toISOString()),\n        'alerts': value['alerts'] == null ? undefined : ((value['alerts'] as Array<any>).map(AlertToJSON)),\n        'annotations': ((value['annotations'] as Array<any>).map(LabelToJSON)),\n        'duration': value['duration'],\n        'evaluationTime': value['evaluationTime'],\n        'health': value['health'],\n        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelToJSON)),\n        'lastError': value['lastError'],\n        'lastEvaluation': value['lastEvaluation'] == null ? undefined : ((value['lastEvaluation']).toISOString()),\n        'name': value['name'],\n        'query': value['query'],\n        'state': value['state'],\n        'totals': value['totals'],\n        'totalsFiltered': value['totalsFiltered'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AlertingStatus\n */\nexport interface AlertingStatus {\n    /**\n     * \n     * @type {string}\n     * @memberof AlertingStatus\n     */\n    alertmanagersChoice?: AlertingStatusAlertmanagersChoiceEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof AlertingStatus\n     */\n    numExternalAlertmanagers?: number;\n}\n\n\n/**\n * @export\n */\nexport const AlertingStatusAlertmanagersChoiceEnum = {\n    All: 'all',\n    Internal: 'internal',\n    External: 'external'\n} as const;\nexport type AlertingStatusAlertmanagersChoiceEnum = typeof AlertingStatusAlertmanagersChoiceEnum[keyof typeof AlertingStatusAlertmanagersChoiceEnum];\n\n\n/**\n * Check if a given object implements the AlertingStatus interface.\n */\nexport function instanceOfAlertingStatus(value: object): value is AlertingStatus {\n    return true;\n}\n\nexport function AlertingStatusFromJSON(json: any): AlertingStatus {\n    return AlertingStatusFromJSONTyped(json, false);\n}\n\nexport function AlertingStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertingStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagersChoice': json['alertmanagersChoice'] == null ? undefined : json['alertmanagersChoice'],\n        'numExternalAlertmanagers': json['numExternalAlertmanagers'] == null ? undefined : json['numExternalAlertmanagers'],\n    };\n}\n\nexport function AlertingStatusToJSON(json: any): AlertingStatus {\n    return AlertingStatusToJSONTyped(json, false);\n}\n\nexport function AlertingStatusToJSONTyped(value?: AlertingStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanagersChoice': value['alertmanagersChoice'],\n        'numExternalAlertmanagers': value['numExternalAlertmanagers'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * AlertmanagerConfig alertmanager config\n * @export\n * @interface AlertmanagerConfig\n */\nexport interface AlertmanagerConfig {\n    /**\n     * original\n     * @type {string}\n     * @memberof AlertmanagerConfig\n     */\n    original: string;\n}\n\n/**\n * Check if a given object implements the AlertmanagerConfig interface.\n */\nexport function instanceOfAlertmanagerConfig(value: object): value is AlertmanagerConfig {\n    if (!('original' in value) || value['original'] === undefined) return false;\n    return true;\n}\n\nexport function AlertmanagerConfigFromJSON(json: any): AlertmanagerConfig {\n    return AlertmanagerConfigFromJSONTyped(json, false);\n}\n\nexport function AlertmanagerConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertmanagerConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'original': json['original'],\n    };\n}\n\nexport function AlertmanagerConfigToJSON(json: any): AlertmanagerConfig {\n    return AlertmanagerConfigToJSONTyped(json, false);\n}\n\nexport function AlertmanagerConfigToJSONTyped(value?: AlertmanagerConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'original': value['original'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * VersionInfo version info\n * @export\n * @interface VersionInfo\n */\nexport interface VersionInfo {\n    /**\n     * branch\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    branch: string;\n    /**\n     * build date\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    buildDate: string;\n    /**\n     * build user\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    buildUser: string;\n    /**\n     * go version\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    goVersion: string;\n    /**\n     * revision\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    revision: string;\n    /**\n     * version\n     * @type {string}\n     * @memberof VersionInfo\n     */\n    version: string;\n}\n\n/**\n * Check if a given object implements the VersionInfo interface.\n */\nexport function instanceOfVersionInfo(value: object): value is VersionInfo {\n    if (!('branch' in value) || value['branch'] === undefined) return false;\n    if (!('buildDate' in value) || value['buildDate'] === undefined) return false;\n    if (!('buildUser' in value) || value['buildUser'] === undefined) return false;\n    if (!('goVersion' in value) || value['goVersion'] === undefined) return false;\n    if (!('revision' in value) || value['revision'] === undefined) return false;\n    if (!('version' in value) || value['version'] === undefined) return false;\n    return true;\n}\n\nexport function VersionInfoFromJSON(json: any): VersionInfo {\n    return VersionInfoFromJSONTyped(json, false);\n}\n\nexport function VersionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionInfo {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'branch': json['branch'],\n        'buildDate': json['buildDate'],\n        'buildUser': json['buildUser'],\n        'goVersion': json['goVersion'],\n        'revision': json['revision'],\n        'version': json['version'],\n    };\n}\n\nexport function VersionInfoToJSON(json: any): VersionInfo {\n    return VersionInfoToJSONTyped(json, false);\n}\n\nexport function VersionInfoToJSONTyped(value?: VersionInfo | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'branch': value['branch'],\n        'buildDate': value['buildDate'],\n        'buildUser': value['buildUser'],\n        'goVersion': value['goVersion'],\n        'revision': value['revision'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * PeerStatus peer status\n * @export\n * @interface PeerStatus\n */\nexport interface PeerStatus {\n    /**\n     * address\n     * @type {string}\n     * @memberof PeerStatus\n     */\n    address: string;\n    /**\n     * name\n     * @type {string}\n     * @memberof PeerStatus\n     */\n    name: string;\n}\n\n/**\n * Check if a given object implements the PeerStatus interface.\n */\nexport function instanceOfPeerStatus(value: object): value is PeerStatus {\n    if (!('address' in value) || value['address'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    return true;\n}\n\nexport function PeerStatusFromJSON(json: any): PeerStatus {\n    return PeerStatusFromJSONTyped(json, false);\n}\n\nexport function PeerStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeerStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'],\n        'name': json['name'],\n    };\n}\n\nexport function PeerStatusToJSON(json: any): PeerStatus {\n    return PeerStatusToJSONTyped(json, false);\n}\n\nexport function PeerStatusToJSONTyped(value?: PeerStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'address': value['address'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PeerStatus } from './PeerStatus';\nimport {\n    PeerStatusFromJSON,\n    PeerStatusFromJSONTyped,\n    PeerStatusToJSON,\n    PeerStatusToJSONTyped,\n} from './PeerStatus';\n\n/**\n * ClusterStatus cluster status\n * @export\n * @interface ClusterStatus\n */\nexport interface ClusterStatus {\n    /**\n     * name\n     * @type {string}\n     * @memberof ClusterStatus\n     */\n    name?: string;\n    /**\n     * peers\n     * @type {Array<PeerStatus>}\n     * @memberof ClusterStatus\n     */\n    peers?: Array<PeerStatus>;\n    /**\n     * status\n     * @type {string}\n     * @memberof ClusterStatus\n     */\n    status: ClusterStatusStatusEnum;\n}\n\n\n/**\n * @export\n */\nexport const ClusterStatusStatusEnum = {\n    ReadySettlingDisabled: '[ready settling disabled]'\n} as const;\nexport type ClusterStatusStatusEnum = typeof ClusterStatusStatusEnum[keyof typeof ClusterStatusStatusEnum];\n\n\n/**\n * Check if a given object implements the ClusterStatus interface.\n */\nexport function instanceOfClusterStatus(value: object): value is ClusterStatus {\n    if (!('status' in value) || value['status'] === undefined) return false;\n    return true;\n}\n\nexport function ClusterStatusFromJSON(json: any): ClusterStatus {\n    return ClusterStatusFromJSONTyped(json, false);\n}\n\nexport function ClusterStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'peers': json['peers'] == null ? undefined : ((json['peers'] as Array<any>).map(PeerStatusFromJSON)),\n        'status': json['status'],\n    };\n}\n\nexport function ClusterStatusToJSON(json: any): ClusterStatus {\n    return ClusterStatusToJSONTyped(json, false);\n}\n\nexport function ClusterStatusToJSONTyped(value?: ClusterStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'peers': value['peers'] == null ? undefined : ((value['peers'] as Array<any>).map(PeerStatusToJSON)),\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { VersionInfo } from './VersionInfo';\nimport {\n    VersionInfoFromJSON,\n    VersionInfoFromJSONTyped,\n    VersionInfoToJSON,\n    VersionInfoToJSONTyped,\n} from './VersionInfo';\nimport type { AlertmanagerConfig } from './AlertmanagerConfig';\nimport {\n    AlertmanagerConfigFromJSON,\n    AlertmanagerConfigFromJSONTyped,\n    AlertmanagerConfigToJSON,\n    AlertmanagerConfigToJSONTyped,\n} from './AlertmanagerConfig';\nimport type { ClusterStatus } from './ClusterStatus';\nimport {\n    ClusterStatusFromJSON,\n    ClusterStatusFromJSONTyped,\n    ClusterStatusToJSON,\n    ClusterStatusToJSONTyped,\n} from './ClusterStatus';\n\n/**\n * AlertmanagerStatus alertmanager status\n * @export\n * @interface AlertmanagerStatus\n */\nexport interface AlertmanagerStatus {\n    /**\n     * \n     * @type {ClusterStatus}\n     * @memberof AlertmanagerStatus\n     */\n    cluster: ClusterStatus;\n    /**\n     * \n     * @type {AlertmanagerConfig}\n     * @memberof AlertmanagerStatus\n     */\n    config: AlertmanagerConfig;\n    /**\n     * uptime\n     * @type {Date}\n     * @memberof AlertmanagerStatus\n     */\n    uptime: Date;\n    /**\n     * \n     * @type {VersionInfo}\n     * @memberof AlertmanagerStatus\n     */\n    versionInfo: VersionInfo;\n}\n\n/**\n * Check if a given object implements the AlertmanagerStatus interface.\n */\nexport function instanceOfAlertmanagerStatus(value: object): value is AlertmanagerStatus {\n    if (!('cluster' in value) || value['cluster'] === undefined) return false;\n    if (!('config' in value) || value['config'] === undefined) return false;\n    if (!('uptime' in value) || value['uptime'] === undefined) return false;\n    if (!('versionInfo' in value) || value['versionInfo'] === undefined) return false;\n    return true;\n}\n\nexport function AlertmanagerStatusFromJSON(json: any): AlertmanagerStatus {\n    return AlertmanagerStatusFromJSONTyped(json, false);\n}\n\nexport function AlertmanagerStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertmanagerStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'cluster': ClusterStatusFromJSON(json['cluster']),\n        'config': AlertmanagerConfigFromJSON(json['config']),\n        'uptime': (new Date(json['uptime'])),\n        'versionInfo': VersionInfoFromJSON(json['versionInfo']),\n    };\n}\n\nexport function AlertmanagerStatusToJSON(json: any): AlertmanagerStatus {\n    return AlertmanagerStatusToJSONTyped(json, false);\n}\n\nexport function AlertmanagerStatusToJSONTyped(value?: AlertmanagerStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'cluster': ClusterStatusToJSON(value['cluster']),\n        'config': AlertmanagerConfigToJSON(value['config']),\n        'uptime': ((value['uptime']).toISOString()),\n        'versionInfo': VersionInfoToJSON(value['versionInfo']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Annotation\n */\nexport interface Annotation {\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    alertId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    alertName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    created?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    dashboardUID?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof Annotation\n     */\n    data?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    email?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    newState?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    panelId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    prevState?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Annotation\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Annotation\n     */\n    text?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    time?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    timeEnd?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    updated?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Annotation\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the Annotation interface.\n */\nexport function instanceOfAnnotation(value: object): value is Annotation {\n    return true;\n}\n\nexport function AnnotationFromJSON(json: any): Annotation {\n    return AnnotationFromJSONTyped(json, false);\n}\n\nexport function AnnotationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Annotation {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertId': json['alertId'] == null ? undefined : json['alertId'],\n        'alertName': json['alertName'] == null ? undefined : json['alertName'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'created': json['created'] == null ? undefined : json['created'],\n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'dashboardUID': json['dashboardUID'] == null ? undefined : json['dashboardUID'],\n        'data': json['data'] == null ? undefined : json['data'],\n        'email': json['email'] == null ? undefined : json['email'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'newState': json['newState'] == null ? undefined : json['newState'],\n        'panelId': json['panelId'] == null ? undefined : json['panelId'],\n        'prevState': json['prevState'] == null ? undefined : json['prevState'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'time': json['time'] == null ? undefined : json['time'],\n        'timeEnd': json['timeEnd'] == null ? undefined : json['timeEnd'],\n        'updated': json['updated'] == null ? undefined : json['updated'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function AnnotationToJSON(json: any): Annotation {\n    return AnnotationToJSONTyped(json, false);\n}\n\nexport function AnnotationToJSONTyped(value?: Annotation | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertId': value['alertId'],\n        'alertName': value['alertName'],\n        'avatarUrl': value['avatarUrl'],\n        'created': value['created'],\n        'dashboardId': value['dashboardId'],\n        'dashboardUID': value['dashboardUID'],\n        'data': value['data'],\n        'email': value['email'],\n        'id': value['id'],\n        'login': value['login'],\n        'newState': value['newState'],\n        'panelId': value['panelId'],\n        'prevState': value['prevState'],\n        'tags': value['tags'],\n        'text': value['text'],\n        'time': value['time'],\n        'timeEnd': value['timeEnd'],\n        'updated': value['updated'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AnnotationActions\n */\nexport interface AnnotationActions {\n    /**\n     * \n     * @type {boolean}\n     * @memberof AnnotationActions\n     */\n    canAdd?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AnnotationActions\n     */\n    canDelete?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AnnotationActions\n     */\n    canEdit?: boolean;\n}\n\n/**\n * Check if a given object implements the AnnotationActions interface.\n */\nexport function instanceOfAnnotationActions(value: object): value is AnnotationActions {\n    return true;\n}\n\nexport function AnnotationActionsFromJSON(json: any): AnnotationActions {\n    return AnnotationActionsFromJSONTyped(json, false);\n}\n\nexport function AnnotationActionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationActions {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'canAdd': json['canAdd'] == null ? undefined : json['canAdd'],\n        'canDelete': json['canDelete'] == null ? undefined : json['canDelete'],\n        'canEdit': json['canEdit'] == null ? undefined : json['canEdit'],\n    };\n}\n\nexport function AnnotationActionsToJSON(json: any): AnnotationActions {\n    return AnnotationActionsToJSONTyped(json, false);\n}\n\nexport function AnnotationActionsToJSONTyped(value?: AnnotationActions | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'canAdd': value['canAdd'],\n        'canDelete': value['canDelete'],\n        'canEdit': value['canEdit'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * TODO: this should be a regular DataQuery that depends on the selected dashboard\n * these match the properties of the \"grafana\" datasouce that is default in most dashboards\n * @export\n * @interface AnnotationTarget\n */\nexport interface AnnotationTarget {\n    /**\n     * Only required/valid for the grafana datasource...\n     * but code+tests is already depending on it so hard to change\n     * @type {number}\n     * @memberof AnnotationTarget\n     */\n    limit?: number;\n    /**\n     * Only required/valid for the grafana datasource...\n     * but code+tests is already depending on it so hard to change\n     * @type {boolean}\n     * @memberof AnnotationTarget\n     */\n    matchAny?: boolean;\n    /**\n     * Only required/valid for the grafana datasource...\n     * but code+tests is already depending on it so hard to change\n     * @type {Array<string>}\n     * @memberof AnnotationTarget\n     */\n    tags?: Array<string>;\n    /**\n     * Only required/valid for the grafana datasource...\n     * but code+tests is already depending on it so hard to change\n     * @type {string}\n     * @memberof AnnotationTarget\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the AnnotationTarget interface.\n */\nexport function instanceOfAnnotationTarget(value: object): value is AnnotationTarget {\n    return true;\n}\n\nexport function AnnotationTargetFromJSON(json: any): AnnotationTarget {\n    return AnnotationTargetFromJSONTyped(json, false);\n}\n\nexport function AnnotationTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationTarget {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'matchAny': json['matchAny'] == null ? undefined : json['matchAny'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function AnnotationTargetToJSON(json: any): AnnotationTarget {\n    return AnnotationTargetToJSONTyped(json, false);\n}\n\nexport function AnnotationTargetToJSONTyped(value?: AnnotationTarget | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'limit': value['limit'],\n        'matchAny': value['matchAny'],\n        'tags': value['tags'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Ref to a DataSource instance\n * @export\n * @interface DataSourceRef\n */\nexport interface DataSourceRef {\n    /**\n     * The plugin type-id\n     * @type {string}\n     * @memberof DataSourceRef\n     */\n    type?: string;\n    /**\n     * Specific datasource instance\n     * @type {string}\n     * @memberof DataSourceRef\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the DataSourceRef interface.\n */\nexport function instanceOfDataSourceRef(value: object): value is DataSourceRef {\n    return true;\n}\n\nexport function DataSourceRefFromJSON(json: any): DataSourceRef {\n    return DataSourceRefFromJSONTyped(json, false);\n}\n\nexport function DataSourceRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceRef {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function DataSourceRefToJSON(json: any): DataSourceRef {\n    return DataSourceRefToJSONTyped(json, false);\n}\n\nexport function DataSourceRefToJSONTyped(value?: DataSourceRef | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface AnnotationPanelFilter\n */\nexport interface AnnotationPanelFilter {\n    /**\n     * Should the specified panels be included or excluded\n     * @type {boolean}\n     * @memberof AnnotationPanelFilter\n     */\n    exclude?: boolean;\n    /**\n     * Panel IDs that should be included or excluded\n     * @type {Array<number>}\n     * @memberof AnnotationPanelFilter\n     */\n    ids?: Array<number>;\n}\n\n/**\n * Check if a given object implements the AnnotationPanelFilter interface.\n */\nexport function instanceOfAnnotationPanelFilter(value: object): value is AnnotationPanelFilter {\n    return true;\n}\n\nexport function AnnotationPanelFilterFromJSON(json: any): AnnotationPanelFilter {\n    return AnnotationPanelFilterFromJSONTyped(json, false);\n}\n\nexport function AnnotationPanelFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationPanelFilter {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'exclude': json['exclude'] == null ? undefined : json['exclude'],\n        'ids': json['ids'] == null ? undefined : json['ids'],\n    };\n}\n\nexport function AnnotationPanelFilterToJSON(json: any): AnnotationPanelFilter {\n    return AnnotationPanelFilterToJSONTyped(json, false);\n}\n\nexport function AnnotationPanelFilterToJSONTyped(value?: AnnotationPanelFilter | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'exclude': value['exclude'],\n        'ids': value['ids'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AnnotationTarget } from './AnnotationTarget';\nimport {\n    AnnotationTargetFromJSON,\n    AnnotationTargetFromJSONTyped,\n    AnnotationTargetToJSON,\n    AnnotationTargetToJSONTyped,\n} from './AnnotationTarget';\nimport type { DataSourceRef } from './DataSourceRef';\nimport {\n    DataSourceRefFromJSON,\n    DataSourceRefFromJSONTyped,\n    DataSourceRefToJSON,\n    DataSourceRefToJSONTyped,\n} from './DataSourceRef';\nimport type { AnnotationPanelFilter } from './AnnotationPanelFilter';\nimport {\n    AnnotationPanelFilterFromJSON,\n    AnnotationPanelFilterFromJSONTyped,\n    AnnotationPanelFilterToJSON,\n    AnnotationPanelFilterToJSONTyped,\n} from './AnnotationPanelFilter';\n\n/**\n * TODO docs\n * FROM: AnnotationQuery in grafana-data/src/types/annotations.ts\n * @export\n * @interface AnnotationQuery\n */\nexport interface AnnotationQuery {\n    /**\n     * Set to 1 for the standard annotation query all dashboards have by default.\n     * @type {number}\n     * @memberof AnnotationQuery\n     */\n    builtIn?: number;\n    /**\n     * \n     * @type {DataSourceRef}\n     * @memberof AnnotationQuery\n     */\n    datasource?: DataSourceRef;\n    /**\n     * When enabled the annotation query is issued with every dashboard refresh\n     * @type {boolean}\n     * @memberof AnnotationQuery\n     */\n    enable?: boolean;\n    /**\n     * \n     * @type {AnnotationPanelFilter}\n     * @memberof AnnotationQuery\n     */\n    filter?: AnnotationPanelFilter;\n    /**\n     * Annotation queries can be toggled on or off at the top of the dashboard.\n     * When hide is true, the toggle is not shown in the dashboard.\n     * @type {boolean}\n     * @memberof AnnotationQuery\n     */\n    hide?: boolean;\n    /**\n     * Color to use for the annotation event markers\n     * @type {string}\n     * @memberof AnnotationQuery\n     */\n    iconColor?: string;\n    /**\n     * Name of annotation.\n     * @type {string}\n     * @memberof AnnotationQuery\n     */\n    name?: string;\n    /**\n     * \n     * @type {AnnotationTarget}\n     * @memberof AnnotationQuery\n     */\n    target?: AnnotationTarget;\n    /**\n     * TODO -- this should not exist here, it is based on the --grafana-- datasource\n     * @type {string}\n     * @memberof AnnotationQuery\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the AnnotationQuery interface.\n */\nexport function instanceOfAnnotationQuery(value: object): value is AnnotationQuery {\n    return true;\n}\n\nexport function AnnotationQueryFromJSON(json: any): AnnotationQuery {\n    return AnnotationQueryFromJSONTyped(json, false);\n}\n\nexport function AnnotationQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationQuery {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'builtIn': json['builtIn'] == null ? undefined : json['builtIn'],\n        'datasource': json['datasource'] == null ? undefined : DataSourceRefFromJSON(json['datasource']),\n        'enable': json['enable'] == null ? undefined : json['enable'],\n        'filter': json['filter'] == null ? undefined : AnnotationPanelFilterFromJSON(json['filter']),\n        'hide': json['hide'] == null ? undefined : json['hide'],\n        'iconColor': json['iconColor'] == null ? undefined : json['iconColor'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'target': json['target'] == null ? undefined : AnnotationTargetFromJSON(json['target']),\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function AnnotationQueryToJSON(json: any): AnnotationQuery {\n    return AnnotationQueryToJSONTyped(json, false);\n}\n\nexport function AnnotationQueryToJSONTyped(value?: AnnotationQuery | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'builtIn': value['builtIn'],\n        'datasource': DataSourceRefToJSON(value['datasource']),\n        'enable': value['enable'],\n        'filter': AnnotationPanelFilterToJSON(value['filter']),\n        'hide': value['hide'],\n        'iconColor': value['iconColor'],\n        'name': value['name'],\n        'target': AnnotationTargetToJSON(value['target']),\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AnnotationQuery } from './AnnotationQuery';\nimport {\n    AnnotationQueryFromJSON,\n    AnnotationQueryFromJSONTyped,\n    AnnotationQueryToJSON,\n    AnnotationQueryToJSONTyped,\n} from './AnnotationQuery';\n\n/**\n * \n * @export\n * @interface AnnotationEvent\n */\nexport interface AnnotationEvent {\n    /**\n     * \n     * @type {string}\n     * @memberof AnnotationEvent\n     */\n    color?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AnnotationEvent\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AnnotationEvent\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof AnnotationEvent\n     */\n    isRegion?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof AnnotationEvent\n     */\n    panelId?: number;\n    /**\n     * \n     * @type {AnnotationQuery}\n     * @memberof AnnotationEvent\n     */\n    source?: AnnotationQuery;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof AnnotationEvent\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof AnnotationEvent\n     */\n    text?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof AnnotationEvent\n     */\n    time?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof AnnotationEvent\n     */\n    timeEnd?: number;\n}\n\n/**\n * Check if a given object implements the AnnotationEvent interface.\n */\nexport function instanceOfAnnotationEvent(value: object): value is AnnotationEvent {\n    return true;\n}\n\nexport function AnnotationEventFromJSON(json: any): AnnotationEvent {\n    return AnnotationEventFromJSONTyped(json, false);\n}\n\nexport function AnnotationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationEvent {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'color': json['color'] == null ? undefined : json['color'],\n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isRegion': json['isRegion'] == null ? undefined : json['isRegion'],\n        'panelId': json['panelId'] == null ? undefined : json['panelId'],\n        'source': json['source'] == null ? undefined : AnnotationQueryFromJSON(json['source']),\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'time': json['time'] == null ? undefined : json['time'],\n        'timeEnd': json['timeEnd'] == null ? undefined : json['timeEnd'],\n    };\n}\n\nexport function AnnotationEventToJSON(json: any): AnnotationEvent {\n    return AnnotationEventToJSONTyped(json, false);\n}\n\nexport function AnnotationEventToJSONTyped(value?: AnnotationEvent | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'color': value['color'],\n        'dashboardId': value['dashboardId'],\n        'id': value['id'],\n        'isRegion': value['isRegion'],\n        'panelId': value['panelId'],\n        'source': AnnotationQueryToJSON(value['source']),\n        'tags': value['tags'],\n        'text': value['text'],\n        'time': value['time'],\n        'timeEnd': value['timeEnd'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AnnotationActions } from './AnnotationActions';\nimport {\n    AnnotationActionsFromJSON,\n    AnnotationActionsFromJSONTyped,\n    AnnotationActionsToJSON,\n    AnnotationActionsToJSONTyped,\n} from './AnnotationActions';\n\n/**\n * \n * @export\n * @interface AnnotationPermission\n */\nexport interface AnnotationPermission {\n    /**\n     * \n     * @type {AnnotationActions}\n     * @memberof AnnotationPermission\n     */\n    dashboard?: AnnotationActions;\n    /**\n     * \n     * @type {AnnotationActions}\n     * @memberof AnnotationPermission\n     */\n    organization?: AnnotationActions;\n}\n\n/**\n * Check if a given object implements the AnnotationPermission interface.\n */\nexport function instanceOfAnnotationPermission(value: object): value is AnnotationPermission {\n    return true;\n}\n\nexport function AnnotationPermissionFromJSON(json: any): AnnotationPermission {\n    return AnnotationPermissionFromJSONTyped(json, false);\n}\n\nexport function AnnotationPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationPermission {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboard': json['dashboard'] == null ? undefined : AnnotationActionsFromJSON(json['dashboard']),\n        'organization': json['organization'] == null ? undefined : AnnotationActionsFromJSON(json['organization']),\n    };\n}\n\nexport function AnnotationPermissionToJSON(json: any): AnnotationPermission {\n    return AnnotationPermissionToJSONTyped(json, false);\n}\n\nexport function AnnotationPermissionToJSONTyped(value?: AnnotationPermission | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboard': AnnotationActionsToJSON(value['dashboard']),\n        'organization': AnnotationActionsToJSON(value['organization']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ApiKeyDTO\n */\nexport interface ApiKeyDTO {\n    /**\n     * Metadata contains user accesses for a given resource\n     * Ex: map[string]bool{\"create\":true, \"delete\": true}\n     * @type {{ [key: string]: boolean; }}\n     * @memberof ApiKeyDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {Date}\n     * @memberof ApiKeyDTO\n     */\n    expiration?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof ApiKeyDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof ApiKeyDTO\n     */\n    lastUsedAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof ApiKeyDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApiKeyDTO\n     */\n    role?: ApiKeyDTORoleEnum;\n}\n\n\n/**\n * @export\n */\nexport const ApiKeyDTORoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type ApiKeyDTORoleEnum = typeof ApiKeyDTORoleEnum[keyof typeof ApiKeyDTORoleEnum];\n\n\n/**\n * Check if a given object implements the ApiKeyDTO interface.\n */\nexport function instanceOfApiKeyDTO(value: object): value is ApiKeyDTO {\n    return true;\n}\n\nexport function ApiKeyDTOFromJSON(json: any): ApiKeyDTO {\n    return ApiKeyDTOFromJSONTyped(json, false);\n}\n\nexport function ApiKeyDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKeyDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'expiration': json['expiration'] == null ? undefined : (new Date(json['expiration'])),\n        'id': json['id'] == null ? undefined : json['id'],\n        'lastUsedAt': json['lastUsedAt'] == null ? undefined : (new Date(json['lastUsedAt'])),\n        'name': json['name'] == null ? undefined : json['name'],\n        'role': json['role'] == null ? undefined : json['role'],\n    };\n}\n\nexport function ApiKeyDTOToJSON(json: any): ApiKeyDTO {\n    return ApiKeyDTOToJSONTyped(json, false);\n}\n\nexport function ApiKeyDTOToJSONTyped(value?: ApiKeyDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'expiration': value['expiration'] == null ? undefined : ((value['expiration']).toISOString()),\n        'id': value['id'],\n        'lastUsedAt': value['lastUsedAt'] == null ? undefined : ((value['lastUsedAt']).toISOString()),\n        'name': value['name'],\n        'role': value['role'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ApiRuleNode\n */\nexport interface ApiRuleNode {\n    /**\n     * \n     * @type {string}\n     * @memberof ApiRuleNode\n     */\n    alert?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof ApiRuleNode\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof ApiRuleNode\n     */\n    expr?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApiRuleNode\n     */\n    _for?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ApiRuleNode\n     */\n    keepFiringFor?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof ApiRuleNode\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof ApiRuleNode\n     */\n    record?: string;\n}\n\n/**\n * Check if a given object implements the ApiRuleNode interface.\n */\nexport function instanceOfApiRuleNode(value: object): value is ApiRuleNode {\n    return true;\n}\n\nexport function ApiRuleNodeFromJSON(json: any): ApiRuleNode {\n    return ApiRuleNodeFromJSONTyped(json, false);\n}\n\nexport function ApiRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiRuleNode {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alert': json['alert'] == null ? undefined : json['alert'],\n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'expr': json['expr'] == null ? undefined : json['expr'],\n        '_for': json['for'] == null ? undefined : json['for'],\n        'keepFiringFor': json['keep_firing_for'] == null ? undefined : json['keep_firing_for'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'record': json['record'] == null ? undefined : json['record'],\n    };\n}\n\nexport function ApiRuleNodeToJSON(json: any): ApiRuleNode {\n    return ApiRuleNodeToJSONTyped(json, false);\n}\n\nexport function ApiRuleNodeToJSONTyped(value?: ApiRuleNode | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alert': value['alert'],\n        'annotations': value['annotations'],\n        'expr': value['expr'],\n        'for': value['_for'],\n        'keep_firing_for': value['keepFiringFor'],\n        'labels': value['labels'],\n        'record': value['record'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Assignments\n */\nexport interface Assignments {\n    /**\n     * \n     * @type {boolean}\n     * @memberof Assignments\n     */\n    builtInRoles?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Assignments\n     */\n    serviceAccounts?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Assignments\n     */\n    teams?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Assignments\n     */\n    users?: boolean;\n}\n\n/**\n * Check if a given object implements the Assignments interface.\n */\nexport function instanceOfAssignments(value: object): value is Assignments {\n    return true;\n}\n\nexport function AssignmentsFromJSON(json: any): Assignments {\n    return AssignmentsFromJSONTyped(json, false);\n}\n\nexport function AssignmentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Assignments {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'builtInRoles': json['builtInRoles'] == null ? undefined : json['builtInRoles'],\n        'serviceAccounts': json['serviceAccounts'] == null ? undefined : json['serviceAccounts'],\n        'teams': json['teams'] == null ? undefined : json['teams'],\n        'users': json['users'] == null ? undefined : json['users'],\n    };\n}\n\nexport function AssignmentsToJSON(json: any): Assignments {\n    return AssignmentsToJSONTyped(json, false);\n}\n\nexport function AssignmentsToJSONTyped(value?: Assignments | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'builtInRoles': value['builtInRoles'],\n        'serviceAccounts': value['serviceAccounts'],\n        'teams': value['teams'],\n        'users': value['users'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * AttributeTypeAndValue mirrors the ASN.1 structure of the same name in\n * RFC 5280, Section 4.1.2.4.\n * @export\n * @interface AttributeTypeAndValue\n */\nexport interface AttributeTypeAndValue {\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof AttributeTypeAndValue\n     */\n    type?: Array<number>;\n    /**\n     * \n     * @type {object}\n     * @memberof AttributeTypeAndValue\n     */\n    value?: object;\n}\n\n/**\n * Check if a given object implements the AttributeTypeAndValue interface.\n */\nexport function instanceOfAttributeTypeAndValue(value: object): value is AttributeTypeAndValue {\n    return true;\n}\n\nexport function AttributeTypeAndValueFromJSON(json: any): AttributeTypeAndValue {\n    return AttributeTypeAndValueFromJSONTyped(json, false);\n}\n\nexport function AttributeTypeAndValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeTypeAndValue {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'type': json['Type'] == null ? undefined : json['Type'],\n        'value': json['Value'] == null ? undefined : json['Value'],\n    };\n}\n\nexport function AttributeTypeAndValueToJSON(json: any): AttributeTypeAndValue {\n    return AttributeTypeAndValueToJSONTyped(json, false);\n}\n\nexport function AttributeTypeAndValueToJSONTyped(value?: AttributeTypeAndValue | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Type': value['type'],\n        'Value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Authorization\n */\nexport interface Authorization {\n    /**\n     * \n     * @type {string}\n     * @memberof Authorization\n     */\n    credentials?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Authorization\n     */\n    credentialsFile?: string;\n    /**\n     * CredentialsRef is the name of the secret within the secret manager to use as credentials.\n     * @type {string}\n     * @memberof Authorization\n     */\n    credentialsRef?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Authorization\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the Authorization interface.\n */\nexport function instanceOfAuthorization(value: object): value is Authorization {\n    return true;\n}\n\nexport function AuthorizationFromJSON(json: any): Authorization {\n    return AuthorizationFromJSONTyped(json, false);\n}\n\nexport function AuthorizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authorization {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'credentials': json['credentials'] == null ? undefined : json['credentials'],\n        'credentialsFile': json['credentials_file'] == null ? undefined : json['credentials_file'],\n        'credentialsRef': json['credentials_ref'] == null ? undefined : json['credentials_ref'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function AuthorizationToJSON(json: any): Authorization {\n    return AuthorizationToJSONTyped(json, false);\n}\n\nexport function AuthorizationToJSONTyped(value?: Authorization | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'credentials': value['credentials'],\n        'credentials_file': value['credentialsFile'],\n        'credentials_ref': value['credentialsRef'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\n\n/**\n * \n * @export\n * @interface BacktestConfig\n */\nexport interface BacktestConfig {\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof BacktestConfig\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof BacktestConfig\n     */\n    condition?: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof BacktestConfig\n     */\n    data?: Array<AlertQuery>;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof BacktestConfig\n     */\n    _for?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof BacktestConfig\n     */\n    from?: Date;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof BacktestConfig\n     */\n    interval?: number;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof BacktestConfig\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof BacktestConfig\n     */\n    noDataState?: BacktestConfigNoDataStateEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof BacktestConfig\n     */\n    title?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof BacktestConfig\n     */\n    to?: Date;\n}\n\n\n/**\n * @export\n */\nexport const BacktestConfigNoDataStateEnum = {\n    Alerting: 'Alerting',\n    NoData: 'NoData',\n    Ok: 'OK'\n} as const;\nexport type BacktestConfigNoDataStateEnum = typeof BacktestConfigNoDataStateEnum[keyof typeof BacktestConfigNoDataStateEnum];\n\n\n/**\n * Check if a given object implements the BacktestConfig interface.\n */\nexport function instanceOfBacktestConfig(value: object): value is BacktestConfig {\n    return true;\n}\n\nexport function BacktestConfigFromJSON(json: any): BacktestConfig {\n    return BacktestConfigFromJSONTyped(json, false);\n}\n\nexport function BacktestConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): BacktestConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        '_for': json['for'] == null ? undefined : json['for'],\n        'from': json['from'] == null ? undefined : (new Date(json['from'])),\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'noDataState': json['no_data_state'] == null ? undefined : json['no_data_state'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'to': json['to'] == null ? undefined : (new Date(json['to'])),\n    };\n}\n\nexport function BacktestConfigToJSON(json: any): BacktestConfig {\n    return BacktestConfigToJSONTyped(json, false);\n}\n\nexport function BacktestConfigToJSONTyped(value?: BacktestConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'condition': value['condition'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'for': value['_for'],\n        'from': value['from'] == null ? undefined : ((value['from']).toISOString()),\n        'interval': value['interval'],\n        'labels': value['labels'],\n        'no_data_state': value['noDataState'],\n        'title': value['title'],\n        'to': value['to'] == null ? undefined : ((value['to']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface BasicAuth\n */\nexport interface BasicAuth {\n    /**\n     * \n     * @type {string}\n     * @memberof BasicAuth\n     */\n    password?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BasicAuth\n     */\n    passwordFile?: string;\n    /**\n     * PasswordRef is the name of the secret within the secret manager to use as the password.\n     * @type {string}\n     * @memberof BasicAuth\n     */\n    passwordRef?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BasicAuth\n     */\n    username?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof BasicAuth\n     */\n    usernameFile?: string;\n    /**\n     * UsernameRef is the name of the secret within the secret manager to use as the username.\n     * @type {string}\n     * @memberof BasicAuth\n     */\n    usernameRef?: string;\n}\n\n/**\n * Check if a given object implements the BasicAuth interface.\n */\nexport function instanceOfBasicAuth(value: object): value is BasicAuth {\n    return true;\n}\n\nexport function BasicAuthFromJSON(json: any): BasicAuth {\n    return BasicAuthFromJSONTyped(json, false);\n}\n\nexport function BasicAuthFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicAuth {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'password': json['password'] == null ? undefined : json['password'],\n        'passwordFile': json['password_file'] == null ? undefined : json['password_file'],\n        'passwordRef': json['password_ref'] == null ? undefined : json['password_ref'],\n        'username': json['username'] == null ? undefined : json['username'],\n        'usernameFile': json['username_file'] == null ? undefined : json['username_file'],\n        'usernameRef': json['username_ref'] == null ? undefined : json['username_ref'],\n    };\n}\n\nexport function BasicAuthToJSON(json: any): BasicAuth {\n    return BasicAuthToJSONTyped(json, false);\n}\n\nexport function BasicAuthToJSONTyped(value?: BasicAuth | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'password': value['password'],\n        'password_file': value['passwordFile'],\n        'password_ref': value['passwordRef'],\n        'username': value['username'],\n        'username_file': value['usernameFile'],\n        'username_ref': value['usernameRef'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Config defines the internal representation of a cache configuration, including fields not set by the API caller\n * @export\n * @interface CacheConfig\n */\nexport interface CacheConfig {\n    /**\n     * \n     * @type {Date}\n     * @memberof CacheConfig\n     */\n    created?: Date;\n    /**\n     * Fields that can be set by the API caller - read/write\n     * @type {number}\n     * @memberof CacheConfig\n     */\n    dataSourceID?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CacheConfig\n     */\n    dataSourceUID?: string;\n    /**\n     * These are returned by the HTTP API, but are managed internally - read-only\n     * Note: 'created' and 'updated' are special properties managed automatically by xorm, but we are setting them manually\n     * @type {number}\n     * @memberof CacheConfig\n     */\n    defaultTTLMs?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CacheConfig\n     */\n    enabled?: boolean;\n    /**\n     * TTL MS, or \"time to live\", is how long a cached item will stay in the cache before it is removed (in milliseconds)\n     * @type {number}\n     * @memberof CacheConfig\n     */\n    ttlQueriesMs?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CacheConfig\n     */\n    ttlResourcesMs?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof CacheConfig\n     */\n    updated?: Date;\n    /**\n     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini\n     * @type {boolean}\n     * @memberof CacheConfig\n     */\n    useDefaultTTL?: boolean;\n}\n\n/**\n * Check if a given object implements the CacheConfig interface.\n */\nexport function instanceOfCacheConfig(value: object): value is CacheConfig {\n    return true;\n}\n\nexport function CacheConfigFromJSON(json: any): CacheConfig {\n    return CacheConfigFromJSONTyped(json, false);\n}\n\nexport function CacheConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'dataSourceID': json['dataSourceID'] == null ? undefined : json['dataSourceID'],\n        'dataSourceUID': json['dataSourceUID'] == null ? undefined : json['dataSourceUID'],\n        'defaultTTLMs': json['defaultTTLMs'] == null ? undefined : json['defaultTTLMs'],\n        'enabled': json['enabled'] == null ? undefined : json['enabled'],\n        'ttlQueriesMs': json['ttlQueriesMs'] == null ? undefined : json['ttlQueriesMs'],\n        'ttlResourcesMs': json['ttlResourcesMs'] == null ? undefined : json['ttlResourcesMs'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'useDefaultTTL': json['useDefaultTTL'] == null ? undefined : json['useDefaultTTL'],\n    };\n}\n\nexport function CacheConfigToJSON(json: any): CacheConfig {\n    return CacheConfigToJSONTyped(json, false);\n}\n\nexport function CacheConfigToJSONTyped(value?: CacheConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'dataSourceID': value['dataSourceID'],\n        'dataSourceUID': value['dataSourceUID'],\n        'defaultTTLMs': value['defaultTTLMs'],\n        'enabled': value['enabled'],\n        'ttlQueriesMs': value['ttlQueriesMs'],\n        'ttlResourcesMs': value['ttlResourcesMs'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'useDefaultTTL': value['useDefaultTTL'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CacheConfigResponse\n */\nexport interface CacheConfigResponse {\n    /**\n     * \n     * @type {Date}\n     * @memberof CacheConfigResponse\n     */\n    created?: Date;\n    /**\n     * Fields that can be set by the API caller - read/write\n     * @type {number}\n     * @memberof CacheConfigResponse\n     */\n    dataSourceID?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CacheConfigResponse\n     */\n    dataSourceUID?: string;\n    /**\n     * These are returned by the HTTP API, but are managed internally - read-only\n     * Note: 'created' and 'updated' are special properties managed automatically by xorm, but we are setting them manually\n     * @type {number}\n     * @memberof CacheConfigResponse\n     */\n    defaultTTLMs?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CacheConfigResponse\n     */\n    enabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof CacheConfigResponse\n     */\n    message?: string;\n    /**\n     * TTL MS, or \"time to live\", is how long a cached item will stay in the cache before it is removed (in milliseconds)\n     * @type {number}\n     * @memberof CacheConfigResponse\n     */\n    ttlQueriesMs?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CacheConfigResponse\n     */\n    ttlResourcesMs?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof CacheConfigResponse\n     */\n    updated?: Date;\n    /**\n     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini\n     * @type {boolean}\n     * @memberof CacheConfigResponse\n     */\n    useDefaultTTL?: boolean;\n}\n\n/**\n * Check if a given object implements the CacheConfigResponse interface.\n */\nexport function instanceOfCacheConfigResponse(value: object): value is CacheConfigResponse {\n    return true;\n}\n\nexport function CacheConfigResponseFromJSON(json: any): CacheConfigResponse {\n    return CacheConfigResponseFromJSONTyped(json, false);\n}\n\nexport function CacheConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfigResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'dataSourceID': json['dataSourceID'] == null ? undefined : json['dataSourceID'],\n        'dataSourceUID': json['dataSourceUID'] == null ? undefined : json['dataSourceUID'],\n        'defaultTTLMs': json['defaultTTLMs'] == null ? undefined : json['defaultTTLMs'],\n        'enabled': json['enabled'] == null ? undefined : json['enabled'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'ttlQueriesMs': json['ttlQueriesMs'] == null ? undefined : json['ttlQueriesMs'],\n        'ttlResourcesMs': json['ttlResourcesMs'] == null ? undefined : json['ttlResourcesMs'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'useDefaultTTL': json['useDefaultTTL'] == null ? undefined : json['useDefaultTTL'],\n    };\n}\n\nexport function CacheConfigResponseToJSON(json: any): CacheConfigResponse {\n    return CacheConfigResponseToJSONTyped(json, false);\n}\n\nexport function CacheConfigResponseToJSONTyped(value?: CacheConfigResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'dataSourceID': value['dataSourceID'],\n        'dataSourceUID': value['dataSourceUID'],\n        'defaultTTLMs': value['defaultTTLMs'],\n        'enabled': value['enabled'],\n        'message': value['message'],\n        'ttlQueriesMs': value['ttlQueriesMs'],\n        'ttlResourcesMs': value['ttlResourcesMs'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'useDefaultTTL': value['useDefaultTTL'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * ConfigSetter defines the cache parameters that users can configure per datasource\n * This is only intended to be consumed by the SetCache HTTP Handler\n * @export\n * @interface CacheConfigSetter\n */\nexport interface CacheConfigSetter {\n    /**\n     * \n     * @type {number}\n     * @memberof CacheConfigSetter\n     */\n    dataSourceID?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CacheConfigSetter\n     */\n    dataSourceUID?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CacheConfigSetter\n     */\n    enabled?: boolean;\n    /**\n     * TTL MS, or \"time to live\", is how long a cached item will stay in the cache before it is removed (in milliseconds)\n     * @type {number}\n     * @memberof CacheConfigSetter\n     */\n    ttlQueriesMs?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof CacheConfigSetter\n     */\n    ttlResourcesMs?: number;\n    /**\n     * If UseDefaultTTL is enabled, then the TTLQueriesMS and TTLResourcesMS in this object is always sent as the default TTL located in grafana.ini\n     * @type {boolean}\n     * @memberof CacheConfigSetter\n     */\n    useDefaultTTL?: boolean;\n}\n\n/**\n * Check if a given object implements the CacheConfigSetter interface.\n */\nexport function instanceOfCacheConfigSetter(value: object): value is CacheConfigSetter {\n    return true;\n}\n\nexport function CacheConfigSetterFromJSON(json: any): CacheConfigSetter {\n    return CacheConfigSetterFromJSONTyped(json, false);\n}\n\nexport function CacheConfigSetterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CacheConfigSetter {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dataSourceID': json['dataSourceID'] == null ? undefined : json['dataSourceID'],\n        'dataSourceUID': json['dataSourceUID'] == null ? undefined : json['dataSourceUID'],\n        'enabled': json['enabled'] == null ? undefined : json['enabled'],\n        'ttlQueriesMs': json['ttlQueriesMs'] == null ? undefined : json['ttlQueriesMs'],\n        'ttlResourcesMs': json['ttlResourcesMs'] == null ? undefined : json['ttlResourcesMs'],\n        'useDefaultTTL': json['useDefaultTTL'] == null ? undefined : json['useDefaultTTL'],\n    };\n}\n\nexport function CacheConfigSetterToJSON(json: any): CacheConfigSetter {\n    return CacheConfigSetterToJSONTyped(json, false);\n}\n\nexport function CacheConfigSetterToJSONTyped(value?: CacheConfigSetter | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dataSourceID': value['dataSourceID'],\n        'dataSourceUID': value['dataSourceUID'],\n        'enabled': value['enabled'],\n        'ttlQueriesMs': value['ttlQueriesMs'],\n        'ttlResourcesMs': value['ttlResourcesMs'],\n        'useDefaultTTL': value['useDefaultTTL'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CalculateDiffTarget\n */\nexport interface CalculateDiffTarget {\n    /**\n     * \n     * @type {number}\n     * @memberof CalculateDiffTarget\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {object}\n     * @memberof CalculateDiffTarget\n     */\n    unsavedDashboard?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof CalculateDiffTarget\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the CalculateDiffTarget interface.\n */\nexport function instanceOfCalculateDiffTarget(value: object): value is CalculateDiffTarget {\n    return true;\n}\n\nexport function CalculateDiffTargetFromJSON(json: any): CalculateDiffTarget {\n    return CalculateDiffTargetFromJSONTyped(json, false);\n}\n\nexport function CalculateDiffTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateDiffTarget {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'unsavedDashboard': json['unsavedDashboard'] == null ? undefined : json['unsavedDashboard'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function CalculateDiffTargetToJSON(json: any): CalculateDiffTarget {\n    return CalculateDiffTargetToJSONTyped(json, false);\n}\n\nexport function CalculateDiffTargetToJSONTyped(value?: CalculateDiffTarget | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboardId': value['dashboardId'],\n        'unsavedDashboard': value['unsavedDashboard'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { CalculateDiffTarget } from './CalculateDiffTarget';\nimport {\n    CalculateDiffTargetFromJSON,\n    CalculateDiffTargetFromJSONTyped,\n    CalculateDiffTargetToJSON,\n    CalculateDiffTargetToJSONTyped,\n} from './CalculateDiffTarget';\n\n/**\n * \n * @export\n * @interface CalculateDashboardDiffRequest\n */\nexport interface CalculateDashboardDiffRequest {\n    /**\n     * \n     * @type {CalculateDiffTarget}\n     * @memberof CalculateDashboardDiffRequest\n     */\n    base?: CalculateDiffTarget;\n    /**\n     * The type of diff to return\n     * Description:\n     * `basic`\n     * `json`\n     * @type {string}\n     * @memberof CalculateDashboardDiffRequest\n     */\n    diffType?: CalculateDashboardDiffRequestDiffTypeEnum;\n    /**\n     * \n     * @type {CalculateDiffTarget}\n     * @memberof CalculateDashboardDiffRequest\n     */\n    _new?: CalculateDiffTarget;\n}\n\n\n/**\n * @export\n */\nexport const CalculateDashboardDiffRequestDiffTypeEnum = {\n    Basic: 'basic',\n    Json: 'json'\n} as const;\nexport type CalculateDashboardDiffRequestDiffTypeEnum = typeof CalculateDashboardDiffRequestDiffTypeEnum[keyof typeof CalculateDashboardDiffRequestDiffTypeEnum];\n\n\n/**\n * Check if a given object implements the CalculateDashboardDiffRequest interface.\n */\nexport function instanceOfCalculateDashboardDiffRequest(value: object): value is CalculateDashboardDiffRequest {\n    return true;\n}\n\nexport function CalculateDashboardDiffRequestFromJSON(json: any): CalculateDashboardDiffRequest {\n    return CalculateDashboardDiffRequestFromJSONTyped(json, false);\n}\n\nexport function CalculateDashboardDiffRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateDashboardDiffRequest {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'base': json['base'] == null ? undefined : CalculateDiffTargetFromJSON(json['base']),\n        'diffType': json['diffType'] == null ? undefined : json['diffType'],\n        '_new': json['new'] == null ? undefined : CalculateDiffTargetFromJSON(json['new']),\n    };\n}\n\nexport function CalculateDashboardDiffRequestToJSON(json: any): CalculateDashboardDiffRequest {\n    return CalculateDashboardDiffRequestToJSONTyped(json, false);\n}\n\nexport function CalculateDashboardDiffRequestToJSONTyped(value?: CalculateDashboardDiffRequest | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'base': CalculateDiffTargetToJSON(value['base']),\n        'diffType': value['diffType'],\n        'new': CalculateDiffTargetToJSON(value['_new']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Extension represents the ASN.1 structure of the same name. See RFC\n * 5280, section 4.2.\n * @export\n * @interface Extension\n */\nexport interface Extension {\n    /**\n     * \n     * @type {boolean}\n     * @memberof Extension\n     */\n    critical?: boolean;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Extension\n     */\n    id?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Extension\n     */\n    value?: Array<number>;\n}\n\n/**\n * Check if a given object implements the Extension interface.\n */\nexport function instanceOfExtension(value: object): value is Extension {\n    return true;\n}\n\nexport function ExtensionFromJSON(json: any): Extension {\n    return ExtensionFromJSONTyped(json, false);\n}\n\nexport function ExtensionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Extension {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'critical': json['Critical'] == null ? undefined : json['Critical'],\n        'id': json['Id'] == null ? undefined : json['Id'],\n        'value': json['Value'] == null ? undefined : json['Value'],\n    };\n}\n\nexport function ExtensionToJSON(json: any): Extension {\n    return ExtensionToJSONTyped(json, false);\n}\n\nexport function ExtensionToJSONTyped(value?: Extension | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Critical': value['critical'],\n        'Id': value['id'],\n        'Value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface IPNet\n */\nexport interface IPNet {\n    /**\n     * \n     * @type {string}\n     * @memberof IPNet\n     */\n    iP?: string;\n    /**\n     * See type [IPNet] and func [ParseCIDR] for details.\n     * @type {Array<number>}\n     * @memberof IPNet\n     */\n    mask?: Array<number>;\n}\n\n/**\n * Check if a given object implements the IPNet interface.\n */\nexport function instanceOfIPNet(value: object): value is IPNet {\n    return true;\n}\n\nexport function IPNetFromJSON(json: any): IPNet {\n    return IPNetFromJSONTyped(json, false);\n}\n\nexport function IPNetFromJSONTyped(json: any, ignoreDiscriminator: boolean): IPNet {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'iP': json['IP'] == null ? undefined : json['IP'],\n        'mask': json['Mask'] == null ? undefined : json['Mask'],\n    };\n}\n\nexport function IPNetToJSON(json: any): IPNet {\n    return IPNetToJSONTyped(json, false);\n}\n\nexport function IPNetToJSONTyped(value?: IPNet | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'IP': value['iP'],\n        'Mask': value['mask'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * The general form represented is:\n * \n * [scheme:][//[userinfo@]host][/]path[?query][#fragment]\n * \n * URLs that do not start with a slash after the scheme are interpreted as:\n * \n * scheme:opaque[?query][#fragment]\n * \n * The Host field contains the host and port subcomponents of the URL.\n * When the port is present, it is separated from the host with a colon.\n * When the host is an IPv6 address, it must be enclosed in square brackets:\n * \"[fe80::1]:80\". The [net.JoinHostPort] function combines a host and port\n * into a string suitable for the Host field, adding square brackets to\n * the host when necessary.\n * \n * Note that the Path field is stored in decoded form: /%47%6f%2f becomes /Go/.\n * A consequence is that it is impossible to tell which slashes in the Path were\n * slashes in the raw URL and which were %2f. This distinction is rarely important,\n * but when it is, the code should use the [URL.EscapedPath] method, which preserves\n * the original encoding of Path.\n * \n * The RawPath field is an optional field which is only set when the default\n * encoding of Path is different from the escaped path. See the EscapedPath method\n * for more details.\n * \n * URL's String method uses the EscapedPath method to obtain the path.\n * @export\n * @interface URL\n */\nexport interface URL {\n    /**\n     * \n     * @type {boolean}\n     * @memberof URL\n     */\n    forceQuery?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    fragment?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    host?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof URL\n     */\n    omitHost?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    opaque?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    rawFragment?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    rawPath?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    rawQuery?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof URL\n     */\n    scheme?: string;\n    /**\n     * The Userinfo type is an immutable encapsulation of username and\n     * password details for a [URL]. An existing Userinfo value is guaranteed\n     * to have a username set (potentially empty, as allowed by RFC 2396),\n     * and optionally a password.\n     * @type {object}\n     * @memberof URL\n     */\n    user?: object;\n}\n\n/**\n * Check if a given object implements the URL interface.\n */\nexport function instanceOfURL(value: object): value is URL {\n    return true;\n}\n\nexport function URLFromJSON(json: any): URL {\n    return URLFromJSONTyped(json, false);\n}\n\nexport function URLFromJSONTyped(json: any, ignoreDiscriminator: boolean): URL {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'forceQuery': json['ForceQuery'] == null ? undefined : json['ForceQuery'],\n        'fragment': json['Fragment'] == null ? undefined : json['Fragment'],\n        'host': json['Host'] == null ? undefined : json['Host'],\n        'omitHost': json['OmitHost'] == null ? undefined : json['OmitHost'],\n        'opaque': json['Opaque'] == null ? undefined : json['Opaque'],\n        'path': json['Path'] == null ? undefined : json['Path'],\n        'rawFragment': json['RawFragment'] == null ? undefined : json['RawFragment'],\n        'rawPath': json['RawPath'] == null ? undefined : json['RawPath'],\n        'rawQuery': json['RawQuery'] == null ? undefined : json['RawQuery'],\n        'scheme': json['Scheme'] == null ? undefined : json['Scheme'],\n        'user': json['User'] == null ? undefined : json['User'],\n    };\n}\n\nexport function URLToJSON(json: any): URL {\n    return URLToJSONTyped(json, false);\n}\n\nexport function URLToJSONTyped(value?: URL | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'ForceQuery': value['forceQuery'],\n        'Fragment': value['fragment'],\n        'Host': value['host'],\n        'OmitHost': value['omitHost'],\n        'Opaque': value['opaque'],\n        'Path': value['path'],\n        'RawFragment': value['rawFragment'],\n        'RawPath': value['rawPath'],\n        'RawQuery': value['rawQuery'],\n        'Scheme': value['scheme'],\n        'User': value['user'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AttributeTypeAndValue } from './AttributeTypeAndValue';\nimport {\n    AttributeTypeAndValueFromJSON,\n    AttributeTypeAndValueFromJSONTyped,\n    AttributeTypeAndValueToJSON,\n    AttributeTypeAndValueToJSONTyped,\n} from './AttributeTypeAndValue';\n\n/**\n * Name represents an X.509 distinguished name. This only includes the common\n * elements of a DN. Note that Name is only an approximation of the X.509\n * structure. If an accurate representation is needed, asn1.Unmarshal the raw\n * subject or issuer as an [RDNSequence].\n * @export\n * @interface Name\n */\nexport interface Name {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Name\n     */\n    country?: Array<string>;\n    /**\n     * ExtraNames contains attributes to be copied, raw, into any marshaled\n     * distinguished names. Values override any attributes with the same OID.\n     * The ExtraNames field is not populated when parsing, see Names.\n     * @type {Array<AttributeTypeAndValue>}\n     * @memberof Name\n     */\n    extraNames?: Array<AttributeTypeAndValue>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Name\n     */\n    locality?: Array<string>;\n    /**\n     * Names contains all parsed attributes. When parsing distinguished names,\n     * this can be used to extract non-standard attributes that are not parsed\n     * by this package. When marshaling to RDNSequences, the Names field is\n     * ignored, see ExtraNames.\n     * @type {Array<AttributeTypeAndValue>}\n     * @memberof Name\n     */\n    names?: Array<AttributeTypeAndValue>;\n    /**\n     * \n     * @type {string}\n     * @memberof Name\n     */\n    serialNumber?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Name\n     */\n    streetAddress?: Array<string>;\n}\n\n/**\n * Check if a given object implements the Name interface.\n */\nexport function instanceOfName(value: object): value is Name {\n    return true;\n}\n\nexport function NameFromJSON(json: any): Name {\n    return NameFromJSONTyped(json, false);\n}\n\nexport function NameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Name {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'country': json['Country'] == null ? undefined : json['Country'],\n        'extraNames': json['ExtraNames'] == null ? undefined : ((json['ExtraNames'] as Array<any>).map(AttributeTypeAndValueFromJSON)),\n        'locality': json['Locality'] == null ? undefined : json['Locality'],\n        'names': json['Names'] == null ? undefined : ((json['Names'] as Array<any>).map(AttributeTypeAndValueFromJSON)),\n        'serialNumber': json['SerialNumber'] == null ? undefined : json['SerialNumber'],\n        'streetAddress': json['StreetAddress'] == null ? undefined : json['StreetAddress'],\n    };\n}\n\nexport function NameToJSON(json: any): Name {\n    return NameToJSONTyped(json, false);\n}\n\nexport function NameToJSONTyped(value?: Name | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Country': value['country'],\n        'ExtraNames': value['extraNames'] == null ? undefined : ((value['extraNames'] as Array<any>).map(AttributeTypeAndValueToJSON)),\n        'Locality': value['locality'],\n        'Names': value['names'] == null ? undefined : ((value['names'] as Array<any>).map(AttributeTypeAndValueToJSON)),\n        'SerialNumber': value['serialNumber'],\n        'StreetAddress': value['streetAddress'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Extension } from './Extension';\nimport {\n    ExtensionFromJSON,\n    ExtensionFromJSONTyped,\n    ExtensionToJSON,\n    ExtensionToJSONTyped,\n} from './Extension';\nimport type { IPNet } from './IPNet';\nimport {\n    IPNetFromJSON,\n    IPNetFromJSONTyped,\n    IPNetToJSON,\n    IPNetToJSONTyped,\n} from './IPNet';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\nimport type { Name } from './Name';\nimport {\n    NameFromJSON,\n    NameFromJSONTyped,\n    NameToJSON,\n    NameToJSONTyped,\n} from './Name';\n\n/**\n * \n * @export\n * @interface Certificate\n */\nexport interface Certificate {\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    authorityKeyId?: Array<number>;\n    /**\n     * BasicConstraintsValid indicates whether IsCA, MaxPathLen,\n     * and MaxPathLenZero are valid.\n     * @type {boolean}\n     * @memberof Certificate\n     */\n    basicConstraintsValid?: boolean;\n    /**\n     * CRL Distribution Points\n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    cRLDistributionPoints?: Array<string>;\n    /**\n     * Subject Alternate Name values. (Note that these values may not be valid\n     * if invalid values were contained within a parsed certificate. For\n     * example, an element of DNSNames may not be a valid DNS domain name.)\n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    dNSNames?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    emailAddresses?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    excludedDNSDomains?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    excludedEmailAddresses?: Array<string>;\n    /**\n     * \n     * @type {Array<IPNet>}\n     * @memberof Certificate\n     */\n    excludedIPRanges?: Array<IPNet>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    excludedURIDomains?: Array<string>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    extKeyUsage?: Array<number>;\n    /**\n     * Extensions contains raw X.509 extensions. When parsing certificates,\n     * this can be used to extract non-critical extensions that are not\n     * parsed by this package. When marshaling certificates, the Extensions\n     * field is ignored, see ExtraExtensions.\n     * @type {Array<Extension>}\n     * @memberof Certificate\n     */\n    extensions?: Array<Extension>;\n    /**\n     * ExtraExtensions contains extensions to be copied, raw, into any\n     * marshaled certificates. Values override any extensions that would\n     * otherwise be produced based on the other fields. The ExtraExtensions\n     * field is not populated when parsing certificates, see Extensions.\n     * @type {Array<Extension>}\n     * @memberof Certificate\n     */\n    extraExtensions?: Array<Extension>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    iPAddresses?: Array<string>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Certificate\n     */\n    isCA?: boolean;\n    /**\n     * \n     * @type {Name}\n     * @memberof Certificate\n     */\n    issuer?: Name;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    issuingCertificateURL?: Array<string>;\n    /**\n     * KeyUsage represents the set of actions that are valid for a given key. It's\n     * a bitmap of the KeyUsage* constants.\n     * @type {number}\n     * @memberof Certificate\n     */\n    keyUsage?: number;\n    /**\n     * MaxPathLen and MaxPathLenZero indicate the presence and\n     * value of the BasicConstraints' \"pathLenConstraint\".\n     * \n     * When parsing a certificate, a positive non-zero MaxPathLen\n     * means that the field was specified, -1 means it was unset,\n     * and MaxPathLenZero being true mean that the field was\n     * explicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false\n     * should be treated equivalent to -1 (unset).\n     * \n     * When generating a certificate, an unset pathLenConstraint\n     * can be requested with either MaxPathLen == -1 or using the\n     * zero value for both MaxPathLen and MaxPathLenZero.\n     * @type {number}\n     * @memberof Certificate\n     */\n    maxPathLen?: number;\n    /**\n     * MaxPathLenZero indicates that BasicConstraintsValid==true\n     * and MaxPathLen==0 should be interpreted as an actual\n     * maximum path length of zero. Otherwise, that combination is\n     * interpreted as MaxPathLen not being set.\n     * @type {boolean}\n     * @memberof Certificate\n     */\n    maxPathLenZero?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof Certificate\n     */\n    notBefore?: Date;\n    /**\n     * RFC 5280, 4.2.2.1 (Authority Information Access)\n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    oCSPServer?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    permittedDNSDomains?: Array<string>;\n    /**\n     * Name constraints\n     * @type {boolean}\n     * @memberof Certificate\n     */\n    permittedDNSDomainsCritical?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    permittedEmailAddresses?: Array<string>;\n    /**\n     * \n     * @type {Array<IPNet>}\n     * @memberof Certificate\n     */\n    permittedIPRanges?: Array<IPNet>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    permittedURIDomains?: Array<string>;\n    /**\n     * Policies contains all policy identifiers included in the certificate.\n     * In Go 1.22, encoding/gob cannot handle and ignores this field.\n     * @type {Array<string>}\n     * @memberof Certificate\n     */\n    policies?: Array<string>;\n    /**\n     * PolicyIdentifiers contains asn1.ObjectIdentifiers, the components\n     * of which are limited to int32. If a certificate contains a policy which\n     * cannot be represented by asn1.ObjectIdentifier, it will not be included in\n     * PolicyIdentifiers, but will be present in Policies, which contains all parsed\n     * policy OIDs.\n     * @type {Array<Array<number>>}\n     * @memberof Certificate\n     */\n    policyIdentifiers?: Array<Array<number>>;\n    /**\n     * \n     * @type {object}\n     * @memberof Certificate\n     */\n    publicKey?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof Certificate\n     */\n    publicKeyAlgorithm?: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    raw?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    rawIssuer?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    rawSubject?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    rawSubjectPublicKeyInfo?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    rawTBSCertificate?: Array<number>;\n    /**\n     * \n     * @type {string}\n     * @memberof Certificate\n     */\n    serialNumber?: string;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    signature?: Array<number>;\n    /**\n     * \n     * @type {number}\n     * @memberof Certificate\n     */\n    signatureAlgorithm?: number;\n    /**\n     * \n     * @type {Name}\n     * @memberof Certificate\n     */\n    subject?: Name;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof Certificate\n     */\n    subjectKeyId?: Array<number>;\n    /**\n     * \n     * @type {Array<URL>}\n     * @memberof Certificate\n     */\n    uRIs?: Array<URL>;\n    /**\n     * UnhandledCriticalExtensions contains a list of extension IDs that\n     * were not (fully) processed when parsing. Verify will fail if this\n     * slice is non-empty, unless verification is delegated to an OS\n     * library which understands all the critical extensions.\n     * \n     * Users can access these extensions using Extensions and can remove\n     * elements from this slice if they believe that they have been\n     * handled.\n     * @type {Array<Array<number>>}\n     * @memberof Certificate\n     */\n    unhandledCriticalExtensions?: Array<Array<number>>;\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof Certificate\n     */\n    unknownExtKeyUsage?: Array<Array<number>>;\n    /**\n     * \n     * @type {number}\n     * @memberof Certificate\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the Certificate interface.\n */\nexport function instanceOfCertificate(value: object): value is Certificate {\n    return true;\n}\n\nexport function CertificateFromJSON(json: any): Certificate {\n    return CertificateFromJSONTyped(json, false);\n}\n\nexport function CertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Certificate {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authorityKeyId': json['AuthorityKeyId'] == null ? undefined : json['AuthorityKeyId'],\n        'basicConstraintsValid': json['BasicConstraintsValid'] == null ? undefined : json['BasicConstraintsValid'],\n        'cRLDistributionPoints': json['CRLDistributionPoints'] == null ? undefined : json['CRLDistributionPoints'],\n        'dNSNames': json['DNSNames'] == null ? undefined : json['DNSNames'],\n        'emailAddresses': json['EmailAddresses'] == null ? undefined : json['EmailAddresses'],\n        'excludedDNSDomains': json['ExcludedDNSDomains'] == null ? undefined : json['ExcludedDNSDomains'],\n        'excludedEmailAddresses': json['ExcludedEmailAddresses'] == null ? undefined : json['ExcludedEmailAddresses'],\n        'excludedIPRanges': json['ExcludedIPRanges'] == null ? undefined : ((json['ExcludedIPRanges'] as Array<any>).map(IPNetFromJSON)),\n        'excludedURIDomains': json['ExcludedURIDomains'] == null ? undefined : json['ExcludedURIDomains'],\n        'extKeyUsage': json['ExtKeyUsage'] == null ? undefined : json['ExtKeyUsage'],\n        'extensions': json['Extensions'] == null ? undefined : ((json['Extensions'] as Array<any>).map(ExtensionFromJSON)),\n        'extraExtensions': json['ExtraExtensions'] == null ? undefined : ((json['ExtraExtensions'] as Array<any>).map(ExtensionFromJSON)),\n        'iPAddresses': json['IPAddresses'] == null ? undefined : json['IPAddresses'],\n        'isCA': json['IsCA'] == null ? undefined : json['IsCA'],\n        'issuer': json['Issuer'] == null ? undefined : NameFromJSON(json['Issuer']),\n        'issuingCertificateURL': json['IssuingCertificateURL'] == null ? undefined : json['IssuingCertificateURL'],\n        'keyUsage': json['KeyUsage'] == null ? undefined : json['KeyUsage'],\n        'maxPathLen': json['MaxPathLen'] == null ? undefined : json['MaxPathLen'],\n        'maxPathLenZero': json['MaxPathLenZero'] == null ? undefined : json['MaxPathLenZero'],\n        'notBefore': json['NotBefore'] == null ? undefined : (new Date(json['NotBefore'])),\n        'oCSPServer': json['OCSPServer'] == null ? undefined : json['OCSPServer'],\n        'permittedDNSDomains': json['PermittedDNSDomains'] == null ? undefined : json['PermittedDNSDomains'],\n        'permittedDNSDomainsCritical': json['PermittedDNSDomainsCritical'] == null ? undefined : json['PermittedDNSDomainsCritical'],\n        'permittedEmailAddresses': json['PermittedEmailAddresses'] == null ? undefined : json['PermittedEmailAddresses'],\n        'permittedIPRanges': json['PermittedIPRanges'] == null ? undefined : ((json['PermittedIPRanges'] as Array<any>).map(IPNetFromJSON)),\n        'permittedURIDomains': json['PermittedURIDomains'] == null ? undefined : json['PermittedURIDomains'],\n        'policies': json['Policies'] == null ? undefined : json['Policies'],\n        'policyIdentifiers': json['PolicyIdentifiers'] == null ? undefined : json['PolicyIdentifiers'],\n        'publicKey': json['PublicKey'] == null ? undefined : json['PublicKey'],\n        'publicKeyAlgorithm': json['PublicKeyAlgorithm'] == null ? undefined : json['PublicKeyAlgorithm'],\n        'raw': json['Raw'] == null ? undefined : json['Raw'],\n        'rawIssuer': json['RawIssuer'] == null ? undefined : json['RawIssuer'],\n        'rawSubject': json['RawSubject'] == null ? undefined : json['RawSubject'],\n        'rawSubjectPublicKeyInfo': json['RawSubjectPublicKeyInfo'] == null ? undefined : json['RawSubjectPublicKeyInfo'],\n        'rawTBSCertificate': json['RawTBSCertificate'] == null ? undefined : json['RawTBSCertificate'],\n        'serialNumber': json['SerialNumber'] == null ? undefined : json['SerialNumber'],\n        'signature': json['Signature'] == null ? undefined : json['Signature'],\n        'signatureAlgorithm': json['SignatureAlgorithm'] == null ? undefined : json['SignatureAlgorithm'],\n        'subject': json['Subject'] == null ? undefined : NameFromJSON(json['Subject']),\n        'subjectKeyId': json['SubjectKeyId'] == null ? undefined : json['SubjectKeyId'],\n        'uRIs': json['URIs'] == null ? undefined : ((json['URIs'] as Array<any>).map(URLFromJSON)),\n        'unhandledCriticalExtensions': json['UnhandledCriticalExtensions'] == null ? undefined : json['UnhandledCriticalExtensions'],\n        'unknownExtKeyUsage': json['UnknownExtKeyUsage'] == null ? undefined : json['UnknownExtKeyUsage'],\n        'version': json['Version'] == null ? undefined : json['Version'],\n    };\n}\n\nexport function CertificateToJSON(json: any): Certificate {\n    return CertificateToJSONTyped(json, false);\n}\n\nexport function CertificateToJSONTyped(value?: Certificate | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'AuthorityKeyId': value['authorityKeyId'],\n        'BasicConstraintsValid': value['basicConstraintsValid'],\n        'CRLDistributionPoints': value['cRLDistributionPoints'],\n        'DNSNames': value['dNSNames'],\n        'EmailAddresses': value['emailAddresses'],\n        'ExcludedDNSDomains': value['excludedDNSDomains'],\n        'ExcludedEmailAddresses': value['excludedEmailAddresses'],\n        'ExcludedIPRanges': value['excludedIPRanges'] == null ? undefined : ((value['excludedIPRanges'] as Array<any>).map(IPNetToJSON)),\n        'ExcludedURIDomains': value['excludedURIDomains'],\n        'ExtKeyUsage': value['extKeyUsage'],\n        'Extensions': value['extensions'] == null ? undefined : ((value['extensions'] as Array<any>).map(ExtensionToJSON)),\n        'ExtraExtensions': value['extraExtensions'] == null ? undefined : ((value['extraExtensions'] as Array<any>).map(ExtensionToJSON)),\n        'IPAddresses': value['iPAddresses'],\n        'IsCA': value['isCA'],\n        'Issuer': NameToJSON(value['issuer']),\n        'IssuingCertificateURL': value['issuingCertificateURL'],\n        'KeyUsage': value['keyUsage'],\n        'MaxPathLen': value['maxPathLen'],\n        'MaxPathLenZero': value['maxPathLenZero'],\n        'NotBefore': value['notBefore'] == null ? undefined : ((value['notBefore']).toISOString()),\n        'OCSPServer': value['oCSPServer'],\n        'PermittedDNSDomains': value['permittedDNSDomains'],\n        'PermittedDNSDomainsCritical': value['permittedDNSDomainsCritical'],\n        'PermittedEmailAddresses': value['permittedEmailAddresses'],\n        'PermittedIPRanges': value['permittedIPRanges'] == null ? undefined : ((value['permittedIPRanges'] as Array<any>).map(IPNetToJSON)),\n        'PermittedURIDomains': value['permittedURIDomains'],\n        'Policies': value['policies'],\n        'PolicyIdentifiers': value['policyIdentifiers'],\n        'PublicKey': value['publicKey'],\n        'PublicKeyAlgorithm': value['publicKeyAlgorithm'],\n        'Raw': value['raw'],\n        'RawIssuer': value['rawIssuer'],\n        'RawSubject': value['rawSubject'],\n        'RawSubjectPublicKeyInfo': value['rawSubjectPublicKeyInfo'],\n        'RawTBSCertificate': value['rawTBSCertificate'],\n        'SerialNumber': value['serialNumber'],\n        'Signature': value['signature'],\n        'SignatureAlgorithm': value['signatureAlgorithm'],\n        'Subject': NameToJSON(value['subject']),\n        'SubjectKeyId': value['subjectKeyId'],\n        'URIs': value['uRIs'] == null ? undefined : ((value['uRIs'] as Array<any>).map(URLToJSON)),\n        'UnhandledCriticalExtensions': value['unhandledCriticalExtensions'],\n        'UnknownExtKeyUsage': value['unknownExtKeyUsage'],\n        'Version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ChangeUserPasswordCommand\n */\nexport interface ChangeUserPasswordCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof ChangeUserPasswordCommand\n     */\n    newPassword?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ChangeUserPasswordCommand\n     */\n    oldPassword?: string;\n}\n\n/**\n * Check if a given object implements the ChangeUserPasswordCommand interface.\n */\nexport function instanceOfChangeUserPasswordCommand(value: object): value is ChangeUserPasswordCommand {\n    return true;\n}\n\nexport function ChangeUserPasswordCommandFromJSON(json: any): ChangeUserPasswordCommand {\n    return ChangeUserPasswordCommandFromJSONTyped(json, false);\n}\n\nexport function ChangeUserPasswordCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeUserPasswordCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'newPassword': json['newPassword'] == null ? undefined : json['newPassword'],\n        'oldPassword': json['oldPassword'] == null ? undefined : json['oldPassword'],\n    };\n}\n\nexport function ChangeUserPasswordCommandToJSON(json: any): ChangeUserPasswordCommand {\n    return ChangeUserPasswordCommandToJSONTyped(json, false);\n}\n\nexport function ChangeUserPasswordCommandToJSONTyped(value?: ChangeUserPasswordCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'newPassword': value['newPassword'],\n        'oldPassword': value['oldPassword'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ClearHelpFlags200Response\n */\nexport interface ClearHelpFlags200Response {\n    /**\n     * \n     * @type {number}\n     * @memberof ClearHelpFlags200Response\n     */\n    helpFlags1?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ClearHelpFlags200Response\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the ClearHelpFlags200Response interface.\n */\nexport function instanceOfClearHelpFlags200Response(value: object): value is ClearHelpFlags200Response {\n    return true;\n}\n\nexport function ClearHelpFlags200ResponseFromJSON(json: any): ClearHelpFlags200Response {\n    return ClearHelpFlags200ResponseFromJSONTyped(json, false);\n}\n\nexport function ClearHelpFlags200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClearHelpFlags200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'helpFlags1': json['helpFlags1'] == null ? undefined : json['helpFlags1'],\n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function ClearHelpFlags200ResponseToJSON(json: any): ClearHelpFlags200Response {\n    return ClearHelpFlags200ResponseToJSONTyped(json, false);\n}\n\nexport function ClearHelpFlags200ResponseToJSONTyped(value?: ClearHelpFlags200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'helpFlags1': value['helpFlags1'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MigrateDataResponseListDTO\n */\nexport interface MigrateDataResponseListDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseListDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the MigrateDataResponseListDTO interface.\n */\nexport function instanceOfMigrateDataResponseListDTO(value: object): value is MigrateDataResponseListDTO {\n    return true;\n}\n\nexport function MigrateDataResponseListDTOFromJSON(json: any): MigrateDataResponseListDTO {\n    return MigrateDataResponseListDTOFromJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseListDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseListDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function MigrateDataResponseListDTOToJSON(json: any): MigrateDataResponseListDTO {\n    return MigrateDataResponseListDTOToJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseListDTOToJSONTyped(value?: MigrateDataResponseListDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { MigrateDataResponseListDTO } from './MigrateDataResponseListDTO';\nimport {\n    MigrateDataResponseListDTOFromJSON,\n    MigrateDataResponseListDTOFromJSONTyped,\n    MigrateDataResponseListDTOToJSON,\n    MigrateDataResponseListDTOToJSONTyped,\n} from './MigrateDataResponseListDTO';\n\n/**\n * \n * @export\n * @interface CloudMigrationRunListDTO\n */\nexport interface CloudMigrationRunListDTO {\n    /**\n     * \n     * @type {Array<MigrateDataResponseListDTO>}\n     * @memberof CloudMigrationRunListDTO\n     */\n    runs?: Array<MigrateDataResponseListDTO>;\n}\n\n/**\n * Check if a given object implements the CloudMigrationRunListDTO interface.\n */\nexport function instanceOfCloudMigrationRunListDTO(value: object): value is CloudMigrationRunListDTO {\n    return true;\n}\n\nexport function CloudMigrationRunListDTOFromJSON(json: any): CloudMigrationRunListDTO {\n    return CloudMigrationRunListDTOFromJSONTyped(json, false);\n}\n\nexport function CloudMigrationRunListDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationRunListDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'runs': json['runs'] == null ? undefined : ((json['runs'] as Array<any>).map(MigrateDataResponseListDTOFromJSON)),\n    };\n}\n\nexport function CloudMigrationRunListDTOToJSON(json: any): CloudMigrationRunListDTO {\n    return CloudMigrationRunListDTOToJSONTyped(json, false);\n}\n\nexport function CloudMigrationRunListDTOToJSONTyped(value?: CloudMigrationRunListDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'runs': value['runs'] == null ? undefined : ((value['runs'] as Array<any>).map(MigrateDataResponseListDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CloudMigrationSessionResponseDTO\n */\nexport interface CloudMigrationSessionResponseDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof CloudMigrationSessionResponseDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof CloudMigrationSessionResponseDTO\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CloudMigrationSessionResponseDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof CloudMigrationSessionResponseDTO\n     */\n    updated?: Date;\n}\n\n/**\n * Check if a given object implements the CloudMigrationSessionResponseDTO interface.\n */\nexport function instanceOfCloudMigrationSessionResponseDTO(value: object): value is CloudMigrationSessionResponseDTO {\n    return true;\n}\n\nexport function CloudMigrationSessionResponseDTOFromJSON(json: any): CloudMigrationSessionResponseDTO {\n    return CloudMigrationSessionResponseDTOFromJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function CloudMigrationSessionResponseDTOToJSON(json: any): CloudMigrationSessionResponseDTO {\n    return CloudMigrationSessionResponseDTOToJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionResponseDTOToJSONTyped(value?: CloudMigrationSessionResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'slug': value['slug'],\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { CloudMigrationSessionResponseDTO } from './CloudMigrationSessionResponseDTO';\nimport {\n    CloudMigrationSessionResponseDTOFromJSON,\n    CloudMigrationSessionResponseDTOFromJSONTyped,\n    CloudMigrationSessionResponseDTOToJSON,\n    CloudMigrationSessionResponseDTOToJSONTyped,\n} from './CloudMigrationSessionResponseDTO';\n\n/**\n * \n * @export\n * @interface CloudMigrationSessionListResponseDTO\n */\nexport interface CloudMigrationSessionListResponseDTO {\n    /**\n     * \n     * @type {Array<CloudMigrationSessionResponseDTO>}\n     * @memberof CloudMigrationSessionListResponseDTO\n     */\n    sessions?: Array<CloudMigrationSessionResponseDTO>;\n}\n\n/**\n * Check if a given object implements the CloudMigrationSessionListResponseDTO interface.\n */\nexport function instanceOfCloudMigrationSessionListResponseDTO(value: object): value is CloudMigrationSessionListResponseDTO {\n    return true;\n}\n\nexport function CloudMigrationSessionListResponseDTOFromJSON(json: any): CloudMigrationSessionListResponseDTO {\n    return CloudMigrationSessionListResponseDTOFromJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionListResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionListResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'sessions': json['sessions'] == null ? undefined : ((json['sessions'] as Array<any>).map(CloudMigrationSessionResponseDTOFromJSON)),\n    };\n}\n\nexport function CloudMigrationSessionListResponseDTOToJSON(json: any): CloudMigrationSessionListResponseDTO {\n    return CloudMigrationSessionListResponseDTOToJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionListResponseDTOToJSONTyped(value?: CloudMigrationSessionListResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'sessions': value['sessions'] == null ? undefined : ((value['sessions'] as Array<any>).map(CloudMigrationSessionResponseDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CloudMigrationSessionRequestDTO\n */\nexport interface CloudMigrationSessionRequestDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof CloudMigrationSessionRequestDTO\n     */\n    authToken?: string;\n}\n\n/**\n * Check if a given object implements the CloudMigrationSessionRequestDTO interface.\n */\nexport function instanceOfCloudMigrationSessionRequestDTO(value: object): value is CloudMigrationSessionRequestDTO {\n    return true;\n}\n\nexport function CloudMigrationSessionRequestDTOFromJSON(json: any): CloudMigrationSessionRequestDTO {\n    return CloudMigrationSessionRequestDTOFromJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionRequestDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudMigrationSessionRequestDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authToken': json['authToken'] == null ? undefined : json['authToken'],\n    };\n}\n\nexport function CloudMigrationSessionRequestDTOToJSON(json: any): CloudMigrationSessionRequestDTO {\n    return CloudMigrationSessionRequestDTOToJSONTyped(json, false);\n}\n\nexport function CloudMigrationSessionRequestDTOToJSONTyped(value?: CloudMigrationSessionRequestDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'authToken': value['authToken'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * InhibitRule defines an inhibition rule that mutes alerts that match the\n * target labels if an alert matching the source labels exists.\n * Both alerts have to have a set of labels being equal.\n * @export\n * @interface InhibitRule\n */\nexport interface InhibitRule {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof InhibitRule\n     */\n    equal?: Array<string>;\n    /**\n     * SourceMatch defines a set of labels that have to equal the given\n     * value for source alerts. Deprecated. Remove before v1.0 release.\n     * @type {{ [key: string]: string; }}\n     * @memberof InhibitRule\n     */\n    sourceMatch?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof InhibitRule\n     */\n    sourceMatchRe?: { [key: string]: string; };\n    /**\n     * Matchers is a slice of Matchers that is sortable, implements Stringer, and\n     * provides a Matches method to match a LabelSet against all Matchers in the\n     * slice. Note that some users of Matchers might require it to be sorted.\n     * @type {Array<Matcher>}\n     * @memberof InhibitRule\n     */\n    sourceMatchers?: Array<Matcher>;\n    /**\n     * TargetMatch defines a set of labels that have to equal the given\n     * value for target alerts. Deprecated. Remove before v1.0 release.\n     * @type {{ [key: string]: string; }}\n     * @memberof InhibitRule\n     */\n    targetMatch?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof InhibitRule\n     */\n    targetMatchRe?: { [key: string]: string; };\n    /**\n     * Matchers is a slice of Matchers that is sortable, implements Stringer, and\n     * provides a Matches method to match a LabelSet against all Matchers in the\n     * slice. Note that some users of Matchers might require it to be sorted.\n     * @type {Array<Matcher>}\n     * @memberof InhibitRule\n     */\n    targetMatchers?: Array<Matcher>;\n}\n\n/**\n * Check if a given object implements the InhibitRule interface.\n */\nexport function instanceOfInhibitRule(value: object): value is InhibitRule {\n    return true;\n}\n\nexport function InhibitRuleFromJSON(json: any): InhibitRule {\n    return InhibitRuleFromJSONTyped(json, false);\n}\n\nexport function InhibitRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): InhibitRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'equal': json['equal'] == null ? undefined : json['equal'],\n        'sourceMatch': json['source_match'] == null ? undefined : json['source_match'],\n        'sourceMatchRe': json['source_match_re'] == null ? undefined : json['source_match_re'],\n        'sourceMatchers': json['source_matchers'] == null ? undefined : ((json['source_matchers'] as Array<any>).map(MatcherFromJSON)),\n        'targetMatch': json['target_match'] == null ? undefined : json['target_match'],\n        'targetMatchRe': json['target_match_re'] == null ? undefined : json['target_match_re'],\n        'targetMatchers': json['target_matchers'] == null ? undefined : ((json['target_matchers'] as Array<any>).map(MatcherFromJSON)),\n    };\n}\n\nexport function InhibitRuleToJSON(json: any): InhibitRule {\n    return InhibitRuleToJSONTyped(json, false);\n}\n\nexport function InhibitRuleToJSONTyped(value?: InhibitRule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'equal': value['equal'],\n        'source_match': value['sourceMatch'],\n        'source_match_re': value['sourceMatchRe'],\n        'source_matchers': value['sourceMatchers'] == null ? undefined : ((value['sourceMatchers'] as Array<any>).map(MatcherToJSON)),\n        'target_match': value['targetMatch'],\n        'target_match_re': value['targetMatchRe'],\n        'target_matchers': value['targetMatchers'] == null ? undefined : ((value['targetMatchers'] as Array<any>).map(MatcherToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeInterval } from './TimeInterval';\nimport {\n    TimeIntervalFromJSON,\n    TimeIntervalFromJSONTyped,\n    TimeIntervalToJSON,\n    TimeIntervalToJSONTyped,\n} from './TimeInterval';\n\n/**\n * \n * @export\n * @interface MuteTimeInterval\n */\nexport interface MuteTimeInterval {\n    /**\n     * \n     * @type {string}\n     * @memberof MuteTimeInterval\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof MuteTimeInterval\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the MuteTimeInterval interface.\n */\nexport function instanceOfMuteTimeInterval(value: object): value is MuteTimeInterval {\n    return true;\n}\n\nexport function MuteTimeIntervalFromJSON(json: any): MuteTimeInterval {\n    return MuteTimeIntervalFromJSONTyped(json, false);\n}\n\nexport function MuteTimeIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): MuteTimeInterval {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function MuteTimeIntervalToJSON(json: any): MuteTimeInterval {\n    return MuteTimeIntervalToJSONTyped(json, false);\n}\n\nexport function MuteTimeIntervalToJSONTyped(value?: MuteTimeInterval | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface HostPort\n */\nexport interface HostPort {\n    /**\n     * \n     * @type {string}\n     * @memberof HostPort\n     */\n    host?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof HostPort\n     */\n    port?: string;\n}\n\n/**\n * Check if a given object implements the HostPort interface.\n */\nexport function instanceOfHostPort(value: object): value is HostPort {\n    return true;\n}\n\nexport function HostPortFromJSON(json: any): HostPort {\n    return HostPortFromJSONTyped(json, false);\n}\n\nexport function HostPortFromJSONTyped(json: any, ignoreDiscriminator: boolean): HostPort {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'host': json['Host'] == null ? undefined : json['Host'],\n        'port': json['Port'] == null ? undefined : json['Port'],\n    };\n}\n\nexport function HostPortToJSON(json: any): HostPort {\n    return HostPortToJSONTyped(json, false);\n}\n\nexport function HostPortToJSONTyped(value?: HostPort | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Host': value['host'],\n        'Port': value['port'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TLSConfig\n */\nexport interface TLSConfig {\n    /**\n     * Text of the CA cert to use for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    ca?: string;\n    /**\n     * The CA cert to use for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    caFile?: string;\n    /**\n     * CARef is the name of the secret within the secret manager to use as the CA cert for the\n     * targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    caRef?: string;\n    /**\n     * Text of the client cert file for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    cert?: string;\n    /**\n     * The client cert file for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    certFile?: string;\n    /**\n     * CertRef is the name of the secret within the secret manager to use as the client cert for\n     * the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    certRef?: string;\n    /**\n     * Disable target certificate validation.\n     * @type {boolean}\n     * @memberof TLSConfig\n     */\n    insecureSkipVerify?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof TLSConfig\n     */\n    key?: string;\n    /**\n     * The client key file for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    keyFile?: string;\n    /**\n     * KeyRef is the name of the secret within the secret manager to use as the client key for\n     * the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    keyRef?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TLSConfig\n     */\n    maxVersion?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TLSConfig\n     */\n    minVersion?: number;\n    /**\n     * Used to verify the hostname for the targets.\n     * @type {string}\n     * @memberof TLSConfig\n     */\n    serverName?: string;\n}\n\n/**\n * Check if a given object implements the TLSConfig interface.\n */\nexport function instanceOfTLSConfig(value: object): value is TLSConfig {\n    return true;\n}\n\nexport function TLSConfigFromJSON(json: any): TLSConfig {\n    return TLSConfigFromJSONTyped(json, false);\n}\n\nexport function TLSConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TLSConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'ca': json['ca'] == null ? undefined : json['ca'],\n        'caFile': json['ca_file'] == null ? undefined : json['ca_file'],\n        'caRef': json['ca_ref'] == null ? undefined : json['ca_ref'],\n        'cert': json['cert'] == null ? undefined : json['cert'],\n        'certFile': json['cert_file'] == null ? undefined : json['cert_file'],\n        'certRef': json['cert_ref'] == null ? undefined : json['cert_ref'],\n        'insecureSkipVerify': json['insecure_skip_verify'] == null ? undefined : json['insecure_skip_verify'],\n        'key': json['key'] == null ? undefined : json['key'],\n        'keyFile': json['key_file'] == null ? undefined : json['key_file'],\n        'keyRef': json['key_ref'] == null ? undefined : json['key_ref'],\n        'maxVersion': json['max_version'] == null ? undefined : json['max_version'],\n        'minVersion': json['min_version'] == null ? undefined : json['min_version'],\n        'serverName': json['server_name'] == null ? undefined : json['server_name'],\n    };\n}\n\nexport function TLSConfigToJSON(json: any): TLSConfig {\n    return TLSConfigToJSONTyped(json, false);\n}\n\nexport function TLSConfigToJSONTyped(value?: TLSConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'ca': value['ca'],\n        'ca_file': value['caFile'],\n        'ca_ref': value['caRef'],\n        'cert': value['cert'],\n        'cert_file': value['certFile'],\n        'cert_ref': value['certRef'],\n        'insecure_skip_verify': value['insecureSkipVerify'],\n        'key': value['key'],\n        'key_file': value['keyFile'],\n        'key_ref': value['keyRef'],\n        'max_version': value['maxVersion'],\n        'min_version': value['minVersion'],\n        'server_name': value['serverName'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TLSConfig } from './TLSConfig';\nimport {\n    TLSConfigFromJSON,\n    TLSConfigFromJSONTyped,\n    TLSConfigToJSON,\n    TLSConfigToJSONTyped,\n} from './TLSConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface OAuth2\n */\nexport interface OAuth2 {\n    /**\n     * \n     * @type {TLSConfig}\n     * @memberof OAuth2\n     */\n    tLSConfig?: TLSConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof OAuth2\n     */\n    clientId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OAuth2\n     */\n    clientSecret?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OAuth2\n     */\n    clientSecretFile?: string;\n    /**\n     * ClientSecretRef is the name of the secret within the secret manager to use as the client\n     * secret.\n     * @type {string}\n     * @memberof OAuth2\n     */\n    clientSecretRef?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof OAuth2\n     */\n    endpointParams?: { [key: string]: string; };\n    /**\n     * NoProxy contains addresses that should not use a proxy.\n     * @type {string}\n     * @memberof OAuth2\n     */\n    noProxy?: string;\n    /**\n     * \n     * @type {{ [key: string]: Array<string>; }}\n     * @memberof OAuth2\n     */\n    proxyConnectHeader?: { [key: string]: Array<string>; };\n    /**\n     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function\n     * to determine proxies.\n     * @type {boolean}\n     * @memberof OAuth2\n     */\n    proxyFromEnvironment?: boolean;\n    /**\n     * \n     * @type {URL}\n     * @memberof OAuth2\n     */\n    proxyUrl?: URL;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof OAuth2\n     */\n    scopes?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof OAuth2\n     */\n    tokenUrl?: string;\n}\n\n/**\n * Check if a given object implements the OAuth2 interface.\n */\nexport function instanceOfOAuth2(value: object): value is OAuth2 {\n    return true;\n}\n\nexport function OAuth2FromJSON(json: any): OAuth2 {\n    return OAuth2FromJSONTyped(json, false);\n}\n\nexport function OAuth2FromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuth2 {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'tLSConfig': json['TLSConfig'] == null ? undefined : TLSConfigFromJSON(json['TLSConfig']),\n        'clientId': json['client_id'] == null ? undefined : json['client_id'],\n        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],\n        'clientSecretFile': json['client_secret_file'] == null ? undefined : json['client_secret_file'],\n        'clientSecretRef': json['client_secret_ref'] == null ? undefined : json['client_secret_ref'],\n        'endpointParams': json['endpoint_params'] == null ? undefined : json['endpoint_params'],\n        'noProxy': json['no_proxy'] == null ? undefined : json['no_proxy'],\n        'proxyConnectHeader': json['proxy_connect_header'] == null ? undefined : json['proxy_connect_header'],\n        'proxyFromEnvironment': json['proxy_from_environment'] == null ? undefined : json['proxy_from_environment'],\n        'proxyUrl': json['proxy_url'] == null ? undefined : URLFromJSON(json['proxy_url']),\n        'scopes': json['scopes'] == null ? undefined : json['scopes'],\n        'tokenUrl': json['token_url'] == null ? undefined : json['token_url'],\n    };\n}\n\nexport function OAuth2ToJSON(json: any): OAuth2 {\n    return OAuth2ToJSONTyped(json, false);\n}\n\nexport function OAuth2ToJSONTyped(value?: OAuth2 | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'TLSConfig': TLSConfigToJSON(value['tLSConfig']),\n        'client_id': value['clientId'],\n        'client_secret': value['clientSecret'],\n        'client_secret_file': value['clientSecretFile'],\n        'client_secret_ref': value['clientSecretRef'],\n        'endpoint_params': value['endpointParams'],\n        'no_proxy': value['noProxy'],\n        'proxy_connect_header': value['proxyConnectHeader'],\n        'proxy_from_environment': value['proxyFromEnvironment'],\n        'proxy_url': URLToJSON(value['proxyUrl']),\n        'scopes': value['scopes'],\n        'token_url': value['tokenUrl'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Header\n */\nexport interface Header {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Header\n     */\n    files?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Header\n     */\n    secrets?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Header\n     */\n    values?: Array<string>;\n}\n\n/**\n * Check if a given object implements the Header interface.\n */\nexport function instanceOfHeader(value: object): value is Header {\n    return true;\n}\n\nexport function HeaderFromJSON(json: any): Header {\n    return HeaderFromJSONTyped(json, false);\n}\n\nexport function HeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Header {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'files': json['files'] == null ? undefined : json['files'],\n        'secrets': json['secrets'] == null ? undefined : json['secrets'],\n        'values': json['values'] == null ? undefined : json['values'],\n    };\n}\n\nexport function HeaderToJSON(json: any): Header {\n    return HeaderToJSONTyped(json, false);\n}\n\nexport function HeaderToJSONTyped(value?: Header | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'files': value['files'],\n        'secrets': value['secrets'],\n        'values': value['values'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Header } from './Header';\nimport {\n    HeaderFromJSON,\n    HeaderFromJSONTyped,\n    HeaderToJSON,\n    HeaderToJSONTyped,\n} from './Header';\n\n/**\n * \n * @export\n * @interface Headers\n */\nexport interface Headers {\n    /**\n     * \n     * @type {{ [key: string]: Header; }}\n     * @memberof Headers\n     */\n    headers?: { [key: string]: Header; };\n}\n\n/**\n * Check if a given object implements the Headers interface.\n */\nexport function instanceOfHeaders(value: object): value is Headers {\n    return true;\n}\n\nexport function HeadersFromJSON(json: any): Headers {\n    return HeadersFromJSONTyped(json, false);\n}\n\nexport function HeadersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Headers {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'headers': json['Headers'] == null ? undefined : (mapValues(json['Headers'], HeaderFromJSON)),\n    };\n}\n\nexport function HeadersToJSON(json: any): Headers {\n    return HeadersToJSONTyped(json, false);\n}\n\nexport function HeadersToJSONTyped(value?: Headers | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Headers': value['headers'] == null ? undefined : (mapValues(value['headers'], HeaderToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Authorization } from './Authorization';\nimport {\n    AuthorizationFromJSON,\n    AuthorizationFromJSONTyped,\n    AuthorizationToJSON,\n    AuthorizationToJSONTyped,\n} from './Authorization';\nimport type { OAuth2 } from './OAuth2';\nimport {\n    OAuth2FromJSON,\n    OAuth2FromJSONTyped,\n    OAuth2ToJSON,\n    OAuth2ToJSONTyped,\n} from './OAuth2';\nimport type { BasicAuth } from './BasicAuth';\nimport {\n    BasicAuthFromJSON,\n    BasicAuthFromJSONTyped,\n    BasicAuthToJSON,\n    BasicAuthToJSONTyped,\n} from './BasicAuth';\nimport type { Headers } from './Headers';\nimport {\n    HeadersFromJSON,\n    HeadersFromJSONTyped,\n    HeadersToJSON,\n    HeadersToJSONTyped,\n} from './Headers';\nimport type { TLSConfig } from './TLSConfig';\nimport {\n    TLSConfigFromJSON,\n    TLSConfigFromJSONTyped,\n    TLSConfigToJSON,\n    TLSConfigToJSONTyped,\n} from './TLSConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface HTTPClientConfig\n */\nexport interface HTTPClientConfig {\n    /**\n     * \n     * @type {Authorization}\n     * @memberof HTTPClientConfig\n     */\n    authorization?: Authorization;\n    /**\n     * \n     * @type {BasicAuth}\n     * @memberof HTTPClientConfig\n     */\n    basicAuth?: BasicAuth;\n    /**\n     * \n     * @type {string}\n     * @memberof HTTPClientConfig\n     */\n    bearerToken?: string;\n    /**\n     * The bearer token file for the targets. Deprecated in favour of\n     * Authorization.CredentialsFile.\n     * @type {string}\n     * @memberof HTTPClientConfig\n     */\n    bearerTokenFile?: string;\n    /**\n     * EnableHTTP2 specifies whether the client should configure HTTP2.\n     * The omitempty flag is not set, because it would be hidden from the\n     * marshalled configuration when set to false.\n     * @type {boolean}\n     * @memberof HTTPClientConfig\n     */\n    enableHttp2?: boolean;\n    /**\n     * FollowRedirects specifies whether the client should follow HTTP 3xx redirects.\n     * The omitempty flag is not set, because it would be hidden from the\n     * marshalled configuration when set to false.\n     * @type {boolean}\n     * @memberof HTTPClientConfig\n     */\n    followRedirects?: boolean;\n    /**\n     * \n     * @type {Headers}\n     * @memberof HTTPClientConfig\n     */\n    httpHeaders?: Headers;\n    /**\n     * NoProxy contains addresses that should not use a proxy.\n     * @type {string}\n     * @memberof HTTPClientConfig\n     */\n    noProxy?: string;\n    /**\n     * \n     * @type {OAuth2}\n     * @memberof HTTPClientConfig\n     */\n    oauth2?: OAuth2;\n    /**\n     * \n     * @type {{ [key: string]: Array<string>; }}\n     * @memberof HTTPClientConfig\n     */\n    proxyConnectHeader?: { [key: string]: Array<string>; };\n    /**\n     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function\n     * to determine proxies.\n     * @type {boolean}\n     * @memberof HTTPClientConfig\n     */\n    proxyFromEnvironment?: boolean;\n    /**\n     * \n     * @type {URL}\n     * @memberof HTTPClientConfig\n     */\n    proxyUrl?: URL;\n    /**\n     * \n     * @type {TLSConfig}\n     * @memberof HTTPClientConfig\n     */\n    tlsConfig?: TLSConfig;\n}\n\n/**\n * Check if a given object implements the HTTPClientConfig interface.\n */\nexport function instanceOfHTTPClientConfig(value: object): value is HTTPClientConfig {\n    return true;\n}\n\nexport function HTTPClientConfigFromJSON(json: any): HTTPClientConfig {\n    return HTTPClientConfigFromJSONTyped(json, false);\n}\n\nexport function HTTPClientConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTTPClientConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authorization': json['authorization'] == null ? undefined : AuthorizationFromJSON(json['authorization']),\n        'basicAuth': json['basic_auth'] == null ? undefined : BasicAuthFromJSON(json['basic_auth']),\n        'bearerToken': json['bearer_token'] == null ? undefined : json['bearer_token'],\n        'bearerTokenFile': json['bearer_token_file'] == null ? undefined : json['bearer_token_file'],\n        'enableHttp2': json['enable_http2'] == null ? undefined : json['enable_http2'],\n        'followRedirects': json['follow_redirects'] == null ? undefined : json['follow_redirects'],\n        'httpHeaders': json['http_headers'] == null ? undefined : HeadersFromJSON(json['http_headers']),\n        'noProxy': json['no_proxy'] == null ? undefined : json['no_proxy'],\n        'oauth2': json['oauth2'] == null ? undefined : OAuth2FromJSON(json['oauth2']),\n        'proxyConnectHeader': json['proxy_connect_header'] == null ? undefined : json['proxy_connect_header'],\n        'proxyFromEnvironment': json['proxy_from_environment'] == null ? undefined : json['proxy_from_environment'],\n        'proxyUrl': json['proxy_url'] == null ? undefined : URLFromJSON(json['proxy_url']),\n        'tlsConfig': json['tls_config'] == null ? undefined : TLSConfigFromJSON(json['tls_config']),\n    };\n}\n\nexport function HTTPClientConfigToJSON(json: any): HTTPClientConfig {\n    return HTTPClientConfigToJSONTyped(json, false);\n}\n\nexport function HTTPClientConfigToJSONTyped(value?: HTTPClientConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'authorization': AuthorizationToJSON(value['authorization']),\n        'basic_auth': BasicAuthToJSON(value['basicAuth']),\n        'bearer_token': value['bearerToken'],\n        'bearer_token_file': value['bearerTokenFile'],\n        'enable_http2': value['enableHttp2'],\n        'follow_redirects': value['followRedirects'],\n        'http_headers': HeadersToJSON(value['httpHeaders']),\n        'no_proxy': value['noProxy'],\n        'oauth2': OAuth2ToJSON(value['oauth2']),\n        'proxy_connect_header': value['proxyConnectHeader'],\n        'proxy_from_environment': value['proxyFromEnvironment'],\n        'proxy_url': URLToJSON(value['proxyUrl']),\n        'tls_config': TLSConfigToJSON(value['tlsConfig']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HostPort } from './HostPort';\nimport {\n    HostPortFromJSON,\n    HostPortFromJSONTyped,\n    HostPortToJSON,\n    HostPortToJSONTyped,\n} from './HostPort';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * GlobalConfig defines configuration parameters that are valid globally\n * unless overwritten.\n * @export\n * @interface GlobalConfig\n */\nexport interface GlobalConfig {\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof GlobalConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    opsgenieApiKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    opsgenieApiKeyFile?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    opsgenieApiUrl?: URL;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    pagerdutyUrl?: URL;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof GlobalConfig\n     */\n    resolveTimeout?: number;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    slackApiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    slackApiUrlFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpAuthIdentity?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpAuthPassword?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpAuthPasswordFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpAuthSecret?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpAuthUsername?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpFrom?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    smtpHello?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof GlobalConfig\n     */\n    smtpRequireTls?: boolean;\n    /**\n     * \n     * @type {HostPort}\n     * @memberof GlobalConfig\n     */\n    smtpSmarthost?: HostPort;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    telegramApiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    victoropsApiKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    victoropsApiKeyFile?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    victoropsApiUrl?: URL;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    webexApiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    wechatApiCorpId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GlobalConfig\n     */\n    wechatApiSecret?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof GlobalConfig\n     */\n    wechatApiUrl?: URL;\n}\n\n/**\n * Check if a given object implements the GlobalConfig interface.\n */\nexport function instanceOfGlobalConfig(value: object): value is GlobalConfig {\n    return true;\n}\n\nexport function GlobalConfigFromJSON(json: any): GlobalConfig {\n    return GlobalConfigFromJSONTyped(json, false);\n}\n\nexport function GlobalConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'opsgenieApiKey': json['opsgenie_api_key'] == null ? undefined : json['opsgenie_api_key'],\n        'opsgenieApiKeyFile': json['opsgenie_api_key_file'] == null ? undefined : json['opsgenie_api_key_file'],\n        'opsgenieApiUrl': json['opsgenie_api_url'] == null ? undefined : URLFromJSON(json['opsgenie_api_url']),\n        'pagerdutyUrl': json['pagerduty_url'] == null ? undefined : URLFromJSON(json['pagerduty_url']),\n        'resolveTimeout': json['resolve_timeout'] == null ? undefined : json['resolve_timeout'],\n        'slackApiUrl': json['slack_api_url'] == null ? undefined : URLFromJSON(json['slack_api_url']),\n        'slackApiUrlFile': json['slack_api_url_file'] == null ? undefined : json['slack_api_url_file'],\n        'smtpAuthIdentity': json['smtp_auth_identity'] == null ? undefined : json['smtp_auth_identity'],\n        'smtpAuthPassword': json['smtp_auth_password'] == null ? undefined : json['smtp_auth_password'],\n        'smtpAuthPasswordFile': json['smtp_auth_password_file'] == null ? undefined : json['smtp_auth_password_file'],\n        'smtpAuthSecret': json['smtp_auth_secret'] == null ? undefined : json['smtp_auth_secret'],\n        'smtpAuthUsername': json['smtp_auth_username'] == null ? undefined : json['smtp_auth_username'],\n        'smtpFrom': json['smtp_from'] == null ? undefined : json['smtp_from'],\n        'smtpHello': json['smtp_hello'] == null ? undefined : json['smtp_hello'],\n        'smtpRequireTls': json['smtp_require_tls'] == null ? undefined : json['smtp_require_tls'],\n        'smtpSmarthost': json['smtp_smarthost'] == null ? undefined : HostPortFromJSON(json['smtp_smarthost']),\n        'telegramApiUrl': json['telegram_api_url'] == null ? undefined : URLFromJSON(json['telegram_api_url']),\n        'victoropsApiKey': json['victorops_api_key'] == null ? undefined : json['victorops_api_key'],\n        'victoropsApiKeyFile': json['victorops_api_key_file'] == null ? undefined : json['victorops_api_key_file'],\n        'victoropsApiUrl': json['victorops_api_url'] == null ? undefined : URLFromJSON(json['victorops_api_url']),\n        'webexApiUrl': json['webex_api_url'] == null ? undefined : URLFromJSON(json['webex_api_url']),\n        'wechatApiCorpId': json['wechat_api_corp_id'] == null ? undefined : json['wechat_api_corp_id'],\n        'wechatApiSecret': json['wechat_api_secret'] == null ? undefined : json['wechat_api_secret'],\n        'wechatApiUrl': json['wechat_api_url'] == null ? undefined : URLFromJSON(json['wechat_api_url']),\n    };\n}\n\nexport function GlobalConfigToJSON(json: any): GlobalConfig {\n    return GlobalConfigToJSONTyped(json, false);\n}\n\nexport function GlobalConfigToJSONTyped(value?: GlobalConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'opsgenie_api_key': value['opsgenieApiKey'],\n        'opsgenie_api_key_file': value['opsgenieApiKeyFile'],\n        'opsgenie_api_url': URLToJSON(value['opsgenieApiUrl']),\n        'pagerduty_url': URLToJSON(value['pagerdutyUrl']),\n        'resolve_timeout': value['resolveTimeout'],\n        'slack_api_url': URLToJSON(value['slackApiUrl']),\n        'slack_api_url_file': value['slackApiUrlFile'],\n        'smtp_auth_identity': value['smtpAuthIdentity'],\n        'smtp_auth_password': value['smtpAuthPassword'],\n        'smtp_auth_password_file': value['smtpAuthPasswordFile'],\n        'smtp_auth_secret': value['smtpAuthSecret'],\n        'smtp_auth_username': value['smtpAuthUsername'],\n        'smtp_from': value['smtpFrom'],\n        'smtp_hello': value['smtpHello'],\n        'smtp_require_tls': value['smtpRequireTls'],\n        'smtp_smarthost': HostPortToJSON(value['smtpSmarthost']),\n        'telegram_api_url': URLToJSON(value['telegramApiUrl']),\n        'victorops_api_key': value['victoropsApiKey'],\n        'victorops_api_key_file': value['victoropsApiKeyFile'],\n        'victorops_api_url': URLToJSON(value['victoropsApiUrl']),\n        'webex_api_url': URLToJSON(value['webexApiUrl']),\n        'wechat_api_corp_id': value['wechatApiCorpId'],\n        'wechat_api_secret': value['wechatApiSecret'],\n        'wechat_api_url': URLToJSON(value['wechatApiUrl']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * A Route is a node that contains definitions of how to handle alerts. This is modified\n * from the upstream alertmanager in that it adds the ObjectMatchers property.\n * @export\n * @interface Route\n */\nexport interface Route {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Route\n     */\n    activeTimeIntervals?: Array<string>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Route\n     */\n    _continue?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Route\n     */\n    groupBy?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Route\n     */\n    groupInterval?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Route\n     */\n    groupWait?: string;\n    /**\n     * Deprecated. Remove before v1.0 release.\n     * @type {{ [key: string]: string; }}\n     * @memberof Route\n     */\n    match?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof Route\n     */\n    matchRe?: { [key: string]: string; };\n    /**\n     * Matchers is a slice of Matchers that is sortable, implements Stringer, and\n     * provides a Matches method to match a LabelSet against all Matchers in the\n     * slice. Note that some users of Matchers might require it to be sorted.\n     * @type {Array<Matcher>}\n     * @memberof Route\n     */\n    matchers?: Array<Matcher>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Route\n     */\n    muteTimeIntervals?: Array<string>;\n    /**\n     * \n     * @type {Array<Array<string>>}\n     * @memberof Route\n     */\n    objectMatchers?: Array<Array<string>>;\n    /**\n     * \n     * @type {string}\n     * @memberof Route\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Route\n     */\n    receiver?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Route\n     */\n    repeatInterval?: string;\n    /**\n     * \n     * @type {Array<Route>}\n     * @memberof Route\n     */\n    routes?: Array<Route>;\n}\n\n/**\n * Check if a given object implements the Route interface.\n */\nexport function instanceOfRoute(value: object): value is Route {\n    return true;\n}\n\nexport function RouteFromJSON(json: any): Route {\n    return RouteFromJSONTyped(json, false);\n}\n\nexport function RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Route {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'activeTimeIntervals': json['active_time_intervals'] == null ? undefined : json['active_time_intervals'],\n        '_continue': json['continue'] == null ? undefined : json['continue'],\n        'groupBy': json['group_by'] == null ? undefined : json['group_by'],\n        'groupInterval': json['group_interval'] == null ? undefined : json['group_interval'],\n        'groupWait': json['group_wait'] == null ? undefined : json['group_wait'],\n        'match': json['match'] == null ? undefined : json['match'],\n        'matchRe': json['match_re'] == null ? undefined : json['match_re'],\n        'matchers': json['matchers'] == null ? undefined : ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : json['mute_time_intervals'],\n        'objectMatchers': json['object_matchers'] == null ? undefined : json['object_matchers'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'receiver': json['receiver'] == null ? undefined : json['receiver'],\n        'repeatInterval': json['repeat_interval'] == null ? undefined : json['repeat_interval'],\n        'routes': json['routes'] == null ? undefined : ((json['routes'] as Array<any>).map(RouteFromJSON)),\n    };\n}\n\nexport function RouteToJSON(json: any): Route {\n    return RouteToJSONTyped(json, false);\n}\n\nexport function RouteToJSONTyped(value?: Route | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'active_time_intervals': value['activeTimeIntervals'],\n        'continue': value['_continue'],\n        'group_by': value['groupBy'],\n        'group_interval': value['groupInterval'],\n        'group_wait': value['groupWait'],\n        'match': value['match'],\n        'match_re': value['matchRe'],\n        'matchers': value['matchers'] == null ? undefined : ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'mute_time_intervals': value['muteTimeIntervals'],\n        'object_matchers': value['objectMatchers'],\n        'provenance': value['provenance'],\n        'receiver': value['receiver'],\n        'repeat_interval': value['repeatInterval'],\n        'routes': value['routes'] == null ? undefined : ((value['routes'] as Array<any>).map(RouteToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { InhibitRule } from './InhibitRule';\nimport {\n    InhibitRuleFromJSON,\n    InhibitRuleFromJSONTyped,\n    InhibitRuleToJSON,\n    InhibitRuleToJSONTyped,\n} from './InhibitRule';\nimport type { MuteTimeInterval } from './MuteTimeInterval';\nimport {\n    MuteTimeIntervalFromJSON,\n    MuteTimeIntervalFromJSONTyped,\n    MuteTimeIntervalToJSON,\n    MuteTimeIntervalToJSONTyped,\n} from './MuteTimeInterval';\nimport type { TimeInterval } from './TimeInterval';\nimport {\n    TimeIntervalFromJSON,\n    TimeIntervalFromJSONTyped,\n    TimeIntervalToJSON,\n    TimeIntervalToJSONTyped,\n} from './TimeInterval';\nimport type { GlobalConfig } from './GlobalConfig';\nimport {\n    GlobalConfigFromJSON,\n    GlobalConfigFromJSONTyped,\n    GlobalConfigToJSON,\n    GlobalConfigToJSONTyped,\n} from './GlobalConfig';\nimport type { Route } from './Route';\nimport {\n    RouteFromJSON,\n    RouteFromJSONTyped,\n    RouteToJSON,\n    RouteToJSONTyped,\n} from './Route';\n\n/**\n * \n * @export\n * @interface Config\n */\nexport interface Config {\n    /**\n     * \n     * @type {GlobalConfig}\n     * @memberof Config\n     */\n    global?: GlobalConfig;\n    /**\n     * \n     * @type {Array<InhibitRule>}\n     * @memberof Config\n     */\n    inhibitRules?: Array<InhibitRule>;\n    /**\n     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.\n     * @type {Array<MuteTimeInterval>}\n     * @memberof Config\n     */\n    muteTimeIntervals?: Array<MuteTimeInterval>;\n    /**\n     * \n     * @type {Route}\n     * @memberof Config\n     */\n    route?: Route;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Config\n     */\n    templates?: Array<string>;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof Config\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the Config interface.\n */\nexport function instanceOfConfig(value: object): value is Config {\n    return true;\n}\n\nexport function ConfigFromJSON(json: any): Config {\n    return ConfigFromJSONTyped(json, false);\n}\n\nexport function ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): Config {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'global': json['global'] == null ? undefined : GlobalConfigFromJSON(json['global']),\n        'inhibitRules': json['inhibit_rules'] == null ? undefined : ((json['inhibit_rules'] as Array<any>).map(InhibitRuleFromJSON)),\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : ((json['mute_time_intervals'] as Array<any>).map(MuteTimeIntervalFromJSON)),\n        'route': json['route'] == null ? undefined : RouteFromJSON(json['route']),\n        'templates': json['templates'] == null ? undefined : json['templates'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function ConfigToJSON(json: any): Config {\n    return ConfigToJSONTyped(json, false);\n}\n\nexport function ConfigToJSONTyped(value?: Config | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'global': GlobalConfigToJSON(value['global']),\n        'inhibit_rules': value['inhibitRules'] == null ? undefined : ((value['inhibitRules'] as Array<any>).map(InhibitRuleToJSON)),\n        'mute_time_intervals': value['muteTimeIntervals'] == null ? undefined : ((value['muteTimeIntervals'] as Array<any>).map(MuteTimeIntervalToJSON)),\n        'route': RouteToJSON(value['route']),\n        'templates': value['templates'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CookiePreferences\n */\nexport interface CookiePreferences {\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof CookiePreferences\n     */\n    analytics?: { [key: string]: object; };\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof CookiePreferences\n     */\n    functional?: { [key: string]: object; };\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof CookiePreferences\n     */\n    performance?: { [key: string]: object; };\n}\n\n/**\n * Check if a given object implements the CookiePreferences interface.\n */\nexport function instanceOfCookiePreferences(value: object): value is CookiePreferences {\n    return true;\n}\n\nexport function CookiePreferencesFromJSON(json: any): CookiePreferences {\n    return CookiePreferencesFromJSONTyped(json, false);\n}\n\nexport function CookiePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CookiePreferences {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'analytics': json['analytics'] == null ? undefined : json['analytics'],\n        'functional': json['functional'] == null ? undefined : json['functional'],\n        'performance': json['performance'] == null ? undefined : json['performance'],\n    };\n}\n\nexport function CookiePreferencesToJSON(json: any): CookiePreferences {\n    return CookiePreferencesToJSONTyped(json, false);\n}\n\nexport function CookiePreferencesToJSONTyped(value?: CookiePreferences | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'analytics': value['analytics'],\n        'functional': value['functional'],\n        'performance': value['performance'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Transformation\n */\nexport interface Transformation {\n    /**\n     * \n     * @type {string}\n     * @memberof Transformation\n     */\n    expression?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Transformation\n     */\n    field?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Transformation\n     */\n    mapValue?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Transformation\n     */\n    type?: TransformationTypeEnum;\n}\n\n\n/**\n * @export\n */\nexport const TransformationTypeEnum = {\n    Regex: 'regex',\n    Logfmt: 'logfmt'\n} as const;\nexport type TransformationTypeEnum = typeof TransformationTypeEnum[keyof typeof TransformationTypeEnum];\n\n\n/**\n * Check if a given object implements the Transformation interface.\n */\nexport function instanceOfTransformation(value: object): value is Transformation {\n    return true;\n}\n\nexport function TransformationFromJSON(json: any): Transformation {\n    return TransformationFromJSONTyped(json, false);\n}\n\nexport function TransformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transformation {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'expression': json['expression'] == null ? undefined : json['expression'],\n        'field': json['field'] == null ? undefined : json['field'],\n        'mapValue': json['mapValue'] == null ? undefined : json['mapValue'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function TransformationToJSON(json: any): Transformation {\n    return TransformationToJSONTyped(json, false);\n}\n\nexport function TransformationToJSONTyped(value?: Transformation | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'expression': value['expression'],\n        'field': value['field'],\n        'mapValue': value['mapValue'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Transformation } from './Transformation';\nimport {\n    TransformationFromJSON,\n    TransformationFromJSONTyped,\n    TransformationToJSON,\n    TransformationToJSONTyped,\n} from './Transformation';\n\n/**\n * \n * @export\n * @interface CorrelationConfig\n */\nexport interface CorrelationConfig {\n    /**\n     * Field used to attach the correlation link\n     * @type {string}\n     * @memberof CorrelationConfig\n     */\n    field: string;\n    /**\n     * Target data query\n     * @type {{ [key: string]: object; }}\n     * @memberof CorrelationConfig\n     */\n    target: { [key: string]: object; };\n    /**\n     * \n     * @type {Array<Transformation>}\n     * @memberof CorrelationConfig\n     */\n    transformations?: Array<Transformation>;\n    /**\n     * the type of correlation, either query for containing query information, or external for containing an external URL\n     * +enum\n     * @type {string}\n     * @memberof CorrelationConfig\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the CorrelationConfig interface.\n */\nexport function instanceOfCorrelationConfig(value: object): value is CorrelationConfig {\n    if (!('field' in value) || value['field'] === undefined) return false;\n    if (!('target' in value) || value['target'] === undefined) return false;\n    return true;\n}\n\nexport function CorrelationConfigFromJSON(json: any): CorrelationConfig {\n    return CorrelationConfigFromJSONTyped(json, false);\n}\n\nexport function CorrelationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorrelationConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'field': json['field'],\n        'target': json['target'],\n        'transformations': json['transformations'] == null ? undefined : ((json['transformations'] as Array<any>).map(TransformationFromJSON)),\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function CorrelationConfigToJSON(json: any): CorrelationConfig {\n    return CorrelationConfigToJSONTyped(json, false);\n}\n\nexport function CorrelationConfigToJSONTyped(value?: CorrelationConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'field': value['field'],\n        'target': value['target'],\n        'transformations': value['transformations'] == null ? undefined : ((value['transformations'] as Array<any>).map(TransformationToJSON)),\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { CorrelationConfig } from './CorrelationConfig';\nimport {\n    CorrelationConfigFromJSON,\n    CorrelationConfigFromJSONTyped,\n    CorrelationConfigToJSON,\n    CorrelationConfigToJSONTyped,\n} from './CorrelationConfig';\n\n/**\n * Correlation is the model for correlations definitions\n * @export\n * @interface Correlation\n */\nexport interface Correlation {\n    /**\n     * \n     * @type {CorrelationConfig}\n     * @memberof Correlation\n     */\n    config?: CorrelationConfig;\n    /**\n     * Description of the correlation\n     * @type {string}\n     * @memberof Correlation\n     */\n    description?: string;\n    /**\n     * Label identifying the correlation\n     * @type {string}\n     * @memberof Correlation\n     */\n    label?: string;\n    /**\n     * OrgID of the data source the correlation originates from\n     * @type {number}\n     * @memberof Correlation\n     */\n    orgId?: number;\n    /**\n     * Provisioned True if the correlation was created during provisioning\n     * @type {boolean}\n     * @memberof Correlation\n     */\n    provisioned?: boolean;\n    /**\n     * UID of the data source the correlation originates from\n     * @type {string}\n     * @memberof Correlation\n     */\n    sourceUID?: string;\n    /**\n     * UID of the data source the correlation points to\n     * @type {string}\n     * @memberof Correlation\n     */\n    targetUID?: string;\n    /**\n     * the type of correlation, either query for containing query information, or external for containing an external URL\n     * +enum\n     * @type {string}\n     * @memberof Correlation\n     */\n    type?: string;\n    /**\n     * Unique identifier of the correlation\n     * @type {string}\n     * @memberof Correlation\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the Correlation interface.\n */\nexport function instanceOfCorrelation(value: object): value is Correlation {\n    return true;\n}\n\nexport function CorrelationFromJSON(json: any): Correlation {\n    return CorrelationFromJSONTyped(json, false);\n}\n\nexport function CorrelationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Correlation {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'config': json['config'] == null ? undefined : CorrelationConfigFromJSON(json['config']),\n        'description': json['description'] == null ? undefined : json['description'],\n        'label': json['label'] == null ? undefined : json['label'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'provisioned': json['provisioned'] == null ? undefined : json['provisioned'],\n        'sourceUID': json['sourceUID'] == null ? undefined : json['sourceUID'],\n        'targetUID': json['targetUID'] == null ? undefined : json['targetUID'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function CorrelationToJSON(json: any): Correlation {\n    return CorrelationToJSONTyped(json, false);\n}\n\nexport function CorrelationToJSONTyped(value?: Correlation | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'config': CorrelationConfigToJSON(value['config']),\n        'description': value['description'],\n        'label': value['label'],\n        'orgId': value['orgId'],\n        'provisioned': value['provisioned'],\n        'sourceUID': value['sourceUID'],\n        'targetUID': value['targetUID'],\n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Transformation } from './Transformation';\nimport {\n    TransformationFromJSON,\n    TransformationFromJSONTyped,\n    TransformationToJSON,\n    TransformationToJSONTyped,\n} from './Transformation';\n\n/**\n * \n * @export\n * @interface CorrelationConfigUpdateDTO\n */\nexport interface CorrelationConfigUpdateDTO {\n    /**\n     * Field used to attach the correlation link\n     * @type {string}\n     * @memberof CorrelationConfigUpdateDTO\n     */\n    field?: string;\n    /**\n     * Target data query\n     * @type {{ [key: string]: object; }}\n     * @memberof CorrelationConfigUpdateDTO\n     */\n    target?: { [key: string]: object; };\n    /**\n     * Source data transformations\n     * @type {Array<Transformation>}\n     * @memberof CorrelationConfigUpdateDTO\n     */\n    transformations?: Array<Transformation>;\n}\n\n/**\n * Check if a given object implements the CorrelationConfigUpdateDTO interface.\n */\nexport function instanceOfCorrelationConfigUpdateDTO(value: object): value is CorrelationConfigUpdateDTO {\n    return true;\n}\n\nexport function CorrelationConfigUpdateDTOFromJSON(json: any): CorrelationConfigUpdateDTO {\n    return CorrelationConfigUpdateDTOFromJSONTyped(json, false);\n}\n\nexport function CorrelationConfigUpdateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CorrelationConfigUpdateDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'field': json['field'] == null ? undefined : json['field'],\n        'target': json['target'] == null ? undefined : json['target'],\n        'transformations': json['transformations'] == null ? undefined : ((json['transformations'] as Array<any>).map(TransformationFromJSON)),\n    };\n}\n\nexport function CorrelationConfigUpdateDTOToJSON(json: any): CorrelationConfigUpdateDTO {\n    return CorrelationConfigUpdateDTOToJSONTyped(json, false);\n}\n\nexport function CorrelationConfigUpdateDTOToJSONTyped(value?: CorrelationConfigUpdateDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'field': value['field'],\n        'target': value['target'],\n        'transformations': value['transformations'] == null ? undefined : ((value['transformations'] as Array<any>).map(TransformationToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateAccessTokenResponseDTO\n */\nexport interface CreateAccessTokenResponseDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateAccessTokenResponseDTO\n     */\n    token?: string;\n}\n\n/**\n * Check if a given object implements the CreateAccessTokenResponseDTO interface.\n */\nexport function instanceOfCreateAccessTokenResponseDTO(value: object): value is CreateAccessTokenResponseDTO {\n    return true;\n}\n\nexport function CreateAccessTokenResponseDTOFromJSON(json: any): CreateAccessTokenResponseDTO {\n    return CreateAccessTokenResponseDTOFromJSONTyped(json, false);\n}\n\nexport function CreateAccessTokenResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateAccessTokenResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'token': json['token'] == null ? undefined : json['token'],\n    };\n}\n\nexport function CreateAccessTokenResponseDTOToJSON(json: any): CreateAccessTokenResponseDTO {\n    return CreateAccessTokenResponseDTOToJSONTyped(json, false);\n}\n\nexport function CreateAccessTokenResponseDTOToJSONTyped(value?: CreateAccessTokenResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'token': value['token'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { CorrelationConfig } from './CorrelationConfig';\nimport {\n    CorrelationConfigFromJSON,\n    CorrelationConfigFromJSONTyped,\n    CorrelationConfigToJSON,\n    CorrelationConfigToJSONTyped,\n} from './CorrelationConfig';\n\n/**\n * CreateCorrelationCommand is the command for creating a correlation\n * @export\n * @interface CreateCorrelationCommand\n */\nexport interface CreateCorrelationCommand {\n    /**\n     * \n     * @type {CorrelationConfig}\n     * @memberof CreateCorrelationCommand\n     */\n    config?: CorrelationConfig;\n    /**\n     * Optional description of the correlation\n     * @type {string}\n     * @memberof CreateCorrelationCommand\n     */\n    description?: string;\n    /**\n     * Optional label identifying the correlation\n     * @type {string}\n     * @memberof CreateCorrelationCommand\n     */\n    label?: string;\n    /**\n     * True if correlation was created with provisioning. This makes it read-only.\n     * @type {boolean}\n     * @memberof CreateCorrelationCommand\n     */\n    provisioned?: boolean;\n    /**\n     * Target data source UID to which the correlation is created. required if type = query\n     * @type {string}\n     * @memberof CreateCorrelationCommand\n     */\n    targetUID?: string;\n    /**\n     * the type of correlation, either query for containing query information, or external for containing an external URL\n     * +enum\n     * @type {string}\n     * @memberof CreateCorrelationCommand\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the CreateCorrelationCommand interface.\n */\nexport function instanceOfCreateCorrelationCommand(value: object): value is CreateCorrelationCommand {\n    return true;\n}\n\nexport function CreateCorrelationCommandFromJSON(json: any): CreateCorrelationCommand {\n    return CreateCorrelationCommandFromJSONTyped(json, false);\n}\n\nexport function CreateCorrelationCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCorrelationCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'config': json['config'] == null ? undefined : CorrelationConfigFromJSON(json['config']),\n        'description': json['description'] == null ? undefined : json['description'],\n        'label': json['label'] == null ? undefined : json['label'],\n        'provisioned': json['provisioned'] == null ? undefined : json['provisioned'],\n        'targetUID': json['targetUID'] == null ? undefined : json['targetUID'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function CreateCorrelationCommandToJSON(json: any): CreateCorrelationCommand {\n    return CreateCorrelationCommandToJSONTyped(json, false);\n}\n\nexport function CreateCorrelationCommandToJSONTyped(value?: CreateCorrelationCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'config': CorrelationConfigToJSON(value['config']),\n        'description': value['description'],\n        'label': value['label'],\n        'provisioned': value['provisioned'],\n        'targetUID': value['targetUID'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Correlation } from './Correlation';\nimport {\n    CorrelationFromJSON,\n    CorrelationFromJSONTyped,\n    CorrelationToJSON,\n    CorrelationToJSONTyped,\n} from './Correlation';\n\n/**\n * CreateCorrelationResponse is the response struct for CreateCorrelationCommand\n * @export\n * @interface CreateCorrelationResponseBody\n */\nexport interface CreateCorrelationResponseBody {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateCorrelationResponseBody\n     */\n    message?: string;\n    /**\n     * \n     * @type {Correlation}\n     * @memberof CreateCorrelationResponseBody\n     */\n    result?: Correlation;\n}\n\n/**\n * Check if a given object implements the CreateCorrelationResponseBody interface.\n */\nexport function instanceOfCreateCorrelationResponseBody(value: object): value is CreateCorrelationResponseBody {\n    return true;\n}\n\nexport function CreateCorrelationResponseBodyFromJSON(json: any): CreateCorrelationResponseBody {\n    return CreateCorrelationResponseBodyFromJSONTyped(json, false);\n}\n\nexport function CreateCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCorrelationResponseBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n        'result': json['result'] == null ? undefined : CorrelationFromJSON(json['result']),\n    };\n}\n\nexport function CreateCorrelationResponseBodyToJSON(json: any): CreateCorrelationResponseBody {\n    return CreateCorrelationResponseBodyToJSONTyped(json, false);\n}\n\nexport function CreateCorrelationResponseBodyToJSONTyped(value?: CreateCorrelationResponseBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'result': CorrelationToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateDashboardSnapshot200Response\n */\nexport interface CreateDashboardSnapshot200Response {\n    /**\n     * Unique key used to delete the snapshot. It is different from the key so that only the creator can delete the snapshot.\n     * @type {string}\n     * @memberof CreateDashboardSnapshot200Response\n     */\n    deleteKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateDashboardSnapshot200Response\n     */\n    deleteUrl?: string;\n    /**\n     * Snapshot id\n     * @type {number}\n     * @memberof CreateDashboardSnapshot200Response\n     */\n    id?: number;\n    /**\n     * Unique key\n     * @type {string}\n     * @memberof CreateDashboardSnapshot200Response\n     */\n    key?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateDashboardSnapshot200Response\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the CreateDashboardSnapshot200Response interface.\n */\nexport function instanceOfCreateDashboardSnapshot200Response(value: object): value is CreateDashboardSnapshot200Response {\n    return true;\n}\n\nexport function CreateDashboardSnapshot200ResponseFromJSON(json: any): CreateDashboardSnapshot200Response {\n    return CreateDashboardSnapshot200ResponseFromJSONTyped(json, false);\n}\n\nexport function CreateDashboardSnapshot200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDashboardSnapshot200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'deleteKey': json['deleteKey'] == null ? undefined : json['deleteKey'],\n        'deleteUrl': json['deleteUrl'] == null ? undefined : json['deleteUrl'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'key': json['key'] == null ? undefined : json['key'],\n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function CreateDashboardSnapshot200ResponseToJSON(json: any): CreateDashboardSnapshot200Response {\n    return CreateDashboardSnapshot200ResponseToJSONTyped(json, false);\n}\n\nexport function CreateDashboardSnapshot200ResponseToJSONTyped(value?: CreateDashboardSnapshot200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'deleteKey': value['deleteKey'],\n        'deleteUrl': value['deleteUrl'],\n        'id': value['id'],\n        'key': value['key'],\n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Unstructured allows objects that do not have Golang structs registered to be manipulated\n * generically.\n * @export\n * @interface Unstructured\n */\nexport interface Unstructured {\n    /**\n     * Object is a JSON compatible map with string, float, int, bool, []interface{},\n     * or map[string]interface{} children.\n     * @type {{ [key: string]: object; }}\n     * @memberof Unstructured\n     */\n    object?: { [key: string]: object; };\n}\n\n/**\n * Check if a given object implements the Unstructured interface.\n */\nexport function instanceOfUnstructured(value: object): value is Unstructured {\n    return true;\n}\n\nexport function UnstructuredFromJSON(json: any): Unstructured {\n    return UnstructuredFromJSONTyped(json, false);\n}\n\nexport function UnstructuredFromJSONTyped(json: any, ignoreDiscriminator: boolean): Unstructured {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'object': json['Object'] == null ? undefined : json['Object'],\n    };\n}\n\nexport function UnstructuredToJSON(json: any): Unstructured {\n    return UnstructuredToJSONTyped(json, false);\n}\n\nexport function UnstructuredToJSONTyped(value?: Unstructured | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Object': value['object'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Unstructured } from './Unstructured';\nimport {\n    UnstructuredFromJSON,\n    UnstructuredFromJSONTyped,\n    UnstructuredToJSON,\n    UnstructuredToJSONTyped,\n} from './Unstructured';\n\n/**\n * \n * @export\n * @interface CreateDashboardSnapshotCommand\n */\nexport interface CreateDashboardSnapshotCommand {\n    /**\n     * APIVersion defines the versioned schema of this representation of an object.\n     * Servers should convert recognized schemas to the latest internal value, and\n     * may reject unrecognized values.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n     * +optional\n     * @type {string}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    apiVersion?: string;\n    /**\n     * \n     * @type {Unstructured}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    dashboard: Unstructured;\n    /**\n     * Unique key used to delete the snapshot. It is different from the `key` so that only the creator can delete the snapshot. Required if `external` is `true`.\n     * @type {string}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    deleteKey?: string;\n    /**\n     * When the snapshot should expire in seconds in seconds. Default is never to expire.\n     * @type {number}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    expires?: number;\n    /**\n     * these are passed when storing an external snapshot ref\n     * Save the snapshot on an external server rather than locally.\n     * @type {boolean}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    external?: boolean;\n    /**\n     * Define the unique key. Required if `external` is `true`.\n     * @type {string}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    key?: string;\n    /**\n     * Kind is a string value representing the REST resource this object represents.\n     * Servers may infer this from the endpoint the client submits requests to.\n     * Cannot be updated.\n     * In CamelCase.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n     * +optional\n     * @type {string}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    kind?: string;\n    /**\n     * Snapshot name\n     * @type {string}\n     * @memberof CreateDashboardSnapshotCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the CreateDashboardSnapshotCommand interface.\n */\nexport function instanceOfCreateDashboardSnapshotCommand(value: object): value is CreateDashboardSnapshotCommand {\n    if (!('dashboard' in value) || value['dashboard'] === undefined) return false;\n    return true;\n}\n\nexport function CreateDashboardSnapshotCommandFromJSON(json: any): CreateDashboardSnapshotCommand {\n    return CreateDashboardSnapshotCommandFromJSONTyped(json, false);\n}\n\nexport function CreateDashboardSnapshotCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDashboardSnapshotCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],\n        'dashboard': UnstructuredFromJSON(json['dashboard']),\n        'deleteKey': json['deleteKey'] == null ? undefined : json['deleteKey'],\n        'expires': json['expires'] == null ? undefined : json['expires'],\n        'external': json['external'] == null ? undefined : json['external'],\n        'key': json['key'] == null ? undefined : json['key'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function CreateDashboardSnapshotCommandToJSON(json: any): CreateDashboardSnapshotCommand {\n    return CreateDashboardSnapshotCommandToJSONTyped(json, false);\n}\n\nexport function CreateDashboardSnapshotCommandToJSONTyped(value?: CreateDashboardSnapshotCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'apiVersion': value['apiVersion'],\n        'dashboard': UnstructuredToJSON(value['dashboard']),\n        'deleteKey': value['deleteKey'],\n        'expires': value['expires'],\n        'external': value['external'],\n        'key': value['key'],\n        'kind': value['kind'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * CreateFolderCommand captures the information required by the folder service\n * to create a folder.\n * @export\n * @interface CreateFolderCommand\n */\nexport interface CreateFolderCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateFolderCommand\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateFolderCommand\n     */\n    parentUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateFolderCommand\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateFolderCommand\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the CreateFolderCommand interface.\n */\nexport function instanceOfCreateFolderCommand(value: object): value is CreateFolderCommand {\n    return true;\n}\n\nexport function CreateFolderCommandFromJSON(json: any): CreateFolderCommand {\n    return CreateFolderCommandFromJSONTyped(json, false);\n}\n\nexport function CreateFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFolderCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'parentUid': json['parentUid'] == null ? undefined : json['parentUid'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function CreateFolderCommandToJSON(json: any): CreateFolderCommand {\n    return CreateFolderCommandToJSONTyped(json, false);\n}\n\nexport function CreateFolderCommandToJSONTyped(value?: CreateFolderCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'parentUid': value['parentUid'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * CreateLibraryElementCommand is the command for adding a LibraryElement\n * @export\n * @interface CreateLibraryElementCommand\n */\nexport interface CreateLibraryElementCommand {\n    /**\n     * ID of the folder where the library element is stored.\n     * \n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof CreateLibraryElementCommand\n     */\n    folderId?: number;\n    /**\n     * UID of the folder where the library element is stored.\n     * @type {string}\n     * @memberof CreateLibraryElementCommand\n     */\n    folderUid?: string;\n    /**\n     * Kind of element to create, Use 1 for library panels or 2 for c.\n     * Description:\n     * 1 - library panels\n     * 2 - library variables\n     * @type {number}\n     * @memberof CreateLibraryElementCommand\n     */\n    kind?: CreateLibraryElementCommandKindEnum;\n    /**\n     * The JSON model for the library element.\n     * @type {object}\n     * @memberof CreateLibraryElementCommand\n     */\n    model?: object;\n    /**\n     * Name of the library element.\n     * @type {string}\n     * @memberof CreateLibraryElementCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateLibraryElementCommand\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const CreateLibraryElementCommandKindEnum = {\n    NUMBER_1: 1,\n    NUMBER_2: 2\n} as const;\nexport type CreateLibraryElementCommandKindEnum = typeof CreateLibraryElementCommandKindEnum[keyof typeof CreateLibraryElementCommandKindEnum];\n\n\n/**\n * Check if a given object implements the CreateLibraryElementCommand interface.\n */\nexport function instanceOfCreateLibraryElementCommand(value: object): value is CreateLibraryElementCommand {\n    return true;\n}\n\nexport function CreateLibraryElementCommandFromJSON(json: any): CreateLibraryElementCommand {\n    return CreateLibraryElementCommandFromJSONTyped(json, false);\n}\n\nexport function CreateLibraryElementCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLibraryElementCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'model': json['model'] == null ? undefined : json['model'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function CreateLibraryElementCommandToJSON(json: any): CreateLibraryElementCommand {\n    return CreateLibraryElementCommandToJSONTyped(json, false);\n}\n\nexport function CreateLibraryElementCommandToJSONTyped(value?: CreateLibraryElementCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'kind': value['kind'],\n        'model': value['model'],\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReportDashboardID\n */\nexport interface ReportDashboardID {\n    /**\n     * \n     * @type {number}\n     * @memberof ReportDashboardID\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportDashboardID\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportDashboardID\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the ReportDashboardID interface.\n */\nexport function instanceOfReportDashboardID(value: object): value is ReportDashboardID {\n    return true;\n}\n\nexport function ReportDashboardIDFromJSON(json: any): ReportDashboardID {\n    return ReportDashboardIDFromJSONTyped(json, false);\n}\n\nexport function ReportDashboardIDFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDashboardID {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function ReportDashboardIDToJSON(json: any): ReportDashboardID {\n    return ReportDashboardIDToJSONTyped(json, false);\n}\n\nexport function ReportDashboardIDToJSONTyped(value?: ReportDashboardID | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReportTimeRange\n */\nexport interface ReportTimeRange {\n    /**\n     * \n     * @type {string}\n     * @memberof ReportTimeRange\n     */\n    from?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportTimeRange\n     */\n    to?: string;\n}\n\n/**\n * Check if a given object implements the ReportTimeRange interface.\n */\nexport function instanceOfReportTimeRange(value: object): value is ReportTimeRange {\n    return true;\n}\n\nexport function ReportTimeRangeFromJSON(json: any): ReportTimeRange {\n    return ReportTimeRangeFromJSONTyped(json, false);\n}\n\nexport function ReportTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportTimeRange {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'] == null ? undefined : json['from'],\n        'to': json['to'] == null ? undefined : json['to'],\n    };\n}\n\nexport function ReportTimeRangeToJSON(json: any): ReportTimeRange {\n    return ReportTimeRangeToJSONTyped(json, false);\n}\n\nexport function ReportTimeRangeToJSONTyped(value?: ReportTimeRange | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'],\n        'to': value['to'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReportDashboardID } from './ReportDashboardID';\nimport {\n    ReportDashboardIDFromJSON,\n    ReportDashboardIDFromJSONTyped,\n    ReportDashboardIDToJSON,\n    ReportDashboardIDToJSONTyped,\n} from './ReportDashboardID';\nimport type { ReportTimeRange } from './ReportTimeRange';\nimport {\n    ReportTimeRangeFromJSON,\n    ReportTimeRangeFromJSONTyped,\n    ReportTimeRangeToJSON,\n    ReportTimeRangeToJSONTyped,\n} from './ReportTimeRange';\n\n/**\n * \n * @export\n * @interface ReportDashboard\n */\nexport interface ReportDashboard {\n    /**\n     * \n     * @type {ReportDashboardID}\n     * @memberof ReportDashboard\n     */\n    dashboard?: ReportDashboardID;\n    /**\n     * \n     * @type {object}\n     * @memberof ReportDashboard\n     */\n    reportVariables?: object;\n    /**\n     * \n     * @type {ReportTimeRange}\n     * @memberof ReportDashboard\n     */\n    timeRange?: ReportTimeRange;\n}\n\n/**\n * Check if a given object implements the ReportDashboard interface.\n */\nexport function instanceOfReportDashboard(value: object): value is ReportDashboard {\n    return true;\n}\n\nexport function ReportDashboardFromJSON(json: any): ReportDashboard {\n    return ReportDashboardFromJSONTyped(json, false);\n}\n\nexport function ReportDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDashboard {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboard': json['dashboard'] == null ? undefined : ReportDashboardIDFromJSON(json['dashboard']),\n        'reportVariables': json['reportVariables'] == null ? undefined : json['reportVariables'],\n        'timeRange': json['timeRange'] == null ? undefined : ReportTimeRangeFromJSON(json['timeRange']),\n    };\n}\n\nexport function ReportDashboardToJSON(json: any): ReportDashboard {\n    return ReportDashboardToJSONTyped(json, false);\n}\n\nexport function ReportDashboardToJSONTyped(value?: ReportDashboard | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboard': ReportDashboardIDToJSON(value['dashboard']),\n        'reportVariables': value['reportVariables'],\n        'timeRange': ReportTimeRangeToJSON(value['timeRange']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReportSchedule\n */\nexport interface ReportSchedule {\n    /**\n     * \n     * @type {string}\n     * @memberof ReportSchedule\n     */\n    dayOfMonth?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof ReportSchedule\n     */\n    endDate?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportSchedule\n     */\n    frequency?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ReportSchedule\n     */\n    intervalAmount?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportSchedule\n     */\n    intervalFrequency?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof ReportSchedule\n     */\n    startDate?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportSchedule\n     */\n    timeZone?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ReportSchedule\n     */\n    workdaysOnly?: boolean;\n}\n\n/**\n * Check if a given object implements the ReportSchedule interface.\n */\nexport function instanceOfReportSchedule(value: object): value is ReportSchedule {\n    return true;\n}\n\nexport function ReportScheduleFromJSON(json: any): ReportSchedule {\n    return ReportScheduleFromJSONTyped(json, false);\n}\n\nexport function ReportScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSchedule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dayOfMonth': json['dayOfMonth'] == null ? undefined : json['dayOfMonth'],\n        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),\n        'frequency': json['frequency'] == null ? undefined : json['frequency'],\n        'intervalAmount': json['intervalAmount'] == null ? undefined : json['intervalAmount'],\n        'intervalFrequency': json['intervalFrequency'] == null ? undefined : json['intervalFrequency'],\n        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),\n        'timeZone': json['timeZone'] == null ? undefined : json['timeZone'],\n        'workdaysOnly': json['workdaysOnly'] == null ? undefined : json['workdaysOnly'],\n    };\n}\n\nexport function ReportScheduleToJSON(json: any): ReportSchedule {\n    return ReportScheduleToJSONTyped(json, false);\n}\n\nexport function ReportScheduleToJSONTyped(value?: ReportSchedule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dayOfMonth': value['dayOfMonth'],\n        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),\n        'frequency': value['frequency'],\n        'intervalAmount': value['intervalAmount'],\n        'intervalFrequency': value['intervalFrequency'],\n        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),\n        'timeZone': value['timeZone'],\n        'workdaysOnly': value['workdaysOnly'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReportTimeRange } from './ReportTimeRange';\nimport {\n    ReportTimeRangeFromJSON,\n    ReportTimeRangeFromJSONTyped,\n    ReportTimeRangeToJSON,\n    ReportTimeRangeToJSONTyped,\n} from './ReportTimeRange';\n\n/**\n * \n * @export\n * @interface ReportOptions\n */\nexport interface ReportOptions {\n    /**\n     * \n     * @type {string}\n     * @memberof ReportOptions\n     */\n    layout?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportOptions\n     */\n    orientation?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ReportOptions\n     */\n    pdfShowTemplateVariables?: boolean;\n    /**\n     * \n     * @type {ReportTimeRange}\n     * @memberof ReportOptions\n     */\n    timeRange?: ReportTimeRange;\n}\n\n/**\n * Check if a given object implements the ReportOptions interface.\n */\nexport function instanceOfReportOptions(value: object): value is ReportOptions {\n    return true;\n}\n\nexport function ReportOptionsFromJSON(json: any): ReportOptions {\n    return ReportOptionsFromJSONTyped(json, false);\n}\n\nexport function ReportOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportOptions {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'layout': json['layout'] == null ? undefined : json['layout'],\n        'orientation': json['orientation'] == null ? undefined : json['orientation'],\n        'pdfShowTemplateVariables': json['pdfShowTemplateVariables'] == null ? undefined : json['pdfShowTemplateVariables'],\n        'timeRange': json['timeRange'] == null ? undefined : ReportTimeRangeFromJSON(json['timeRange']),\n    };\n}\n\nexport function ReportOptionsToJSON(json: any): ReportOptions {\n    return ReportOptionsToJSONTyped(json, false);\n}\n\nexport function ReportOptionsToJSONTyped(value?: ReportOptions | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'layout': value['layout'],\n        'orientation': value['orientation'],\n        'pdfShowTemplateVariables': value['pdfShowTemplateVariables'],\n        'timeRange': ReportTimeRangeToJSON(value['timeRange']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReportDashboard } from './ReportDashboard';\nimport {\n    ReportDashboardFromJSON,\n    ReportDashboardFromJSONTyped,\n    ReportDashboardToJSON,\n    ReportDashboardToJSONTyped,\n} from './ReportDashboard';\nimport type { ReportSchedule } from './ReportSchedule';\nimport {\n    ReportScheduleFromJSON,\n    ReportScheduleFromJSONTyped,\n    ReportScheduleToJSON,\n    ReportScheduleToJSONTyped,\n} from './ReportSchedule';\nimport type { ReportOptions } from './ReportOptions';\nimport {\n    ReportOptionsFromJSON,\n    ReportOptionsFromJSONTyped,\n    ReportOptionsToJSON,\n    ReportOptionsToJSONTyped,\n} from './ReportOptions';\n\n/**\n * \n * @export\n * @interface CreateOrUpdateReport\n */\nexport interface CreateOrUpdateReport {\n    /**\n     * \n     * @type {Array<ReportDashboard>}\n     * @memberof CreateOrUpdateReport\n     */\n    dashboards?: Array<ReportDashboard>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CreateOrUpdateReport\n     */\n    enableCsv?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CreateOrUpdateReport\n     */\n    enableDashboardUrl?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof CreateOrUpdateReport\n     */\n    formats?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateOrUpdateReport\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateOrUpdateReport\n     */\n    name?: string;\n    /**\n     * \n     * @type {ReportOptions}\n     * @memberof CreateOrUpdateReport\n     */\n    options?: ReportOptions;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateOrUpdateReport\n     */\n    recipients?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateOrUpdateReport\n     */\n    replyTo?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof CreateOrUpdateReport\n     */\n    scaleFactor?: number;\n    /**\n     * \n     * @type {ReportSchedule}\n     * @memberof CreateOrUpdateReport\n     */\n    schedule?: ReportSchedule;\n    /**\n     * +enum\n     * @type {string}\n     * @memberof CreateOrUpdateReport\n     */\n    state?: string;\n}\n\n/**\n * Check if a given object implements the CreateOrUpdateReport interface.\n */\nexport function instanceOfCreateOrUpdateReport(value: object): value is CreateOrUpdateReport {\n    return true;\n}\n\nexport function CreateOrUpdateReportFromJSON(json: any): CreateOrUpdateReport {\n    return CreateOrUpdateReportFromJSONTyped(json, false);\n}\n\nexport function CreateOrUpdateReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrUpdateReport {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboards': json['dashboards'] == null ? undefined : ((json['dashboards'] as Array<any>).map(ReportDashboardFromJSON)),\n        'enableCsv': json['enableCsv'] == null ? undefined : json['enableCsv'],\n        'enableDashboardUrl': json['enableDashboardUrl'] == null ? undefined : json['enableDashboardUrl'],\n        'formats': json['formats'] == null ? undefined : json['formats'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'options': json['options'] == null ? undefined : ReportOptionsFromJSON(json['options']),\n        'recipients': json['recipients'] == null ? undefined : json['recipients'],\n        'replyTo': json['replyTo'] == null ? undefined : json['replyTo'],\n        'scaleFactor': json['scaleFactor'] == null ? undefined : json['scaleFactor'],\n        'schedule': json['schedule'] == null ? undefined : ReportScheduleFromJSON(json['schedule']),\n        'state': json['state'] == null ? undefined : json['state'],\n    };\n}\n\nexport function CreateOrUpdateReportToJSON(json: any): CreateOrUpdateReport {\n    return CreateOrUpdateReportToJSONTyped(json, false);\n}\n\nexport function CreateOrUpdateReportToJSONTyped(value?: CreateOrUpdateReport | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboards': value['dashboards'] == null ? undefined : ((value['dashboards'] as Array<any>).map(ReportDashboardToJSON)),\n        'enableCsv': value['enableCsv'],\n        'enableDashboardUrl': value['enableDashboardUrl'],\n        'formats': value['formats'],\n        'message': value['message'],\n        'name': value['name'],\n        'options': ReportOptionsToJSON(value['options']),\n        'recipients': value['recipients'],\n        'replyTo': value['replyTo'],\n        'scaleFactor': value['scaleFactor'],\n        'schedule': ReportScheduleToJSON(value['schedule']),\n        'state': value['state'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateOrg200Response\n */\nexport interface CreateOrg200Response {\n    /**\n     * Message Message of the created org.\n     * @type {string}\n     * @memberof CreateOrg200Response\n     */\n    message: string;\n    /**\n     * ID Identifier of the created org.\n     * @type {number}\n     * @memberof CreateOrg200Response\n     */\n    orgId: number;\n}\n\n/**\n * Check if a given object implements the CreateOrg200Response interface.\n */\nexport function instanceOfCreateOrg200Response(value: object): value is CreateOrg200Response {\n    if (!('message' in value) || value['message'] === undefined) return false;\n    if (!('orgId' in value) || value['orgId'] === undefined) return false;\n    return true;\n}\n\nexport function CreateOrg200ResponseFromJSON(json: any): CreateOrg200Response {\n    return CreateOrg200ResponseFromJSONTyped(json, false);\n}\n\nexport function CreateOrg200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrg200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'],\n        'orgId': json['orgId'],\n    };\n}\n\nexport function CreateOrg200ResponseToJSON(json: any): CreateOrg200Response {\n    return CreateOrg200ResponseToJSONTyped(json, false);\n}\n\nexport function CreateOrg200ResponseToJSONTyped(value?: CreateOrg200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'orgId': value['orgId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateOrgCommand\n */\nexport interface CreateOrgCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateOrgCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the CreateOrgCommand interface.\n */\nexport function instanceOfCreateOrgCommand(value: object): value is CreateOrgCommand {\n    return true;\n}\n\nexport function CreateOrgCommandFromJSON(json: any): CreateOrgCommand {\n    return CreateOrgCommandFromJSONTyped(json, false);\n}\n\nexport function CreateOrgCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrgCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function CreateOrgCommandToJSON(json: any): CreateOrgCommand {\n    return CreateOrgCommandToJSONTyped(json, false);\n}\n\nexport function CreateOrgCommandToJSONTyped(value?: CreateOrgCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PlaylistItem\n */\nexport interface PlaylistItem {\n    /**\n     * \n     * @type {number}\n     * @memberof PlaylistItem\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PlaylistItem\n     */\n    playlistId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PlaylistItem\n     */\n    order?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistItem\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistItem\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistItem\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the PlaylistItem interface.\n */\nexport function instanceOfPlaylistItem(value: object): value is PlaylistItem {\n    return true;\n}\n\nexport function PlaylistItemFromJSON(json: any): PlaylistItem {\n    return PlaylistItemFromJSONTyped(json, false);\n}\n\nexport function PlaylistItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistItem {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['Id'] == null ? undefined : json['Id'],\n        'playlistId': json['PlaylistId'] == null ? undefined : json['PlaylistId'],\n        'order': json['order'] == null ? undefined : json['order'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function PlaylistItemToJSON(json: any): PlaylistItem {\n    return PlaylistItemToJSONTyped(json, false);\n}\n\nexport function PlaylistItemToJSONTyped(value?: PlaylistItem | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Id': value['id'],\n        'PlaylistId': value['playlistId'],\n        'order': value['order'],\n        'title': value['title'],\n        'type': value['type'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PlaylistItem } from './PlaylistItem';\nimport {\n    PlaylistItemFromJSON,\n    PlaylistItemFromJSONTyped,\n    PlaylistItemToJSON,\n    PlaylistItemToJSONTyped,\n} from './PlaylistItem';\n\n/**\n * \n * @export\n * @interface CreatePlaylistCommand\n */\nexport interface CreatePlaylistCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof CreatePlaylistCommand\n     */\n    interval?: string;\n    /**\n     * \n     * @type {Array<PlaylistItem>}\n     * @memberof CreatePlaylistCommand\n     */\n    items?: Array<PlaylistItem>;\n    /**\n     * \n     * @type {string}\n     * @memberof CreatePlaylistCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the CreatePlaylistCommand interface.\n */\nexport function instanceOfCreatePlaylistCommand(value: object): value is CreatePlaylistCommand {\n    return true;\n}\n\nexport function CreatePlaylistCommandFromJSON(json: any): CreatePlaylistCommand {\n    return CreatePlaylistCommandFromJSONTyped(json, false);\n}\n\nexport function CreatePlaylistCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePlaylistCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(PlaylistItemFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function CreatePlaylistCommandToJSON(json: any): CreatePlaylistCommand {\n    return CreatePlaylistCommandToJSONTyped(json, false);\n}\n\nexport function CreatePlaylistCommandToJSONTyped(value?: CreatePlaylistCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'interval': value['interval'],\n        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(PlaylistItemToJSON)),\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * CreateQueryInQueryHistoryCommand is the command for adding query history\n * @export\n * @interface CreateQueryInQueryHistoryCommand\n */\nexport interface CreateQueryInQueryHistoryCommand {\n    /**\n     * UID of the data source for which are queries stored.\n     * @type {string}\n     * @memberof CreateQueryInQueryHistoryCommand\n     */\n    datasourceUid?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof CreateQueryInQueryHistoryCommand\n     */\n    queries: object;\n}\n\n/**\n * Check if a given object implements the CreateQueryInQueryHistoryCommand interface.\n */\nexport function instanceOfCreateQueryInQueryHistoryCommand(value: object): value is CreateQueryInQueryHistoryCommand {\n    if (!('queries' in value) || value['queries'] === undefined) return false;\n    return true;\n}\n\nexport function CreateQueryInQueryHistoryCommandFromJSON(json: any): CreateQueryInQueryHistoryCommand {\n    return CreateQueryInQueryHistoryCommandFromJSONTyped(json, false);\n}\n\nexport function CreateQueryInQueryHistoryCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateQueryInQueryHistoryCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],\n        'queries': json['queries'],\n    };\n}\n\nexport function CreateQueryInQueryHistoryCommandToJSON(json: any): CreateQueryInQueryHistoryCommand {\n    return CreateQueryInQueryHistoryCommandToJSONTyped(json, false);\n}\n\nexport function CreateQueryInQueryHistoryCommandToJSONTyped(value?: CreateQueryInQueryHistoryCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'datasourceUid': value['datasourceUid'],\n        'queries': value['queries'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateReport200Response\n */\nexport interface CreateReport200Response {\n    /**\n     * \n     * @type {number}\n     * @memberof CreateReport200Response\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateReport200Response\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the CreateReport200Response interface.\n */\nexport function instanceOfCreateReport200Response(value: object): value is CreateReport200Response {\n    return true;\n}\n\nexport function CreateReport200ResponseFromJSON(json: any): CreateReport200Response {\n    return CreateReport200ResponseFromJSONTyped(json, false);\n}\n\nexport function CreateReport200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateReport200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function CreateReport200ResponseToJSON(json: any): CreateReport200Response {\n    return CreateReport200ResponseToJSONTyped(json, false);\n}\n\nexport function CreateReport200ResponseToJSONTyped(value?: CreateReport200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Permission\n */\nexport interface Permission {\n    /**\n     * \n     * @type {string}\n     * @memberof Permission\n     */\n    action?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Permission\n     */\n    created?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Permission\n     */\n    scope?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Permission\n     */\n    updated?: Date;\n}\n\n/**\n * Check if a given object implements the Permission interface.\n */\nexport function instanceOfPermission(value: object): value is Permission {\n    return true;\n}\n\nexport function PermissionFromJSON(json: any): Permission {\n    return PermissionFromJSONTyped(json, false);\n}\n\nexport function PermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Permission {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'action': json['action'] == null ? undefined : json['action'],\n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'scope': json['scope'] == null ? undefined : json['scope'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function PermissionToJSON(json: any): Permission {\n    return PermissionToJSONTyped(json, false);\n}\n\nexport function PermissionToJSONTyped(value?: Permission | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'action': value['action'],\n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'scope': value['scope'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Permission } from './Permission';\nimport {\n    PermissionFromJSON,\n    PermissionFromJSONTyped,\n    PermissionToJSON,\n    PermissionToJSONTyped,\n} from './Permission';\n\n/**\n * \n * @export\n * @interface CreateRoleForm\n */\nexport interface CreateRoleForm {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRoleForm\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRoleForm\n     */\n    displayName?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CreateRoleForm\n     */\n    global?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRoleForm\n     */\n    group?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof CreateRoleForm\n     */\n    hidden?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRoleForm\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<Permission>}\n     * @memberof CreateRoleForm\n     */\n    permissions?: Array<Permission>;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRoleForm\n     */\n    uid?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof CreateRoleForm\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the CreateRoleForm interface.\n */\nexport function instanceOfCreateRoleForm(value: object): value is CreateRoleForm {\n    return true;\n}\n\nexport function CreateRoleFormFromJSON(json: any): CreateRoleForm {\n    return CreateRoleFormFromJSONTyped(json, false);\n}\n\nexport function CreateRoleFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRoleForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'global': json['global'] == null ? undefined : json['global'],\n        'group': json['group'] == null ? undefined : json['group'],\n        'hidden': json['hidden'] == null ? undefined : json['hidden'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(PermissionFromJSON)),\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function CreateRoleFormToJSON(json: any): CreateRoleForm {\n    return CreateRoleFormToJSONTyped(json, false);\n}\n\nexport function CreateRoleFormToJSONTyped(value?: CreateRoleForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'displayName': value['displayName'],\n        'global': value['global'],\n        'group': value['group'],\n        'hidden': value['hidden'],\n        'name': value['name'],\n        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(PermissionToJSON)),\n        'uid': value['uid'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateServiceAccountForm\n */\nexport interface CreateServiceAccountForm {\n    /**\n     * \n     * @type {boolean}\n     * @memberof CreateServiceAccountForm\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateServiceAccountForm\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateServiceAccountForm\n     */\n    role?: CreateServiceAccountFormRoleEnum;\n}\n\n\n/**\n * @export\n */\nexport const CreateServiceAccountFormRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type CreateServiceAccountFormRoleEnum = typeof CreateServiceAccountFormRoleEnum[keyof typeof CreateServiceAccountFormRoleEnum];\n\n\n/**\n * Check if a given object implements the CreateServiceAccountForm interface.\n */\nexport function instanceOfCreateServiceAccountForm(value: object): value is CreateServiceAccountForm {\n    return true;\n}\n\nexport function CreateServiceAccountFormFromJSON(json: any): CreateServiceAccountForm {\n    return CreateServiceAccountFormFromJSONTyped(json, false);\n}\n\nexport function CreateServiceAccountFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateServiceAccountForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'role': json['role'] == null ? undefined : json['role'],\n    };\n}\n\nexport function CreateServiceAccountFormToJSON(json: any): CreateServiceAccountForm {\n    return CreateServiceAccountFormToJSONTyped(json, false);\n}\n\nexport function CreateServiceAccountFormToJSONTyped(value?: CreateServiceAccountForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'isDisabled': value['isDisabled'],\n        'name': value['name'],\n        'role': value['role'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateSnapshotResponseDTO\n */\nexport interface CreateSnapshotResponseDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateSnapshotResponseDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the CreateSnapshotResponseDTO interface.\n */\nexport function instanceOfCreateSnapshotResponseDTO(value: object): value is CreateSnapshotResponseDTO {\n    return true;\n}\n\nexport function CreateSnapshotResponseDTOFromJSON(json: any): CreateSnapshotResponseDTO {\n    return CreateSnapshotResponseDTOFromJSONTyped(json, false);\n}\n\nexport function CreateSnapshotResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSnapshotResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function CreateSnapshotResponseDTOToJSON(json: any): CreateSnapshotResponseDTO {\n    return CreateSnapshotResponseDTOToJSONTyped(json, false);\n}\n\nexport function CreateSnapshotResponseDTOToJSONTyped(value?: CreateSnapshotResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateTeam200Response\n */\nexport interface CreateTeam200Response {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTeam200Response\n     */\n    message?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof CreateTeam200Response\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTeam200Response\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the CreateTeam200Response interface.\n */\nexport function instanceOfCreateTeam200Response(value: object): value is CreateTeam200Response {\n    return true;\n}\n\nexport function CreateTeam200ResponseFromJSON(json: any): CreateTeam200Response {\n    return CreateTeam200ResponseFromJSONTyped(json, false);\n}\n\nexport function CreateTeam200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTeam200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function CreateTeam200ResponseToJSON(json: any): CreateTeam200Response {\n    return CreateTeam200ResponseToJSONTyped(json, false);\n}\n\nexport function CreateTeam200ResponseToJSONTyped(value?: CreateTeam200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'teamId': value['teamId'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface CreateTeamCommand\n */\nexport interface CreateTeamCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTeamCommand\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateTeamCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the CreateTeamCommand interface.\n */\nexport function instanceOfCreateTeamCommand(value: object): value is CreateTeamCommand {\n    return true;\n}\n\nexport function CreateTeamCommandFromJSON(json: any): CreateTeamCommand {\n    return CreateTeamCommandFromJSONTyped(json, false);\n}\n\nexport function CreateTeamCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTeamCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'] == null ? undefined : json['email'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function CreateTeamCommandToJSON(json: any): CreateTeamCommand {\n    return CreateTeamCommandToJSONTyped(json, false);\n}\n\nexport function CreateTeamCommandToJSONTyped(value?: CreateTeamCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'email': value['email'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DashboardACLInfoDTO\n */\nexport interface DashboardACLInfoDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardACLInfoDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLInfoDTO\n     */\n    dashboardId?: number;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof DashboardACLInfoDTO\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardACLInfoDTO\n     */\n    inherited?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardACLInfoDTO\n     */\n    isFolder?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLInfoDTO\n     */\n    permission?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    permissionName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    role?: DashboardACLInfoDTORoleEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    team?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    teamAvatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    teamEmail?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLInfoDTO\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardACLInfoDTO\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    userAvatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    userEmail?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLInfoDTO\n     */\n    userId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLInfoDTO\n     */\n    userLogin?: string;\n}\n\n\n/**\n * @export\n */\nexport const DashboardACLInfoDTORoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type DashboardACLInfoDTORoleEnum = typeof DashboardACLInfoDTORoleEnum[keyof typeof DashboardACLInfoDTORoleEnum];\n\n\n/**\n * Check if a given object implements the DashboardACLInfoDTO interface.\n */\nexport function instanceOfDashboardACLInfoDTO(value: object): value is DashboardACLInfoDTO {\n    return true;\n}\n\nexport function DashboardACLInfoDTOFromJSON(json: any): DashboardACLInfoDTO {\n    return DashboardACLInfoDTOFromJSONTyped(json, false);\n}\n\nexport function DashboardACLInfoDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardACLInfoDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'inherited': json['inherited'] == null ? undefined : json['inherited'],\n        'isFolder': json['isFolder'] == null ? undefined : json['isFolder'],\n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'permissionName': json['permissionName'] == null ? undefined : json['permissionName'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'team': json['team'] == null ? undefined : json['team'],\n        'teamAvatarUrl': json['teamAvatarUrl'] == null ? undefined : json['teamAvatarUrl'],\n        'teamEmail': json['teamEmail'] == null ? undefined : json['teamEmail'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'url': json['url'] == null ? undefined : json['url'],\n        'userAvatarUrl': json['userAvatarUrl'] == null ? undefined : json['userAvatarUrl'],\n        'userEmail': json['userEmail'] == null ? undefined : json['userEmail'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n        'userLogin': json['userLogin'] == null ? undefined : json['userLogin'],\n    };\n}\n\nexport function DashboardACLInfoDTOToJSON(json: any): DashboardACLInfoDTO {\n    return DashboardACLInfoDTOToJSONTyped(json, false);\n}\n\nexport function DashboardACLInfoDTOToJSONTyped(value?: DashboardACLInfoDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'dashboardId': value['dashboardId'],\n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'inherited': value['inherited'],\n        'isFolder': value['isFolder'],\n        'permission': value['permission'],\n        'permissionName': value['permissionName'],\n        'role': value['role'],\n        'slug': value['slug'],\n        'team': value['team'],\n        'teamAvatarUrl': value['teamAvatarUrl'],\n        'teamEmail': value['teamEmail'],\n        'teamId': value['teamId'],\n        'title': value['title'],\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'url': value['url'],\n        'userAvatarUrl': value['userAvatarUrl'],\n        'userEmail': value['userEmail'],\n        'userId': value['userId'],\n        'userLogin': value['userLogin'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DashboardACLUpdateItem\n */\nexport interface DashboardACLUpdateItem {\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLUpdateItem\n     */\n    permission?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardACLUpdateItem\n     */\n    role?: DashboardACLUpdateItemRoleEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLUpdateItem\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardACLUpdateItem\n     */\n    userId?: number;\n}\n\n\n/**\n * @export\n */\nexport const DashboardACLUpdateItemRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type DashboardACLUpdateItemRoleEnum = typeof DashboardACLUpdateItemRoleEnum[keyof typeof DashboardACLUpdateItemRoleEnum];\n\n\n/**\n * Check if a given object implements the DashboardACLUpdateItem interface.\n */\nexport function instanceOfDashboardACLUpdateItem(value: object): value is DashboardACLUpdateItem {\n    return true;\n}\n\nexport function DashboardACLUpdateItemFromJSON(json: any): DashboardACLUpdateItem {\n    return DashboardACLUpdateItemFromJSONTyped(json, false);\n}\n\nexport function DashboardACLUpdateItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardACLUpdateItem {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function DashboardACLUpdateItemToJSON(json: any): DashboardACLUpdateItem {\n    return DashboardACLUpdateItemToJSONTyped(json, false);\n}\n\nexport function DashboardACLUpdateItemToJSONTyped(value?: DashboardACLUpdateItem | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'permission': value['permission'],\n        'role': value['role'],\n        'teamId': value['teamId'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Unstructured } from './Unstructured';\nimport {\n    UnstructuredFromJSON,\n    UnstructuredFromJSONTyped,\n    UnstructuredToJSON,\n    UnstructuredToJSONTyped,\n} from './Unstructured';\n\n/**\n * These are the values expected to be sent from an end user\n * +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n * @export\n * @interface DashboardCreateCommand\n */\nexport interface DashboardCreateCommand {\n    /**\n     * APIVersion defines the versioned schema of this representation of an object.\n     * Servers should convert recognized schemas to the latest internal value, and\n     * may reject unrecognized values.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n     * +optional\n     * @type {string}\n     * @memberof DashboardCreateCommand\n     */\n    apiVersion?: string;\n    /**\n     * \n     * @type {Unstructured}\n     * @memberof DashboardCreateCommand\n     */\n    dashboard: Unstructured;\n    /**\n     * When the snapshot should expire in seconds in seconds. Default is never to expire.\n     * @type {number}\n     * @memberof DashboardCreateCommand\n     */\n    expires?: number;\n    /**\n     * these are passed when storing an external snapshot ref\n     * Save the snapshot on an external server rather than locally.\n     * @type {boolean}\n     * @memberof DashboardCreateCommand\n     */\n    external?: boolean;\n    /**\n     * Kind is a string value representing the REST resource this object represents.\n     * Servers may infer this from the endpoint the client submits requests to.\n     * Cannot be updated.\n     * In CamelCase.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n     * +optional\n     * @type {string}\n     * @memberof DashboardCreateCommand\n     */\n    kind?: string;\n    /**\n     * Snapshot name\n     * @type {string}\n     * @memberof DashboardCreateCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the DashboardCreateCommand interface.\n */\nexport function instanceOfDashboardCreateCommand(value: object): value is DashboardCreateCommand {\n    if (!('dashboard' in value) || value['dashboard'] === undefined) return false;\n    return true;\n}\n\nexport function DashboardCreateCommandFromJSON(json: any): DashboardCreateCommand {\n    return DashboardCreateCommandFromJSONTyped(json, false);\n}\n\nexport function DashboardCreateCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardCreateCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],\n        'dashboard': UnstructuredFromJSON(json['dashboard']),\n        'expires': json['expires'] == null ? undefined : json['expires'],\n        'external': json['external'] == null ? undefined : json['external'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function DashboardCreateCommandToJSON(json: any): DashboardCreateCommand {\n    return DashboardCreateCommandToJSONTyped(json, false);\n}\n\nexport function DashboardCreateCommandToJSONTyped(value?: DashboardCreateCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'apiVersion': value['apiVersion'],\n        'dashboard': UnstructuredToJSON(value['dashboard']),\n        'expires': value['expires'],\n        'external': value['external'],\n        'kind': value['kind'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AnnotationPermission } from './AnnotationPermission';\nimport {\n    AnnotationPermissionFromJSON,\n    AnnotationPermissionFromJSONTyped,\n    AnnotationPermissionToJSON,\n    AnnotationPermissionToJSONTyped,\n} from './AnnotationPermission';\n\n/**\n * \n * @export\n * @interface DashboardMeta\n */\nexport interface DashboardMeta {\n    /**\n     * \n     * @type {AnnotationPermission}\n     * @memberof DashboardMeta\n     */\n    annotationsPermissions?: AnnotationPermission;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    canAdmin?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    canDelete?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    canEdit?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    canSave?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    canStar?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardMeta\n     */\n    created?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardMeta\n     */\n    expires?: Date;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof DashboardMeta\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    folderTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    folderUrl?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    hasAcl?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    isFolder?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    isSnapshot?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    isStarred?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    provisioned?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    provisionedExternalId?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardMeta\n     */\n    publicDashboardEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    type?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardMeta\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    updatedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardMeta\n     */\n    url?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardMeta\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the DashboardMeta interface.\n */\nexport function instanceOfDashboardMeta(value: object): value is DashboardMeta {\n    return true;\n}\n\nexport function DashboardMetaFromJSON(json: any): DashboardMeta {\n    return DashboardMetaFromJSONTyped(json, false);\n}\n\nexport function DashboardMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotationsPermissions': json['annotationsPermissions'] == null ? undefined : AnnotationPermissionFromJSON(json['annotationsPermissions']),\n        'canAdmin': json['canAdmin'] == null ? undefined : json['canAdmin'],\n        'canDelete': json['canDelete'] == null ? undefined : json['canDelete'],\n        'canEdit': json['canEdit'] == null ? undefined : json['canEdit'],\n        'canSave': json['canSave'] == null ? undefined : json['canSave'],\n        'canStar': json['canStar'] == null ? undefined : json['canStar'],\n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],\n        'expires': json['expires'] == null ? undefined : (new Date(json['expires'])),\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderTitle': json['folderTitle'] == null ? undefined : json['folderTitle'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'folderUrl': json['folderUrl'] == null ? undefined : json['folderUrl'],\n        'hasAcl': json['hasAcl'] == null ? undefined : json['hasAcl'],\n        'isFolder': json['isFolder'] == null ? undefined : json['isFolder'],\n        'isSnapshot': json['isSnapshot'] == null ? undefined : json['isSnapshot'],\n        'isStarred': json['isStarred'] == null ? undefined : json['isStarred'],\n        'provisioned': json['provisioned'] == null ? undefined : json['provisioned'],\n        'provisionedExternalId': json['provisionedExternalId'] == null ? undefined : json['provisionedExternalId'],\n        'publicDashboardEnabled': json['publicDashboardEnabled'] == null ? undefined : json['publicDashboardEnabled'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'updatedBy': json['updatedBy'] == null ? undefined : json['updatedBy'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function DashboardMetaToJSON(json: any): DashboardMeta {\n    return DashboardMetaToJSONTyped(json, false);\n}\n\nexport function DashboardMetaToJSONTyped(value?: DashboardMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotationsPermissions': AnnotationPermissionToJSON(value['annotationsPermissions']),\n        'canAdmin': value['canAdmin'],\n        'canDelete': value['canDelete'],\n        'canEdit': value['canEdit'],\n        'canSave': value['canSave'],\n        'canStar': value['canStar'],\n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'createdBy': value['createdBy'],\n        'expires': value['expires'] == null ? undefined : ((value['expires']).toISOString()),\n        'folderId': value['folderId'],\n        'folderTitle': value['folderTitle'],\n        'folderUid': value['folderUid'],\n        'folderUrl': value['folderUrl'],\n        'hasAcl': value['hasAcl'],\n        'isFolder': value['isFolder'],\n        'isSnapshot': value['isSnapshot'],\n        'isStarred': value['isStarred'],\n        'provisioned': value['provisioned'],\n        'provisionedExternalId': value['provisionedExternalId'],\n        'publicDashboardEnabled': value['publicDashboardEnabled'],\n        'slug': value['slug'],\n        'type': value['type'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'updatedBy': value['updatedBy'],\n        'url': value['url'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DashboardMeta } from './DashboardMeta';\nimport {\n    DashboardMetaFromJSON,\n    DashboardMetaFromJSONTyped,\n    DashboardMetaToJSON,\n    DashboardMetaToJSONTyped,\n} from './DashboardMeta';\n\n/**\n * \n * @export\n * @interface DashboardFullWithMeta\n */\nexport interface DashboardFullWithMeta {\n    /**\n     * \n     * @type {object}\n     * @memberof DashboardFullWithMeta\n     */\n    dashboard?: object;\n    /**\n     * \n     * @type {DashboardMeta}\n     * @memberof DashboardFullWithMeta\n     */\n    meta?: DashboardMeta;\n}\n\n/**\n * Check if a given object implements the DashboardFullWithMeta interface.\n */\nexport function instanceOfDashboardFullWithMeta(value: object): value is DashboardFullWithMeta {\n    return true;\n}\n\nexport function DashboardFullWithMetaFromJSON(json: any): DashboardFullWithMeta {\n    return DashboardFullWithMetaFromJSONTyped(json, false);\n}\n\nexport function DashboardFullWithMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardFullWithMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboard': json['dashboard'] == null ? undefined : json['dashboard'],\n        'meta': json['meta'] == null ? undefined : DashboardMetaFromJSON(json['meta']),\n    };\n}\n\nexport function DashboardFullWithMetaToJSON(json: any): DashboardFullWithMeta {\n    return DashboardFullWithMetaToJSONTyped(json, false);\n}\n\nexport function DashboardFullWithMetaToJSONTyped(value?: DashboardFullWithMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboard': value['dashboard'],\n        'meta': DashboardMetaToJSON(value['meta']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DashboardRedirect\n */\nexport interface DashboardRedirect {\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardRedirect\n     */\n    redirectUri?: string;\n}\n\n/**\n * Check if a given object implements the DashboardRedirect interface.\n */\nexport function instanceOfDashboardRedirect(value: object): value is DashboardRedirect {\n    return true;\n}\n\nexport function DashboardRedirectFromJSON(json: any): DashboardRedirect {\n    return DashboardRedirectFromJSONTyped(json, false);\n}\n\nexport function DashboardRedirectFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardRedirect {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'redirectUri': json['redirectUri'] == null ? undefined : json['redirectUri'],\n    };\n}\n\nexport function DashboardRedirectToJSON(json: any): DashboardRedirect {\n    return DashboardRedirectToJSONTyped(json, false);\n}\n\nexport function DashboardRedirectToJSONTyped(value?: DashboardRedirect | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'redirectUri': value['redirectUri'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * DashboardSnapshotDTO without dashboard map\n * @export\n * @interface DashboardSnapshotDTO\n */\nexport interface DashboardSnapshotDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardSnapshotDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardSnapshotDTO\n     */\n    expires?: Date;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DashboardSnapshotDTO\n     */\n    external?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardSnapshotDTO\n     */\n    externalUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardSnapshotDTO\n     */\n    key?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardSnapshotDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardSnapshotDTO\n     */\n    updated?: Date;\n}\n\n/**\n * Check if a given object implements the DashboardSnapshotDTO interface.\n */\nexport function instanceOfDashboardSnapshotDTO(value: object): value is DashboardSnapshotDTO {\n    return true;\n}\n\nexport function DashboardSnapshotDTOFromJSON(json: any): DashboardSnapshotDTO {\n    return DashboardSnapshotDTOFromJSONTyped(json, false);\n}\n\nexport function DashboardSnapshotDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardSnapshotDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'expires': json['expires'] == null ? undefined : (new Date(json['expires'])),\n        'external': json['external'] == null ? undefined : json['external'],\n        'externalUrl': json['externalUrl'] == null ? undefined : json['externalUrl'],\n        'key': json['key'] == null ? undefined : json['key'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n    };\n}\n\nexport function DashboardSnapshotDTOToJSON(json: any): DashboardSnapshotDTO {\n    return DashboardSnapshotDTOToJSONTyped(json, false);\n}\n\nexport function DashboardSnapshotDTOToJSONTyped(value?: DashboardSnapshotDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'expires': value['expires'] == null ? undefined : ((value['expires']).toISOString()),\n        'external': value['external'],\n        'externalUrl': value['externalUrl'],\n        'key': value['key'],\n        'name': value['name'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DashboardTagCloudItem\n */\nexport interface DashboardTagCloudItem {\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardTagCloudItem\n     */\n    count?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardTagCloudItem\n     */\n    term?: string;\n}\n\n/**\n * Check if a given object implements the DashboardTagCloudItem interface.\n */\nexport function instanceOfDashboardTagCloudItem(value: object): value is DashboardTagCloudItem {\n    return true;\n}\n\nexport function DashboardTagCloudItemFromJSON(json: any): DashboardTagCloudItem {\n    return DashboardTagCloudItemFromJSONTyped(json, false);\n}\n\nexport function DashboardTagCloudItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardTagCloudItem {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'count': json['count'] == null ? undefined : json['count'],\n        'term': json['term'] == null ? undefined : json['term'],\n    };\n}\n\nexport function DashboardTagCloudItemToJSON(json: any): DashboardTagCloudItem {\n    return DashboardTagCloudItemToJSONTyped(json, false);\n}\n\nexport function DashboardTagCloudItemToJSONTyped(value?: DashboardTagCloudItem | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'count': value['count'],\n        'term': value['term'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * DashboardVersionMeta extends the DashboardVersionDTO with the names\n * associated with the UserIds, overriding the field with the same name from\n * the DashboardVersionDTO model.\n * @export\n * @interface DashboardVersionMeta\n */\nexport interface DashboardVersionMeta {\n    /**\n     * \n     * @type {Date}\n     * @memberof DashboardVersionMeta\n     */\n    created?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardVersionMeta\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardVersionMeta\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {object}\n     * @memberof DashboardVersionMeta\n     */\n    data?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardVersionMeta\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardVersionMeta\n     */\n    message?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardVersionMeta\n     */\n    parentVersion?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardVersionMeta\n     */\n    restoredFrom?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DashboardVersionMeta\n     */\n    uid?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DashboardVersionMeta\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the DashboardVersionMeta interface.\n */\nexport function instanceOfDashboardVersionMeta(value: object): value is DashboardVersionMeta {\n    return true;\n}\n\nexport function DashboardVersionMetaFromJSON(json: any): DashboardVersionMeta {\n    return DashboardVersionMetaFromJSONTyped(json, false);\n}\n\nexport function DashboardVersionMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardVersionMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],\n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'data': json['data'] == null ? undefined : json['data'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'parentVersion': json['parentVersion'] == null ? undefined : json['parentVersion'],\n        'restoredFrom': json['restoredFrom'] == null ? undefined : json['restoredFrom'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function DashboardVersionMetaToJSON(json: any): DashboardVersionMeta {\n    return DashboardVersionMetaToJSONTyped(json, false);\n}\n\nexport function DashboardVersionMetaToJSONTyped(value?: DashboardVersionMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'createdBy': value['createdBy'],\n        'dashboardId': value['dashboardId'],\n        'data': value['data'],\n        'id': value['id'],\n        'message': value['message'],\n        'parentVersion': value['parentVersion'],\n        'restoredFrom': value['restoredFrom'],\n        'uid': value['uid'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Redefining this to avoid an import cycle\n * @export\n * @interface TimeRange\n */\nexport interface TimeRange {\n    /**\n     * \n     * @type {Date}\n     * @memberof TimeRange\n     */\n    from?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof TimeRange\n     */\n    to?: Date;\n}\n\n/**\n * Check if a given object implements the TimeRange interface.\n */\nexport function instanceOfTimeRange(value: object): value is TimeRange {\n    return true;\n}\n\nexport function TimeRangeFromJSON(json: any): TimeRange {\n    return TimeRangeFromJSONTyped(json, false);\n}\n\nexport function TimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeRange {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'from': json['from'] == null ? undefined : (new Date(json['from'])),\n        'to': json['to'] == null ? undefined : (new Date(json['to'])),\n    };\n}\n\nexport function TimeRangeToJSON(json: any): TimeRange {\n    return TimeRangeToJSONTyped(json, false);\n}\n\nexport function TimeRangeToJSONTyped(value?: TimeRange | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'from': value['from'] == null ? undefined : ((value['from']).toISOString()),\n        'to': value['to'] == null ? undefined : ((value['to']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LinkTransformationConfig\n */\nexport interface LinkTransformationConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof LinkTransformationConfig\n     */\n    expression?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LinkTransformationConfig\n     */\n    field?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LinkTransformationConfig\n     */\n    mapValue?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LinkTransformationConfig\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the LinkTransformationConfig interface.\n */\nexport function instanceOfLinkTransformationConfig(value: object): value is LinkTransformationConfig {\n    return true;\n}\n\nexport function LinkTransformationConfigFromJSON(json: any): LinkTransformationConfig {\n    return LinkTransformationConfigFromJSONTyped(json, false);\n}\n\nexport function LinkTransformationConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTransformationConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'expression': json['expression'] == null ? undefined : json['expression'],\n        'field': json['field'] == null ? undefined : json['field'],\n        'mapValue': json['mapValue'] == null ? undefined : json['mapValue'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function LinkTransformationConfigToJSON(json: any): LinkTransformationConfig {\n    return LinkTransformationConfigToJSONTyped(json, false);\n}\n\nexport function LinkTransformationConfigToJSONTyped(value?: LinkTransformationConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'expression': value['expression'],\n        'field': value['field'],\n        'mapValue': value['mapValue'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeRange } from './TimeRange';\nimport {\n    TimeRangeFromJSON,\n    TimeRangeFromJSONTyped,\n    TimeRangeToJSON,\n    TimeRangeToJSONTyped,\n} from './TimeRange';\nimport type { LinkTransformationConfig } from './LinkTransformationConfig';\nimport {\n    LinkTransformationConfigFromJSON,\n    LinkTransformationConfigFromJSONTyped,\n    LinkTransformationConfigToJSON,\n    LinkTransformationConfigToJSONTyped,\n} from './LinkTransformationConfig';\n\n/**\n * InternalDataLink definition to allow Explore links to be constructed in the backend\n * @export\n * @interface InternalDataLink\n */\nexport interface InternalDataLink {\n    /**\n     * \n     * @type {string}\n     * @memberof InternalDataLink\n     */\n    datasourceName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InternalDataLink\n     */\n    datasourceUid?: string;\n    /**\n     * This is an object constructed with the keys as the values of the enum VisType and the value being a bag of properties\n     * @type {object}\n     * @memberof InternalDataLink\n     */\n    panelsState?: object;\n    /**\n     * \n     * @type {object}\n     * @memberof InternalDataLink\n     */\n    query?: object;\n    /**\n     * \n     * @type {TimeRange}\n     * @memberof InternalDataLink\n     */\n    timeRange?: TimeRange;\n    /**\n     * \n     * @type {Array<LinkTransformationConfig>}\n     * @memberof InternalDataLink\n     */\n    transformations?: Array<LinkTransformationConfig>;\n}\n\n/**\n * Check if a given object implements the InternalDataLink interface.\n */\nexport function instanceOfInternalDataLink(value: object): value is InternalDataLink {\n    return true;\n}\n\nexport function InternalDataLinkFromJSON(json: any): InternalDataLink {\n    return InternalDataLinkFromJSONTyped(json, false);\n}\n\nexport function InternalDataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalDataLink {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'datasourceName': json['datasourceName'] == null ? undefined : json['datasourceName'],\n        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],\n        'panelsState': json['panelsState'] == null ? undefined : json['panelsState'],\n        'query': json['query'] == null ? undefined : json['query'],\n        'timeRange': json['timeRange'] == null ? undefined : TimeRangeFromJSON(json['timeRange']),\n        'transformations': json['transformations'] == null ? undefined : ((json['transformations'] as Array<any>).map(LinkTransformationConfigFromJSON)),\n    };\n}\n\nexport function InternalDataLinkToJSON(json: any): InternalDataLink {\n    return InternalDataLinkToJSONTyped(json, false);\n}\n\nexport function InternalDataLinkToJSONTyped(value?: InternalDataLink | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'datasourceName': value['datasourceName'],\n        'datasourceUid': value['datasourceUid'],\n        'panelsState': value['panelsState'],\n        'query': value['query'],\n        'timeRange': TimeRangeToJSON(value['timeRange']),\n        'transformations': value['transformations'] == null ? undefined : ((value['transformations'] as Array<any>).map(LinkTransformationConfigToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { InternalDataLink } from './InternalDataLink';\nimport {\n    InternalDataLinkFromJSON,\n    InternalDataLinkFromJSONTyped,\n    InternalDataLinkToJSON,\n    InternalDataLinkToJSONTyped,\n} from './InternalDataLink';\n\n/**\n * DataLink define what\n * @export\n * @interface DataLink\n */\nexport interface DataLink {\n    /**\n     * \n     * @type {InternalDataLink}\n     * @memberof DataLink\n     */\n    internal?: InternalDataLink;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataLink\n     */\n    targetBlank?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DataLink\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataLink\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the DataLink interface.\n */\nexport function instanceOfDataLink(value: object): value is DataLink {\n    return true;\n}\n\nexport function DataLinkFromJSON(json: any): DataLink {\n    return DataLinkFromJSONTyped(json, false);\n}\n\nexport function DataLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataLink {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'internal': json['internal'] == null ? undefined : InternalDataLinkFromJSON(json['internal']),\n        'targetBlank': json['targetBlank'] == null ? undefined : json['targetBlank'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function DataLinkToJSON(json: any): DataLink {\n    return DataLinkToJSONTyped(json, false);\n}\n\nexport function DataLinkToJSONTyped(value?: DataLink | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'internal': InternalDataLinkToJSON(value['internal']),\n        'targetBlank': value['targetBlank'],\n        'title': value['title'],\n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Threshold a single step on the threshold list\n * @export\n * @interface Threshold\n */\nexport interface Threshold {\n    /**\n     * \n     * @type {string}\n     * @memberof Threshold\n     */\n    color?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Threshold\n     */\n    state?: string;\n    /**\n     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\n     * to null.\n     * @type {number}\n     * @memberof Threshold\n     */\n    value?: number;\n}\n\n/**\n * Check if a given object implements the Threshold interface.\n */\nexport function instanceOfThreshold(value: object): value is Threshold {\n    return true;\n}\n\nexport function ThresholdFromJSON(json: any): Threshold {\n    return ThresholdFromJSONTyped(json, false);\n}\n\nexport function ThresholdFromJSONTyped(json: any, ignoreDiscriminator: boolean): Threshold {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'color': json['color'] == null ? undefined : json['color'],\n        'state': json['state'] == null ? undefined : json['state'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function ThresholdToJSON(json: any): Threshold {\n    return ThresholdToJSONTyped(json, false);\n}\n\nexport function ThresholdToJSONTyped(value?: Threshold | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'color': value['color'],\n        'state': value['state'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Threshold } from './Threshold';\nimport {\n    ThresholdFromJSON,\n    ThresholdFromJSONTyped,\n    ThresholdToJSON,\n    ThresholdToJSONTyped,\n} from './Threshold';\n\n/**\n * ThresholdsConfig setup thresholds\n * @export\n * @interface ThresholdsConfig\n */\nexport interface ThresholdsConfig {\n    /**\n     * ThresholdsMode absolute or percentage\n     * @type {string}\n     * @memberof ThresholdsConfig\n     */\n    mode?: string;\n    /**\n     * Must be sorted by 'value', first value is always -Infinity\n     * @type {Array<Threshold>}\n     * @memberof ThresholdsConfig\n     */\n    steps?: Array<Threshold>;\n}\n\n/**\n * Check if a given object implements the ThresholdsConfig interface.\n */\nexport function instanceOfThresholdsConfig(value: object): value is ThresholdsConfig {\n    return true;\n}\n\nexport function ThresholdsConfigFromJSON(json: any): ThresholdsConfig {\n    return ThresholdsConfigFromJSONTyped(json, false);\n}\n\nexport function ThresholdsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThresholdsConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'mode': json['mode'] == null ? undefined : json['mode'],\n        'steps': json['steps'] == null ? undefined : ((json['steps'] as Array<any>).map(ThresholdFromJSON)),\n    };\n}\n\nexport function ThresholdsConfigToJSON(json: any): ThresholdsConfig {\n    return ThresholdsConfigToJSONTyped(json, false);\n}\n\nexport function ThresholdsConfigToJSONTyped(value?: ThresholdsConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'mode': value['mode'],\n        'steps': value['steps'] == null ? undefined : ((value['steps'] as Array<any>).map(ThresholdToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Enum field config\n * Vector values are used as lookup keys into the enum fields\n * @export\n * @interface EnumFieldConfig\n */\nexport interface EnumFieldConfig {\n    /**\n     * Color is the color value for a given index (empty is undefined)\n     * @type {Array<string>}\n     * @memberof EnumFieldConfig\n     */\n    color?: Array<string>;\n    /**\n     * Description of the enum state\n     * @type {Array<string>}\n     * @memberof EnumFieldConfig\n     */\n    description?: Array<string>;\n    /**\n     * Icon supports setting an icon for a given index value\n     * @type {Array<string>}\n     * @memberof EnumFieldConfig\n     */\n    icon?: Array<string>;\n    /**\n     * Value is the string display value for a given index\n     * @type {Array<string>}\n     * @memberof EnumFieldConfig\n     */\n    text?: Array<string>;\n}\n\n/**\n * Check if a given object implements the EnumFieldConfig interface.\n */\nexport function instanceOfEnumFieldConfig(value: object): value is EnumFieldConfig {\n    return true;\n}\n\nexport function EnumFieldConfigFromJSON(json: any): EnumFieldConfig {\n    return EnumFieldConfigFromJSONTyped(json, false);\n}\n\nexport function EnumFieldConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumFieldConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'color': json['color'] == null ? undefined : json['color'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'icon': json['icon'] == null ? undefined : json['icon'],\n        'text': json['text'] == null ? undefined : json['text'],\n    };\n}\n\nexport function EnumFieldConfigToJSON(json: any): EnumFieldConfig {\n    return EnumFieldConfigToJSONTyped(json, false);\n}\n\nexport function EnumFieldConfigToJSONTyped(value?: EnumFieldConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'color': value['color'],\n        'description': value['description'],\n        'icon': value['icon'],\n        'text': value['text'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { EnumFieldConfig } from './EnumFieldConfig';\nimport {\n    EnumFieldConfigFromJSON,\n    EnumFieldConfigFromJSONTyped,\n    EnumFieldConfigToJSON,\n    EnumFieldConfigToJSONTyped,\n} from './EnumFieldConfig';\n\n/**\n * FieldTypeConfig has type specific configs, only one should be active at a time\n * @export\n * @interface FieldTypeConfig\n */\nexport interface FieldTypeConfig {\n    /**\n     * \n     * @type {EnumFieldConfig}\n     * @memberof FieldTypeConfig\n     */\n    _enum?: EnumFieldConfig;\n}\n\n/**\n * Check if a given object implements the FieldTypeConfig interface.\n */\nexport function instanceOfFieldTypeConfig(value: object): value is FieldTypeConfig {\n    return true;\n}\n\nexport function FieldTypeConfigFromJSON(json: any): FieldTypeConfig {\n    return FieldTypeConfigFromJSONTyped(json, false);\n}\n\nexport function FieldTypeConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldTypeConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        '_enum': json['enum'] == null ? undefined : EnumFieldConfigFromJSON(json['enum']),\n    };\n}\n\nexport function FieldTypeConfigToJSON(json: any): FieldTypeConfig {\n    return FieldTypeConfigToJSONTyped(json, false);\n}\n\nexport function FieldTypeConfigToJSONTyped(value?: FieldTypeConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'enum': EnumFieldConfigToJSON(value['_enum']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ThresholdsConfig } from './ThresholdsConfig';\nimport {\n    ThresholdsConfigFromJSON,\n    ThresholdsConfigFromJSONTyped,\n    ThresholdsConfigToJSON,\n    ThresholdsConfigToJSONTyped,\n} from './ThresholdsConfig';\nimport type { FieldTypeConfig } from './FieldTypeConfig';\nimport {\n    FieldTypeConfigFromJSON,\n    FieldTypeConfigFromJSONTyped,\n    FieldTypeConfigToJSON,\n    FieldTypeConfigToJSONTyped,\n} from './FieldTypeConfig';\nimport type { DataLink } from './DataLink';\nimport {\n    DataLinkFromJSON,\n    DataLinkFromJSONTyped,\n    DataLinkToJSON,\n    DataLinkToJSONTyped,\n} from './DataLink';\n\n/**\n * \n * @export\n * @interface FieldConfig\n */\nexport interface FieldConfig {\n    /**\n     * Map values to a display color\n     * NOTE: this interface is under development in the frontend... so simple map for now\n     * @type {{ [key: string]: object; }}\n     * @memberof FieldConfig\n     */\n    color?: { [key: string]: object; };\n    /**\n     * Panel Specific Values\n     * @type {{ [key: string]: object; }}\n     * @memberof FieldConfig\n     */\n    custom?: { [key: string]: object; };\n    /**\n     * \n     * @type {number}\n     * @memberof FieldConfig\n     */\n    decimals?: number;\n    /**\n     * Description is human readable field metadata\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    description?: string;\n    /**\n     * DisplayName overrides Grafana default naming, should not be used from a data source\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    displayName?: string;\n    /**\n     * DisplayNameFromDS overrides Grafana default naming strategy.\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    displayNameFromDS?: string;\n    /**\n     * Filterable indicates if the Field's data can be filtered by additional calls.\n     * @type {boolean}\n     * @memberof FieldConfig\n     */\n    filterable?: boolean;\n    /**\n     * Interval indicates the expected regular step between values in the series.\n     * When an interval exists, consumers can identify \"missing\" values when the expected value is not present.\n     * The grafana timeseries visualization will render disconnected values when missing values are found it the time field.\n     * The interval uses the same units as the values.  For time.Time, this is defined in milliseconds.\n     * @type {number}\n     * @memberof FieldConfig\n     */\n    interval?: number;\n    /**\n     * The behavior when clicking on a result\n     * @type {Array<DataLink>}\n     * @memberof FieldConfig\n     */\n    links?: Array<DataLink>;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof FieldConfig\n     */\n    mappings?: Array<object>;\n    /**\n     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\n     * to null.\n     * @type {number}\n     * @memberof FieldConfig\n     */\n    max?: number;\n    /**\n     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\n     * to null.\n     * @type {number}\n     * @memberof FieldConfig\n     */\n    min?: number;\n    /**\n     * Alternative to empty string\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    noValue?: string;\n    /**\n     * Path is an explicit path to the field in the datasource. When the frame meta includes a path,\n     * this will default to `${frame.meta.path}/${field.name}\n     * \n     * When defined, this value can be used as an identifier within the datasource scope, and\n     * may be used as an identifier to update values in a subsequent request\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    path?: string;\n    /**\n     * \n     * @type {ThresholdsConfig}\n     * @memberof FieldConfig\n     */\n    thresholds?: ThresholdsConfig;\n    /**\n     * \n     * @type {FieldTypeConfig}\n     * @memberof FieldConfig\n     */\n    type?: FieldTypeConfig;\n    /**\n     * Numeric Options\n     * @type {string}\n     * @memberof FieldConfig\n     */\n    unit?: string;\n    /**\n     * Writeable indicates that the datasource knows how to update this value\n     * @type {boolean}\n     * @memberof FieldConfig\n     */\n    writeable?: boolean;\n}\n\n/**\n * Check if a given object implements the FieldConfig interface.\n */\nexport function instanceOfFieldConfig(value: object): value is FieldConfig {\n    return true;\n}\n\nexport function FieldConfigFromJSON(json: any): FieldConfig {\n    return FieldConfigFromJSONTyped(json, false);\n}\n\nexport function FieldConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'color': json['color'] == null ? undefined : json['color'],\n        'custom': json['custom'] == null ? undefined : json['custom'],\n        'decimals': json['decimals'] == null ? undefined : json['decimals'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'displayNameFromDS': json['displayNameFromDS'] == null ? undefined : json['displayNameFromDS'],\n        'filterable': json['filterable'] == null ? undefined : json['filterable'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(DataLinkFromJSON)),\n        'mappings': json['mappings'] == null ? undefined : json['mappings'],\n        'max': json['max'] == null ? undefined : json['max'],\n        'min': json['min'] == null ? undefined : json['min'],\n        'noValue': json['noValue'] == null ? undefined : json['noValue'],\n        'path': json['path'] == null ? undefined : json['path'],\n        'thresholds': json['thresholds'] == null ? undefined : ThresholdsConfigFromJSON(json['thresholds']),\n        'type': json['type'] == null ? undefined : FieldTypeConfigFromJSON(json['type']),\n        'unit': json['unit'] == null ? undefined : json['unit'],\n        'writeable': json['writeable'] == null ? undefined : json['writeable'],\n    };\n}\n\nexport function FieldConfigToJSON(json: any): FieldConfig {\n    return FieldConfigToJSONTyped(json, false);\n}\n\nexport function FieldConfigToJSONTyped(value?: FieldConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'color': value['color'],\n        'custom': value['custom'],\n        'decimals': value['decimals'],\n        'description': value['description'],\n        'displayName': value['displayName'],\n        'displayNameFromDS': value['displayNameFromDS'],\n        'filterable': value['filterable'],\n        'interval': value['interval'],\n        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(DataLinkToJSON)),\n        'mappings': value['mappings'],\n        'max': value['max'],\n        'min': value['min'],\n        'noValue': value['noValue'],\n        'path': value['path'],\n        'thresholds': ThresholdsConfigToJSON(value['thresholds']),\n        'type': FieldTypeConfigToJSON(value['type']),\n        'unit': value['unit'],\n        'writeable': value['writeable'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { FieldConfig } from './FieldConfig';\nimport {\n    FieldConfigFromJSON,\n    FieldConfigFromJSONTyped,\n    FieldConfigToJSON,\n    FieldConfigToJSONTyped,\n} from './FieldConfig';\n\n/**\n * A Field is essentially a slice of various types with extra properties and methods.\n * See NewField() for supported types.\n * \n * The slice data in the Field is a not exported, so methods on the Field are used to to manipulate its data.\n * @export\n * @interface Field\n */\nexport interface Field {\n    /**\n     * \n     * @type {FieldConfig}\n     * @memberof Field\n     */\n    config?: FieldConfig;\n    /**\n     * Labels are used to add metadata to an object.  The JSON will always be sorted keys\n     * @type {{ [key: string]: string; }}\n     * @memberof Field\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * Name is default identifier of the field. The name does not have to be unique, but the combination\n     * of name and Labels should be unique for proper behavior in all situations.\n     * @type {string}\n     * @memberof Field\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the Field interface.\n */\nexport function instanceOfField(value: object): value is Field {\n    return true;\n}\n\nexport function FieldFromJSON(json: any): Field {\n    return FieldFromJSONTyped(json, false);\n}\n\nexport function FieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): Field {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'config': json['config'] == null ? undefined : FieldConfigFromJSON(json['config']),\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function FieldToJSON(json: any): Field {\n    return FieldToJSONTyped(json, false);\n}\n\nexport function FieldToJSONTyped(value?: Field | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'config': FieldConfigToJSON(value['config']),\n        'labels': value['labels'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ThresholdsConfig } from './ThresholdsConfig';\nimport {\n    ThresholdsConfigFromJSON,\n    ThresholdsConfigFromJSONTyped,\n    ThresholdsConfigToJSON,\n    ThresholdsConfigToJSONTyped,\n} from './ThresholdsConfig';\nimport type { FieldTypeConfig } from './FieldTypeConfig';\nimport {\n    FieldTypeConfigFromJSON,\n    FieldTypeConfigFromJSONTyped,\n    FieldTypeConfigToJSON,\n    FieldTypeConfigToJSONTyped,\n} from './FieldTypeConfig';\nimport type { DataLink } from './DataLink';\nimport {\n    DataLinkFromJSON,\n    DataLinkFromJSONTyped,\n    DataLinkToJSON,\n    DataLinkToJSONTyped,\n} from './DataLink';\n\n/**\n * The embedded FieldConfig's display name must be set.\n * It corresponds to the QueryResultMetaStat on the frontend (https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L53).\n * @export\n * @interface QueryStat\n */\nexport interface QueryStat {\n    /**\n     * Map values to a display color\n     * NOTE: this interface is under development in the frontend... so simple map for now\n     * @type {{ [key: string]: object; }}\n     * @memberof QueryStat\n     */\n    color?: { [key: string]: object; };\n    /**\n     * Panel Specific Values\n     * @type {{ [key: string]: object; }}\n     * @memberof QueryStat\n     */\n    custom?: { [key: string]: object; };\n    /**\n     * \n     * @type {number}\n     * @memberof QueryStat\n     */\n    decimals?: number;\n    /**\n     * Description is human readable field metadata\n     * @type {string}\n     * @memberof QueryStat\n     */\n    description?: string;\n    /**\n     * DisplayName overrides Grafana default naming, should not be used from a data source\n     * @type {string}\n     * @memberof QueryStat\n     */\n    displayName?: string;\n    /**\n     * DisplayNameFromDS overrides Grafana default naming strategy.\n     * @type {string}\n     * @memberof QueryStat\n     */\n    displayNameFromDS?: string;\n    /**\n     * Filterable indicates if the Field's data can be filtered by additional calls.\n     * @type {boolean}\n     * @memberof QueryStat\n     */\n    filterable?: boolean;\n    /**\n     * Interval indicates the expected regular step between values in the series.\n     * When an interval exists, consumers can identify \"missing\" values when the expected value is not present.\n     * The grafana timeseries visualization will render disconnected values when missing values are found it the time field.\n     * The interval uses the same units as the values.  For time.Time, this is defined in milliseconds.\n     * @type {number}\n     * @memberof QueryStat\n     */\n    interval?: number;\n    /**\n     * The behavior when clicking on a result\n     * @type {Array<DataLink>}\n     * @memberof QueryStat\n     */\n    links?: Array<DataLink>;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof QueryStat\n     */\n    mappings?: Array<object>;\n    /**\n     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\n     * to null.\n     * @type {number}\n     * @memberof QueryStat\n     */\n    max?: number;\n    /**\n     * ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\n     * to null.\n     * @type {number}\n     * @memberof QueryStat\n     */\n    min?: number;\n    /**\n     * Alternative to empty string\n     * @type {string}\n     * @memberof QueryStat\n     */\n    noValue?: string;\n    /**\n     * Path is an explicit path to the field in the datasource. When the frame meta includes a path,\n     * this will default to `${frame.meta.path}/${field.name}\n     * \n     * When defined, this value can be used as an identifier within the datasource scope, and\n     * may be used as an identifier to update values in a subsequent request\n     * @type {string}\n     * @memberof QueryStat\n     */\n    path?: string;\n    /**\n     * \n     * @type {ThresholdsConfig}\n     * @memberof QueryStat\n     */\n    thresholds?: ThresholdsConfig;\n    /**\n     * \n     * @type {FieldTypeConfig}\n     * @memberof QueryStat\n     */\n    type?: FieldTypeConfig;\n    /**\n     * Numeric Options\n     * @type {string}\n     * @memberof QueryStat\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof QueryStat\n     */\n    value?: number;\n    /**\n     * Writeable indicates that the datasource knows how to update this value\n     * @type {boolean}\n     * @memberof QueryStat\n     */\n    writeable?: boolean;\n}\n\n/**\n * Check if a given object implements the QueryStat interface.\n */\nexport function instanceOfQueryStat(value: object): value is QueryStat {\n    return true;\n}\n\nexport function QueryStatFromJSON(json: any): QueryStat {\n    return QueryStatFromJSONTyped(json, false);\n}\n\nexport function QueryStatFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryStat {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'color': json['color'] == null ? undefined : json['color'],\n        'custom': json['custom'] == null ? undefined : json['custom'],\n        'decimals': json['decimals'] == null ? undefined : json['decimals'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'displayNameFromDS': json['displayNameFromDS'] == null ? undefined : json['displayNameFromDS'],\n        'filterable': json['filterable'] == null ? undefined : json['filterable'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(DataLinkFromJSON)),\n        'mappings': json['mappings'] == null ? undefined : json['mappings'],\n        'max': json['max'] == null ? undefined : json['max'],\n        'min': json['min'] == null ? undefined : json['min'],\n        'noValue': json['noValue'] == null ? undefined : json['noValue'],\n        'path': json['path'] == null ? undefined : json['path'],\n        'thresholds': json['thresholds'] == null ? undefined : ThresholdsConfigFromJSON(json['thresholds']),\n        'type': json['type'] == null ? undefined : FieldTypeConfigFromJSON(json['type']),\n        'unit': json['unit'] == null ? undefined : json['unit'],\n        'value': json['value'] == null ? undefined : json['value'],\n        'writeable': json['writeable'] == null ? undefined : json['writeable'],\n    };\n}\n\nexport function QueryStatToJSON(json: any): QueryStat {\n    return QueryStatToJSONTyped(json, false);\n}\n\nexport function QueryStatToJSONTyped(value?: QueryStat | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'color': value['color'],\n        'custom': value['custom'],\n        'decimals': value['decimals'],\n        'description': value['description'],\n        'displayName': value['displayName'],\n        'displayNameFromDS': value['displayNameFromDS'],\n        'filterable': value['filterable'],\n        'interval': value['interval'],\n        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(DataLinkToJSON)),\n        'mappings': value['mappings'],\n        'max': value['max'],\n        'min': value['min'],\n        'noValue': value['noValue'],\n        'path': value['path'],\n        'thresholds': ThresholdsConfigToJSON(value['thresholds']),\n        'type': FieldTypeConfigToJSON(value['type']),\n        'unit': value['unit'],\n        'value': value['value'],\n        'writeable': value['writeable'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Notice\n */\nexport interface Notice {\n    /**\n     * \n     * @type {number}\n     * @memberof Notice\n     */\n    inspect?: number;\n    /**\n     * Link is an optional link for display in the user interface and can be an\n     * absolute URL or a path relative to Grafana's root url.\n     * @type {string}\n     * @memberof Notice\n     */\n    link?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Notice\n     */\n    severity?: number;\n    /**\n     * Text is freeform descriptive text for the notice.\n     * @type {string}\n     * @memberof Notice\n     */\n    text?: string;\n}\n\n/**\n * Check if a given object implements the Notice interface.\n */\nexport function instanceOfNotice(value: object): value is Notice {\n    return true;\n}\n\nexport function NoticeFromJSON(json: any): Notice {\n    return NoticeFromJSONTyped(json, false);\n}\n\nexport function NoticeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notice {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'inspect': json['inspect'] == null ? undefined : json['inspect'],\n        'link': json['link'] == null ? undefined : json['link'],\n        'severity': json['severity'] == null ? undefined : json['severity'],\n        'text': json['text'] == null ? undefined : json['text'],\n    };\n}\n\nexport function NoticeToJSON(json: any): Notice {\n    return NoticeToJSONTyped(json, false);\n}\n\nexport function NoticeToJSONTyped(value?: Notice | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'inspect': value['inspect'],\n        'link': value['link'],\n        'severity': value['severity'],\n        'text': value['text'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { QueryStat } from './QueryStat';\nimport {\n    QueryStatFromJSON,\n    QueryStatFromJSONTyped,\n    QueryStatToJSON,\n    QueryStatToJSONTyped,\n} from './QueryStat';\nimport type { Notice } from './Notice';\nimport {\n    NoticeFromJSON,\n    NoticeFromJSONTyped,\n    NoticeToJSON,\n    NoticeToJSONTyped,\n} from './Notice';\n\n/**\n * https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L11\n * NOTE -- in javascript this can accept any `[key: string]: any;` however\n * this interface only exposes the values we want to be exposed\n * @export\n * @interface FrameMeta\n */\nexport interface FrameMeta {\n    /**\n     * Channel is the path to a stream in grafana live that has real-time updates for this data.\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    channel?: string;\n    /**\n     * Custom datasource specific values.\n     * @type {object}\n     * @memberof FrameMeta\n     */\n    custom?: object;\n    /**\n     * nolint:revive\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    dataTopic?: string;\n    /**\n     * ExecutedQueryString is the raw query sent to the underlying system. All macros and templating\n     * have been applied.  When metadata contains this value, it will be shown in the query inspector.\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    executedQueryString?: string;\n    /**\n     * Notices provide additional information about the data in the Frame that\n     * Grafana can display to the user in the user interface.\n     * @type {Array<Notice>}\n     * @memberof FrameMeta\n     */\n    notices?: Array<Notice>;\n    /**\n     * Path is a browsable path on the datasource.\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    path?: string;\n    /**\n     * PathSeparator defines the separator pattern to decode a hierarchy. The default separator is '/'.\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    pathSeparator?: string;\n    /**\n     * PreferredVisualizationPluginId sets the panel plugin id to use to render the data when using Explore. If\n     * the plugin cannot be found will fall back to PreferredVisualization.\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    preferredVisualisationPluginId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FrameMeta\n     */\n    preferredVisualisationType?: string;\n    /**\n     * Stats is an array of query result statistics.\n     * @type {Array<QueryStat>}\n     * @memberof FrameMeta\n     */\n    stats?: Array<QueryStat>;\n    /**\n     * A FrameType string, when present in a frame's metadata, asserts that the\n     * frame's structure conforms to the FrameType's specification.\n     * This property is currently optional, so FrameType may be FrameTypeUnknown even if the properties of\n     * the Frame correspond to a defined FrameType.\n     * +enum\n     * @type {string}\n     * @memberof FrameMeta\n     */\n    type?: string;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof FrameMeta\n     */\n    typeVersion?: Array<number>;\n    /**\n     * Array of field indices which values create a unique id for each row. Ideally this should be globally unique ID\n     * but that isn't guarantied. Should help with keeping track and deduplicating rows in visualizations, especially\n     * with streaming data with frequent updates.\n     * @type {Array<number>}\n     * @memberof FrameMeta\n     */\n    uniqueRowIdFields?: Array<number>;\n}\n\n/**\n * Check if a given object implements the FrameMeta interface.\n */\nexport function instanceOfFrameMeta(value: object): value is FrameMeta {\n    return true;\n}\n\nexport function FrameMetaFromJSON(json: any): FrameMeta {\n    return FrameMetaFromJSONTyped(json, false);\n}\n\nexport function FrameMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'channel': json['channel'] == null ? undefined : json['channel'],\n        'custom': json['custom'] == null ? undefined : json['custom'],\n        'dataTopic': json['dataTopic'] == null ? undefined : json['dataTopic'],\n        'executedQueryString': json['executedQueryString'] == null ? undefined : json['executedQueryString'],\n        'notices': json['notices'] == null ? undefined : ((json['notices'] as Array<any>).map(NoticeFromJSON)),\n        'path': json['path'] == null ? undefined : json['path'],\n        'pathSeparator': json['pathSeparator'] == null ? undefined : json['pathSeparator'],\n        'preferredVisualisationPluginId': json['preferredVisualisationPluginId'] == null ? undefined : json['preferredVisualisationPluginId'],\n        'preferredVisualisationType': json['preferredVisualisationType'] == null ? undefined : json['preferredVisualisationType'],\n        'stats': json['stats'] == null ? undefined : ((json['stats'] as Array<any>).map(QueryStatFromJSON)),\n        'type': json['type'] == null ? undefined : json['type'],\n        'typeVersion': json['typeVersion'] == null ? undefined : json['typeVersion'],\n        'uniqueRowIdFields': json['uniqueRowIdFields'] == null ? undefined : json['uniqueRowIdFields'],\n    };\n}\n\nexport function FrameMetaToJSON(json: any): FrameMeta {\n    return FrameMetaToJSONTyped(json, false);\n}\n\nexport function FrameMetaToJSONTyped(value?: FrameMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'channel': value['channel'],\n        'custom': value['custom'],\n        'dataTopic': value['dataTopic'],\n        'executedQueryString': value['executedQueryString'],\n        'notices': value['notices'] == null ? undefined : ((value['notices'] as Array<any>).map(NoticeToJSON)),\n        'path': value['path'],\n        'pathSeparator': value['pathSeparator'],\n        'preferredVisualisationPluginId': value['preferredVisualisationPluginId'],\n        'preferredVisualisationType': value['preferredVisualisationType'],\n        'stats': value['stats'] == null ? undefined : ((value['stats'] as Array<any>).map(QueryStatToJSON)),\n        'type': value['type'],\n        'typeVersion': value['typeVersion'],\n        'uniqueRowIdFields': value['uniqueRowIdFields'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Field } from './Field';\nimport {\n    FieldFromJSON,\n    FieldFromJSONTyped,\n    FieldToJSON,\n    FieldToJSONTyped,\n} from './Field';\nimport type { FrameMeta } from './FrameMeta';\nimport {\n    FrameMetaFromJSON,\n    FrameMetaFromJSONTyped,\n    FrameMetaToJSON,\n    FrameMetaToJSONTyped,\n} from './FrameMeta';\n\n/**\n * Each Field is well typed by its FieldType and supports optional Labels.\n * \n * A Frame is a general data container for Grafana. A Frame can be table data\n * or time series data depending on its content and field types.\n * @export\n * @interface Frame\n */\nexport interface Frame {\n    /**\n     * Fields are the columns of a frame.\n     * All Fields must be of the same the length when marshalling the Frame for transmission.\n     * There should be no `nil` entries in the Fields slice (making them pointers was a mistake).\n     * @type {Array<Field>}\n     * @memberof Frame\n     */\n    fields?: Array<Field>;\n    /**\n     * \n     * @type {FrameMeta}\n     * @memberof Frame\n     */\n    meta?: FrameMeta;\n    /**\n     * Name is used in some Grafana visualizations.\n     * @type {string}\n     * @memberof Frame\n     */\n    name?: string;\n    /**\n     * RefID is a property that can be set to match a Frame to its originating query.\n     * @type {string}\n     * @memberof Frame\n     */\n    refID?: string;\n}\n\n/**\n * Check if a given object implements the Frame interface.\n */\nexport function instanceOfFrame(value: object): value is Frame {\n    return true;\n}\n\nexport function FrameFromJSON(json: any): Frame {\n    return FrameFromJSONTyped(json, false);\n}\n\nexport function FrameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Frame {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'fields': json['Fields'] == null ? undefined : ((json['Fields'] as Array<any>).map(FieldFromJSON)),\n        'meta': json['Meta'] == null ? undefined : FrameMetaFromJSON(json['Meta']),\n        'name': json['Name'] == null ? undefined : json['Name'],\n        'refID': json['RefID'] == null ? undefined : json['RefID'],\n    };\n}\n\nexport function FrameToJSON(json: any): Frame {\n    return FrameToJSONTyped(json, false);\n}\n\nexport function FrameToJSONTyped(value?: Frame | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(FieldToJSON)),\n        'Meta': FrameMetaToJSON(value['meta']),\n        'Name': value['name'],\n        'RefID': value['refID'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Frame } from './Frame';\nimport {\n    FrameFromJSON,\n    FrameFromJSONTyped,\n    FrameToJSON,\n    FrameToJSONTyped,\n} from './Frame';\n\n/**\n * A map of RefIDs (unique query identifiers) to this type makes up the Responses property of a QueryDataResponse.\n * The Error property is used to allow for partial success responses from the containing QueryDataResponse.\n * @export\n * @interface DataResponse\n */\nexport interface DataResponse {\n    /**\n     * Error is a property to be set if the corresponding DataQuery has an error.\n     * @type {string}\n     * @memberof DataResponse\n     */\n    error?: string;\n    /**\n     * ErrorSource type defines the source of the error\n     * @type {string}\n     * @memberof DataResponse\n     */\n    errorSource?: string;\n    /**\n     * It is the main data container within a backend.DataResponse.\n     * There should be no `nil` entries in the Frames slice (making them pointers was a mistake).\n     * @type {Array<Frame>}\n     * @memberof DataResponse\n     */\n    frames?: Array<Frame>;\n    /**\n     * \n     * @type {number}\n     * @memberof DataResponse\n     */\n    status?: number;\n}\n\n/**\n * Check if a given object implements the DataResponse interface.\n */\nexport function instanceOfDataResponse(value: object): value is DataResponse {\n    return true;\n}\n\nexport function DataResponseFromJSON(json: any): DataResponse {\n    return DataResponseFromJSONTyped(json, false);\n}\n\nexport function DataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'error': json['Error'] == null ? undefined : json['Error'],\n        'errorSource': json['ErrorSource'] == null ? undefined : json['ErrorSource'],\n        'frames': json['Frames'] == null ? undefined : ((json['Frames'] as Array<any>).map(FrameFromJSON)),\n        'status': json['Status'] == null ? undefined : json['Status'],\n    };\n}\n\nexport function DataResponseToJSON(json: any): DataResponse {\n    return DataResponseToJSONTyped(json, false);\n}\n\nexport function DataResponseToJSONTyped(value?: DataResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Error': value['error'],\n        'ErrorSource': value['errorSource'],\n        'Frames': value['frames'] == null ? undefined : ((value['frames'] as Array<any>).map(FrameToJSON)),\n        'Status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DataSourceListItemDTO\n */\nexport interface DataSourceListItemDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    access?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSourceListItemDTO\n     */\n    basicAuth?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    database?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DataSourceListItemDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSourceListItemDTO\n     */\n    isDefault?: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof DataSourceListItemDTO\n     */\n    jsonData?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof DataSourceListItemDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DataSourceListItemDTO\n     */\n    readOnly?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    typeLogoUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    typeName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DataSourceListItemDTO\n     */\n    user?: string;\n}\n\n/**\n * Check if a given object implements the DataSourceListItemDTO interface.\n */\nexport function instanceOfDataSourceListItemDTO(value: object): value is DataSourceListItemDTO {\n    return true;\n}\n\nexport function DataSourceListItemDTOFromJSON(json: any): DataSourceListItemDTO {\n    return DataSourceListItemDTOFromJSONTyped(json, false);\n}\n\nexport function DataSourceListItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceListItemDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'access': json['access'] == null ? undefined : json['access'],\n        'basicAuth': json['basicAuth'] == null ? undefined : json['basicAuth'],\n        'database': json['database'] == null ? undefined : json['database'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],\n        'jsonData': json['jsonData'] == null ? undefined : json['jsonData'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'readOnly': json['readOnly'] == null ? undefined : json['readOnly'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'typeLogoUrl': json['typeLogoUrl'] == null ? undefined : json['typeLogoUrl'],\n        'typeName': json['typeName'] == null ? undefined : json['typeName'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'user': json['user'] == null ? undefined : json['user'],\n    };\n}\n\nexport function DataSourceListItemDTOToJSON(json: any): DataSourceListItemDTO {\n    return DataSourceListItemDTOToJSONTyped(json, false);\n}\n\nexport function DataSourceListItemDTOToJSONTyped(value?: DataSourceListItemDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'access': value['access'],\n        'basicAuth': value['basicAuth'],\n        'database': value['database'],\n        'id': value['id'],\n        'isDefault': value['isDefault'],\n        'jsonData': value['jsonData'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'readOnly': value['readOnly'],\n        'type': value['type'],\n        'typeLogoUrl': value['typeLogoUrl'],\n        'typeName': value['typeName'],\n        'uid': value['uid'],\n        'url': value['url'],\n        'user': value['user'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeleteCorrelationResponseBody\n */\nexport interface DeleteCorrelationResponseBody {\n    /**\n     * \n     * @type {string}\n     * @memberof DeleteCorrelationResponseBody\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the DeleteCorrelationResponseBody interface.\n */\nexport function instanceOfDeleteCorrelationResponseBody(value: object): value is DeleteCorrelationResponseBody {\n    return true;\n}\n\nexport function DeleteCorrelationResponseBodyFromJSON(json: any): DeleteCorrelationResponseBody {\n    return DeleteCorrelationResponseBodyFromJSONTyped(json, false);\n}\n\nexport function DeleteCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteCorrelationResponseBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function DeleteCorrelationResponseBodyToJSON(json: any): DeleteCorrelationResponseBody {\n    return DeleteCorrelationResponseBodyToJSONTyped(json, false);\n}\n\nexport function DeleteCorrelationResponseBodyToJSONTyped(value?: DeleteCorrelationResponseBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeleteDashboardByUID200Response\n */\nexport interface DeleteDashboardByUID200Response {\n    /**\n     * Message Message of the deleted dashboard.\n     * @type {string}\n     * @memberof DeleteDashboardByUID200Response\n     */\n    message: string;\n    /**\n     * Title Title of the deleted dashboard.\n     * @type {string}\n     * @memberof DeleteDashboardByUID200Response\n     */\n    title: string;\n    /**\n     * UID Identifier of the deleted dashboard.\n     * @type {string}\n     * @memberof DeleteDashboardByUID200Response\n     */\n    uid: string;\n}\n\n/**\n * Check if a given object implements the DeleteDashboardByUID200Response interface.\n */\nexport function instanceOfDeleteDashboardByUID200Response(value: object): value is DeleteDashboardByUID200Response {\n    if (!('message' in value) || value['message'] === undefined) return false;\n    if (!('title' in value) || value['title'] === undefined) return false;\n    if (!('uid' in value) || value['uid'] === undefined) return false;\n    return true;\n}\n\nexport function DeleteDashboardByUID200ResponseFromJSON(json: any): DeleteDashboardByUID200Response {\n    return DeleteDashboardByUID200ResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteDashboardByUID200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteDashboardByUID200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'],\n        'title': json['title'],\n        'uid': json['uid'],\n    };\n}\n\nexport function DeleteDashboardByUID200ResponseToJSON(json: any): DeleteDashboardByUID200Response {\n    return DeleteDashboardByUID200ResponseToJSONTyped(json, false);\n}\n\nexport function DeleteDashboardByUID200ResponseToJSONTyped(value?: DeleteDashboardByUID200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeleteDataSourceByName200Response\n */\nexport interface DeleteDataSourceByName200Response {\n    /**\n     * ID Identifier of the deleted data source.\n     * @type {number}\n     * @memberof DeleteDataSourceByName200Response\n     */\n    id: number;\n    /**\n     * Message Message of the deleted dashboard.\n     * @type {string}\n     * @memberof DeleteDataSourceByName200Response\n     */\n    message: string;\n}\n\n/**\n * Check if a given object implements the DeleteDataSourceByName200Response interface.\n */\nexport function instanceOfDeleteDataSourceByName200Response(value: object): value is DeleteDataSourceByName200Response {\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('message' in value) || value['message'] === undefined) return false;\n    return true;\n}\n\nexport function DeleteDataSourceByName200ResponseFromJSON(json: any): DeleteDataSourceByName200Response {\n    return DeleteDataSourceByName200ResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteDataSourceByName200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteDataSourceByName200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'message': json['message'],\n    };\n}\n\nexport function DeleteDataSourceByName200ResponseToJSON(json: any): DeleteDataSourceByName200Response {\n    return DeleteDataSourceByName200ResponseToJSONTyped(json, false);\n}\n\nexport function DeleteDataSourceByName200ResponseToJSONTyped(value?: DeleteDataSourceByName200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeleteFolder200Response\n */\nexport interface DeleteFolder200Response {\n    /**\n     * ID Identifier of the deleted folder.\n     * @type {number}\n     * @memberof DeleteFolder200Response\n     */\n    id: number;\n    /**\n     * Message Message of the deleted folder.\n     * @type {string}\n     * @memberof DeleteFolder200Response\n     */\n    message: string;\n    /**\n     * Title of the deleted folder.\n     * @type {string}\n     * @memberof DeleteFolder200Response\n     */\n    title: string;\n}\n\n/**\n * Check if a given object implements the DeleteFolder200Response interface.\n */\nexport function instanceOfDeleteFolder200Response(value: object): value is DeleteFolder200Response {\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('message' in value) || value['message'] === undefined) return false;\n    if (!('title' in value) || value['title'] === undefined) return false;\n    return true;\n}\n\nexport function DeleteFolder200ResponseFromJSON(json: any): DeleteFolder200Response {\n    return DeleteFolder200ResponseFromJSONTyped(json, false);\n}\n\nexport function DeleteFolder200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteFolder200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'message': json['message'],\n        'title': json['title'],\n    };\n}\n\nexport function DeleteFolder200ResponseToJSON(json: any): DeleteFolder200Response {\n    return DeleteFolder200ResponseToJSONTyped(json, false);\n}\n\nexport function DeleteFolder200ResponseToJSONTyped(value?: DeleteFolder200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n        'title': value['title'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeleteTokenCommand\n */\nexport interface DeleteTokenCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof DeleteTokenCommand\n     */\n    instance?: string;\n}\n\n/**\n * Check if a given object implements the DeleteTokenCommand interface.\n */\nexport function instanceOfDeleteTokenCommand(value: object): value is DeleteTokenCommand {\n    return true;\n}\n\nexport function DeleteTokenCommandFromJSON(json: any): DeleteTokenCommand {\n    return DeleteTokenCommandFromJSONTyped(json, false);\n}\n\nexport function DeleteTokenCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteTokenCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'instance': json['instance'] == null ? undefined : json['instance'],\n    };\n}\n\nexport function DeleteTokenCommandToJSON(json: any): DeleteTokenCommand {\n    return DeleteTokenCommandToJSONTyped(json, false);\n}\n\nexport function DeleteTokenCommandToJSONTyped(value?: DeleteTokenCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'instance': value['instance'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Assignments } from './Assignments';\nimport {\n    AssignmentsFromJSON,\n    AssignmentsFromJSONTyped,\n    AssignmentsToJSON,\n    AssignmentsToJSONTyped,\n} from './Assignments';\n\n/**\n * \n * @export\n * @interface Description\n */\nexport interface Description {\n    /**\n     * \n     * @type {Assignments}\n     * @memberof Description\n     */\n    assignments?: Assignments;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Description\n     */\n    permissions?: Array<string>;\n}\n\n/**\n * Check if a given object implements the Description interface.\n */\nexport function instanceOfDescription(value: object): value is Description {\n    return true;\n}\n\nexport function DescriptionFromJSON(json: any): Description {\n    return DescriptionFromJSONTyped(json, false);\n}\n\nexport function DescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Description {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'assignments': json['assignments'] == null ? undefined : AssignmentsFromJSON(json['assignments']),\n        'permissions': json['permissions'] == null ? undefined : json['permissions'],\n    };\n}\n\nexport function DescriptionToJSON(json: any): Description {\n    return DescriptionToJSONTyped(json, false);\n}\n\nexport function DescriptionToJSONTyped(value?: Description | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'assignments': AssignmentsToJSON(value['assignments']),\n        'permissions': value['permissions'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeviceDTO\n */\nexport interface DeviceDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceDTO\n     */\n    clientIp?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DeviceDTO\n     */\n    createdAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceDTO\n     */\n    deviceId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceDTO\n     */\n    lastSeenAt?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DeviceDTO\n     */\n    updatedAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceDTO\n     */\n    userAgent?: string;\n}\n\n/**\n * Check if a given object implements the DeviceDTO interface.\n */\nexport function instanceOfDeviceDTO(value: object): value is DeviceDTO {\n    return true;\n}\n\nexport function DeviceDTOFromJSON(json: any): DeviceDTO {\n    return DeviceDTOFromJSONTyped(json, false);\n}\n\nexport function DeviceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'clientIp': json['clientIp'] == null ? undefined : json['clientIp'],\n        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),\n        'deviceId': json['deviceId'] == null ? undefined : json['deviceId'],\n        'lastSeenAt': json['lastSeenAt'] == null ? undefined : json['lastSeenAt'],\n        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),\n        'userAgent': json['userAgent'] == null ? undefined : json['userAgent'],\n    };\n}\n\nexport function DeviceDTOToJSON(json: any): DeviceDTO {\n    return DeviceDTOToJSONTyped(json, false);\n}\n\nexport function DeviceDTOToJSONTyped(value?: DeviceDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'avatarUrl': value['avatarUrl'],\n        'clientIp': value['clientIp'],\n        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),\n        'deviceId': value['deviceId'],\n        'lastSeenAt': value['lastSeenAt'],\n        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n        'userAgent': value['userAgent'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DeviceSearchHitDTO\n */\nexport interface DeviceSearchHitDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceSearchHitDTO\n     */\n    clientIp?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DeviceSearchHitDTO\n     */\n    createdAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceSearchHitDTO\n     */\n    deviceId?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof DeviceSearchHitDTO\n     */\n    lastSeenAt?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof DeviceSearchHitDTO\n     */\n    updatedAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof DeviceSearchHitDTO\n     */\n    userAgent?: string;\n}\n\n/**\n * Check if a given object implements the DeviceSearchHitDTO interface.\n */\nexport function instanceOfDeviceSearchHitDTO(value: object): value is DeviceSearchHitDTO {\n    return true;\n}\n\nexport function DeviceSearchHitDTOFromJSON(json: any): DeviceSearchHitDTO {\n    return DeviceSearchHitDTOFromJSONTyped(json, false);\n}\n\nexport function DeviceSearchHitDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceSearchHitDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'clientIp': json['clientIp'] == null ? undefined : json['clientIp'],\n        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),\n        'deviceId': json['deviceId'] == null ? undefined : json['deviceId'],\n        'lastSeenAt': json['lastSeenAt'] == null ? undefined : (new Date(json['lastSeenAt'])),\n        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),\n        'userAgent': json['userAgent'] == null ? undefined : json['userAgent'],\n    };\n}\n\nexport function DeviceSearchHitDTOToJSON(json: any): DeviceSearchHitDTO {\n    return DeviceSearchHitDTOToJSONTyped(json, false);\n}\n\nexport function DeviceSearchHitDTOToJSONTyped(value?: DeviceSearchHitDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'clientIp': value['clientIp'],\n        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),\n        'deviceId': value['deviceId'],\n        'lastSeenAt': value['lastSeenAt'] == null ? undefined : ((value['lastSeenAt']).toISOString()),\n        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n        'userAgent': value['userAgent'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface DiscordConfig\n */\nexport interface DiscordConfig {\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof DiscordConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof DiscordConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof DiscordConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof DiscordConfig\n     */\n    title?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof DiscordConfig\n     */\n    webhookUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof DiscordConfig\n     */\n    webhookUrlFile?: string;\n}\n\n/**\n * Check if a given object implements the DiscordConfig interface.\n */\nexport function instanceOfDiscordConfig(value: object): value is DiscordConfig {\n    return true;\n}\n\nexport function DiscordConfigFromJSON(json: any): DiscordConfig {\n    return DiscordConfigFromJSONTyped(json, false);\n}\n\nexport function DiscordConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscordConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'webhookUrl': json['webhook_url'] == null ? undefined : URLFromJSON(json['webhook_url']),\n        'webhookUrlFile': json['webhook_url_file'] == null ? undefined : json['webhook_url_file'],\n    };\n}\n\nexport function DiscordConfigToJSON(json: any): DiscordConfig {\n    return DiscordConfigToJSONTyped(json, false);\n}\n\nexport function DiscordConfigToJSONTyped(value?: DiscordConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'send_resolved': value['sendResolved'],\n        'title': value['title'],\n        'webhook_url': URLToJSON(value['webhookUrl']),\n        'webhook_url_file': value['webhookUrlFile'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface DiscoveryBase\n */\nexport interface DiscoveryBase {\n    /**\n     * \n     * @type {string}\n     * @memberof DiscoveryBase\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DiscoveryBase\n     */\n    errorType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DiscoveryBase\n     */\n    status: string;\n}\n\n/**\n * Check if a given object implements the DiscoveryBase interface.\n */\nexport function instanceOfDiscoveryBase(value: object): value is DiscoveryBase {\n    if (!('status' in value) || value['status'] === undefined) return false;\n    return true;\n}\n\nexport function DiscoveryBaseFromJSON(json: any): DiscoveryBase {\n    return DiscoveryBaseFromJSONTyped(json, false);\n}\n\nexport function DiscoveryBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoveryBase {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'error': json['error'] == null ? undefined : json['error'],\n        'errorType': json['errorType'] == null ? undefined : json['errorType'],\n        'status': json['status'],\n    };\n}\n\nexport function DiscoveryBaseToJSON(json: any): DiscoveryBase {\n    return DiscoveryBaseToJSONTyped(json, false);\n}\n\nexport function DiscoveryBaseToJSONTyped(value?: DiscoveryBase | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'error': value['error'],\n        'errorType': value['errorType'],\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HostPort } from './HostPort';\nimport {\n    HostPortFromJSON,\n    HostPortFromJSONTyped,\n    HostPortToJSON,\n    HostPortToJSONTyped,\n} from './HostPort';\nimport type { TLSConfig } from './TLSConfig';\nimport {\n    TLSConfigFromJSON,\n    TLSConfigFromJSONTyped,\n    TLSConfigToJSON,\n    TLSConfigToJSONTyped,\n} from './TLSConfig';\n\n/**\n * \n * @export\n * @interface EmailConfig\n */\nexport interface EmailConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    authIdentity?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    authPassword?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    authPasswordFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    authSecret?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    authUsername?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    from?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof EmailConfig\n     */\n    headers?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    hello?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    html?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailConfig\n     */\n    requireTls?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmailConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {HostPort}\n     * @memberof EmailConfig\n     */\n    smarthost?: HostPort;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailConfig\n     */\n    text?: string;\n    /**\n     * \n     * @type {TLSConfig}\n     * @memberof EmailConfig\n     */\n    tlsConfig?: TLSConfig;\n    /**\n     * Email address to notify.\n     * @type {string}\n     * @memberof EmailConfig\n     */\n    to?: string;\n}\n\n/**\n * Check if a given object implements the EmailConfig interface.\n */\nexport function instanceOfEmailConfig(value: object): value is EmailConfig {\n    return true;\n}\n\nexport function EmailConfigFromJSON(json: any): EmailConfig {\n    return EmailConfigFromJSONTyped(json, false);\n}\n\nexport function EmailConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authIdentity': json['auth_identity'] == null ? undefined : json['auth_identity'],\n        'authPassword': json['auth_password'] == null ? undefined : json['auth_password'],\n        'authPasswordFile': json['auth_password_file'] == null ? undefined : json['auth_password_file'],\n        'authSecret': json['auth_secret'] == null ? undefined : json['auth_secret'],\n        'authUsername': json['auth_username'] == null ? undefined : json['auth_username'],\n        'from': json['from'] == null ? undefined : json['from'],\n        'headers': json['headers'] == null ? undefined : json['headers'],\n        'hello': json['hello'] == null ? undefined : json['hello'],\n        'html': json['html'] == null ? undefined : json['html'],\n        'requireTls': json['require_tls'] == null ? undefined : json['require_tls'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'smarthost': json['smarthost'] == null ? undefined : HostPortFromJSON(json['smarthost']),\n        'text': json['text'] == null ? undefined : json['text'],\n        'tlsConfig': json['tls_config'] == null ? undefined : TLSConfigFromJSON(json['tls_config']),\n        'to': json['to'] == null ? undefined : json['to'],\n    };\n}\n\nexport function EmailConfigToJSON(json: any): EmailConfig {\n    return EmailConfigToJSONTyped(json, false);\n}\n\nexport function EmailConfigToJSONTyped(value?: EmailConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'auth_identity': value['authIdentity'],\n        'auth_password': value['authPassword'],\n        'auth_password_file': value['authPasswordFile'],\n        'auth_secret': value['authSecret'],\n        'auth_username': value['authUsername'],\n        'from': value['from'],\n        'headers': value['headers'],\n        'hello': value['hello'],\n        'html': value['html'],\n        'require_tls': value['requireTls'],\n        'send_resolved': value['sendResolved'],\n        'smarthost': HostPortToJSON(value['smarthost']),\n        'text': value['text'],\n        'tls_config': TLSConfigToJSON(value['tlsConfig']),\n        'to': value['to'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface EmailDTO\n */\nexport interface EmailDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof EmailDTO\n     */\n    recipient?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmailDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the EmailDTO interface.\n */\nexport function instanceOfEmailDTO(value: object): value is EmailDTO {\n    return true;\n}\n\nexport function EmailDTOFromJSON(json: any): EmailDTO {\n    return EmailDTOFromJSONTyped(json, false);\n}\n\nexport function EmailDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'recipient': json['recipient'] == null ? undefined : json['recipient'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function EmailDTOToJSON(json: any): EmailDTO {\n    return EmailDTOToJSONTyped(json, false);\n}\n\nexport function EmailDTOToJSONTyped(value?: EmailDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'recipient': value['recipient'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * EmbeddedContactPoint is the contact point type that is used\n * by grafanas embedded alertmanager implementation.\n * @export\n * @interface EmbeddedContactPoint\n */\nexport interface EmbeddedContactPoint {\n    /**\n     * \n     * @type {boolean}\n     * @memberof EmbeddedContactPoint\n     */\n    disableResolveMessage?: boolean;\n    /**\n     * Name is used as grouping key in the UI. Contact points with the\n     * same name will be grouped in the UI.\n     * @type {string}\n     * @memberof EmbeddedContactPoint\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmbeddedContactPoint\n     */\n    readonly provenance?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof EmbeddedContactPoint\n     */\n    settings: object;\n    /**\n     * \n     * @type {string}\n     * @memberof EmbeddedContactPoint\n     */\n    type: EmbeddedContactPointTypeEnum;\n    /**\n     * UID is the unique identifier of the contact point. The UID can be\n     * set by the user.\n     * @type {string}\n     * @memberof EmbeddedContactPoint\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const EmbeddedContactPointTypeEnum = {\n    Alertmanager: 'alertmanager',\n    Dingding: ' dingding',\n    Discord: ' discord',\n    Email: ' email',\n    Googlechat: ' googlechat',\n    Kafka: ' kafka',\n    Line: ' line',\n    Opsgenie: ' opsgenie',\n    Pagerduty: ' pagerduty',\n    Pushover: ' pushover',\n    Sensugo: ' sensugo',\n    Slack: ' slack',\n    Teams: ' teams',\n    Telegram: ' telegram',\n    Threema: ' threema',\n    Victorops: ' victorops',\n    Webhook: ' webhook',\n    Wecom: ' wecom'\n} as const;\nexport type EmbeddedContactPointTypeEnum = typeof EmbeddedContactPointTypeEnum[keyof typeof EmbeddedContactPointTypeEnum];\n\n\n/**\n * Check if a given object implements the EmbeddedContactPoint interface.\n */\nexport function instanceOfEmbeddedContactPoint(value: object): value is EmbeddedContactPoint {\n    if (!('settings' in value) || value['settings'] === undefined) return false;\n    if (!('type' in value) || value['type'] === undefined) return false;\n    return true;\n}\n\nexport function EmbeddedContactPointFromJSON(json: any): EmbeddedContactPoint {\n    return EmbeddedContactPointFromJSONTyped(json, false);\n}\n\nexport function EmbeddedContactPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedContactPoint {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'disableResolveMessage': json['disableResolveMessage'] == null ? undefined : json['disableResolveMessage'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'settings': json['settings'],\n        'type': json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function EmbeddedContactPointToJSON(json: any): EmbeddedContactPoint {\n    return EmbeddedContactPointToJSONTyped(json, false);\n}\n\nexport function EmbeddedContactPointToJSONTyped(value?: Omit<EmbeddedContactPoint, 'provenance'> | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'disableResolveMessage': value['disableResolveMessage'],\n        'name': value['name'],\n        'settings': value['settings'],\n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ErrorResponseBody\n */\nexport interface ErrorResponseBody {\n    /**\n     * Error An optional detailed description of the actual error. Only included if running in developer mode.\n     * @type {string}\n     * @memberof ErrorResponseBody\n     */\n    error?: string;\n    /**\n     * a human readable version of the error\n     * @type {string}\n     * @memberof ErrorResponseBody\n     */\n    message: string;\n    /**\n     * Status An optional status to denote the cause of the error.\n     * \n     * For example, a 412 Precondition Failed error may include additional information of why that error happened.\n     * @type {string}\n     * @memberof ErrorResponseBody\n     */\n    status?: string;\n}\n\n/**\n * Check if a given object implements the ErrorResponseBody interface.\n */\nexport function instanceOfErrorResponseBody(value: object): value is ErrorResponseBody {\n    if (!('message' in value) || value['message'] === undefined) return false;\n    return true;\n}\n\nexport function ErrorResponseBodyFromJSON(json: any): ErrorResponseBody {\n    return ErrorResponseBodyFromJSONTyped(json, false);\n}\n\nexport function ErrorResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'error': json['error'] == null ? undefined : json['error'],\n        'message': json['message'],\n        'status': json['status'] == null ? undefined : json['status'],\n    };\n}\n\nexport function ErrorResponseBodyToJSON(json: any): ErrorResponseBody {\n    return ErrorResponseBodyToJSONTyped(json, false);\n}\n\nexport function ErrorResponseBodyToJSONTyped(value?: ErrorResponseBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'error': value['error'],\n        'message': value['message'],\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\n\n/**\n * EvalAlertConditionCommand is the command for evaluating a condition\n * @export\n * @interface EvalAlertConditionCommand\n */\nexport interface EvalAlertConditionCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof EvalAlertConditionCommand\n     */\n    condition?: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof EvalAlertConditionCommand\n     */\n    data?: Array<AlertQuery>;\n    /**\n     * \n     * @type {Date}\n     * @memberof EvalAlertConditionCommand\n     */\n    now?: Date;\n}\n\n/**\n * Check if a given object implements the EvalAlertConditionCommand interface.\n */\nexport function instanceOfEvalAlertConditionCommand(value: object): value is EvalAlertConditionCommand {\n    return true;\n}\n\nexport function EvalAlertConditionCommandFromJSON(json: any): EvalAlertConditionCommand {\n    return EvalAlertConditionCommandFromJSONTyped(json, false);\n}\n\nexport function EvalAlertConditionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvalAlertConditionCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        'now': json['now'] == null ? undefined : (new Date(json['now'])),\n    };\n}\n\nexport function EvalAlertConditionCommandToJSON(json: any): EvalAlertConditionCommand {\n    return EvalAlertConditionCommandToJSONTyped(json, false);\n}\n\nexport function EvalAlertConditionCommandToJSONTyped(value?: EvalAlertConditionCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'condition': value['condition'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'now': value['now'] == null ? undefined : ((value['now']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\n\n/**\n * \n * @export\n * @interface EvalQueriesPayload\n */\nexport interface EvalQueriesPayload {\n    /**\n     * \n     * @type {string}\n     * @memberof EvalQueriesPayload\n     */\n    condition?: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof EvalQueriesPayload\n     */\n    data?: Array<AlertQuery>;\n    /**\n     * \n     * @type {Date}\n     * @memberof EvalQueriesPayload\n     */\n    now?: Date;\n}\n\n/**\n * Check if a given object implements the EvalQueriesPayload interface.\n */\nexport function instanceOfEvalQueriesPayload(value: object): value is EvalQueriesPayload {\n    return true;\n}\n\nexport function EvalQueriesPayloadFromJSON(json: any): EvalQueriesPayload {\n    return EvalQueriesPayloadFromJSONTyped(json, false);\n}\n\nexport function EvalQueriesPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvalQueriesPayload {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        'now': json['now'] == null ? undefined : (new Date(json['now'])),\n    };\n}\n\nexport function EvalQueriesPayloadToJSON(json: any): EvalQueriesPayload {\n    return EvalQueriesPayloadToJSONTyped(json, false);\n}\n\nexport function EvalQueriesPayloadToJSONTyped(value?: EvalQueriesPayload | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'condition': value['condition'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'now': value['now'] == null ? undefined : ((value['now']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Each field must contain a title, value, and optionally, a boolean value to indicate if the field\n * is short enough to be displayed next to other fields designated as short.\n * See https://api.slack.com/docs/message-attachments#fields for more information.\n * @export\n * @interface SlackField\n */\nexport interface SlackField {\n    /**\n     * \n     * @type {boolean}\n     * @memberof SlackField\n     */\n    _short?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackField\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackField\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the SlackField interface.\n */\nexport function instanceOfSlackField(value: object): value is SlackField {\n    return true;\n}\n\nexport function SlackFieldFromJSON(json: any): SlackField {\n    return SlackFieldFromJSONTyped(json, false);\n}\n\nexport function SlackFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackField {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        '_short': json['short'] == null ? undefined : json['short'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function SlackFieldToJSON(json: any): SlackField {\n    return SlackFieldToJSONTyped(json, false);\n}\n\nexport function SlackFieldToJSONTyped(value?: SlackField | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'short': value['_short'],\n        'title': value['title'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * SlackConfirmationField protect users from destructive actions or particularly distinguished decisions\n * by asking them to confirm their button click one more time.\n * See https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields for more information.\n * @export\n * @interface SlackConfirmationField\n */\nexport interface SlackConfirmationField {\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfirmationField\n     */\n    dismissText?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfirmationField\n     */\n    okText?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfirmationField\n     */\n    text?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfirmationField\n     */\n    title?: string;\n}\n\n/**\n * Check if a given object implements the SlackConfirmationField interface.\n */\nexport function instanceOfSlackConfirmationField(value: object): value is SlackConfirmationField {\n    return true;\n}\n\nexport function SlackConfirmationFieldFromJSON(json: any): SlackConfirmationField {\n    return SlackConfirmationFieldFromJSONTyped(json, false);\n}\n\nexport function SlackConfirmationFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackConfirmationField {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dismissText': json['dismiss_text'] == null ? undefined : json['dismiss_text'],\n        'okText': json['ok_text'] == null ? undefined : json['ok_text'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'title': json['title'] == null ? undefined : json['title'],\n    };\n}\n\nexport function SlackConfirmationFieldToJSON(json: any): SlackConfirmationField {\n    return SlackConfirmationFieldToJSONTyped(json, false);\n}\n\nexport function SlackConfirmationFieldToJSONTyped(value?: SlackConfirmationField | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dismiss_text': value['dismissText'],\n        'ok_text': value['okText'],\n        'text': value['text'],\n        'title': value['title'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SlackConfirmationField } from './SlackConfirmationField';\nimport {\n    SlackConfirmationFieldFromJSON,\n    SlackConfirmationFieldFromJSONTyped,\n    SlackConfirmationFieldToJSON,\n    SlackConfirmationFieldToJSONTyped,\n} from './SlackConfirmationField';\n\n/**\n * See https://api.slack.com/docs/message-attachments#action_fields and https://api.slack.com/docs/message-buttons\n * for more information.\n * @export\n * @interface SlackAction\n */\nexport interface SlackAction {\n    /**\n     * \n     * @type {SlackConfirmationField}\n     * @memberof SlackAction\n     */\n    confirm?: SlackConfirmationField;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    style?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    text?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackAction\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the SlackAction interface.\n */\nexport function instanceOfSlackAction(value: object): value is SlackAction {\n    return true;\n}\n\nexport function SlackActionFromJSON(json: any): SlackAction {\n    return SlackActionFromJSONTyped(json, false);\n}\n\nexport function SlackActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackAction {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'confirm': json['confirm'] == null ? undefined : SlackConfirmationFieldFromJSON(json['confirm']),\n        'name': json['name'] == null ? undefined : json['name'],\n        'style': json['style'] == null ? undefined : json['style'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function SlackActionToJSON(json: any): SlackAction {\n    return SlackActionToJSONTyped(json, false);\n}\n\nexport function SlackActionToJSONTyped(value?: SlackAction | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'confirm': SlackConfirmationFieldToJSON(value['confirm']),\n        'name': value['name'],\n        'style': value['style'],\n        'text': value['text'],\n        'type': value['type'],\n        'url': value['url'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SlackField } from './SlackField';\nimport {\n    SlackFieldFromJSON,\n    SlackFieldFromJSONTyped,\n    SlackFieldToJSON,\n    SlackFieldToJSONTyped,\n} from './SlackField';\nimport type { SlackAction } from './SlackAction';\nimport {\n    SlackActionFromJSON,\n    SlackActionFromJSONTyped,\n    SlackActionToJSON,\n    SlackActionToJSONTyped,\n} from './SlackAction';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface SlackConfig\n */\nexport interface SlackConfig {\n    /**\n     * \n     * @type {Array<SlackAction>}\n     * @memberof SlackConfig\n     */\n    actions?: Array<SlackAction>;\n    /**\n     * \n     * @type {URL}\n     * @memberof SlackConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    apiUrlFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    callbackId?: string;\n    /**\n     * Slack channel override, (like #other-channel or @username).\n     * @type {string}\n     * @memberof SlackConfig\n     */\n    channel?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    color?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    fallback?: string;\n    /**\n     * \n     * @type {Array<SlackField>}\n     * @memberof SlackConfig\n     */\n    fields?: Array<SlackField>;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    footer?: string;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof SlackConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    iconEmoji?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    iconUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    imageUrl?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SlackConfig\n     */\n    linkNames?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SlackConfig\n     */\n    mrkdwnIn?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    pretext?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SlackConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SlackConfig\n     */\n    shortFields?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    text?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    thumbUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    titleLink?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SlackConfig\n     */\n    username?: string;\n}\n\n/**\n * Check if a given object implements the SlackConfig interface.\n */\nexport function instanceOfSlackConfig(value: object): value is SlackConfig {\n    return true;\n}\n\nexport function SlackConfigFromJSON(json: any): SlackConfig {\n    return SlackConfigFromJSONTyped(json, false);\n}\n\nexport function SlackConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlackConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'actions': json['actions'] == null ? undefined : ((json['actions'] as Array<any>).map(SlackActionFromJSON)),\n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'apiUrlFile': json['api_url_file'] == null ? undefined : json['api_url_file'],\n        'callbackId': json['callback_id'] == null ? undefined : json['callback_id'],\n        'channel': json['channel'] == null ? undefined : json['channel'],\n        'color': json['color'] == null ? undefined : json['color'],\n        'fallback': json['fallback'] == null ? undefined : json['fallback'],\n        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(SlackFieldFromJSON)),\n        'footer': json['footer'] == null ? undefined : json['footer'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'iconEmoji': json['icon_emoji'] == null ? undefined : json['icon_emoji'],\n        'iconUrl': json['icon_url'] == null ? undefined : json['icon_url'],\n        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],\n        'linkNames': json['link_names'] == null ? undefined : json['link_names'],\n        'mrkdwnIn': json['mrkdwn_in'] == null ? undefined : json['mrkdwn_in'],\n        'pretext': json['pretext'] == null ? undefined : json['pretext'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'shortFields': json['short_fields'] == null ? undefined : json['short_fields'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'thumbUrl': json['thumb_url'] == null ? undefined : json['thumb_url'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'titleLink': json['title_link'] == null ? undefined : json['title_link'],\n        'username': json['username'] == null ? undefined : json['username'],\n    };\n}\n\nexport function SlackConfigToJSON(json: any): SlackConfig {\n    return SlackConfigToJSONTyped(json, false);\n}\n\nexport function SlackConfigToJSONTyped(value?: SlackConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'actions': value['actions'] == null ? undefined : ((value['actions'] as Array<any>).map(SlackActionToJSON)),\n        'api_url': URLToJSON(value['apiUrl']),\n        'api_url_file': value['apiUrlFile'],\n        'callback_id': value['callbackId'],\n        'channel': value['channel'],\n        'color': value['color'],\n        'fallback': value['fallback'],\n        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(SlackFieldToJSON)),\n        'footer': value['footer'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'icon_emoji': value['iconEmoji'],\n        'icon_url': value['iconUrl'],\n        'image_url': value['imageUrl'],\n        'link_names': value['linkNames'],\n        'mrkdwn_in': value['mrkdwnIn'],\n        'pretext': value['pretext'],\n        'send_resolved': value['sendResolved'],\n        'short_fields': value['shortFields'],\n        'text': value['text'],\n        'thumb_url': value['thumbUrl'],\n        'title': value['title'],\n        'title_link': value['titleLink'],\n        'username': value['username'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostableGrafanaReceiver\n */\nexport interface PostableGrafanaReceiver {\n    /**\n     * \n     * @type {boolean}\n     * @memberof PostableGrafanaReceiver\n     */\n    disableResolveMessage?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaReceiver\n     */\n    name?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof PostableGrafanaReceiver\n     */\n    secureSettings?: { [key: string]: string; };\n    /**\n     * \n     * @type {object}\n     * @memberof PostableGrafanaReceiver\n     */\n    settings?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaReceiver\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaReceiver\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the PostableGrafanaReceiver interface.\n */\nexport function instanceOfPostableGrafanaReceiver(value: object): value is PostableGrafanaReceiver {\n    return true;\n}\n\nexport function PostableGrafanaReceiverFromJSON(json: any): PostableGrafanaReceiver {\n    return PostableGrafanaReceiverFromJSONTyped(json, false);\n}\n\nexport function PostableGrafanaReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaReceiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'disableResolveMessage': json['disableResolveMessage'] == null ? undefined : json['disableResolveMessage'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'secureSettings': json['secureSettings'] == null ? undefined : json['secureSettings'],\n        'settings': json['settings'] == null ? undefined : json['settings'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PostableGrafanaReceiverToJSON(json: any): PostableGrafanaReceiver {\n    return PostableGrafanaReceiverToJSONTyped(json, false);\n}\n\nexport function PostableGrafanaReceiverToJSONTyped(value?: PostableGrafanaReceiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'disableResolveMessage': value['disableResolveMessage'],\n        'name': value['name'],\n        'secureSettings': value['secureSettings'],\n        'settings': value['settings'],\n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface WebhookConfig\n */\nexport interface WebhookConfig {\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof WebhookConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * MaxAlerts is the maximum number of alerts to be sent per webhook message.\n     * Alerts exceeding this threshold will be truncated. Setting this to 0\n     * allows an unlimited number of alerts.\n     * @type {number}\n     * @memberof WebhookConfig\n     */\n    maxAlerts?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof WebhookConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {URL}\n     * @memberof WebhookConfig\n     */\n    url?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof WebhookConfig\n     */\n    urlFile?: string;\n}\n\n/**\n * Check if a given object implements the WebhookConfig interface.\n */\nexport function instanceOfWebhookConfig(value: object): value is WebhookConfig {\n    return true;\n}\n\nexport function WebhookConfigFromJSON(json: any): WebhookConfig {\n    return WebhookConfigFromJSONTyped(json, false);\n}\n\nexport function WebhookConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'maxAlerts': json['max_alerts'] == null ? undefined : json['max_alerts'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'url': json['url'] == null ? undefined : URLFromJSON(json['url']),\n        'urlFile': json['url_file'] == null ? undefined : json['url_file'],\n    };\n}\n\nexport function WebhookConfigToJSON(json: any): WebhookConfig {\n    return WebhookConfigToJSONTyped(json, false);\n}\n\nexport function WebhookConfigToJSONTyped(value?: WebhookConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'max_alerts': value['maxAlerts'],\n        'send_resolved': value['sendResolved'],\n        'url': URLToJSON(value['url']),\n        'url_file': value['urlFile'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface VictorOpsConfig\n */\nexport interface VictorOpsConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    apiKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    apiKeyFile?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof VictorOpsConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof VictorOpsConfig\n     */\n    customFields?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    entityDisplayName?: string;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof VictorOpsConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    messageType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    monitoringTool?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    routingKey?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof VictorOpsConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof VictorOpsConfig\n     */\n    stateMessage?: string;\n}\n\n/**\n * Check if a given object implements the VictorOpsConfig interface.\n */\nexport function instanceOfVictorOpsConfig(value: object): value is VictorOpsConfig {\n    return true;\n}\n\nexport function VictorOpsConfigFromJSON(json: any): VictorOpsConfig {\n    return VictorOpsConfigFromJSONTyped(json, false);\n}\n\nexport function VictorOpsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): VictorOpsConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiKey': json['api_key'] == null ? undefined : json['api_key'],\n        'apiKeyFile': json['api_key_file'] == null ? undefined : json['api_key_file'],\n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'customFields': json['custom_fields'] == null ? undefined : json['custom_fields'],\n        'entityDisplayName': json['entity_display_name'] == null ? undefined : json['entity_display_name'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'messageType': json['message_type'] == null ? undefined : json['message_type'],\n        'monitoringTool': json['monitoring_tool'] == null ? undefined : json['monitoring_tool'],\n        'routingKey': json['routing_key'] == null ? undefined : json['routing_key'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'stateMessage': json['state_message'] == null ? undefined : json['state_message'],\n    };\n}\n\nexport function VictorOpsConfigToJSON(json: any): VictorOpsConfig {\n    return VictorOpsConfigToJSONTyped(json, false);\n}\n\nexport function VictorOpsConfigToJSONTyped(value?: VictorOpsConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'api_key': value['apiKey'],\n        'api_key_file': value['apiKeyFile'],\n        'api_url': URLToJSON(value['apiUrl']),\n        'custom_fields': value['customFields'],\n        'entity_display_name': value['entityDisplayName'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message_type': value['messageType'],\n        'monitoring_tool': value['monitoringTool'],\n        'routing_key': value['routingKey'],\n        'send_resolved': value['sendResolved'],\n        'state_message': value['stateMessage'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OpsGenieConfigResponder\n */\nexport interface OpsGenieConfigResponder {\n    /**\n     * One of those 3 should be filled.\n     * @type {string}\n     * @memberof OpsGenieConfigResponder\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfigResponder\n     */\n    name?: string;\n    /**\n     * team, user, escalation, schedule etc.\n     * @type {string}\n     * @memberof OpsGenieConfigResponder\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfigResponder\n     */\n    username?: string;\n}\n\n/**\n * Check if a given object implements the OpsGenieConfigResponder interface.\n */\nexport function instanceOfOpsGenieConfigResponder(value: object): value is OpsGenieConfigResponder {\n    return true;\n}\n\nexport function OpsGenieConfigResponderFromJSON(json: any): OpsGenieConfigResponder {\n    return OpsGenieConfigResponderFromJSONTyped(json, false);\n}\n\nexport function OpsGenieConfigResponderFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpsGenieConfigResponder {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'username': json['username'] == null ? undefined : json['username'],\n    };\n}\n\nexport function OpsGenieConfigResponderToJSON(json: any): OpsGenieConfigResponder {\n    return OpsGenieConfigResponderToJSONTyped(json, false);\n}\n\nexport function OpsGenieConfigResponderToJSONTyped(value?: OpsGenieConfigResponder | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'name': value['name'],\n        'type': value['type'],\n        'username': value['username'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { OpsGenieConfigResponder } from './OpsGenieConfigResponder';\nimport {\n    OpsGenieConfigResponderFromJSON,\n    OpsGenieConfigResponderFromJSONTyped,\n    OpsGenieConfigResponderToJSON,\n    OpsGenieConfigResponderToJSONTyped,\n} from './OpsGenieConfigResponder';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface OpsGenieConfig\n */\nexport interface OpsGenieConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    actions?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    apiKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    apiKeyFile?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof OpsGenieConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    description?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof OpsGenieConfig\n     */\n    details?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    entity?: string;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof OpsGenieConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    note?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    priority?: string;\n    /**\n     * \n     * @type {Array<OpsGenieConfigResponder>}\n     * @memberof OpsGenieConfig\n     */\n    responders?: Array<OpsGenieConfigResponder>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OpsGenieConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    source?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OpsGenieConfig\n     */\n    tags?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OpsGenieConfig\n     */\n    updateAlerts?: boolean;\n}\n\n/**\n * Check if a given object implements the OpsGenieConfig interface.\n */\nexport function instanceOfOpsGenieConfig(value: object): value is OpsGenieConfig {\n    return true;\n}\n\nexport function OpsGenieConfigFromJSON(json: any): OpsGenieConfig {\n    return OpsGenieConfigFromJSONTyped(json, false);\n}\n\nexport function OpsGenieConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpsGenieConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'actions': json['actions'] == null ? undefined : json['actions'],\n        'apiKey': json['api_key'] == null ? undefined : json['api_key'],\n        'apiKeyFile': json['api_key_file'] == null ? undefined : json['api_key_file'],\n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'description': json['description'] == null ? undefined : json['description'],\n        'details': json['details'] == null ? undefined : json['details'],\n        'entity': json['entity'] == null ? undefined : json['entity'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'note': json['note'] == null ? undefined : json['note'],\n        'priority': json['priority'] == null ? undefined : json['priority'],\n        'responders': json['responders'] == null ? undefined : ((json['responders'] as Array<any>).map(OpsGenieConfigResponderFromJSON)),\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'source': json['source'] == null ? undefined : json['source'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'updateAlerts': json['update_alerts'] == null ? undefined : json['update_alerts'],\n    };\n}\n\nexport function OpsGenieConfigToJSON(json: any): OpsGenieConfig {\n    return OpsGenieConfigToJSONTyped(json, false);\n}\n\nexport function OpsGenieConfigToJSONTyped(value?: OpsGenieConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'actions': value['actions'],\n        'api_key': value['apiKey'],\n        'api_key_file': value['apiKeyFile'],\n        'api_url': URLToJSON(value['apiUrl']),\n        'description': value['description'],\n        'details': value['details'],\n        'entity': value['entity'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'note': value['note'],\n        'priority': value['priority'],\n        'responders': value['responders'] == null ? undefined : ((value['responders'] as Array<any>).map(OpsGenieConfigResponderToJSON)),\n        'send_resolved': value['sendResolved'],\n        'source': value['source'],\n        'tags': value['tags'],\n        'update_alerts': value['updateAlerts'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\n\n/**\n * \n * @export\n * @interface PushoverConfig\n */\nexport interface PushoverConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    device?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    expire?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PushoverConfig\n     */\n    html?: boolean;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof PushoverConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    priority?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    retry?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PushoverConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    sound?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    token?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    tokenFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    ttl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    urlTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    userKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PushoverConfig\n     */\n    userKeyFile?: string;\n}\n\n/**\n * Check if a given object implements the PushoverConfig interface.\n */\nexport function instanceOfPushoverConfig(value: object): value is PushoverConfig {\n    return true;\n}\n\nexport function PushoverConfigFromJSON(json: any): PushoverConfig {\n    return PushoverConfigFromJSONTyped(json, false);\n}\n\nexport function PushoverConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PushoverConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'device': json['device'] == null ? undefined : json['device'],\n        'expire': json['expire'] == null ? undefined : json['expire'],\n        'html': json['html'] == null ? undefined : json['html'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'priority': json['priority'] == null ? undefined : json['priority'],\n        'retry': json['retry'] == null ? undefined : json['retry'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'sound': json['sound'] == null ? undefined : json['sound'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'token': json['token'] == null ? undefined : json['token'],\n        'tokenFile': json['token_file'] == null ? undefined : json['token_file'],\n        'ttl': json['ttl'] == null ? undefined : json['ttl'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'urlTitle': json['url_title'] == null ? undefined : json['url_title'],\n        'userKey': json['user_key'] == null ? undefined : json['user_key'],\n        'userKeyFile': json['user_key_file'] == null ? undefined : json['user_key_file'],\n    };\n}\n\nexport function PushoverConfigToJSON(json: any): PushoverConfig {\n    return PushoverConfigToJSONTyped(json, false);\n}\n\nexport function PushoverConfigToJSONTyped(value?: PushoverConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'device': value['device'],\n        'expire': value['expire'],\n        'html': value['html'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'priority': value['priority'],\n        'retry': value['retry'],\n        'send_resolved': value['sendResolved'],\n        'sound': value['sound'],\n        'title': value['title'],\n        'token': value['token'],\n        'token_file': value['tokenFile'],\n        'ttl': value['ttl'],\n        'url': value['url'],\n        'url_title': value['urlTitle'],\n        'user_key': value['userKey'],\n        'user_key_file': value['userKeyFile'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PagerdutyImage\n */\nexport interface PagerdutyImage {\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyImage\n     */\n    alt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyImage\n     */\n    href?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyImage\n     */\n    src?: string;\n}\n\n/**\n * Check if a given object implements the PagerdutyImage interface.\n */\nexport function instanceOfPagerdutyImage(value: object): value is PagerdutyImage {\n    return true;\n}\n\nexport function PagerdutyImageFromJSON(json: any): PagerdutyImage {\n    return PagerdutyImageFromJSONTyped(json, false);\n}\n\nexport function PagerdutyImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyImage {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alt': json['alt'] == null ? undefined : json['alt'],\n        'href': json['href'] == null ? undefined : json['href'],\n        'src': json['src'] == null ? undefined : json['src'],\n    };\n}\n\nexport function PagerdutyImageToJSON(json: any): PagerdutyImage {\n    return PagerdutyImageToJSONTyped(json, false);\n}\n\nexport function PagerdutyImageToJSONTyped(value?: PagerdutyImage | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alt': value['alt'],\n        'href': value['href'],\n        'src': value['src'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PagerdutyLink\n */\nexport interface PagerdutyLink {\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyLink\n     */\n    href?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyLink\n     */\n    text?: string;\n}\n\n/**\n * Check if a given object implements the PagerdutyLink interface.\n */\nexport function instanceOfPagerdutyLink(value: object): value is PagerdutyLink {\n    return true;\n}\n\nexport function PagerdutyLinkFromJSON(json: any): PagerdutyLink {\n    return PagerdutyLinkFromJSONTyped(json, false);\n}\n\nexport function PagerdutyLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyLink {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'href': json['href'] == null ? undefined : json['href'],\n        'text': json['text'] == null ? undefined : json['text'],\n    };\n}\n\nexport function PagerdutyLinkToJSON(json: any): PagerdutyLink {\n    return PagerdutyLinkToJSONTyped(json, false);\n}\n\nexport function PagerdutyLinkToJSONTyped(value?: PagerdutyLink | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'href': value['href'],\n        'text': value['text'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PagerdutyImage } from './PagerdutyImage';\nimport {\n    PagerdutyImageFromJSON,\n    PagerdutyImageFromJSONTyped,\n    PagerdutyImageToJSON,\n    PagerdutyImageToJSONTyped,\n} from './PagerdutyImage';\nimport type { PagerdutyLink } from './PagerdutyLink';\nimport {\n    PagerdutyLinkFromJSON,\n    PagerdutyLinkFromJSONTyped,\n    PagerdutyLinkToJSON,\n    PagerdutyLinkToJSONTyped,\n} from './PagerdutyLink';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface PagerdutyConfig\n */\nexport interface PagerdutyConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    _class?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    client?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    clientUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    component?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    description?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof PagerdutyConfig\n     */\n    details?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    group?: string;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof PagerdutyConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {Array<PagerdutyImage>}\n     * @memberof PagerdutyConfig\n     */\n    images?: Array<PagerdutyImage>;\n    /**\n     * \n     * @type {Array<PagerdutyLink>}\n     * @memberof PagerdutyConfig\n     */\n    links?: Array<PagerdutyLink>;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    routingKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    routingKeyFile?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PagerdutyConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    serviceKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    serviceKeyFile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    severity?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PagerdutyConfig\n     */\n    source?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof PagerdutyConfig\n     */\n    url?: URL;\n}\n\n/**\n * Check if a given object implements the PagerdutyConfig interface.\n */\nexport function instanceOfPagerdutyConfig(value: object): value is PagerdutyConfig {\n    return true;\n}\n\nexport function PagerdutyConfigFromJSON(json: any): PagerdutyConfig {\n    return PagerdutyConfigFromJSONTyped(json, false);\n}\n\nexport function PagerdutyConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagerdutyConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        '_class': json['class'] == null ? undefined : json['class'],\n        'client': json['client'] == null ? undefined : json['client'],\n        'clientUrl': json['client_url'] == null ? undefined : json['client_url'],\n        'component': json['component'] == null ? undefined : json['component'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'details': json['details'] == null ? undefined : json['details'],\n        'group': json['group'] == null ? undefined : json['group'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(PagerdutyImageFromJSON)),\n        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(PagerdutyLinkFromJSON)),\n        'routingKey': json['routing_key'] == null ? undefined : json['routing_key'],\n        'routingKeyFile': json['routing_key_file'] == null ? undefined : json['routing_key_file'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'serviceKey': json['service_key'] == null ? undefined : json['service_key'],\n        'serviceKeyFile': json['service_key_file'] == null ? undefined : json['service_key_file'],\n        'severity': json['severity'] == null ? undefined : json['severity'],\n        'source': json['source'] == null ? undefined : json['source'],\n        'url': json['url'] == null ? undefined : URLFromJSON(json['url']),\n    };\n}\n\nexport function PagerdutyConfigToJSON(json: any): PagerdutyConfig {\n    return PagerdutyConfigToJSONTyped(json, false);\n}\n\nexport function PagerdutyConfigToJSONTyped(value?: PagerdutyConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'class': value['_class'],\n        'client': value['client'],\n        'client_url': value['clientUrl'],\n        'component': value['component'],\n        'description': value['description'],\n        'details': value['details'],\n        'group': value['group'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(PagerdutyImageToJSON)),\n        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(PagerdutyLinkToJSON)),\n        'routing_key': value['routingKey'],\n        'routing_key_file': value['routingKeyFile'],\n        'send_resolved': value['sendResolved'],\n        'service_key': value['serviceKey'],\n        'service_key_file': value['serviceKeyFile'],\n        'severity': value['severity'],\n        'source': value['source'],\n        'url': URLToJSON(value['url']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface WechatConfig\n */\nexport interface WechatConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    agentId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    apiSecret?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof WechatConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    corpId?: string;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof WechatConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    messageType?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof WechatConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    toParty?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    toTag?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WechatConfig\n     */\n    toUser?: string;\n}\n\n/**\n * Check if a given object implements the WechatConfig interface.\n */\nexport function instanceOfWechatConfig(value: object): value is WechatConfig {\n    return true;\n}\n\nexport function WechatConfigFromJSON(json: any): WechatConfig {\n    return WechatConfigFromJSONTyped(json, false);\n}\n\nexport function WechatConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WechatConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'agentId': json['agent_id'] == null ? undefined : json['agent_id'],\n        'apiSecret': json['api_secret'] == null ? undefined : json['api_secret'],\n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'corpId': json['corp_id'] == null ? undefined : json['corp_id'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'messageType': json['message_type'] == null ? undefined : json['message_type'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'toParty': json['to_party'] == null ? undefined : json['to_party'],\n        'toTag': json['to_tag'] == null ? undefined : json['to_tag'],\n        'toUser': json['to_user'] == null ? undefined : json['to_user'],\n    };\n}\n\nexport function WechatConfigToJSON(json: any): WechatConfig {\n    return WechatConfigToJSONTyped(json, false);\n}\n\nexport function WechatConfigToJSONTyped(value?: WechatConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'agent_id': value['agentId'],\n        'api_secret': value['apiSecret'],\n        'api_url': URLToJSON(value['apiUrl']),\n        'corp_id': value['corpId'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'message_type': value['messageType'],\n        'send_resolved': value['sendResolved'],\n        'to_party': value['toParty'],\n        'to_tag': value['toTag'],\n        'to_user': value['toUser'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SlackConfig } from './SlackConfig';\nimport {\n    SlackConfigFromJSON,\n    SlackConfigFromJSONTyped,\n    SlackConfigToJSON,\n    SlackConfigToJSONTyped,\n} from './SlackConfig';\nimport type { PostableGrafanaReceiver } from './PostableGrafanaReceiver';\nimport {\n    PostableGrafanaReceiverFromJSON,\n    PostableGrafanaReceiverFromJSONTyped,\n    PostableGrafanaReceiverToJSON,\n    PostableGrafanaReceiverToJSONTyped,\n} from './PostableGrafanaReceiver';\nimport type { WebhookConfig } from './WebhookConfig';\nimport {\n    WebhookConfigFromJSON,\n    WebhookConfigFromJSONTyped,\n    WebhookConfigToJSON,\n    WebhookConfigToJSONTyped,\n} from './WebhookConfig';\nimport type { VictorOpsConfig } from './VictorOpsConfig';\nimport {\n    VictorOpsConfigFromJSON,\n    VictorOpsConfigFromJSONTyped,\n    VictorOpsConfigToJSON,\n    VictorOpsConfigToJSONTyped,\n} from './VictorOpsConfig';\nimport type { EmailConfig } from './EmailConfig';\nimport {\n    EmailConfigFromJSON,\n    EmailConfigFromJSONTyped,\n    EmailConfigToJSON,\n    EmailConfigToJSONTyped,\n} from './EmailConfig';\nimport type { OpsGenieConfig } from './OpsGenieConfig';\nimport {\n    OpsGenieConfigFromJSON,\n    OpsGenieConfigFromJSONTyped,\n    OpsGenieConfigToJSON,\n    OpsGenieConfigToJSONTyped,\n} from './OpsGenieConfig';\nimport type { PushoverConfig } from './PushoverConfig';\nimport {\n    PushoverConfigFromJSON,\n    PushoverConfigFromJSONTyped,\n    PushoverConfigToJSON,\n    PushoverConfigToJSONTyped,\n} from './PushoverConfig';\nimport type { PagerdutyConfig } from './PagerdutyConfig';\nimport {\n    PagerdutyConfigFromJSON,\n    PagerdutyConfigFromJSONTyped,\n    PagerdutyConfigToJSON,\n    PagerdutyConfigToJSONTyped,\n} from './PagerdutyConfig';\nimport type { WechatConfig } from './WechatConfig';\nimport {\n    WechatConfigFromJSON,\n    WechatConfigFromJSONTyped,\n    WechatConfigToJSON,\n    WechatConfigToJSONTyped,\n} from './WechatConfig';\n\n/**\n * \n * @export\n * @interface ExtendedReceiver\n */\nexport interface ExtendedReceiver {\n    /**\n     * \n     * @type {EmailConfig}\n     * @memberof ExtendedReceiver\n     */\n    emailConfigs?: EmailConfig;\n    /**\n     * \n     * @type {PostableGrafanaReceiver}\n     * @memberof ExtendedReceiver\n     */\n    grafanaManagedReceiver?: PostableGrafanaReceiver;\n    /**\n     * \n     * @type {OpsGenieConfig}\n     * @memberof ExtendedReceiver\n     */\n    opsgenieConfigs?: OpsGenieConfig;\n    /**\n     * \n     * @type {PagerdutyConfig}\n     * @memberof ExtendedReceiver\n     */\n    pagerdutyConfigs?: PagerdutyConfig;\n    /**\n     * \n     * @type {PushoverConfig}\n     * @memberof ExtendedReceiver\n     */\n    pushoverConfigs?: PushoverConfig;\n    /**\n     * \n     * @type {SlackConfig}\n     * @memberof ExtendedReceiver\n     */\n    slackConfigs?: SlackConfig;\n    /**\n     * \n     * @type {VictorOpsConfig}\n     * @memberof ExtendedReceiver\n     */\n    victoropsConfigs?: VictorOpsConfig;\n    /**\n     * \n     * @type {WebhookConfig}\n     * @memberof ExtendedReceiver\n     */\n    webhookConfigs?: WebhookConfig;\n    /**\n     * \n     * @type {WechatConfig}\n     * @memberof ExtendedReceiver\n     */\n    wechatConfigs?: WechatConfig;\n}\n\n/**\n * Check if a given object implements the ExtendedReceiver interface.\n */\nexport function instanceOfExtendedReceiver(value: object): value is ExtendedReceiver {\n    return true;\n}\n\nexport function ExtendedReceiverFromJSON(json: any): ExtendedReceiver {\n    return ExtendedReceiverFromJSONTyped(json, false);\n}\n\nexport function ExtendedReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedReceiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'emailConfigs': json['email_configs'] == null ? undefined : EmailConfigFromJSON(json['email_configs']),\n        'grafanaManagedReceiver': json['grafana_managed_receiver'] == null ? undefined : PostableGrafanaReceiverFromJSON(json['grafana_managed_receiver']),\n        'opsgenieConfigs': json['opsgenie_configs'] == null ? undefined : OpsGenieConfigFromJSON(json['opsgenie_configs']),\n        'pagerdutyConfigs': json['pagerduty_configs'] == null ? undefined : PagerdutyConfigFromJSON(json['pagerduty_configs']),\n        'pushoverConfigs': json['pushover_configs'] == null ? undefined : PushoverConfigFromJSON(json['pushover_configs']),\n        'slackConfigs': json['slack_configs'] == null ? undefined : SlackConfigFromJSON(json['slack_configs']),\n        'victoropsConfigs': json['victorops_configs'] == null ? undefined : VictorOpsConfigFromJSON(json['victorops_configs']),\n        'webhookConfigs': json['webhook_configs'] == null ? undefined : WebhookConfigFromJSON(json['webhook_configs']),\n        'wechatConfigs': json['wechat_configs'] == null ? undefined : WechatConfigFromJSON(json['wechat_configs']),\n    };\n}\n\nexport function ExtendedReceiverToJSON(json: any): ExtendedReceiver {\n    return ExtendedReceiverToJSONTyped(json, false);\n}\n\nexport function ExtendedReceiverToJSONTyped(value?: ExtendedReceiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'email_configs': EmailConfigToJSON(value['emailConfigs']),\n        'grafana_managed_receiver': PostableGrafanaReceiverToJSON(value['grafanaManagedReceiver']),\n        'opsgenie_configs': OpsGenieConfigToJSON(value['opsgenieConfigs']),\n        'pagerduty_configs': PagerdutyConfigToJSON(value['pagerdutyConfigs']),\n        'pushover_configs': PushoverConfigToJSON(value['pushoverConfigs']),\n        'slack_configs': SlackConfigToJSON(value['slackConfigs']),\n        'victorops_configs': VictorOpsConfigToJSON(value['victoropsConfigs']),\n        'webhook_configs': WebhookConfigToJSON(value['webhookConfigs']),\n        'wechat_configs': WechatConfigToJSON(value['wechatConfigs']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TagsDTO\n */\nexport interface TagsDTO {\n    /**\n     * \n     * @type {number}\n     * @memberof TagsDTO\n     */\n    count?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TagsDTO\n     */\n    tag?: string;\n}\n\n/**\n * Check if a given object implements the TagsDTO interface.\n */\nexport function instanceOfTagsDTO(value: object): value is TagsDTO {\n    return true;\n}\n\nexport function TagsDTOFromJSON(json: any): TagsDTO {\n    return TagsDTOFromJSONTyped(json, false);\n}\n\nexport function TagsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagsDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'count': json['count'] == null ? undefined : json['count'],\n        'tag': json['tag'] == null ? undefined : json['tag'],\n    };\n}\n\nexport function TagsDTOToJSON(json: any): TagsDTO {\n    return TagsDTOToJSONTyped(json, false);\n}\n\nexport function TagsDTOToJSONTyped(value?: TagsDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'count': value['count'],\n        'tag': value['tag'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TagsDTO } from './TagsDTO';\nimport {\n    TagsDTOFromJSON,\n    TagsDTOFromJSONTyped,\n    TagsDTOToJSON,\n    TagsDTOToJSONTyped,\n} from './TagsDTO';\n\n/**\n * \n * @export\n * @interface FindTagsResult\n */\nexport interface FindTagsResult {\n    /**\n     * \n     * @type {Array<TagsDTO>}\n     * @memberof FindTagsResult\n     */\n    tags?: Array<TagsDTO>;\n}\n\n/**\n * Check if a given object implements the FindTagsResult interface.\n */\nexport function instanceOfFindTagsResult(value: object): value is FindTagsResult {\n    return true;\n}\n\nexport function FindTagsResultFromJSON(json: any): FindTagsResult {\n    return FindTagsResultFromJSONTyped(json, false);\n}\n\nexport function FindTagsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindTagsResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagsDTOFromJSON)),\n    };\n}\n\nexport function FindTagsResultToJSON(json: any): FindTagsResult {\n    return FindTagsResultToJSONTyped(json, false);\n}\n\nexport function FindTagsResultToJSONTyped(value?: FindTagsResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagsDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Span\n */\nexport interface Span {\n    /**\n     * Length of the span.\n     * @type {number}\n     * @memberof Span\n     */\n    length?: number;\n    /**\n     * Gap to previous span (always positive), or starting index for the 1st\n     * span (which can be negative).\n     * @type {number}\n     * @memberof Span\n     */\n    offset?: number;\n}\n\n/**\n * Check if a given object implements the Span interface.\n */\nexport function instanceOfSpan(value: object): value is Span {\n    return true;\n}\n\nexport function SpanFromJSON(json: any): Span {\n    return SpanFromJSONTyped(json, false);\n}\n\nexport function SpanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Span {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'length': json['Length'] == null ? undefined : json['Length'],\n        'offset': json['Offset'] == null ? undefined : json['Offset'],\n    };\n}\n\nexport function SpanToJSON(json: any): Span {\n    return SpanToJSONTyped(json, false);\n}\n\nexport function SpanToJSONTyped(value?: Span | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Length': value['length'],\n        'Offset': value['offset'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Span } from './Span';\nimport {\n    SpanFromJSON,\n    SpanFromJSONTyped,\n    SpanToJSON,\n    SpanToJSONTyped,\n} from './Span';\n\n/**\n * A FloatHistogram is needed by PromQL to handle operations that might result\n * in fractional counts. Since the counts in a histogram are unlikely to be too\n * large to be represented precisely by a float64, a FloatHistogram can also be\n * used to represent a histogram with integer counts and thus serves as a more\n * generalized representation.\n * @export\n * @interface FloatHistogram\n */\nexport interface FloatHistogram {\n    /**\n     * Total number of observations. Must be zero or positive.\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    count?: number;\n    /**\n     * or alternatively that we are dealing with a gauge histogram, where counter resets do not apply.\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    counterResetHint?: number;\n    /**\n     * Observation counts in buckets. Each represents an absolute count and\n     * must be zero or positive.\n     * @type {Array<number>}\n     * @memberof FloatHistogram\n     */\n    positiveBuckets?: Array<number>;\n    /**\n     * Spans for positive and negative buckets (see Span below).\n     * @type {Array<Span>}\n     * @memberof FloatHistogram\n     */\n    positiveSpans?: Array<Span>;\n    /**\n     * Currently valid schema numbers are -4 <= n <= 8.  They are all for\n     * base-2 bucket schemas, where 1 is a bucket boundary in each case, and\n     * then each power of two is divided into 2^n logarithmic buckets.  Or\n     * in other words, each bucket boundary is the previous boundary times\n     * 2^(2^-n).\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    schema?: number;\n    /**\n     * Sum of observations. This is also used as the stale marker.\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    sum?: number;\n    /**\n     * Observations falling into the zero bucket. Must be zero or positive.\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    zeroCount?: number;\n    /**\n     * Width of the zero bucket.\n     * @type {number}\n     * @memberof FloatHistogram\n     */\n    zeroThreshold?: number;\n}\n\n/**\n * Check if a given object implements the FloatHistogram interface.\n */\nexport function instanceOfFloatHistogram(value: object): value is FloatHistogram {\n    return true;\n}\n\nexport function FloatHistogramFromJSON(json: any): FloatHistogram {\n    return FloatHistogramFromJSONTyped(json, false);\n}\n\nexport function FloatHistogramFromJSONTyped(json: any, ignoreDiscriminator: boolean): FloatHistogram {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'count': json['Count'] == null ? undefined : json['Count'],\n        'counterResetHint': json['CounterResetHint'] == null ? undefined : json['CounterResetHint'],\n        'positiveBuckets': json['PositiveBuckets'] == null ? undefined : json['PositiveBuckets'],\n        'positiveSpans': json['PositiveSpans'] == null ? undefined : ((json['PositiveSpans'] as Array<any>).map(SpanFromJSON)),\n        'schema': json['Schema'] == null ? undefined : json['Schema'],\n        'sum': json['Sum'] == null ? undefined : json['Sum'],\n        'zeroCount': json['ZeroCount'] == null ? undefined : json['ZeroCount'],\n        'zeroThreshold': json['ZeroThreshold'] == null ? undefined : json['ZeroThreshold'],\n    };\n}\n\nexport function FloatHistogramToJSON(json: any): FloatHistogram {\n    return FloatHistogramToJSONTyped(json, false);\n}\n\nexport function FloatHistogramToJSONTyped(value?: FloatHistogram | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Count': value['count'],\n        'CounterResetHint': value['counterResetHint'],\n        'PositiveBuckets': value['positiveBuckets'],\n        'PositiveSpans': value['positiveSpans'] == null ? undefined : ((value['positiveSpans'] as Array<any>).map(SpanToJSON)),\n        'Schema': value['schema'],\n        'Sum': value['sum'],\n        'ZeroCount': value['zeroCount'],\n        'ZeroThreshold': value['zeroThreshold'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Folder\n */\nexport interface Folder {\n    /**\n     * Metadata contains user accesses for a given resource\n     * Ex: map[string]bool{\"create\":true, \"delete\": true}\n     * @type {{ [key: string]: boolean; }}\n     * @memberof Folder\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {boolean}\n     * @memberof Folder\n     */\n    canAdmin?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Folder\n     */\n    canDelete?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Folder\n     */\n    canEdit?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Folder\n     */\n    canSave?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof Folder\n     */\n    created?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Folder\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Folder\n     */\n    hasAcl?: boolean;\n    /**\n     * Deprecated: use UID instead\n     * @type {number}\n     * @memberof Folder\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Folder\n     */\n    orgId?: number;\n    /**\n     * only used if nested folders are enabled\n     * @type {string}\n     * @memberof Folder\n     */\n    parentUid?: string;\n    /**\n     * the parent folders starting from the root going down\n     * @type {Array<Folder>}\n     * @memberof Folder\n     */\n    parents?: Array<Folder>;\n    /**\n     * \n     * @type {string}\n     * @memberof Folder\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Folder\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Folder\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Folder\n     */\n    updatedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Folder\n     */\n    url?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Folder\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the Folder interface.\n */\nexport function instanceOfFolder(value: object): value is Folder {\n    return true;\n}\n\nexport function FolderFromJSON(json: any): Folder {\n    return FolderFromJSONTyped(json, false);\n}\n\nexport function FolderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Folder {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'canAdmin': json['canAdmin'] == null ? undefined : json['canAdmin'],\n        'canDelete': json['canDelete'] == null ? undefined : json['canDelete'],\n        'canEdit': json['canEdit'] == null ? undefined : json['canEdit'],\n        'canSave': json['canSave'] == null ? undefined : json['canSave'],\n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],\n        'hasAcl': json['hasAcl'] == null ? undefined : json['hasAcl'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'parentUid': json['parentUid'] == null ? undefined : json['parentUid'],\n        'parents': json['parents'] == null ? undefined : ((json['parents'] as Array<any>).map(FolderFromJSON)),\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'updatedBy': json['updatedBy'] == null ? undefined : json['updatedBy'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function FolderToJSON(json: any): Folder {\n    return FolderToJSONTyped(json, false);\n}\n\nexport function FolderToJSONTyped(value?: Folder | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'canAdmin': value['canAdmin'],\n        'canDelete': value['canDelete'],\n        'canEdit': value['canEdit'],\n        'canSave': value['canSave'],\n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'createdBy': value['createdBy'],\n        'hasAcl': value['hasAcl'],\n        'id': value['id'],\n        'orgId': value['orgId'],\n        'parentUid': value['parentUid'],\n        'parents': value['parents'] == null ? undefined : ((value['parents'] as Array<any>).map(FolderToJSON)),\n        'title': value['title'],\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'updatedBy': value['updatedBy'],\n        'url': value['url'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface FolderSearchHit\n */\nexport interface FolderSearchHit {\n    /**\n     * \n     * @type {number}\n     * @memberof FolderSearchHit\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof FolderSearchHit\n     */\n    parentUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FolderSearchHit\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof FolderSearchHit\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the FolderSearchHit interface.\n */\nexport function instanceOfFolderSearchHit(value: object): value is FolderSearchHit {\n    return true;\n}\n\nexport function FolderSearchHitFromJSON(json: any): FolderSearchHit {\n    return FolderSearchHitFromJSONTyped(json, false);\n}\n\nexport function FolderSearchHitFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderSearchHit {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'parentUid': json['parentUid'] == null ? undefined : json['parentUid'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function FolderSearchHitToJSON(json: any): FolderSearchHit {\n    return FolderSearchHitToJSONTyped(json, false);\n}\n\nexport function FolderSearchHitToJSONTyped(value?: FolderSearchHit | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'parentUid': value['parentUid'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * PublicError is derived from Error and only contains information\n * available to the end user.\n * @export\n * @interface PublicError\n */\nexport interface PublicError {\n    /**\n     * Extra Additional information about the error\n     * @type {{ [key: string]: object; }}\n     * @memberof PublicError\n     */\n    extra?: { [key: string]: object; };\n    /**\n     * Message A human readable message\n     * @type {string}\n     * @memberof PublicError\n     */\n    message?: string;\n    /**\n     * MessageID A unique identifier for the error\n     * @type {string}\n     * @memberof PublicError\n     */\n    messageId: string;\n    /**\n     * StatusCode The HTTP status code returned\n     * @type {number}\n     * @memberof PublicError\n     */\n    statusCode: number;\n}\n\n/**\n * Check if a given object implements the PublicError interface.\n */\nexport function instanceOfPublicError(value: object): value is PublicError {\n    if (!('messageId' in value) || value['messageId'] === undefined) return false;\n    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;\n    return true;\n}\n\nexport function PublicErrorFromJSON(json: any): PublicError {\n    return PublicErrorFromJSONTyped(json, false);\n}\n\nexport function PublicErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicError {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'extra': json['extra'] == null ? undefined : json['extra'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'messageId': json['messageId'],\n        'statusCode': json['statusCode'],\n    };\n}\n\nexport function PublicErrorToJSON(json: any): PublicError {\n    return PublicErrorToJSONTyped(json, false);\n}\n\nexport function PublicErrorToJSONTyped(value?: PublicError | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'extra': value['extra'],\n        'message': value['message'],\n        'messageId': value['messageId'],\n        'statusCode': value['statusCode'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PublicError } from './PublicError';\nimport {\n    PublicErrorFromJSON,\n    PublicErrorFromJSONTyped,\n    PublicErrorToJSON,\n    PublicErrorToJSONTyped,\n} from './PublicError';\n\n/**\n * \n * @export\n * @interface ForbiddenError\n */\nexport interface ForbiddenError {\n    /**\n     * \n     * @type {PublicError}\n     * @memberof ForbiddenError\n     */\n    body?: PublicError;\n}\n\n/**\n * Check if a given object implements the ForbiddenError interface.\n */\nexport function instanceOfForbiddenError(value: object): value is ForbiddenError {\n    return true;\n}\n\nexport function ForbiddenErrorFromJSON(json: any): ForbiddenError {\n    return ForbiddenErrorFromJSONTyped(json, false);\n}\n\nexport function ForbiddenErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ForbiddenError {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'body': json['body'] == null ? undefined : PublicErrorFromJSON(json['body']),\n    };\n}\n\nexport function ForbiddenErrorToJSON(json: any): ForbiddenError {\n    return ForbiddenErrorToJSONTyped(json, false);\n}\n\nexport function ForbiddenErrorToJSONTyped(value?: ForbiddenError | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'body': PublicErrorToJSON(value['body']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GetAccessTokenResponseDTO\n */\nexport interface GetAccessTokenResponseDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    createdAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    displayName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    expiresAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    firstUsedAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetAccessTokenResponseDTO\n     */\n    lastUsedAt?: string;\n}\n\n/**\n * Check if a given object implements the GetAccessTokenResponseDTO interface.\n */\nexport function instanceOfGetAccessTokenResponseDTO(value: object): value is GetAccessTokenResponseDTO {\n    return true;\n}\n\nexport function GetAccessTokenResponseDTOFromJSON(json: any): GetAccessTokenResponseDTO {\n    return GetAccessTokenResponseDTOFromJSONTyped(json, false);\n}\n\nexport function GetAccessTokenResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAccessTokenResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'expiresAt': json['expiresAt'] == null ? undefined : json['expiresAt'],\n        'firstUsedAt': json['firstUsedAt'] == null ? undefined : json['firstUsedAt'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'lastUsedAt': json['lastUsedAt'] == null ? undefined : json['lastUsedAt'],\n    };\n}\n\nexport function GetAccessTokenResponseDTOToJSON(json: any): GetAccessTokenResponseDTO {\n    return GetAccessTokenResponseDTOToJSONTyped(json, false);\n}\n\nexport function GetAccessTokenResponseDTOToJSONTyped(value?: GetAccessTokenResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'createdAt': value['createdAt'],\n        'displayName': value['displayName'],\n        'expiresAt': value['expiresAt'],\n        'firstUsedAt': value['firstUsedAt'],\n        'id': value['id'],\n        'lastUsedAt': value['lastUsedAt'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { FindTagsResult } from './FindTagsResult';\nimport {\n    FindTagsResultFromJSON,\n    FindTagsResultFromJSONTyped,\n    FindTagsResultToJSON,\n    FindTagsResultToJSONTyped,\n} from './FindTagsResult';\n\n/**\n * \n * @export\n * @interface GetAnnotationTagsResponse\n */\nexport interface GetAnnotationTagsResponse {\n    /**\n     * \n     * @type {FindTagsResult}\n     * @memberof GetAnnotationTagsResponse\n     */\n    result?: FindTagsResult;\n}\n\n/**\n * Check if a given object implements the GetAnnotationTagsResponse interface.\n */\nexport function instanceOfGetAnnotationTagsResponse(value: object): value is GetAnnotationTagsResponse {\n    return true;\n}\n\nexport function GetAnnotationTagsResponseFromJSON(json: any): GetAnnotationTagsResponse {\n    return GetAnnotationTagsResponseFromJSONTyped(json, false);\n}\n\nexport function GetAnnotationTagsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAnnotationTagsResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : FindTagsResultFromJSON(json['result']),\n    };\n}\n\nexport function GetAnnotationTagsResponseToJSON(json: any): GetAnnotationTagsResponse {\n    return GetAnnotationTagsResponseToJSONTyped(json, false);\n}\n\nexport function GetAnnotationTagsResponseToJSONTyped(value?: GetAnnotationTagsResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': FindTagsResultToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GetDataSourceIdByName200Response\n */\nexport interface GetDataSourceIdByName200Response {\n    /**\n     * ID Identifier of the data source.\n     * @type {number}\n     * @memberof GetDataSourceIdByName200Response\n     */\n    id: number;\n}\n\n/**\n * Check if a given object implements the GetDataSourceIdByName200Response interface.\n */\nexport function instanceOfGetDataSourceIdByName200Response(value: object): value is GetDataSourceIdByName200Response {\n    if (!('id' in value) || value['id'] === undefined) return false;\n    return true;\n}\n\nexport function GetDataSourceIdByName200ResponseFromJSON(json: any): GetDataSourceIdByName200Response {\n    return GetDataSourceIdByName200ResponseFromJSONTyped(json, false);\n}\n\nexport function GetDataSourceIdByName200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDataSourceIdByName200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n    };\n}\n\nexport function GetDataSourceIdByName200ResponseToJSON(json: any): GetDataSourceIdByName200Response {\n    return GetDataSourceIdByName200ResponseToJSONTyped(json, false);\n}\n\nexport function GetDataSourceIdByName200ResponseToJSONTyped(value?: GetDataSourceIdByName200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DashboardMeta } from './DashboardMeta';\nimport {\n    DashboardMetaFromJSON,\n    DashboardMetaFromJSONTyped,\n    DashboardMetaToJSON,\n    DashboardMetaToJSONTyped,\n} from './DashboardMeta';\n\n/**\n * \n * @export\n * @interface GetHomeDashboardResponse\n */\nexport interface GetHomeDashboardResponse {\n    /**\n     * \n     * @type {object}\n     * @memberof GetHomeDashboardResponse\n     */\n    dashboard?: object;\n    /**\n     * \n     * @type {DashboardMeta}\n     * @memberof GetHomeDashboardResponse\n     */\n    meta?: DashboardMeta;\n    /**\n     * \n     * @type {string}\n     * @memberof GetHomeDashboardResponse\n     */\n    redirectUri?: string;\n}\n\n/**\n * Check if a given object implements the GetHomeDashboardResponse interface.\n */\nexport function instanceOfGetHomeDashboardResponse(value: object): value is GetHomeDashboardResponse {\n    return true;\n}\n\nexport function GetHomeDashboardResponseFromJSON(json: any): GetHomeDashboardResponse {\n    return GetHomeDashboardResponseFromJSONTyped(json, false);\n}\n\nexport function GetHomeDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHomeDashboardResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboard': json['dashboard'] == null ? undefined : json['dashboard'],\n        'meta': json['meta'] == null ? undefined : DashboardMetaFromJSON(json['meta']),\n        'redirectUri': json['redirectUri'] == null ? undefined : json['redirectUri'],\n    };\n}\n\nexport function GetHomeDashboardResponseToJSON(json: any): GetHomeDashboardResponse {\n    return GetHomeDashboardResponseToJSONTyped(json, false);\n}\n\nexport function GetHomeDashboardResponseToJSONTyped(value?: GetHomeDashboardResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboard': value['dashboard'],\n        'meta': DashboardMetaToJSON(value['meta']),\n        'redirectUri': value['redirectUri'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GetSharingOptions200Response\n */\nexport interface GetSharingOptions200Response {\n    /**\n     * \n     * @type {boolean}\n     * @memberof GetSharingOptions200Response\n     */\n    externalEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof GetSharingOptions200Response\n     */\n    externalSnapshotName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GetSharingOptions200Response\n     */\n    externalSnapshotURL?: string;\n}\n\n/**\n * Check if a given object implements the GetSharingOptions200Response interface.\n */\nexport function instanceOfGetSharingOptions200Response(value: object): value is GetSharingOptions200Response {\n    return true;\n}\n\nexport function GetSharingOptions200ResponseFromJSON(json: any): GetSharingOptions200Response {\n    return GetSharingOptions200ResponseFromJSONTyped(json, false);\n}\n\nexport function GetSharingOptions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSharingOptions200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'externalEnabled': json['externalEnabled'] == null ? undefined : json['externalEnabled'],\n        'externalSnapshotName': json['externalSnapshotName'] == null ? undefined : json['externalSnapshotName'],\n        'externalSnapshotURL': json['externalSnapshotURL'] == null ? undefined : json['externalSnapshotURL'],\n    };\n}\n\nexport function GetSharingOptions200ResponseToJSON(json: any): GetSharingOptions200Response {\n    return GetSharingOptions200ResponseToJSONTyped(json, false);\n}\n\nexport function GetSharingOptions200ResponseToJSONTyped(value?: GetSharingOptions200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'externalEnabled': value['externalEnabled'],\n        'externalSnapshotName': value['externalSnapshotName'],\n        'externalSnapshotURL': value['externalSnapshotURL'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MigrateDataResponseItemDTO\n */\nexport interface MigrateDataResponseItemDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    parentName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    refId: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    status: MigrateDataResponseItemDTOStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseItemDTO\n     */\n    type: MigrateDataResponseItemDTOTypeEnum;\n}\n\n\n/**\n * @export\n */\nexport const MigrateDataResponseItemDTOStatusEnum = {\n    Ok: 'OK',\n    Warning: 'WARNING',\n    Error: 'ERROR',\n    Pending: 'PENDING',\n    Unknown: 'UNKNOWN'\n} as const;\nexport type MigrateDataResponseItemDTOStatusEnum = typeof MigrateDataResponseItemDTOStatusEnum[keyof typeof MigrateDataResponseItemDTOStatusEnum];\n\n/**\n * @export\n */\nexport const MigrateDataResponseItemDTOTypeEnum = {\n    Dashboard: 'DASHBOARD',\n    Datasource: 'DATASOURCE',\n    Folder: 'FOLDER',\n    LibraryElement: 'LIBRARY_ELEMENT',\n    AlertRule: 'ALERT_RULE',\n    ContactPoint: 'CONTACT_POINT',\n    NotificationPolicy: 'NOTIFICATION_POLICY',\n    NotificationTemplate: 'NOTIFICATION_TEMPLATE',\n    MuteTiming: 'MUTE_TIMING'\n} as const;\nexport type MigrateDataResponseItemDTOTypeEnum = typeof MigrateDataResponseItemDTOTypeEnum[keyof typeof MigrateDataResponseItemDTOTypeEnum];\n\n\n/**\n * Check if a given object implements the MigrateDataResponseItemDTO interface.\n */\nexport function instanceOfMigrateDataResponseItemDTO(value: object): value is MigrateDataResponseItemDTO {\n    if (!('refId' in value) || value['refId'] === undefined) return false;\n    if (!('status' in value) || value['status'] === undefined) return false;\n    if (!('type' in value) || value['type'] === undefined) return false;\n    return true;\n}\n\nexport function MigrateDataResponseItemDTOFromJSON(json: any): MigrateDataResponseItemDTO {\n    return MigrateDataResponseItemDTOFromJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseItemDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'parentName': json['parentName'] == null ? undefined : json['parentName'],\n        'refId': json['refId'],\n        'status': json['status'],\n        'type': json['type'],\n    };\n}\n\nexport function MigrateDataResponseItemDTOToJSON(json: any): MigrateDataResponseItemDTO {\n    return MigrateDataResponseItemDTOToJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseItemDTOToJSONTyped(value?: MigrateDataResponseItemDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'name': value['name'],\n        'parentName': value['parentName'],\n        'refId': value['refId'],\n        'status': value['status'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SnapshotResourceStats\n */\nexport interface SnapshotResourceStats {\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof SnapshotResourceStats\n     */\n    statuses?: { [key: string]: number; };\n    /**\n     * \n     * @type {number}\n     * @memberof SnapshotResourceStats\n     */\n    total?: number;\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof SnapshotResourceStats\n     */\n    types?: { [key: string]: number; };\n}\n\n/**\n * Check if a given object implements the SnapshotResourceStats interface.\n */\nexport function instanceOfSnapshotResourceStats(value: object): value is SnapshotResourceStats {\n    return true;\n}\n\nexport function SnapshotResourceStatsFromJSON(json: any): SnapshotResourceStats {\n    return SnapshotResourceStatsFromJSONTyped(json, false);\n}\n\nexport function SnapshotResourceStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotResourceStats {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'statuses': json['statuses'] == null ? undefined : json['statuses'],\n        'total': json['total'] == null ? undefined : json['total'],\n        'types': json['types'] == null ? undefined : json['types'],\n    };\n}\n\nexport function SnapshotResourceStatsToJSON(json: any): SnapshotResourceStats {\n    return SnapshotResourceStatsToJSONTyped(json, false);\n}\n\nexport function SnapshotResourceStatsToJSONTyped(value?: SnapshotResourceStats | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'statuses': value['statuses'],\n        'total': value['total'],\n        'types': value['types'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { MigrateDataResponseItemDTO } from './MigrateDataResponseItemDTO';\nimport {\n    MigrateDataResponseItemDTOFromJSON,\n    MigrateDataResponseItemDTOFromJSONTyped,\n    MigrateDataResponseItemDTOToJSON,\n    MigrateDataResponseItemDTOToJSONTyped,\n} from './MigrateDataResponseItemDTO';\nimport type { SnapshotResourceStats } from './SnapshotResourceStats';\nimport {\n    SnapshotResourceStatsFromJSON,\n    SnapshotResourceStatsFromJSONTyped,\n    SnapshotResourceStatsToJSON,\n    SnapshotResourceStatsToJSONTyped,\n} from './SnapshotResourceStats';\n\n/**\n * \n * @export\n * @interface GetSnapshotResponseDTO\n */\nexport interface GetSnapshotResponseDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof GetSnapshotResponseDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof GetSnapshotResponseDTO\n     */\n    finished?: Date;\n    /**\n     * \n     * @type {Array<MigrateDataResponseItemDTO>}\n     * @memberof GetSnapshotResponseDTO\n     */\n    results?: Array<MigrateDataResponseItemDTO>;\n    /**\n     * \n     * @type {string}\n     * @memberof GetSnapshotResponseDTO\n     */\n    sessionUid?: string;\n    /**\n     * \n     * @type {SnapshotResourceStats}\n     * @memberof GetSnapshotResponseDTO\n     */\n    stats?: SnapshotResourceStats;\n    /**\n     * \n     * @type {string}\n     * @memberof GetSnapshotResponseDTO\n     */\n    status?: GetSnapshotResponseDTOStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof GetSnapshotResponseDTO\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const GetSnapshotResponseDTOStatusEnum = {\n    Initializing: 'INITIALIZING',\n    Creating: 'CREATING',\n    PendingUpload: 'PENDING_UPLOAD',\n    Uploading: 'UPLOADING',\n    PendingProcessing: 'PENDING_PROCESSING',\n    Processing: 'PROCESSING',\n    Finished: 'FINISHED',\n    Canceled: 'CANCELED',\n    Error: 'ERROR',\n    Unknown: 'UNKNOWN'\n} as const;\nexport type GetSnapshotResponseDTOStatusEnum = typeof GetSnapshotResponseDTOStatusEnum[keyof typeof GetSnapshotResponseDTOStatusEnum];\n\n\n/**\n * Check if a given object implements the GetSnapshotResponseDTO interface.\n */\nexport function instanceOfGetSnapshotResponseDTO(value: object): value is GetSnapshotResponseDTO {\n    return true;\n}\n\nexport function GetSnapshotResponseDTOFromJSON(json: any): GetSnapshotResponseDTO {\n    return GetSnapshotResponseDTOFromJSONTyped(json, false);\n}\n\nexport function GetSnapshotResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSnapshotResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'finished': json['finished'] == null ? undefined : (new Date(json['finished'])),\n        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(MigrateDataResponseItemDTOFromJSON)),\n        'sessionUid': json['sessionUid'] == null ? undefined : json['sessionUid'],\n        'stats': json['stats'] == null ? undefined : SnapshotResourceStatsFromJSON(json['stats']),\n        'status': json['status'] == null ? undefined : json['status'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function GetSnapshotResponseDTOToJSON(json: any): GetSnapshotResponseDTO {\n    return GetSnapshotResponseDTOToJSONTyped(json, false);\n}\n\nexport function GetSnapshotResponseDTOToJSONTyped(value?: GetSnapshotResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'finished': value['finished'] == null ? undefined : ((value['finished']).toISOString()),\n        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(MigrateDataResponseItemDTOToJSON)),\n        'sessionUid': value['sessionUid'],\n        'stats': SnapshotResourceStatsToJSON(value['stats']),\n        'status': value['status'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertManagersResult } from './AlertManagersResult';\nimport {\n    AlertManagersResultFromJSON,\n    AlertManagersResultFromJSONTyped,\n    AlertManagersResultToJSON,\n    AlertManagersResultToJSONTyped,\n} from './AlertManagersResult';\n\n/**\n * \n * @export\n * @interface GettableAlertmanagers\n */\nexport interface GettableAlertmanagers {\n    /**\n     * \n     * @type {AlertManagersResult}\n     * @memberof GettableAlertmanagers\n     */\n    data?: AlertManagersResult;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableAlertmanagers\n     */\n    status?: string;\n}\n\n/**\n * Check if a given object implements the GettableAlertmanagers interface.\n */\nexport function instanceOfGettableAlertmanagers(value: object): value is GettableAlertmanagers {\n    return true;\n}\n\nexport function GettableAlertmanagersFromJSON(json: any): GettableAlertmanagers {\n    return GettableAlertmanagersFromJSONTyped(json, false);\n}\n\nexport function GettableAlertmanagersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableAlertmanagers {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : AlertManagersResultFromJSON(json['data']),\n        'status': json['status'] == null ? undefined : json['status'],\n    };\n}\n\nexport function GettableAlertmanagersToJSON(json: any): GettableAlertmanagers {\n    return GettableAlertmanagersToJSONTyped(json, false);\n}\n\nexport function GettableAlertmanagersToJSONTyped(value?: GettableAlertmanagers | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': AlertManagersResultToJSON(value['data']),\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface WebexConfig\n */\nexport interface WebexConfig {\n    /**\n     * \n     * @type {URL}\n     * @memberof WebexConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof WebexConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof WebexConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WebexConfig\n     */\n    roomId?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof WebexConfig\n     */\n    sendResolved?: boolean;\n}\n\n/**\n * Check if a given object implements the WebexConfig interface.\n */\nexport function instanceOfWebexConfig(value: object): value is WebexConfig {\n    return true;\n}\n\nexport function WebexConfigFromJSON(json: any): WebexConfig {\n    return WebexConfigFromJSONTyped(json, false);\n}\n\nexport function WebexConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebexConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'roomId': json['room_id'] == null ? undefined : json['room_id'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n    };\n}\n\nexport function WebexConfigToJSON(json: any): WebexConfig {\n    return WebexConfigToJSONTyped(json, false);\n}\n\nexport function WebexConfigToJSONTyped(value?: WebexConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'api_url': URLToJSON(value['apiUrl']),\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'room_id': value['roomId'],\n        'send_resolved': value['sendResolved'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface TelegramConfig\n */\nexport interface TelegramConfig {\n    /**\n     * \n     * @type {URL}\n     * @memberof TelegramConfig\n     */\n    apiUrl?: URL;\n    /**\n     * \n     * @type {number}\n     * @memberof TelegramConfig\n     */\n    chat?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof TelegramConfig\n     */\n    disableNotifications?: boolean;\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof TelegramConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof TelegramConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TelegramConfig\n     */\n    parseMode?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof TelegramConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof TelegramConfig\n     */\n    token?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TelegramConfig\n     */\n    tokenFile?: string;\n}\n\n/**\n * Check if a given object implements the TelegramConfig interface.\n */\nexport function instanceOfTelegramConfig(value: object): value is TelegramConfig {\n    return true;\n}\n\nexport function TelegramConfigFromJSON(json: any): TelegramConfig {\n    return TelegramConfigFromJSONTyped(json, false);\n}\n\nexport function TelegramConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelegramConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiUrl': json['api_url'] == null ? undefined : URLFromJSON(json['api_url']),\n        'chat': json['chat'] == null ? undefined : json['chat'],\n        'disableNotifications': json['disable_notifications'] == null ? undefined : json['disable_notifications'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'parseMode': json['parse_mode'] == null ? undefined : json['parse_mode'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'token': json['token'] == null ? undefined : json['token'],\n        'tokenFile': json['token_file'] == null ? undefined : json['token_file'],\n    };\n}\n\nexport function TelegramConfigToJSON(json: any): TelegramConfig {\n    return TelegramConfigToJSONTyped(json, false);\n}\n\nexport function TelegramConfigToJSONTyped(value?: TelegramConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'api_url': URLToJSON(value['apiUrl']),\n        'chat': value['chat'],\n        'disable_notifications': value['disableNotifications'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'parse_mode': value['parseMode'],\n        'send_resolved': value['sendResolved'],\n        'token': value['token'],\n        'token_file': value['tokenFile'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GettableGrafanaReceiver\n */\nexport interface GettableGrafanaReceiver {\n    /**\n     * \n     * @type {boolean}\n     * @memberof GettableGrafanaReceiver\n     */\n    disableResolveMessage?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaReceiver\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaReceiver\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof GettableGrafanaReceiver\n     */\n    secureFields?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {object}\n     * @memberof GettableGrafanaReceiver\n     */\n    settings?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaReceiver\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaReceiver\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the GettableGrafanaReceiver interface.\n */\nexport function instanceOfGettableGrafanaReceiver(value: object): value is GettableGrafanaReceiver {\n    return true;\n}\n\nexport function GettableGrafanaReceiverFromJSON(json: any): GettableGrafanaReceiver {\n    return GettableGrafanaReceiverFromJSONTyped(json, false);\n}\n\nexport function GettableGrafanaReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaReceiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'disableResolveMessage': json['disableResolveMessage'] == null ? undefined : json['disableResolveMessage'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'secureFields': json['secureFields'] == null ? undefined : json['secureFields'],\n        'settings': json['settings'] == null ? undefined : json['settings'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function GettableGrafanaReceiverToJSON(json: any): GettableGrafanaReceiver {\n    return GettableGrafanaReceiverToJSONTyped(json, false);\n}\n\nexport function GettableGrafanaReceiverToJSONTyped(value?: GettableGrafanaReceiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'disableResolveMessage': value['disableResolveMessage'],\n        'name': value['name'],\n        'provenance': value['provenance'],\n        'secureFields': value['secureFields'],\n        'settings': value['settings'],\n        'type': value['type'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * SigV4Config is the configuration for signing remote write requests with\n * AWS's SigV4 verification process. Empty values will be retrieved using the\n * AWS default credentials chain.\n * @export\n * @interface SigV4Config\n */\nexport interface SigV4Config {\n    /**\n     * \n     * @type {string}\n     * @memberof SigV4Config\n     */\n    accessKey?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SigV4Config\n     */\n    profile?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SigV4Config\n     */\n    region?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SigV4Config\n     */\n    roleARN?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SigV4Config\n     */\n    secretKey?: string;\n}\n\n/**\n * Check if a given object implements the SigV4Config interface.\n */\nexport function instanceOfSigV4Config(value: object): value is SigV4Config {\n    return true;\n}\n\nexport function SigV4ConfigFromJSON(json: any): SigV4Config {\n    return SigV4ConfigFromJSONTyped(json, false);\n}\n\nexport function SigV4ConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SigV4Config {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessKey': json['AccessKey'] == null ? undefined : json['AccessKey'],\n        'profile': json['Profile'] == null ? undefined : json['Profile'],\n        'region': json['Region'] == null ? undefined : json['Region'],\n        'roleARN': json['RoleARN'] == null ? undefined : json['RoleARN'],\n        'secretKey': json['SecretKey'] == null ? undefined : json['SecretKey'],\n    };\n}\n\nexport function SigV4ConfigToJSON(json: any): SigV4Config {\n    return SigV4ConfigToJSONTyped(json, false);\n}\n\nexport function SigV4ConfigToJSONTyped(value?: SigV4Config | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'AccessKey': value['accessKey'],\n        'Profile': value['profile'],\n        'Region': value['region'],\n        'RoleARN': value['roleARN'],\n        'SecretKey': value['secretKey'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SigV4Config } from './SigV4Config';\nimport {\n    SigV4ConfigFromJSON,\n    SigV4ConfigFromJSONTyped,\n    SigV4ConfigToJSON,\n    SigV4ConfigToJSONTyped,\n} from './SigV4Config';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\n\n/**\n * \n * @export\n * @interface SNSConfig\n */\nexport interface SNSConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    apiUrl?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof SNSConfig\n     */\n    attributes?: { [key: string]: string; };\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof SNSConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    phoneNumber?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SNSConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {SigV4Config}\n     * @memberof SNSConfig\n     */\n    sigv4?: SigV4Config;\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    subject?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    targetArn?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SNSConfig\n     */\n    topicArn?: string;\n}\n\n/**\n * Check if a given object implements the SNSConfig interface.\n */\nexport function instanceOfSNSConfig(value: object): value is SNSConfig {\n    return true;\n}\n\nexport function SNSConfigFromJSON(json: any): SNSConfig {\n    return SNSConfigFromJSONTyped(json, false);\n}\n\nexport function SNSConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SNSConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiUrl': json['api_url'] == null ? undefined : json['api_url'],\n        'attributes': json['attributes'] == null ? undefined : json['attributes'],\n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'sigv4': json['sigv4'] == null ? undefined : SigV4ConfigFromJSON(json['sigv4']),\n        'subject': json['subject'] == null ? undefined : json['subject'],\n        'targetArn': json['target_arn'] == null ? undefined : json['target_arn'],\n        'topicArn': json['topic_arn'] == null ? undefined : json['topic_arn'],\n    };\n}\n\nexport function SNSConfigToJSON(json: any): SNSConfig {\n    return SNSConfigToJSONTyped(json, false);\n}\n\nexport function SNSConfigToJSONTyped(value?: SNSConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'api_url': value['apiUrl'],\n        'attributes': value['attributes'],\n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'message': value['message'],\n        'phone_number': value['phoneNumber'],\n        'send_resolved': value['sendResolved'],\n        'sigv4': SigV4ConfigToJSON(value['sigv4']),\n        'subject': value['subject'],\n        'target_arn': value['targetArn'],\n        'topic_arn': value['topicArn'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { HTTPClientConfig } from './HTTPClientConfig';\nimport {\n    HTTPClientConfigFromJSON,\n    HTTPClientConfigFromJSONTyped,\n    HTTPClientConfigToJSON,\n    HTTPClientConfigToJSONTyped,\n} from './HTTPClientConfig';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface MSTeamsConfig\n */\nexport interface MSTeamsConfig {\n    /**\n     * \n     * @type {HTTPClientConfig}\n     * @memberof MSTeamsConfig\n     */\n    httpConfig?: HTTPClientConfig;\n    /**\n     * \n     * @type {boolean}\n     * @memberof MSTeamsConfig\n     */\n    sendResolved?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof MSTeamsConfig\n     */\n    summary?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MSTeamsConfig\n     */\n    text?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof MSTeamsConfig\n     */\n    title?: string;\n    /**\n     * \n     * @type {URL}\n     * @memberof MSTeamsConfig\n     */\n    webhookUrl?: URL;\n    /**\n     * \n     * @type {string}\n     * @memberof MSTeamsConfig\n     */\n    webhookUrlFile?: string;\n}\n\n/**\n * Check if a given object implements the MSTeamsConfig interface.\n */\nexport function instanceOfMSTeamsConfig(value: object): value is MSTeamsConfig {\n    return true;\n}\n\nexport function MSTeamsConfigFromJSON(json: any): MSTeamsConfig {\n    return MSTeamsConfigFromJSONTyped(json, false);\n}\n\nexport function MSTeamsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): MSTeamsConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'httpConfig': json['http_config'] == null ? undefined : HTTPClientConfigFromJSON(json['http_config']),\n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n        'summary': json['summary'] == null ? undefined : json['summary'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'webhookUrl': json['webhook_url'] == null ? undefined : URLFromJSON(json['webhook_url']),\n        'webhookUrlFile': json['webhook_url_file'] == null ? undefined : json['webhook_url_file'],\n    };\n}\n\nexport function MSTeamsConfigToJSON(json: any): MSTeamsConfig {\n    return MSTeamsConfigToJSONTyped(json, false);\n}\n\nexport function MSTeamsConfigToJSONTyped(value?: MSTeamsConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'http_config': HTTPClientConfigToJSON(value['httpConfig']),\n        'send_resolved': value['sendResolved'],\n        'summary': value['summary'],\n        'text': value['text'],\n        'title': value['title'],\n        'webhook_url': URLToJSON(value['webhookUrl']),\n        'webhook_url_file': value['webhookUrlFile'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { WebexConfig } from './WebexConfig';\nimport {\n    WebexConfigFromJSON,\n    WebexConfigFromJSONTyped,\n    WebexConfigToJSON,\n    WebexConfigToJSONTyped,\n} from './WebexConfig';\nimport type { TelegramConfig } from './TelegramConfig';\nimport {\n    TelegramConfigFromJSON,\n    TelegramConfigFromJSONTyped,\n    TelegramConfigToJSON,\n    TelegramConfigToJSONTyped,\n} from './TelegramConfig';\nimport type { VictorOpsConfig } from './VictorOpsConfig';\nimport {\n    VictorOpsConfigFromJSON,\n    VictorOpsConfigFromJSONTyped,\n    VictorOpsConfigToJSON,\n    VictorOpsConfigToJSONTyped,\n} from './VictorOpsConfig';\nimport type { EmailConfig } from './EmailConfig';\nimport {\n    EmailConfigFromJSON,\n    EmailConfigFromJSONTyped,\n    EmailConfigToJSON,\n    EmailConfigToJSONTyped,\n} from './EmailConfig';\nimport type { GettableGrafanaReceiver } from './GettableGrafanaReceiver';\nimport {\n    GettableGrafanaReceiverFromJSON,\n    GettableGrafanaReceiverFromJSONTyped,\n    GettableGrafanaReceiverToJSON,\n    GettableGrafanaReceiverToJSONTyped,\n} from './GettableGrafanaReceiver';\nimport type { OpsGenieConfig } from './OpsGenieConfig';\nimport {\n    OpsGenieConfigFromJSON,\n    OpsGenieConfigFromJSONTyped,\n    OpsGenieConfigToJSON,\n    OpsGenieConfigToJSONTyped,\n} from './OpsGenieConfig';\nimport type { PagerdutyConfig } from './PagerdutyConfig';\nimport {\n    PagerdutyConfigFromJSON,\n    PagerdutyConfigFromJSONTyped,\n    PagerdutyConfigToJSON,\n    PagerdutyConfigToJSONTyped,\n} from './PagerdutyConfig';\nimport type { SNSConfig } from './SNSConfig';\nimport {\n    SNSConfigFromJSON,\n    SNSConfigFromJSONTyped,\n    SNSConfigToJSON,\n    SNSConfigToJSONTyped,\n} from './SNSConfig';\nimport type { SlackConfig } from './SlackConfig';\nimport {\n    SlackConfigFromJSON,\n    SlackConfigFromJSONTyped,\n    SlackConfigToJSON,\n    SlackConfigToJSONTyped,\n} from './SlackConfig';\nimport type { WebhookConfig } from './WebhookConfig';\nimport {\n    WebhookConfigFromJSON,\n    WebhookConfigFromJSONTyped,\n    WebhookConfigToJSON,\n    WebhookConfigToJSONTyped,\n} from './WebhookConfig';\nimport type { MSTeamsConfig } from './MSTeamsConfig';\nimport {\n    MSTeamsConfigFromJSON,\n    MSTeamsConfigFromJSONTyped,\n    MSTeamsConfigToJSON,\n    MSTeamsConfigToJSONTyped,\n} from './MSTeamsConfig';\nimport type { PushoverConfig } from './PushoverConfig';\nimport {\n    PushoverConfigFromJSON,\n    PushoverConfigFromJSONTyped,\n    PushoverConfigToJSON,\n    PushoverConfigToJSONTyped,\n} from './PushoverConfig';\nimport type { DiscordConfig } from './DiscordConfig';\nimport {\n    DiscordConfigFromJSON,\n    DiscordConfigFromJSONTyped,\n    DiscordConfigToJSON,\n    DiscordConfigToJSONTyped,\n} from './DiscordConfig';\nimport type { WechatConfig } from './WechatConfig';\nimport {\n    WechatConfigFromJSON,\n    WechatConfigFromJSONTyped,\n    WechatConfigToJSON,\n    WechatConfigToJSONTyped,\n} from './WechatConfig';\n\n/**\n * \n * @export\n * @interface GettableApiReceiver\n */\nexport interface GettableApiReceiver {\n    /**\n     * \n     * @type {Array<DiscordConfig>}\n     * @memberof GettableApiReceiver\n     */\n    discordConfigs?: Array<DiscordConfig>;\n    /**\n     * \n     * @type {Array<EmailConfig>}\n     * @memberof GettableApiReceiver\n     */\n    emailConfigs?: Array<EmailConfig>;\n    /**\n     * \n     * @type {Array<GettableGrafanaReceiver>}\n     * @memberof GettableApiReceiver\n     */\n    grafanaManagedReceiverConfigs?: Array<GettableGrafanaReceiver>;\n    /**\n     * \n     * @type {Array<MSTeamsConfig>}\n     * @memberof GettableApiReceiver\n     */\n    msteamsConfigs?: Array<MSTeamsConfig>;\n    /**\n     * A unique identifier for this receiver.\n     * @type {string}\n     * @memberof GettableApiReceiver\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<OpsGenieConfig>}\n     * @memberof GettableApiReceiver\n     */\n    opsgenieConfigs?: Array<OpsGenieConfig>;\n    /**\n     * \n     * @type {Array<PagerdutyConfig>}\n     * @memberof GettableApiReceiver\n     */\n    pagerdutyConfigs?: Array<PagerdutyConfig>;\n    /**\n     * \n     * @type {Array<PushoverConfig>}\n     * @memberof GettableApiReceiver\n     */\n    pushoverConfigs?: Array<PushoverConfig>;\n    /**\n     * \n     * @type {Array<SlackConfig>}\n     * @memberof GettableApiReceiver\n     */\n    slackConfigs?: Array<SlackConfig>;\n    /**\n     * \n     * @type {Array<SNSConfig>}\n     * @memberof GettableApiReceiver\n     */\n    snsConfigs?: Array<SNSConfig>;\n    /**\n     * \n     * @type {Array<TelegramConfig>}\n     * @memberof GettableApiReceiver\n     */\n    telegramConfigs?: Array<TelegramConfig>;\n    /**\n     * \n     * @type {Array<VictorOpsConfig>}\n     * @memberof GettableApiReceiver\n     */\n    victoropsConfigs?: Array<VictorOpsConfig>;\n    /**\n     * \n     * @type {Array<WebexConfig>}\n     * @memberof GettableApiReceiver\n     */\n    webexConfigs?: Array<WebexConfig>;\n    /**\n     * \n     * @type {Array<WebhookConfig>}\n     * @memberof GettableApiReceiver\n     */\n    webhookConfigs?: Array<WebhookConfig>;\n    /**\n     * \n     * @type {Array<WechatConfig>}\n     * @memberof GettableApiReceiver\n     */\n    wechatConfigs?: Array<WechatConfig>;\n}\n\n/**\n * Check if a given object implements the GettableApiReceiver interface.\n */\nexport function instanceOfGettableApiReceiver(value: object): value is GettableApiReceiver {\n    return true;\n}\n\nexport function GettableApiReceiverFromJSON(json: any): GettableApiReceiver {\n    return GettableApiReceiverFromJSONTyped(json, false);\n}\n\nexport function GettableApiReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableApiReceiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'discordConfigs': json['discord_configs'] == null ? undefined : ((json['discord_configs'] as Array<any>).map(DiscordConfigFromJSON)),\n        'emailConfigs': json['email_configs'] == null ? undefined : ((json['email_configs'] as Array<any>).map(EmailConfigFromJSON)),\n        'grafanaManagedReceiverConfigs': json['grafana_managed_receiver_configs'] == null ? undefined : ((json['grafana_managed_receiver_configs'] as Array<any>).map(GettableGrafanaReceiverFromJSON)),\n        'msteamsConfigs': json['msteams_configs'] == null ? undefined : ((json['msteams_configs'] as Array<any>).map(MSTeamsConfigFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n        'opsgenieConfigs': json['opsgenie_configs'] == null ? undefined : ((json['opsgenie_configs'] as Array<any>).map(OpsGenieConfigFromJSON)),\n        'pagerdutyConfigs': json['pagerduty_configs'] == null ? undefined : ((json['pagerduty_configs'] as Array<any>).map(PagerdutyConfigFromJSON)),\n        'pushoverConfigs': json['pushover_configs'] == null ? undefined : ((json['pushover_configs'] as Array<any>).map(PushoverConfigFromJSON)),\n        'slackConfigs': json['slack_configs'] == null ? undefined : ((json['slack_configs'] as Array<any>).map(SlackConfigFromJSON)),\n        'snsConfigs': json['sns_configs'] == null ? undefined : ((json['sns_configs'] as Array<any>).map(SNSConfigFromJSON)),\n        'telegramConfigs': json['telegram_configs'] == null ? undefined : ((json['telegram_configs'] as Array<any>).map(TelegramConfigFromJSON)),\n        'victoropsConfigs': json['victorops_configs'] == null ? undefined : ((json['victorops_configs'] as Array<any>).map(VictorOpsConfigFromJSON)),\n        'webexConfigs': json['webex_configs'] == null ? undefined : ((json['webex_configs'] as Array<any>).map(WebexConfigFromJSON)),\n        'webhookConfigs': json['webhook_configs'] == null ? undefined : ((json['webhook_configs'] as Array<any>).map(WebhookConfigFromJSON)),\n        'wechatConfigs': json['wechat_configs'] == null ? undefined : ((json['wechat_configs'] as Array<any>).map(WechatConfigFromJSON)),\n    };\n}\n\nexport function GettableApiReceiverToJSON(json: any): GettableApiReceiver {\n    return GettableApiReceiverToJSONTyped(json, false);\n}\n\nexport function GettableApiReceiverToJSONTyped(value?: GettableApiReceiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'discord_configs': value['discordConfigs'] == null ? undefined : ((value['discordConfigs'] as Array<any>).map(DiscordConfigToJSON)),\n        'email_configs': value['emailConfigs'] == null ? undefined : ((value['emailConfigs'] as Array<any>).map(EmailConfigToJSON)),\n        'grafana_managed_receiver_configs': value['grafanaManagedReceiverConfigs'] == null ? undefined : ((value['grafanaManagedReceiverConfigs'] as Array<any>).map(GettableGrafanaReceiverToJSON)),\n        'msteams_configs': value['msteamsConfigs'] == null ? undefined : ((value['msteamsConfigs'] as Array<any>).map(MSTeamsConfigToJSON)),\n        'name': value['name'],\n        'opsgenie_configs': value['opsgenieConfigs'] == null ? undefined : ((value['opsgenieConfigs'] as Array<any>).map(OpsGenieConfigToJSON)),\n        'pagerduty_configs': value['pagerdutyConfigs'] == null ? undefined : ((value['pagerdutyConfigs'] as Array<any>).map(PagerdutyConfigToJSON)),\n        'pushover_configs': value['pushoverConfigs'] == null ? undefined : ((value['pushoverConfigs'] as Array<any>).map(PushoverConfigToJSON)),\n        'slack_configs': value['slackConfigs'] == null ? undefined : ((value['slackConfigs'] as Array<any>).map(SlackConfigToJSON)),\n        'sns_configs': value['snsConfigs'] == null ? undefined : ((value['snsConfigs'] as Array<any>).map(SNSConfigToJSON)),\n        'telegram_configs': value['telegramConfigs'] == null ? undefined : ((value['telegramConfigs'] as Array<any>).map(TelegramConfigToJSON)),\n        'victorops_configs': value['victoropsConfigs'] == null ? undefined : ((value['victoropsConfigs'] as Array<any>).map(VictorOpsConfigToJSON)),\n        'webex_configs': value['webexConfigs'] == null ? undefined : ((value['webexConfigs'] as Array<any>).map(WebexConfigToJSON)),\n        'webhook_configs': value['webhookConfigs'] == null ? undefined : ((value['webhookConfigs'] as Array<any>).map(WebhookConfigToJSON)),\n        'wechat_configs': value['wechatConfigs'] == null ? undefined : ((value['wechatConfigs'] as Array<any>).map(WechatConfigToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableApiReceiver } from './GettableApiReceiver';\nimport {\n    GettableApiReceiverFromJSON,\n    GettableApiReceiverFromJSONTyped,\n    GettableApiReceiverToJSON,\n    GettableApiReceiverToJSONTyped,\n} from './GettableApiReceiver';\nimport type { InhibitRule } from './InhibitRule';\nimport {\n    InhibitRuleFromJSON,\n    InhibitRuleFromJSONTyped,\n    InhibitRuleToJSON,\n    InhibitRuleToJSONTyped,\n} from './InhibitRule';\nimport type { MuteTimeInterval } from './MuteTimeInterval';\nimport {\n    MuteTimeIntervalFromJSON,\n    MuteTimeIntervalFromJSONTyped,\n    MuteTimeIntervalToJSON,\n    MuteTimeIntervalToJSONTyped,\n} from './MuteTimeInterval';\nimport type { TimeInterval } from './TimeInterval';\nimport {\n    TimeIntervalFromJSON,\n    TimeIntervalFromJSONTyped,\n    TimeIntervalToJSON,\n    TimeIntervalToJSONTyped,\n} from './TimeInterval';\nimport type { GlobalConfig } from './GlobalConfig';\nimport {\n    GlobalConfigFromJSON,\n    GlobalConfigFromJSONTyped,\n    GlobalConfigToJSON,\n    GlobalConfigToJSONTyped,\n} from './GlobalConfig';\nimport type { Route } from './Route';\nimport {\n    RouteFromJSON,\n    RouteFromJSONTyped,\n    RouteToJSON,\n    RouteToJSONTyped,\n} from './Route';\n\n/**\n * \n * @export\n * @interface GettableApiAlertingConfig\n */\nexport interface GettableApiAlertingConfig {\n    /**\n     * \n     * @type {GlobalConfig}\n     * @memberof GettableApiAlertingConfig\n     */\n    global?: GlobalConfig;\n    /**\n     * \n     * @type {Array<InhibitRule>}\n     * @memberof GettableApiAlertingConfig\n     */\n    inhibitRules?: Array<InhibitRule>;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableApiAlertingConfig\n     */\n    muteTimeProvenances?: { [key: string]: string; };\n    /**\n     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.\n     * @type {Array<MuteTimeInterval>}\n     * @memberof GettableApiAlertingConfig\n     */\n    muteTimeIntervals?: Array<MuteTimeInterval>;\n    /**\n     * Override with our superset receiver type\n     * @type {Array<GettableApiReceiver>}\n     * @memberof GettableApiAlertingConfig\n     */\n    receivers?: Array<GettableApiReceiver>;\n    /**\n     * \n     * @type {Route}\n     * @memberof GettableApiAlertingConfig\n     */\n    route?: Route;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof GettableApiAlertingConfig\n     */\n    templates?: Array<string>;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof GettableApiAlertingConfig\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the GettableApiAlertingConfig interface.\n */\nexport function instanceOfGettableApiAlertingConfig(value: object): value is GettableApiAlertingConfig {\n    return true;\n}\n\nexport function GettableApiAlertingConfigFromJSON(json: any): GettableApiAlertingConfig {\n    return GettableApiAlertingConfigFromJSONTyped(json, false);\n}\n\nexport function GettableApiAlertingConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableApiAlertingConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'global': json['global'] == null ? undefined : GlobalConfigFromJSON(json['global']),\n        'inhibitRules': json['inhibit_rules'] == null ? undefined : ((json['inhibit_rules'] as Array<any>).map(InhibitRuleFromJSON)),\n        'muteTimeProvenances': json['muteTimeProvenances'] == null ? undefined : json['muteTimeProvenances'],\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : ((json['mute_time_intervals'] as Array<any>).map(MuteTimeIntervalFromJSON)),\n        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(GettableApiReceiverFromJSON)),\n        'route': json['route'] == null ? undefined : RouteFromJSON(json['route']),\n        'templates': json['templates'] == null ? undefined : json['templates'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function GettableApiAlertingConfigToJSON(json: any): GettableApiAlertingConfig {\n    return GettableApiAlertingConfigToJSONTyped(json, false);\n}\n\nexport function GettableApiAlertingConfigToJSONTyped(value?: GettableApiAlertingConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'global': GlobalConfigToJSON(value['global']),\n        'inhibit_rules': value['inhibitRules'] == null ? undefined : ((value['inhibitRules'] as Array<any>).map(InhibitRuleToJSON)),\n        'muteTimeProvenances': value['muteTimeProvenances'],\n        'mute_time_intervals': value['muteTimeIntervals'] == null ? undefined : ((value['muteTimeIntervals'] as Array<any>).map(MuteTimeIntervalToJSON)),\n        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(GettableApiReceiverToJSON)),\n        'route': RouteToJSON(value['route']),\n        'templates': value['templates'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\nimport type { AlertRuleNotificationSettings } from './AlertRuleNotificationSettings';\nimport {\n    AlertRuleNotificationSettingsFromJSON,\n    AlertRuleNotificationSettingsFromJSONTyped,\n    AlertRuleNotificationSettingsToJSON,\n    AlertRuleNotificationSettingsToJSONTyped,\n} from './AlertRuleNotificationSettings';\nimport type { AlertRuleMetadata } from './AlertRuleMetadata';\nimport {\n    AlertRuleMetadataFromJSON,\n    AlertRuleMetadataFromJSONTyped,\n    AlertRuleMetadataToJSON,\n    AlertRuleMetadataToJSONTyped,\n} from './AlertRuleMetadata';\nimport type { Record } from './Record';\nimport {\n    RecordFromJSON,\n    RecordFromJSONTyped,\n    RecordToJSON,\n    RecordToJSONTyped,\n} from './Record';\n\n/**\n * \n * @export\n * @interface GettableGrafanaRule\n */\nexport interface GettableGrafanaRule {\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    condition?: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof GettableGrafanaRule\n     */\n    data?: Array<AlertQuery>;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    execErrState?: GettableGrafanaRuleExecErrStateEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableGrafanaRule\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableGrafanaRule\n     */\n    intervalSeconds?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof GettableGrafanaRule\n     */\n    isPaused?: boolean;\n    /**\n     * \n     * @type {AlertRuleMetadata}\n     * @memberof GettableGrafanaRule\n     */\n    metadata?: AlertRuleMetadata;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    namespaceUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    noDataState?: GettableGrafanaRuleNoDataStateEnum;\n    /**\n     * \n     * @type {AlertRuleNotificationSettings}\n     * @memberof GettableGrafanaRule\n     */\n    notificationSettings?: AlertRuleNotificationSettings;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableGrafanaRule\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {Record}\n     * @memberof GettableGrafanaRule\n     */\n    record?: Record;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    ruleGroup?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableGrafanaRule\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof GettableGrafanaRule\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableGrafanaRule\n     */\n    version?: number;\n}\n\n\n/**\n * @export\n */\nexport const GettableGrafanaRuleExecErrStateEnum = {\n    Ok: 'OK',\n    Alerting: 'Alerting',\n    Error: 'Error'\n} as const;\nexport type GettableGrafanaRuleExecErrStateEnum = typeof GettableGrafanaRuleExecErrStateEnum[keyof typeof GettableGrafanaRuleExecErrStateEnum];\n\n/**\n * @export\n */\nexport const GettableGrafanaRuleNoDataStateEnum = {\n    Alerting: 'Alerting',\n    NoData: 'NoData',\n    Ok: 'OK'\n} as const;\nexport type GettableGrafanaRuleNoDataStateEnum = typeof GettableGrafanaRuleNoDataStateEnum[keyof typeof GettableGrafanaRuleNoDataStateEnum];\n\n\n/**\n * Check if a given object implements the GettableGrafanaRule interface.\n */\nexport function instanceOfGettableGrafanaRule(value: object): value is GettableGrafanaRule {\n    return true;\n}\n\nexport function GettableGrafanaRuleFromJSON(json: any): GettableGrafanaRule {\n    return GettableGrafanaRuleFromJSONTyped(json, false);\n}\n\nexport function GettableGrafanaRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        'execErrState': json['exec_err_state'] == null ? undefined : json['exec_err_state'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'intervalSeconds': json['intervalSeconds'] == null ? undefined : json['intervalSeconds'],\n        'isPaused': json['is_paused'] == null ? undefined : json['is_paused'],\n        'metadata': json['metadata'] == null ? undefined : AlertRuleMetadataFromJSON(json['metadata']),\n        'namespaceUid': json['namespace_uid'] == null ? undefined : json['namespace_uid'],\n        'noDataState': json['no_data_state'] == null ? undefined : json['no_data_state'],\n        'notificationSettings': json['notification_settings'] == null ? undefined : AlertRuleNotificationSettingsFromJSON(json['notification_settings']),\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'record': json['record'] == null ? undefined : RecordFromJSON(json['record']),\n        'ruleGroup': json['rule_group'] == null ? undefined : json['rule_group'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function GettableGrafanaRuleToJSON(json: any): GettableGrafanaRule {\n    return GettableGrafanaRuleToJSONTyped(json, false);\n}\n\nexport function GettableGrafanaRuleToJSONTyped(value?: GettableGrafanaRule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'condition': value['condition'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'exec_err_state': value['execErrState'],\n        'id': value['id'],\n        'intervalSeconds': value['intervalSeconds'],\n        'is_paused': value['isPaused'],\n        'metadata': AlertRuleMetadataToJSON(value['metadata']),\n        'namespace_uid': value['namespaceUid'],\n        'no_data_state': value['noDataState'],\n        'notification_settings': AlertRuleNotificationSettingsToJSON(value['notificationSettings']),\n        'orgId': value['orgId'],\n        'provenance': value['provenance'],\n        'record': RecordToJSON(value['record']),\n        'rule_group': value['ruleGroup'],\n        'title': value['title'],\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableGrafanaRule } from './GettableGrafanaRule';\nimport {\n    GettableGrafanaRuleFromJSON,\n    GettableGrafanaRuleFromJSONTyped,\n    GettableGrafanaRuleToJSON,\n    GettableGrafanaRuleToJSONTyped,\n} from './GettableGrafanaRule';\n\n/**\n * \n * @export\n * @interface GettableExtendedRuleNode\n */\nexport interface GettableExtendedRuleNode {\n    /**\n     * \n     * @type {string}\n     * @memberof GettableExtendedRuleNode\n     */\n    alert?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableExtendedRuleNode\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof GettableExtendedRuleNode\n     */\n    expr?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableExtendedRuleNode\n     */\n    _for?: string;\n    /**\n     * \n     * @type {GettableGrafanaRule}\n     * @memberof GettableExtendedRuleNode\n     */\n    grafanaAlert?: GettableGrafanaRule;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableExtendedRuleNode\n     */\n    keepFiringFor?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableExtendedRuleNode\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof GettableExtendedRuleNode\n     */\n    record?: string;\n}\n\n/**\n * Check if a given object implements the GettableExtendedRuleNode interface.\n */\nexport function instanceOfGettableExtendedRuleNode(value: object): value is GettableExtendedRuleNode {\n    return true;\n}\n\nexport function GettableExtendedRuleNodeFromJSON(json: any): GettableExtendedRuleNode {\n    return GettableExtendedRuleNodeFromJSONTyped(json, false);\n}\n\nexport function GettableExtendedRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableExtendedRuleNode {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alert': json['alert'] == null ? undefined : json['alert'],\n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'expr': json['expr'] == null ? undefined : json['expr'],\n        '_for': json['for'] == null ? undefined : json['for'],\n        'grafanaAlert': json['grafana_alert'] == null ? undefined : GettableGrafanaRuleFromJSON(json['grafana_alert']),\n        'keepFiringFor': json['keep_firing_for'] == null ? undefined : json['keep_firing_for'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'record': json['record'] == null ? undefined : json['record'],\n    };\n}\n\nexport function GettableExtendedRuleNodeToJSON(json: any): GettableExtendedRuleNode {\n    return GettableExtendedRuleNodeToJSONTyped(json, false);\n}\n\nexport function GettableExtendedRuleNodeToJSONTyped(value?: GettableExtendedRuleNode | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alert': value['alert'],\n        'annotations': value['annotations'],\n        'expr': value['expr'],\n        'for': value['_for'],\n        'grafana_alert': GettableGrafanaRuleToJSON(value['grafanaAlert']),\n        'keep_firing_for': value['keepFiringFor'],\n        'labels': value['labels'],\n        'record': value['record'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableGrafanaReceiver } from './GettableGrafanaReceiver';\nimport {\n    GettableGrafanaReceiverFromJSON,\n    GettableGrafanaReceiverFromJSONTyped,\n    GettableGrafanaReceiverToJSON,\n    GettableGrafanaReceiverToJSONTyped,\n} from './GettableGrafanaReceiver';\n\n/**\n * \n * @export\n * @interface GettableGrafanaReceivers\n */\nexport interface GettableGrafanaReceivers {\n    /**\n     * \n     * @type {Array<GettableGrafanaReceiver>}\n     * @memberof GettableGrafanaReceivers\n     */\n    grafanaManagedReceiverConfigs?: Array<GettableGrafanaReceiver>;\n}\n\n/**\n * Check if a given object implements the GettableGrafanaReceivers interface.\n */\nexport function instanceOfGettableGrafanaReceivers(value: object): value is GettableGrafanaReceivers {\n    return true;\n}\n\nexport function GettableGrafanaReceiversFromJSON(json: any): GettableGrafanaReceivers {\n    return GettableGrafanaReceiversFromJSONTyped(json, false);\n}\n\nexport function GettableGrafanaReceiversFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaReceivers {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'grafanaManagedReceiverConfigs': json['grafana_managed_receiver_configs'] == null ? undefined : ((json['grafana_managed_receiver_configs'] as Array<any>).map(GettableGrafanaReceiverFromJSON)),\n    };\n}\n\nexport function GettableGrafanaReceiversToJSON(json: any): GettableGrafanaReceivers {\n    return GettableGrafanaReceiversToJSONTyped(json, false);\n}\n\nexport function GettableGrafanaReceiversToJSONTyped(value?: GettableGrafanaReceivers | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'grafana_managed_receiver_configs': value['grafanaManagedReceiverConfigs'] == null ? undefined : ((value['grafanaManagedReceiverConfigs'] as Array<any>).map(GettableGrafanaReceiverToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * SilenceStatus silence status\n * @export\n * @interface SilenceStatus\n */\nexport interface SilenceStatus {\n    /**\n     * state\n     * @type {string}\n     * @memberof SilenceStatus\n     */\n    state: SilenceStatusStateEnum;\n}\n\n\n/**\n * @export\n */\nexport const SilenceStatusStateEnum = {\n    ExpiredActivePending: '[expired active pending]'\n} as const;\nexport type SilenceStatusStateEnum = typeof SilenceStatusStateEnum[keyof typeof SilenceStatusStateEnum];\n\n\n/**\n * Check if a given object implements the SilenceStatus interface.\n */\nexport function instanceOfSilenceStatus(value: object): value is SilenceStatus {\n    if (!('state' in value) || value['state'] === undefined) return false;\n    return true;\n}\n\nexport function SilenceStatusFromJSON(json: any): SilenceStatus {\n    return SilenceStatusFromJSONTyped(json, false);\n}\n\nexport function SilenceStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): SilenceStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'state': json['state'],\n    };\n}\n\nexport function SilenceStatusToJSON(json: any): SilenceStatus {\n    return SilenceStatusToJSONTyped(json, false);\n}\n\nexport function SilenceStatusToJSONTyped(value?: SilenceStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'state': value['state'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SilenceMetadata\n */\nexport interface SilenceMetadata {\n    /**\n     * \n     * @type {string}\n     * @memberof SilenceMetadata\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SilenceMetadata\n     */\n    ruleTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SilenceMetadata\n     */\n    ruleUid?: string;\n}\n\n/**\n * Check if a given object implements the SilenceMetadata interface.\n */\nexport function instanceOfSilenceMetadata(value: object): value is SilenceMetadata {\n    return true;\n}\n\nexport function SilenceMetadataFromJSON(json: any): SilenceMetadata {\n    return SilenceMetadataFromJSONTyped(json, false);\n}\n\nexport function SilenceMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SilenceMetadata {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderUid': json['folder_uid'] == null ? undefined : json['folder_uid'],\n        'ruleTitle': json['rule_title'] == null ? undefined : json['rule_title'],\n        'ruleUid': json['rule_uid'] == null ? undefined : json['rule_uid'],\n    };\n}\n\nexport function SilenceMetadataToJSON(json: any): SilenceMetadata {\n    return SilenceMetadataToJSONTyped(json, false);\n}\n\nexport function SilenceMetadataToJSONTyped(value?: SilenceMetadata | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folder_uid': value['folderUid'],\n        'rule_title': value['ruleTitle'],\n        'rule_uid': value['ruleUid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SilenceStatus } from './SilenceStatus';\nimport {\n    SilenceStatusFromJSON,\n    SilenceStatusFromJSONTyped,\n    SilenceStatusToJSON,\n    SilenceStatusToJSONTyped,\n} from './SilenceStatus';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\nimport type { SilenceMetadata } from './SilenceMetadata';\nimport {\n    SilenceMetadataFromJSON,\n    SilenceMetadataFromJSONTyped,\n    SilenceMetadataToJSON,\n    SilenceMetadataToJSONTyped,\n} from './SilenceMetadata';\n\n/**\n * \n * @export\n * @interface GettableGrafanaSilence\n */\nexport interface GettableGrafanaSilence {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof GettableGrafanaSilence\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * comment\n     * @type {string}\n     * @memberof GettableGrafanaSilence\n     */\n    comment: string;\n    /**\n     * created by\n     * @type {string}\n     * @memberof GettableGrafanaSilence\n     */\n    createdBy: string;\n    /**\n     * ends at\n     * @type {Date}\n     * @memberof GettableGrafanaSilence\n     */\n    endsAt: Date;\n    /**\n     * id\n     * @type {string}\n     * @memberof GettableGrafanaSilence\n     */\n    id: string;\n    /**\n     * Matchers matchers\n     * @type {Array<Matcher>}\n     * @memberof GettableGrafanaSilence\n     */\n    matchers: Array<Matcher>;\n    /**\n     * \n     * @type {SilenceMetadata}\n     * @memberof GettableGrafanaSilence\n     */\n    metadata?: SilenceMetadata;\n    /**\n     * starts at\n     * @type {Date}\n     * @memberof GettableGrafanaSilence\n     */\n    startsAt: Date;\n    /**\n     * \n     * @type {SilenceStatus}\n     * @memberof GettableGrafanaSilence\n     */\n    status: SilenceStatus;\n    /**\n     * updated at\n     * @type {Date}\n     * @memberof GettableGrafanaSilence\n     */\n    updatedAt: Date;\n}\n\n/**\n * Check if a given object implements the GettableGrafanaSilence interface.\n */\nexport function instanceOfGettableGrafanaSilence(value: object): value is GettableGrafanaSilence {\n    if (!('comment' in value) || value['comment'] === undefined) return false;\n    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;\n    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('matchers' in value) || value['matchers'] === undefined) return false;\n    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;\n    if (!('status' in value) || value['status'] === undefined) return false;\n    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;\n    return true;\n}\n\nexport function GettableGrafanaSilenceFromJSON(json: any): GettableGrafanaSilence {\n    return GettableGrafanaSilenceFromJSONTyped(json, false);\n}\n\nexport function GettableGrafanaSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableGrafanaSilence {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'comment': json['comment'],\n        'createdBy': json['createdBy'],\n        'endsAt': (new Date(json['endsAt'])),\n        'id': json['id'],\n        'matchers': ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'metadata': json['metadata'] == null ? undefined : SilenceMetadataFromJSON(json['metadata']),\n        'startsAt': (new Date(json['startsAt'])),\n        'status': SilenceStatusFromJSON(json['status']),\n        'updatedAt': (new Date(json['updatedAt'])),\n    };\n}\n\nexport function GettableGrafanaSilenceToJSON(json: any): GettableGrafanaSilence {\n    return GettableGrafanaSilenceToJSONTyped(json, false);\n}\n\nexport function GettableGrafanaSilenceToJSONTyped(value?: GettableGrafanaSilence | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'comment': value['comment'],\n        'createdBy': value['createdBy'],\n        'endsAt': ((value['endsAt']).toISOString()),\n        'id': value['id'],\n        'matchers': ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'metadata': SilenceMetadataToJSON(value['metadata']),\n        'startsAt': ((value['startsAt']).toISOString()),\n        'status': SilenceStatusToJSON(value['status']),\n        'updatedAt': ((value['updatedAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableApiAlertingConfig } from './GettableApiAlertingConfig';\nimport {\n    GettableApiAlertingConfigFromJSON,\n    GettableApiAlertingConfigFromJSONTyped,\n    GettableApiAlertingConfigToJSON,\n    GettableApiAlertingConfigToJSONTyped,\n} from './GettableApiAlertingConfig';\n\n/**\n * \n * @export\n * @interface GettableHistoricUserConfig\n */\nexport interface GettableHistoricUserConfig {\n    /**\n     * \n     * @type {GettableApiAlertingConfig}\n     * @memberof GettableHistoricUserConfig\n     */\n    alertmanagerConfig?: GettableApiAlertingConfig;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableHistoricUserConfig\n     */\n    id?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof GettableHistoricUserConfig\n     */\n    lastApplied?: Date;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableHistoricUserConfig\n     */\n    templateFileProvenances?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableHistoricUserConfig\n     */\n    templateFiles?: { [key: string]: string; };\n}\n\n/**\n * Check if a given object implements the GettableHistoricUserConfig interface.\n */\nexport function instanceOfGettableHistoricUserConfig(value: object): value is GettableHistoricUserConfig {\n    return true;\n}\n\nexport function GettableHistoricUserConfigFromJSON(json: any): GettableHistoricUserConfig {\n    return GettableHistoricUserConfigFromJSONTyped(json, false);\n}\n\nexport function GettableHistoricUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableHistoricUserConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagerConfig': json['alertmanager_config'] == null ? undefined : GettableApiAlertingConfigFromJSON(json['alertmanager_config']),\n        'id': json['id'] == null ? undefined : json['id'],\n        'lastApplied': json['last_applied'] == null ? undefined : (new Date(json['last_applied'])),\n        'templateFileProvenances': json['template_file_provenances'] == null ? undefined : json['template_file_provenances'],\n        'templateFiles': json['template_files'] == null ? undefined : json['template_files'],\n    };\n}\n\nexport function GettableHistoricUserConfigToJSON(json: any): GettableHistoricUserConfig {\n    return GettableHistoricUserConfigToJSONTyped(json, false);\n}\n\nexport function GettableHistoricUserConfigToJSONTyped(value?: GettableHistoricUserConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanager_config': GettableApiAlertingConfigToJSON(value['alertmanagerConfig']),\n        'id': value['id'],\n        'last_applied': value['lastApplied'] == null ? undefined : ((value['lastApplied']).toISOString()),\n        'template_file_provenances': value['templateFileProvenances'],\n        'template_files': value['templateFiles'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface GettableNGalertConfig\n */\nexport interface GettableNGalertConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof GettableNGalertConfig\n     */\n    alertmanagersChoice?: GettableNGalertConfigAlertmanagersChoiceEnum;\n}\n\n\n/**\n * @export\n */\nexport const GettableNGalertConfigAlertmanagersChoiceEnum = {\n    All: 'all',\n    Internal: 'internal',\n    External: 'external'\n} as const;\nexport type GettableNGalertConfigAlertmanagersChoiceEnum = typeof GettableNGalertConfigAlertmanagersChoiceEnum[keyof typeof GettableNGalertConfigAlertmanagersChoiceEnum];\n\n\n/**\n * Check if a given object implements the GettableNGalertConfig interface.\n */\nexport function instanceOfGettableNGalertConfig(value: object): value is GettableNGalertConfig {\n    return true;\n}\n\nexport function GettableNGalertConfigFromJSON(json: any): GettableNGalertConfig {\n    return GettableNGalertConfigFromJSONTyped(json, false);\n}\n\nexport function GettableNGalertConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableNGalertConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagersChoice': json['alertmanagersChoice'] == null ? undefined : json['alertmanagersChoice'],\n    };\n}\n\nexport function GettableNGalertConfigToJSON(json: any): GettableNGalertConfig {\n    return GettableNGalertConfigToJSONTyped(json, false);\n}\n\nexport function GettableNGalertConfigToJSONTyped(value?: GettableNGalertConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanagersChoice': value['alertmanagersChoice'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableExtendedRuleNode } from './GettableExtendedRuleNode';\nimport {\n    GettableExtendedRuleNodeFromJSON,\n    GettableExtendedRuleNodeFromJSONTyped,\n    GettableExtendedRuleNodeToJSON,\n    GettableExtendedRuleNodeToJSONTyped,\n} from './GettableExtendedRuleNode';\n\n/**\n * \n * @export\n * @interface GettableRuleGroupConfig\n */\nexport interface GettableRuleGroupConfig {\n    /**\n     * \n     * @type {boolean}\n     * @memberof GettableRuleGroupConfig\n     */\n    alignEvaluationTimeOnInterval?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableRuleGroupConfig\n     */\n    evaluationDelay?: string;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof GettableRuleGroupConfig\n     */\n    interval?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof GettableRuleGroupConfig\n     */\n    limit?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableRuleGroupConfig\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableRuleGroupConfig\n     */\n    queryOffset?: string;\n    /**\n     * \n     * @type {Array<GettableExtendedRuleNode>}\n     * @memberof GettableRuleGroupConfig\n     */\n    rules?: Array<GettableExtendedRuleNode>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof GettableRuleGroupConfig\n     */\n    sourceTenants?: Array<string>;\n}\n\n/**\n * Check if a given object implements the GettableRuleGroupConfig interface.\n */\nexport function instanceOfGettableRuleGroupConfig(value: object): value is GettableRuleGroupConfig {\n    return true;\n}\n\nexport function GettableRuleGroupConfigFromJSON(json: any): GettableRuleGroupConfig {\n    return GettableRuleGroupConfigFromJSONTyped(json, false);\n}\n\nexport function GettableRuleGroupConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableRuleGroupConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alignEvaluationTimeOnInterval': json['align_evaluation_time_on_interval'] == null ? undefined : json['align_evaluation_time_on_interval'],\n        'evaluationDelay': json['evaluation_delay'] == null ? undefined : json['evaluation_delay'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'queryOffset': json['query_offset'] == null ? undefined : json['query_offset'],\n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(GettableExtendedRuleNodeFromJSON)),\n        'sourceTenants': json['source_tenants'] == null ? undefined : json['source_tenants'],\n    };\n}\n\nexport function GettableRuleGroupConfigToJSON(json: any): GettableRuleGroupConfig {\n    return GettableRuleGroupConfigToJSONTyped(json, false);\n}\n\nexport function GettableRuleGroupConfigToJSONTyped(value?: GettableRuleGroupConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'align_evaluation_time_on_interval': value['alignEvaluationTimeOnInterval'],\n        'evaluation_delay': value['evaluationDelay'],\n        'interval': value['interval'],\n        'limit': value['limit'],\n        'name': value['name'],\n        'query_offset': value['queryOffset'],\n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(GettableExtendedRuleNodeToJSON)),\n        'source_tenants': value['sourceTenants'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SilenceStatus } from './SilenceStatus';\nimport {\n    SilenceStatusFromJSON,\n    SilenceStatusFromJSONTyped,\n    SilenceStatusToJSON,\n    SilenceStatusToJSONTyped,\n} from './SilenceStatus';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * GettableSilence gettable silence\n * @export\n * @interface GettableSilence\n */\nexport interface GettableSilence {\n    /**\n     * comment\n     * @type {string}\n     * @memberof GettableSilence\n     */\n    comment: string;\n    /**\n     * created by\n     * @type {string}\n     * @memberof GettableSilence\n     */\n    createdBy: string;\n    /**\n     * ends at\n     * @type {Date}\n     * @memberof GettableSilence\n     */\n    endsAt: Date;\n    /**\n     * id\n     * @type {string}\n     * @memberof GettableSilence\n     */\n    id: string;\n    /**\n     * Matchers matchers\n     * @type {Array<Matcher>}\n     * @memberof GettableSilence\n     */\n    matchers: Array<Matcher>;\n    /**\n     * starts at\n     * @type {Date}\n     * @memberof GettableSilence\n     */\n    startsAt: Date;\n    /**\n     * \n     * @type {SilenceStatus}\n     * @memberof GettableSilence\n     */\n    status: SilenceStatus;\n    /**\n     * updated at\n     * @type {Date}\n     * @memberof GettableSilence\n     */\n    updatedAt: Date;\n}\n\n/**\n * Check if a given object implements the GettableSilence interface.\n */\nexport function instanceOfGettableSilence(value: object): value is GettableSilence {\n    if (!('comment' in value) || value['comment'] === undefined) return false;\n    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;\n    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('matchers' in value) || value['matchers'] === undefined) return false;\n    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;\n    if (!('status' in value) || value['status'] === undefined) return false;\n    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;\n    return true;\n}\n\nexport function GettableSilenceFromJSON(json: any): GettableSilence {\n    return GettableSilenceFromJSONTyped(json, false);\n}\n\nexport function GettableSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableSilence {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'comment': json['comment'],\n        'createdBy': json['createdBy'],\n        'endsAt': (new Date(json['endsAt'])),\n        'id': json['id'],\n        'matchers': ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'startsAt': (new Date(json['startsAt'])),\n        'status': SilenceStatusFromJSON(json['status']),\n        'updatedAt': (new Date(json['updatedAt'])),\n    };\n}\n\nexport function GettableSilenceToJSON(json: any): GettableSilence {\n    return GettableSilenceToJSONTyped(json, false);\n}\n\nexport function GettableSilenceToJSONTyped(value?: GettableSilence | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'comment': value['comment'],\n        'createdBy': value['createdBy'],\n        'endsAt': ((value['endsAt']).toISOString()),\n        'id': value['id'],\n        'matchers': ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'startsAt': ((value['startsAt']).toISOString()),\n        'status': SilenceStatusToJSON(value['status']),\n        'updatedAt': ((value['updatedAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableGrafanaReceiver } from './PostableGrafanaReceiver';\nimport {\n    PostableGrafanaReceiverFromJSON,\n    PostableGrafanaReceiverFromJSONTyped,\n    PostableGrafanaReceiverToJSON,\n    PostableGrafanaReceiverToJSONTyped,\n} from './PostableGrafanaReceiver';\nimport type { WebexConfig } from './WebexConfig';\nimport {\n    WebexConfigFromJSON,\n    WebexConfigFromJSONTyped,\n    WebexConfigToJSON,\n    WebexConfigToJSONTyped,\n} from './WebexConfig';\nimport type { TelegramConfig } from './TelegramConfig';\nimport {\n    TelegramConfigFromJSON,\n    TelegramConfigFromJSONTyped,\n    TelegramConfigToJSON,\n    TelegramConfigToJSONTyped,\n} from './TelegramConfig';\nimport type { VictorOpsConfig } from './VictorOpsConfig';\nimport {\n    VictorOpsConfigFromJSON,\n    VictorOpsConfigFromJSONTyped,\n    VictorOpsConfigToJSON,\n    VictorOpsConfigToJSONTyped,\n} from './VictorOpsConfig';\nimport type { EmailConfig } from './EmailConfig';\nimport {\n    EmailConfigFromJSON,\n    EmailConfigFromJSONTyped,\n    EmailConfigToJSON,\n    EmailConfigToJSONTyped,\n} from './EmailConfig';\nimport type { OpsGenieConfig } from './OpsGenieConfig';\nimport {\n    OpsGenieConfigFromJSON,\n    OpsGenieConfigFromJSONTyped,\n    OpsGenieConfigToJSON,\n    OpsGenieConfigToJSONTyped,\n} from './OpsGenieConfig';\nimport type { PagerdutyConfig } from './PagerdutyConfig';\nimport {\n    PagerdutyConfigFromJSON,\n    PagerdutyConfigFromJSONTyped,\n    PagerdutyConfigToJSON,\n    PagerdutyConfigToJSONTyped,\n} from './PagerdutyConfig';\nimport type { SNSConfig } from './SNSConfig';\nimport {\n    SNSConfigFromJSON,\n    SNSConfigFromJSONTyped,\n    SNSConfigToJSON,\n    SNSConfigToJSONTyped,\n} from './SNSConfig';\nimport type { SlackConfig } from './SlackConfig';\nimport {\n    SlackConfigFromJSON,\n    SlackConfigFromJSONTyped,\n    SlackConfigToJSON,\n    SlackConfigToJSONTyped,\n} from './SlackConfig';\nimport type { WebhookConfig } from './WebhookConfig';\nimport {\n    WebhookConfigFromJSON,\n    WebhookConfigFromJSONTyped,\n    WebhookConfigToJSON,\n    WebhookConfigToJSONTyped,\n} from './WebhookConfig';\nimport type { MSTeamsConfig } from './MSTeamsConfig';\nimport {\n    MSTeamsConfigFromJSON,\n    MSTeamsConfigFromJSONTyped,\n    MSTeamsConfigToJSON,\n    MSTeamsConfigToJSONTyped,\n} from './MSTeamsConfig';\nimport type { PushoverConfig } from './PushoverConfig';\nimport {\n    PushoverConfigFromJSON,\n    PushoverConfigFromJSONTyped,\n    PushoverConfigToJSON,\n    PushoverConfigToJSONTyped,\n} from './PushoverConfig';\nimport type { DiscordConfig } from './DiscordConfig';\nimport {\n    DiscordConfigFromJSON,\n    DiscordConfigFromJSONTyped,\n    DiscordConfigToJSON,\n    DiscordConfigToJSONTyped,\n} from './DiscordConfig';\nimport type { WechatConfig } from './WechatConfig';\nimport {\n    WechatConfigFromJSON,\n    WechatConfigFromJSONTyped,\n    WechatConfigToJSON,\n    WechatConfigToJSONTyped,\n} from './WechatConfig';\n\n/**\n * nolint:revive\n * @export\n * @interface PostableApiReceiver\n */\nexport interface PostableApiReceiver {\n    /**\n     * \n     * @type {Array<DiscordConfig>}\n     * @memberof PostableApiReceiver\n     */\n    discordConfigs?: Array<DiscordConfig>;\n    /**\n     * \n     * @type {Array<EmailConfig>}\n     * @memberof PostableApiReceiver\n     */\n    emailConfigs?: Array<EmailConfig>;\n    /**\n     * \n     * @type {Array<PostableGrafanaReceiver>}\n     * @memberof PostableApiReceiver\n     */\n    grafanaManagedReceiverConfigs?: Array<PostableGrafanaReceiver>;\n    /**\n     * \n     * @type {Array<MSTeamsConfig>}\n     * @memberof PostableApiReceiver\n     */\n    msteamsConfigs?: Array<MSTeamsConfig>;\n    /**\n     * A unique identifier for this receiver.\n     * @type {string}\n     * @memberof PostableApiReceiver\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<OpsGenieConfig>}\n     * @memberof PostableApiReceiver\n     */\n    opsgenieConfigs?: Array<OpsGenieConfig>;\n    /**\n     * \n     * @type {Array<PagerdutyConfig>}\n     * @memberof PostableApiReceiver\n     */\n    pagerdutyConfigs?: Array<PagerdutyConfig>;\n    /**\n     * \n     * @type {Array<PushoverConfig>}\n     * @memberof PostableApiReceiver\n     */\n    pushoverConfigs?: Array<PushoverConfig>;\n    /**\n     * \n     * @type {Array<SlackConfig>}\n     * @memberof PostableApiReceiver\n     */\n    slackConfigs?: Array<SlackConfig>;\n    /**\n     * \n     * @type {Array<SNSConfig>}\n     * @memberof PostableApiReceiver\n     */\n    snsConfigs?: Array<SNSConfig>;\n    /**\n     * \n     * @type {Array<TelegramConfig>}\n     * @memberof PostableApiReceiver\n     */\n    telegramConfigs?: Array<TelegramConfig>;\n    /**\n     * \n     * @type {Array<VictorOpsConfig>}\n     * @memberof PostableApiReceiver\n     */\n    victoropsConfigs?: Array<VictorOpsConfig>;\n    /**\n     * \n     * @type {Array<WebexConfig>}\n     * @memberof PostableApiReceiver\n     */\n    webexConfigs?: Array<WebexConfig>;\n    /**\n     * \n     * @type {Array<WebhookConfig>}\n     * @memberof PostableApiReceiver\n     */\n    webhookConfigs?: Array<WebhookConfig>;\n    /**\n     * \n     * @type {Array<WechatConfig>}\n     * @memberof PostableApiReceiver\n     */\n    wechatConfigs?: Array<WechatConfig>;\n}\n\n/**\n * Check if a given object implements the PostableApiReceiver interface.\n */\nexport function instanceOfPostableApiReceiver(value: object): value is PostableApiReceiver {\n    return true;\n}\n\nexport function PostableApiReceiverFromJSON(json: any): PostableApiReceiver {\n    return PostableApiReceiverFromJSONTyped(json, false);\n}\n\nexport function PostableApiReceiverFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableApiReceiver {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'discordConfigs': json['discord_configs'] == null ? undefined : ((json['discord_configs'] as Array<any>).map(DiscordConfigFromJSON)),\n        'emailConfigs': json['email_configs'] == null ? undefined : ((json['email_configs'] as Array<any>).map(EmailConfigFromJSON)),\n        'grafanaManagedReceiverConfigs': json['grafana_managed_receiver_configs'] == null ? undefined : ((json['grafana_managed_receiver_configs'] as Array<any>).map(PostableGrafanaReceiverFromJSON)),\n        'msteamsConfigs': json['msteams_configs'] == null ? undefined : ((json['msteams_configs'] as Array<any>).map(MSTeamsConfigFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n        'opsgenieConfigs': json['opsgenie_configs'] == null ? undefined : ((json['opsgenie_configs'] as Array<any>).map(OpsGenieConfigFromJSON)),\n        'pagerdutyConfigs': json['pagerduty_configs'] == null ? undefined : ((json['pagerduty_configs'] as Array<any>).map(PagerdutyConfigFromJSON)),\n        'pushoverConfigs': json['pushover_configs'] == null ? undefined : ((json['pushover_configs'] as Array<any>).map(PushoverConfigFromJSON)),\n        'slackConfigs': json['slack_configs'] == null ? undefined : ((json['slack_configs'] as Array<any>).map(SlackConfigFromJSON)),\n        'snsConfigs': json['sns_configs'] == null ? undefined : ((json['sns_configs'] as Array<any>).map(SNSConfigFromJSON)),\n        'telegramConfigs': json['telegram_configs'] == null ? undefined : ((json['telegram_configs'] as Array<any>).map(TelegramConfigFromJSON)),\n        'victoropsConfigs': json['victorops_configs'] == null ? undefined : ((json['victorops_configs'] as Array<any>).map(VictorOpsConfigFromJSON)),\n        'webexConfigs': json['webex_configs'] == null ? undefined : ((json['webex_configs'] as Array<any>).map(WebexConfigFromJSON)),\n        'webhookConfigs': json['webhook_configs'] == null ? undefined : ((json['webhook_configs'] as Array<any>).map(WebhookConfigFromJSON)),\n        'wechatConfigs': json['wechat_configs'] == null ? undefined : ((json['wechat_configs'] as Array<any>).map(WechatConfigFromJSON)),\n    };\n}\n\nexport function PostableApiReceiverToJSON(json: any): PostableApiReceiver {\n    return PostableApiReceiverToJSONTyped(json, false);\n}\n\nexport function PostableApiReceiverToJSONTyped(value?: PostableApiReceiver | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'discord_configs': value['discordConfigs'] == null ? undefined : ((value['discordConfigs'] as Array<any>).map(DiscordConfigToJSON)),\n        'email_configs': value['emailConfigs'] == null ? undefined : ((value['emailConfigs'] as Array<any>).map(EmailConfigToJSON)),\n        'grafana_managed_receiver_configs': value['grafanaManagedReceiverConfigs'] == null ? undefined : ((value['grafanaManagedReceiverConfigs'] as Array<any>).map(PostableGrafanaReceiverToJSON)),\n        'msteams_configs': value['msteamsConfigs'] == null ? undefined : ((value['msteamsConfigs'] as Array<any>).map(MSTeamsConfigToJSON)),\n        'name': value['name'],\n        'opsgenie_configs': value['opsgenieConfigs'] == null ? undefined : ((value['opsgenieConfigs'] as Array<any>).map(OpsGenieConfigToJSON)),\n        'pagerduty_configs': value['pagerdutyConfigs'] == null ? undefined : ((value['pagerdutyConfigs'] as Array<any>).map(PagerdutyConfigToJSON)),\n        'pushover_configs': value['pushoverConfigs'] == null ? undefined : ((value['pushoverConfigs'] as Array<any>).map(PushoverConfigToJSON)),\n        'slack_configs': value['slackConfigs'] == null ? undefined : ((value['slackConfigs'] as Array<any>).map(SlackConfigToJSON)),\n        'sns_configs': value['snsConfigs'] == null ? undefined : ((value['snsConfigs'] as Array<any>).map(SNSConfigToJSON)),\n        'telegram_configs': value['telegramConfigs'] == null ? undefined : ((value['telegramConfigs'] as Array<any>).map(TelegramConfigToJSON)),\n        'victorops_configs': value['victoropsConfigs'] == null ? undefined : ((value['victoropsConfigs'] as Array<any>).map(VictorOpsConfigToJSON)),\n        'webex_configs': value['webexConfigs'] == null ? undefined : ((value['webexConfigs'] as Array<any>).map(WebexConfigToJSON)),\n        'webhook_configs': value['webhookConfigs'] == null ? undefined : ((value['webhookConfigs'] as Array<any>).map(WebhookConfigToJSON)),\n        'wechat_configs': value['wechatConfigs'] == null ? undefined : ((value['wechatConfigs'] as Array<any>).map(WechatConfigToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { InhibitRule } from './InhibitRule';\nimport {\n    InhibitRuleFromJSON,\n    InhibitRuleFromJSONTyped,\n    InhibitRuleToJSON,\n    InhibitRuleToJSONTyped,\n} from './InhibitRule';\nimport type { MuteTimeInterval } from './MuteTimeInterval';\nimport {\n    MuteTimeIntervalFromJSON,\n    MuteTimeIntervalFromJSONTyped,\n    MuteTimeIntervalToJSON,\n    MuteTimeIntervalToJSONTyped,\n} from './MuteTimeInterval';\nimport type { TimeInterval } from './TimeInterval';\nimport {\n    TimeIntervalFromJSON,\n    TimeIntervalFromJSONTyped,\n    TimeIntervalToJSON,\n    TimeIntervalToJSONTyped,\n} from './TimeInterval';\nimport type { GlobalConfig } from './GlobalConfig';\nimport {\n    GlobalConfigFromJSON,\n    GlobalConfigFromJSONTyped,\n    GlobalConfigToJSON,\n    GlobalConfigToJSONTyped,\n} from './GlobalConfig';\nimport type { PostableApiReceiver } from './PostableApiReceiver';\nimport {\n    PostableApiReceiverFromJSON,\n    PostableApiReceiverFromJSONTyped,\n    PostableApiReceiverToJSON,\n    PostableApiReceiverToJSONTyped,\n} from './PostableApiReceiver';\nimport type { Route } from './Route';\nimport {\n    RouteFromJSON,\n    RouteFromJSONTyped,\n    RouteToJSON,\n    RouteToJSONTyped,\n} from './Route';\n\n/**\n * nolint:revive\n * @export\n * @interface PostableApiAlertingConfig\n */\nexport interface PostableApiAlertingConfig {\n    /**\n     * \n     * @type {GlobalConfig}\n     * @memberof PostableApiAlertingConfig\n     */\n    global?: GlobalConfig;\n    /**\n     * \n     * @type {Array<InhibitRule>}\n     * @memberof PostableApiAlertingConfig\n     */\n    inhibitRules?: Array<InhibitRule>;\n    /**\n     * MuteTimeIntervals is deprecated and will be removed before Alertmanager 1.0.\n     * @type {Array<MuteTimeInterval>}\n     * @memberof PostableApiAlertingConfig\n     */\n    muteTimeIntervals?: Array<MuteTimeInterval>;\n    /**\n     * Override with our superset receiver type\n     * @type {Array<PostableApiReceiver>}\n     * @memberof PostableApiAlertingConfig\n     */\n    receivers?: Array<PostableApiReceiver>;\n    /**\n     * \n     * @type {Route}\n     * @memberof PostableApiAlertingConfig\n     */\n    route?: Route;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof PostableApiAlertingConfig\n     */\n    templates?: Array<string>;\n    /**\n     * \n     * @type {Array<TimeInterval>}\n     * @memberof PostableApiAlertingConfig\n     */\n    timeIntervals?: Array<TimeInterval>;\n}\n\n/**\n * Check if a given object implements the PostableApiAlertingConfig interface.\n */\nexport function instanceOfPostableApiAlertingConfig(value: object): value is PostableApiAlertingConfig {\n    return true;\n}\n\nexport function PostableApiAlertingConfigFromJSON(json: any): PostableApiAlertingConfig {\n    return PostableApiAlertingConfigFromJSONTyped(json, false);\n}\n\nexport function PostableApiAlertingConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableApiAlertingConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'global': json['global'] == null ? undefined : GlobalConfigFromJSON(json['global']),\n        'inhibitRules': json['inhibit_rules'] == null ? undefined : ((json['inhibit_rules'] as Array<any>).map(InhibitRuleFromJSON)),\n        'muteTimeIntervals': json['mute_time_intervals'] == null ? undefined : ((json['mute_time_intervals'] as Array<any>).map(MuteTimeIntervalFromJSON)),\n        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(PostableApiReceiverFromJSON)),\n        'route': json['route'] == null ? undefined : RouteFromJSON(json['route']),\n        'templates': json['templates'] == null ? undefined : json['templates'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalFromJSON)),\n    };\n}\n\nexport function PostableApiAlertingConfigToJSON(json: any): PostableApiAlertingConfig {\n    return PostableApiAlertingConfigToJSONTyped(json, false);\n}\n\nexport function PostableApiAlertingConfigToJSONTyped(value?: PostableApiAlertingConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'global': GlobalConfigToJSON(value['global']),\n        'inhibit_rules': value['inhibitRules'] == null ? undefined : ((value['inhibitRules'] as Array<any>).map(InhibitRuleToJSON)),\n        'mute_time_intervals': value['muteTimeIntervals'] == null ? undefined : ((value['muteTimeIntervals'] as Array<any>).map(MuteTimeIntervalToJSON)),\n        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(PostableApiReceiverToJSON)),\n        'route': RouteToJSON(value['route']),\n        'templates': value['templates'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { VersionInfo } from './VersionInfo';\nimport {\n    VersionInfoFromJSON,\n    VersionInfoFromJSONTyped,\n    VersionInfoToJSON,\n    VersionInfoToJSONTyped,\n} from './VersionInfo';\nimport type { PostableApiAlertingConfig } from './PostableApiAlertingConfig';\nimport {\n    PostableApiAlertingConfigFromJSON,\n    PostableApiAlertingConfigFromJSONTyped,\n    PostableApiAlertingConfigToJSON,\n    PostableApiAlertingConfigToJSONTyped,\n} from './PostableApiAlertingConfig';\nimport type { ClusterStatus } from './ClusterStatus';\nimport {\n    ClusterStatusFromJSON,\n    ClusterStatusFromJSONTyped,\n    ClusterStatusToJSON,\n    ClusterStatusToJSONTyped,\n} from './ClusterStatus';\n\n/**\n * \n * @export\n * @interface GettableStatus\n */\nexport interface GettableStatus {\n    /**\n     * \n     * @type {ClusterStatus}\n     * @memberof GettableStatus\n     */\n    cluster: ClusterStatus;\n    /**\n     * \n     * @type {PostableApiAlertingConfig}\n     * @memberof GettableStatus\n     */\n    config: PostableApiAlertingConfig;\n    /**\n     * uptime\n     * @type {Date}\n     * @memberof GettableStatus\n     */\n    uptime: Date;\n    /**\n     * \n     * @type {VersionInfo}\n     * @memberof GettableStatus\n     */\n    versionInfo: VersionInfo;\n}\n\n/**\n * Check if a given object implements the GettableStatus interface.\n */\nexport function instanceOfGettableStatus(value: object): value is GettableStatus {\n    if (!('cluster' in value) || value['cluster'] === undefined) return false;\n    if (!('config' in value) || value['config'] === undefined) return false;\n    if (!('uptime' in value) || value['uptime'] === undefined) return false;\n    if (!('versionInfo' in value) || value['versionInfo'] === undefined) return false;\n    return true;\n}\n\nexport function GettableStatusFromJSON(json: any): GettableStatus {\n    return GettableStatusFromJSONTyped(json, false);\n}\n\nexport function GettableStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableStatus {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'cluster': ClusterStatusFromJSON(json['cluster']),\n        'config': PostableApiAlertingConfigFromJSON(json['config']),\n        'uptime': (new Date(json['uptime'])),\n        'versionInfo': VersionInfoFromJSON(json['versionInfo']),\n    };\n}\n\nexport function GettableStatusToJSON(json: any): GettableStatus {\n    return GettableStatusToJSONTyped(json, false);\n}\n\nexport function GettableStatusToJSONTyped(value?: GettableStatus | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'cluster': ClusterStatusToJSON(value['cluster']),\n        'config': PostableApiAlertingConfigToJSON(value['config']),\n        'uptime': ((value['uptime']).toISOString()),\n        'versionInfo': VersionInfoToJSON(value['versionInfo']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TimeIntervalTimeRange\n */\nexport interface TimeIntervalTimeRange {\n    /**\n     * \n     * @type {string}\n     * @memberof TimeIntervalTimeRange\n     */\n    endTime?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TimeIntervalTimeRange\n     */\n    startTime?: string;\n}\n\n/**\n * Check if a given object implements the TimeIntervalTimeRange interface.\n */\nexport function instanceOfTimeIntervalTimeRange(value: object): value is TimeIntervalTimeRange {\n    return true;\n}\n\nexport function TimeIntervalTimeRangeFromJSON(json: any): TimeIntervalTimeRange {\n    return TimeIntervalTimeRangeFromJSONTyped(json, false);\n}\n\nexport function TimeIntervalTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeIntervalTimeRange {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'endTime': json['end_time'] == null ? undefined : json['end_time'],\n        'startTime': json['start_time'] == null ? undefined : json['start_time'],\n    };\n}\n\nexport function TimeIntervalTimeRangeToJSON(json: any): TimeIntervalTimeRange {\n    return TimeIntervalTimeRangeToJSONTyped(json, false);\n}\n\nexport function TimeIntervalTimeRangeToJSONTyped(value?: TimeIntervalTimeRange | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'end_time': value['endTime'],\n        'start_time': value['startTime'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeIntervalTimeRange } from './TimeIntervalTimeRange';\nimport {\n    TimeIntervalTimeRangeFromJSON,\n    TimeIntervalTimeRangeFromJSONTyped,\n    TimeIntervalTimeRangeToJSON,\n    TimeIntervalTimeRangeToJSONTyped,\n} from './TimeIntervalTimeRange';\n\n/**\n * \n * @export\n * @interface TimeIntervalItem\n */\nexport interface TimeIntervalItem {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TimeIntervalItem\n     */\n    daysOfMonth?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof TimeIntervalItem\n     */\n    location?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TimeIntervalItem\n     */\n    months?: Array<string>;\n    /**\n     * \n     * @type {Array<TimeIntervalTimeRange>}\n     * @memberof TimeIntervalItem\n     */\n    times?: Array<TimeIntervalTimeRange>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TimeIntervalItem\n     */\n    weekdays?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TimeIntervalItem\n     */\n    years?: Array<string>;\n}\n\n/**\n * Check if a given object implements the TimeIntervalItem interface.\n */\nexport function instanceOfTimeIntervalItem(value: object): value is TimeIntervalItem {\n    return true;\n}\n\nexport function TimeIntervalItemFromJSON(json: any): TimeIntervalItem {\n    return TimeIntervalItemFromJSONTyped(json, false);\n}\n\nexport function TimeIntervalItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeIntervalItem {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'daysOfMonth': json['days_of_month'] == null ? undefined : json['days_of_month'],\n        'location': json['location'] == null ? undefined : json['location'],\n        'months': json['months'] == null ? undefined : json['months'],\n        'times': json['times'] == null ? undefined : ((json['times'] as Array<any>).map(TimeIntervalTimeRangeFromJSON)),\n        'weekdays': json['weekdays'] == null ? undefined : json['weekdays'],\n        'years': json['years'] == null ? undefined : json['years'],\n    };\n}\n\nexport function TimeIntervalItemToJSON(json: any): TimeIntervalItem {\n    return TimeIntervalItemToJSONTyped(json, false);\n}\n\nexport function TimeIntervalItemToJSONTyped(value?: TimeIntervalItem | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'days_of_month': value['daysOfMonth'],\n        'location': value['location'],\n        'months': value['months'],\n        'times': value['times'] == null ? undefined : ((value['times'] as Array<any>).map(TimeIntervalTimeRangeToJSON)),\n        'weekdays': value['weekdays'],\n        'years': value['years'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeIntervalItem } from './TimeIntervalItem';\nimport {\n    TimeIntervalItemFromJSON,\n    TimeIntervalItemFromJSONTyped,\n    TimeIntervalItemToJSON,\n    TimeIntervalItemToJSONTyped,\n} from './TimeIntervalItem';\n\n/**\n * \n * @export\n * @interface GettableTimeIntervals\n */\nexport interface GettableTimeIntervals {\n    /**\n     * \n     * @type {string}\n     * @memberof GettableTimeIntervals\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableTimeIntervals\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {Array<TimeIntervalItem>}\n     * @memberof GettableTimeIntervals\n     */\n    timeIntervals?: Array<TimeIntervalItem>;\n    /**\n     * \n     * @type {string}\n     * @memberof GettableTimeIntervals\n     */\n    version?: string;\n}\n\n/**\n * Check if a given object implements the GettableTimeIntervals interface.\n */\nexport function instanceOfGettableTimeIntervals(value: object): value is GettableTimeIntervals {\n    return true;\n}\n\nexport function GettableTimeIntervalsFromJSON(json: any): GettableTimeIntervals {\n    return GettableTimeIntervalsFromJSONTyped(json, false);\n}\n\nexport function GettableTimeIntervalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableTimeIntervals {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalItemFromJSON)),\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function GettableTimeIntervalsToJSON(json: any): GettableTimeIntervals {\n    return GettableTimeIntervalsToJSONTyped(json, false);\n}\n\nexport function GettableTimeIntervalsToJSONTyped(value?: GettableTimeIntervals | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'provenance': value['provenance'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalItemToJSON)),\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableApiAlertingConfig } from './GettableApiAlertingConfig';\nimport {\n    GettableApiAlertingConfigFromJSON,\n    GettableApiAlertingConfigFromJSONTyped,\n    GettableApiAlertingConfigToJSON,\n    GettableApiAlertingConfigToJSONTyped,\n} from './GettableApiAlertingConfig';\n\n/**\n * \n * @export\n * @interface GettableUserConfig\n */\nexport interface GettableUserConfig {\n    /**\n     * \n     * @type {GettableApiAlertingConfig}\n     * @memberof GettableUserConfig\n     */\n    alertmanagerConfig?: GettableApiAlertingConfig;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableUserConfig\n     */\n    templateFileProvenances?: { [key: string]: string; };\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof GettableUserConfig\n     */\n    templateFiles?: { [key: string]: string; };\n}\n\n/**\n * Check if a given object implements the GettableUserConfig interface.\n */\nexport function instanceOfGettableUserConfig(value: object): value is GettableUserConfig {\n    return true;\n}\n\nexport function GettableUserConfigFromJSON(json: any): GettableUserConfig {\n    return GettableUserConfigFromJSONTyped(json, false);\n}\n\nexport function GettableUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GettableUserConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagerConfig': json['alertmanager_config'] == null ? undefined : GettableApiAlertingConfigFromJSON(json['alertmanager_config']),\n        'templateFileProvenances': json['template_file_provenances'] == null ? undefined : json['template_file_provenances'],\n        'templateFiles': json['template_files'] == null ? undefined : json['template_files'],\n    };\n}\n\nexport function GettableUserConfigToJSON(json: any): GettableUserConfig {\n    return GettableUserConfigToJSONTyped(json, false);\n}\n\nexport function GettableUserConfigToJSONTyped(value?: GettableUserConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanager_config': GettableApiAlertingConfigToJSON(value['alertmanagerConfig']),\n        'template_file_provenances': value['templateFileProvenances'],\n        'template_files': value['templateFiles'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface HealthResponse\n */\nexport interface HealthResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof HealthResponse\n     */\n    commit?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof HealthResponse\n     */\n    database?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof HealthResponse\n     */\n    enterpriseCommit?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof HealthResponse\n     */\n    version?: string;\n}\n\n/**\n * Check if a given object implements the HealthResponse interface.\n */\nexport function instanceOfHealthResponse(value: object): value is HealthResponse {\n    return true;\n}\n\nexport function HealthResponseFromJSON(json: any): HealthResponse {\n    return HealthResponseFromJSONTyped(json, false);\n}\n\nexport function HealthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'commit': json['commit'] == null ? undefined : json['commit'],\n        'database': json['database'] == null ? undefined : json['database'],\n        'enterpriseCommit': json['enterpriseCommit'] == null ? undefined : json['enterpriseCommit'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function HealthResponseToJSON(json: any): HealthResponse {\n    return HealthResponseToJSONTyped(json, false);\n}\n\nexport function HealthResponseToJSONTyped(value?: HealthResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'commit': value['commit'],\n        'database': value['database'],\n        'enterpriseCommit': value['enterpriseCommit'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Hit\n */\nexport interface Hit {\n    /**\n     * \n     * @type {number}\n     * @memberof Hit\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    folderTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    folderUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Hit\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Hit\n     */\n    isDeleted?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Hit\n     */\n    isStarred?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof Hit\n     */\n    permanentlyDeleteDate?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    slug?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Hit\n     */\n    sortMeta?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    sortMetaName?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Hit\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    uid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Hit\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the Hit interface.\n */\nexport function instanceOfHit(value: object): value is Hit {\n    return true;\n}\n\nexport function HitFromJSON(json: any): Hit {\n    return HitFromJSONTyped(json, false);\n}\n\nexport function HitFromJSONTyped(json: any, ignoreDiscriminator: boolean): Hit {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderTitle': json['folderTitle'] == null ? undefined : json['folderTitle'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'folderUrl': json['folderUrl'] == null ? undefined : json['folderUrl'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],\n        'isStarred': json['isStarred'] == null ? undefined : json['isStarred'],\n        'permanentlyDeleteDate': json['permanentlyDeleteDate'] == null ? undefined : (new Date(json['permanentlyDeleteDate'])),\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'sortMeta': json['sortMeta'] == null ? undefined : json['sortMeta'],\n        'sortMetaName': json['sortMetaName'] == null ? undefined : json['sortMetaName'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'uri': json['uri'] == null ? undefined : json['uri'],\n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function HitToJSON(json: any): Hit {\n    return HitToJSONTyped(json, false);\n}\n\nexport function HitToJSONTyped(value?: Hit | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderId': value['folderId'],\n        'folderTitle': value['folderTitle'],\n        'folderUid': value['folderUid'],\n        'folderUrl': value['folderUrl'],\n        'id': value['id'],\n        'isDeleted': value['isDeleted'],\n        'isStarred': value['isStarred'],\n        'permanentlyDeleteDate': value['permanentlyDeleteDate'] == null ? undefined : ((value['permanentlyDeleteDate']).toISOString()),\n        'slug': value['slug'],\n        'sortMeta': value['sortMeta'],\n        'sortMetaName': value['sortMetaName'],\n        'tags': value['tags'],\n        'title': value['title'],\n        'type': value['type'],\n        'uid': value['uid'],\n        'uri': value['uri'],\n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ImportDashboardInput\n */\nexport interface ImportDashboardInput {\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardInput\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardInput\n     */\n    pluginId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardInput\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardInput\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the ImportDashboardInput interface.\n */\nexport function instanceOfImportDashboardInput(value: object): value is ImportDashboardInput {\n    return true;\n}\n\nexport function ImportDashboardInputFromJSON(json: any): ImportDashboardInput {\n    return ImportDashboardInputFromJSONTyped(json, false);\n}\n\nexport function ImportDashboardInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardInput {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'pluginId': json['pluginId'] == null ? undefined : json['pluginId'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function ImportDashboardInputToJSON(json: any): ImportDashboardInput {\n    return ImportDashboardInputToJSONTyped(json, false);\n}\n\nexport function ImportDashboardInputToJSONTyped(value?: ImportDashboardInput | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'pluginId': value['pluginId'],\n        'type': value['type'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ImportDashboardInput } from './ImportDashboardInput';\nimport {\n    ImportDashboardInputFromJSON,\n    ImportDashboardInputFromJSONTyped,\n    ImportDashboardInputToJSON,\n    ImportDashboardInputToJSONTyped,\n} from './ImportDashboardInput';\n\n/**\n * \n * @export\n * @interface ImportDashboardRequest\n */\nexport interface ImportDashboardRequest {\n    /**\n     * \n     * @type {object}\n     * @memberof ImportDashboardRequest\n     */\n    dashboard?: object;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof ImportDashboardRequest\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardRequest\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {Array<ImportDashboardInput>}\n     * @memberof ImportDashboardRequest\n     */\n    inputs?: Array<ImportDashboardInput>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ImportDashboardRequest\n     */\n    overwrite?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardRequest\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardRequest\n     */\n    pluginId?: string;\n}\n\n/**\n * Check if a given object implements the ImportDashboardRequest interface.\n */\nexport function instanceOfImportDashboardRequest(value: object): value is ImportDashboardRequest {\n    return true;\n}\n\nexport function ImportDashboardRequestFromJSON(json: any): ImportDashboardRequest {\n    return ImportDashboardRequestFromJSONTyped(json, false);\n}\n\nexport function ImportDashboardRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardRequest {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboard': json['dashboard'] == null ? undefined : json['dashboard'],\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'inputs': json['inputs'] == null ? undefined : ((json['inputs'] as Array<any>).map(ImportDashboardInputFromJSON)),\n        'overwrite': json['overwrite'] == null ? undefined : json['overwrite'],\n        'path': json['path'] == null ? undefined : json['path'],\n        'pluginId': json['pluginId'] == null ? undefined : json['pluginId'],\n    };\n}\n\nexport function ImportDashboardRequestToJSON(json: any): ImportDashboardRequest {\n    return ImportDashboardRequestToJSONTyped(json, false);\n}\n\nexport function ImportDashboardRequestToJSONTyped(value?: ImportDashboardRequest | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboard': value['dashboard'],\n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'inputs': value['inputs'] == null ? undefined : ((value['inputs'] as Array<any>).map(ImportDashboardInputToJSON)),\n        'overwrite': value['overwrite'],\n        'path': value['path'],\n        'pluginId': value['pluginId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ImportDashboardResponse\n */\nexport interface ImportDashboardResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof ImportDashboardResponse\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    description?: string;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof ImportDashboardResponse\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ImportDashboardResponse\n     */\n    imported?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof ImportDashboardResponse\n     */\n    importedRevision?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    importedUri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    importedUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    path?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    pluginId?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ImportDashboardResponse\n     */\n    removed?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof ImportDashboardResponse\n     */\n    revision?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ImportDashboardResponse\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the ImportDashboardResponse interface.\n */\nexport function instanceOfImportDashboardResponse(value: object): value is ImportDashboardResponse {\n    return true;\n}\n\nexport function ImportDashboardResponseFromJSON(json: any): ImportDashboardResponse {\n    return ImportDashboardResponseFromJSONTyped(json, false);\n}\n\nexport function ImportDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportDashboardResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'imported': json['imported'] == null ? undefined : json['imported'],\n        'importedRevision': json['importedRevision'] == null ? undefined : json['importedRevision'],\n        'importedUri': json['importedUri'] == null ? undefined : json['importedUri'],\n        'importedUrl': json['importedUrl'] == null ? undefined : json['importedUrl'],\n        'path': json['path'] == null ? undefined : json['path'],\n        'pluginId': json['pluginId'] == null ? undefined : json['pluginId'],\n        'removed': json['removed'] == null ? undefined : json['removed'],\n        'revision': json['revision'] == null ? undefined : json['revision'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function ImportDashboardResponseToJSON(json: any): ImportDashboardResponse {\n    return ImportDashboardResponseToJSONTyped(json, false);\n}\n\nexport function ImportDashboardResponseToJSONTyped(value?: ImportDashboardResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboardId': value['dashboardId'],\n        'description': value['description'],\n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'imported': value['imported'],\n        'importedRevision': value['importedRevision'],\n        'importedUri': value['importedUri'],\n        'importedUrl': value['importedUrl'],\n        'path': value['path'],\n        'pluginId': value['pluginId'],\n        'removed': value['removed'],\n        'revision': value['revision'],\n        'slug': value['slug'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\nimport type { Certificate } from './Certificate';\nimport {\n    CertificateFromJSON,\n    CertificateFromJSONTyped,\n    CertificateToJSON,\n    CertificateToJSONTyped,\n} from './Certificate';\n\n/**\n * JSONWebKey represents a public or private key in JWK format. It can be\n * marshaled into JSON and unmarshaled from JSON.\n * @export\n * @interface JSONWebKey\n */\nexport interface JSONWebKey {\n    /**\n     * Key algorithm, parsed from `alg` header.\n     * @type {string}\n     * @memberof JSONWebKey\n     */\n    algorithm?: string;\n    /**\n     * X.509 certificate thumbprint (SHA-1), parsed from `x5t` header.\n     * @type {Array<number>}\n     * @memberof JSONWebKey\n     */\n    certificateThumbprintSHA1?: Array<number>;\n    /**\n     * X.509 certificate thumbprint (SHA-256), parsed from `x5t#S256` header.\n     * @type {Array<number>}\n     * @memberof JSONWebKey\n     */\n    certificateThumbprintSHA256?: Array<number>;\n    /**\n     * X.509 certificate chain, parsed from `x5c` header.\n     * @type {Array<Certificate>}\n     * @memberof JSONWebKey\n     */\n    certificates?: Array<Certificate>;\n    /**\n     * \n     * @type {URL}\n     * @memberof JSONWebKey\n     */\n    certificatesURL?: URL;\n    /**\n     * Key is the Go in-memory representation of this key. It must have one\n     * of these types:\n     * ed25519.PublicKey\n     * ed25519.PrivateKey\n     * ecdsa.PublicKey\n     * ecdsa.PrivateKey\n     * rsa.PublicKey\n     * rsa.PrivateKey\n     * []byte (a symmetric key)\n     * \n     * When marshaling this JSONWebKey into JSON, the \"kty\" header parameter\n     * will be automatically set based on the type of this field.\n     * @type {object}\n     * @memberof JSONWebKey\n     */\n    key?: object;\n    /**\n     * Key identifier, parsed from `kid` header.\n     * @type {string}\n     * @memberof JSONWebKey\n     */\n    keyID?: string;\n    /**\n     * Key use, parsed from `use` header.\n     * @type {string}\n     * @memberof JSONWebKey\n     */\n    use?: string;\n}\n\n/**\n * Check if a given object implements the JSONWebKey interface.\n */\nexport function instanceOfJSONWebKey(value: object): value is JSONWebKey {\n    return true;\n}\n\nexport function JSONWebKeyFromJSON(json: any): JSONWebKey {\n    return JSONWebKeyFromJSONTyped(json, false);\n}\n\nexport function JSONWebKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): JSONWebKey {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'algorithm': json['Algorithm'] == null ? undefined : json['Algorithm'],\n        'certificateThumbprintSHA1': json['CertificateThumbprintSHA1'] == null ? undefined : json['CertificateThumbprintSHA1'],\n        'certificateThumbprintSHA256': json['CertificateThumbprintSHA256'] == null ? undefined : json['CertificateThumbprintSHA256'],\n        'certificates': json['Certificates'] == null ? undefined : ((json['Certificates'] as Array<any>).map(CertificateFromJSON)),\n        'certificatesURL': json['CertificatesURL'] == null ? undefined : URLFromJSON(json['CertificatesURL']),\n        'key': json['Key'] == null ? undefined : json['Key'],\n        'keyID': json['KeyID'] == null ? undefined : json['KeyID'],\n        'use': json['Use'] == null ? undefined : json['Use'],\n    };\n}\n\nexport function JSONWebKeyToJSON(json: any): JSONWebKey {\n    return JSONWebKeyToJSONTyped(json, false);\n}\n\nexport function JSONWebKeyToJSONTyped(value?: JSONWebKey | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Algorithm': value['algorithm'],\n        'CertificateThumbprintSHA1': value['certificateThumbprintSHA1'],\n        'CertificateThumbprintSHA256': value['certificateThumbprintSHA256'],\n        'Certificates': value['certificates'] == null ? undefined : ((value['certificates'] as Array<any>).map(CertificateToJSON)),\n        'CertificatesURL': URLToJSON(value['certificatesURL']),\n        'Key': value['key'],\n        'KeyID': value['keyID'],\n        'Use': value['use'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface LibraryElementDTOMetaUser\n */\nexport interface LibraryElementDTOMetaUser {\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTOMetaUser\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTOMetaUser\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTOMetaUser\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the LibraryElementDTOMetaUser interface.\n */\nexport function instanceOfLibraryElementDTOMetaUser(value: object): value is LibraryElementDTOMetaUser {\n    return true;\n}\n\nexport function LibraryElementDTOMetaUserFromJSON(json: any): LibraryElementDTOMetaUser {\n    return LibraryElementDTOMetaUserFromJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOMetaUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTOMetaUser {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function LibraryElementDTOMetaUserToJSON(json: any): LibraryElementDTOMetaUser {\n    return LibraryElementDTOMetaUserToJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOMetaUserToJSONTyped(value?: LibraryElementDTOMetaUser | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'avatarUrl': value['avatarUrl'],\n        'id': value['id'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTOMetaUser } from './LibraryElementDTOMetaUser';\nimport {\n    LibraryElementDTOMetaUserFromJSON,\n    LibraryElementDTOMetaUserFromJSONTyped,\n    LibraryElementDTOMetaUserToJSON,\n    LibraryElementDTOMetaUserToJSONTyped,\n} from './LibraryElementDTOMetaUser';\n\n/**\n * \n * @export\n * @interface LibraryElementDTOMeta\n */\nexport interface LibraryElementDTOMeta {\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTOMeta\n     */\n    connectedDashboards?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof LibraryElementDTOMeta\n     */\n    created?: Date;\n    /**\n     * \n     * @type {LibraryElementDTOMetaUser}\n     * @memberof LibraryElementDTOMeta\n     */\n    createdBy?: LibraryElementDTOMetaUser;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTOMeta\n     */\n    folderName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTOMeta\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof LibraryElementDTOMeta\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {LibraryElementDTOMetaUser}\n     * @memberof LibraryElementDTOMeta\n     */\n    updatedBy?: LibraryElementDTOMetaUser;\n}\n\n/**\n * Check if a given object implements the LibraryElementDTOMeta interface.\n */\nexport function instanceOfLibraryElementDTOMeta(value: object): value is LibraryElementDTOMeta {\n    return true;\n}\n\nexport function LibraryElementDTOMetaFromJSON(json: any): LibraryElementDTOMeta {\n    return LibraryElementDTOMetaFromJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTOMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'connectedDashboards': json['connectedDashboards'] == null ? undefined : json['connectedDashboards'],\n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'createdBy': json['createdBy'] == null ? undefined : LibraryElementDTOMetaUserFromJSON(json['createdBy']),\n        'folderName': json['folderName'] == null ? undefined : json['folderName'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'updatedBy': json['updatedBy'] == null ? undefined : LibraryElementDTOMetaUserFromJSON(json['updatedBy']),\n    };\n}\n\nexport function LibraryElementDTOMetaToJSON(json: any): LibraryElementDTOMeta {\n    return LibraryElementDTOMetaToJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOMetaToJSONTyped(value?: LibraryElementDTOMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'connectedDashboards': value['connectedDashboards'],\n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'createdBy': LibraryElementDTOMetaUserToJSON(value['createdBy']),\n        'folderName': value['folderName'],\n        'folderUid': value['folderUid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'updatedBy': LibraryElementDTOMetaUserToJSON(value['updatedBy']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTOMeta } from './LibraryElementDTOMeta';\nimport {\n    LibraryElementDTOMetaFromJSON,\n    LibraryElementDTOMetaFromJSONTyped,\n    LibraryElementDTOMetaToJSON,\n    LibraryElementDTOMetaToJSONTyped,\n} from './LibraryElementDTOMeta';\n\n/**\n * \n * @export\n * @interface LibraryElementDTO\n */\nexport interface LibraryElementDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTO\n     */\n    description?: string;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTO\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    kind?: number;\n    /**\n     * \n     * @type {LibraryElementDTOMeta}\n     * @memberof LibraryElementDTO\n     */\n    meta?: LibraryElementDTOMeta;\n    /**\n     * \n     * @type {object}\n     * @memberof LibraryElementDTO\n     */\n    model?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    schemaVersion?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTO\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementDTO\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the LibraryElementDTO interface.\n */\nexport function instanceOfLibraryElementDTO(value: object): value is LibraryElementDTO {\n    return true;\n}\n\nexport function LibraryElementDTOFromJSON(json: any): LibraryElementDTO {\n    return LibraryElementDTOFromJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'meta': json['meta'] == null ? undefined : LibraryElementDTOMetaFromJSON(json['meta']),\n        'model': json['model'] == null ? undefined : json['model'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'schemaVersion': json['schemaVersion'] == null ? undefined : json['schemaVersion'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function LibraryElementDTOToJSON(json: any): LibraryElementDTO {\n    return LibraryElementDTOToJSONTyped(json, false);\n}\n\nexport function LibraryElementDTOToJSONTyped(value?: LibraryElementDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'id': value['id'],\n        'kind': value['kind'],\n        'meta': LibraryElementDTOMetaToJSON(value['meta']),\n        'model': value['model'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'schemaVersion': value['schemaVersion'],\n        'type': value['type'],\n        'uid': value['uid'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTO } from './LibraryElementDTO';\nimport {\n    LibraryElementDTOFromJSON,\n    LibraryElementDTOFromJSONTyped,\n    LibraryElementDTOToJSON,\n    LibraryElementDTOToJSONTyped,\n} from './LibraryElementDTO';\n\n/**\n * \n * @export\n * @interface LibraryElementArrayResponse\n */\nexport interface LibraryElementArrayResponse {\n    /**\n     * \n     * @type {Array<LibraryElementDTO>}\n     * @memberof LibraryElementArrayResponse\n     */\n    result?: Array<LibraryElementDTO>;\n}\n\n/**\n * Check if a given object implements the LibraryElementArrayResponse interface.\n */\nexport function instanceOfLibraryElementArrayResponse(value: object): value is LibraryElementArrayResponse {\n    return true;\n}\n\nexport function LibraryElementArrayResponseFromJSON(json: any): LibraryElementArrayResponse {\n    return LibraryElementArrayResponseFromJSONTyped(json, false);\n}\n\nexport function LibraryElementArrayResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementArrayResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : ((json['result'] as Array<any>).map(LibraryElementDTOFromJSON)),\n    };\n}\n\nexport function LibraryElementArrayResponseToJSON(json: any): LibraryElementArrayResponse {\n    return LibraryElementArrayResponseToJSONTyped(json, false);\n}\n\nexport function LibraryElementArrayResponseToJSONTyped(value?: LibraryElementArrayResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': value['result'] == null ? undefined : ((value['result'] as Array<any>).map(LibraryElementDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTOMetaUser } from './LibraryElementDTOMetaUser';\nimport {\n    LibraryElementDTOMetaUserFromJSON,\n    LibraryElementDTOMetaUserFromJSONTyped,\n    LibraryElementDTOMetaUserToJSON,\n    LibraryElementDTOMetaUserToJSONTyped,\n} from './LibraryElementDTOMetaUser';\n\n/**\n * \n * @export\n * @interface LibraryElementConnectionDTO\n */\nexport interface LibraryElementConnectionDTO {\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementConnectionDTO\n     */\n    connectionId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof LibraryElementConnectionDTO\n     */\n    connectionUid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof LibraryElementConnectionDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {LibraryElementDTOMetaUser}\n     * @memberof LibraryElementConnectionDTO\n     */\n    createdBy?: LibraryElementDTOMetaUser;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementConnectionDTO\n     */\n    elementId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementConnectionDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementConnectionDTO\n     */\n    kind?: number;\n}\n\n/**\n * Check if a given object implements the LibraryElementConnectionDTO interface.\n */\nexport function instanceOfLibraryElementConnectionDTO(value: object): value is LibraryElementConnectionDTO {\n    return true;\n}\n\nexport function LibraryElementConnectionDTOFromJSON(json: any): LibraryElementConnectionDTO {\n    return LibraryElementConnectionDTOFromJSONTyped(json, false);\n}\n\nexport function LibraryElementConnectionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'connectionId': json['connectionId'] == null ? undefined : json['connectionId'],\n        'connectionUid': json['connectionUid'] == null ? undefined : json['connectionUid'],\n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'createdBy': json['createdBy'] == null ? undefined : LibraryElementDTOMetaUserFromJSON(json['createdBy']),\n        'elementId': json['elementId'] == null ? undefined : json['elementId'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n    };\n}\n\nexport function LibraryElementConnectionDTOToJSON(json: any): LibraryElementConnectionDTO {\n    return LibraryElementConnectionDTOToJSONTyped(json, false);\n}\n\nexport function LibraryElementConnectionDTOToJSONTyped(value?: LibraryElementConnectionDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'connectionId': value['connectionId'],\n        'connectionUid': value['connectionUid'],\n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'createdBy': LibraryElementDTOMetaUserToJSON(value['createdBy']),\n        'elementId': value['elementId'],\n        'id': value['id'],\n        'kind': value['kind'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementConnectionDTO } from './LibraryElementConnectionDTO';\nimport {\n    LibraryElementConnectionDTOFromJSON,\n    LibraryElementConnectionDTOFromJSONTyped,\n    LibraryElementConnectionDTOToJSON,\n    LibraryElementConnectionDTOToJSONTyped,\n} from './LibraryElementConnectionDTO';\n\n/**\n * \n * @export\n * @interface LibraryElementConnectionsResponse\n */\nexport interface LibraryElementConnectionsResponse {\n    /**\n     * \n     * @type {Array<LibraryElementConnectionDTO>}\n     * @memberof LibraryElementConnectionsResponse\n     */\n    result?: Array<LibraryElementConnectionDTO>;\n}\n\n/**\n * Check if a given object implements the LibraryElementConnectionsResponse interface.\n */\nexport function instanceOfLibraryElementConnectionsResponse(value: object): value is LibraryElementConnectionsResponse {\n    return true;\n}\n\nexport function LibraryElementConnectionsResponseFromJSON(json: any): LibraryElementConnectionsResponse {\n    return LibraryElementConnectionsResponseFromJSONTyped(json, false);\n}\n\nexport function LibraryElementConnectionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementConnectionsResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : ((json['result'] as Array<any>).map(LibraryElementConnectionDTOFromJSON)),\n    };\n}\n\nexport function LibraryElementConnectionsResponseToJSON(json: any): LibraryElementConnectionsResponse {\n    return LibraryElementConnectionsResponseToJSONTyped(json, false);\n}\n\nexport function LibraryElementConnectionsResponseToJSONTyped(value?: LibraryElementConnectionsResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': value['result'] == null ? undefined : ((value['result'] as Array<any>).map(LibraryElementConnectionDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTO } from './LibraryElementDTO';\nimport {\n    LibraryElementDTOFromJSON,\n    LibraryElementDTOFromJSONTyped,\n    LibraryElementDTOToJSON,\n    LibraryElementDTOToJSONTyped,\n} from './LibraryElementDTO';\n\n/**\n * \n * @export\n * @interface LibraryElementResponse\n */\nexport interface LibraryElementResponse {\n    /**\n     * \n     * @type {LibraryElementDTO}\n     * @memberof LibraryElementResponse\n     */\n    result?: LibraryElementDTO;\n}\n\n/**\n * Check if a given object implements the LibraryElementResponse interface.\n */\nexport function instanceOfLibraryElementResponse(value: object): value is LibraryElementResponse {\n    return true;\n}\n\nexport function LibraryElementResponseFromJSON(json: any): LibraryElementResponse {\n    return LibraryElementResponseFromJSONTyped(json, false);\n}\n\nexport function LibraryElementResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : LibraryElementDTOFromJSON(json['result']),\n    };\n}\n\nexport function LibraryElementResponseToJSON(json: any): LibraryElementResponse {\n    return LibraryElementResponseToJSONTyped(json, false);\n}\n\nexport function LibraryElementResponseToJSONTyped(value?: LibraryElementResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': LibraryElementDTOToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementDTO } from './LibraryElementDTO';\nimport {\n    LibraryElementDTOFromJSON,\n    LibraryElementDTOFromJSONTyped,\n    LibraryElementDTOToJSON,\n    LibraryElementDTOToJSONTyped,\n} from './LibraryElementDTO';\n\n/**\n * \n * @export\n * @interface LibraryElementSearchResult\n */\nexport interface LibraryElementSearchResult {\n    /**\n     * \n     * @type {Array<LibraryElementDTO>}\n     * @memberof LibraryElementSearchResult\n     */\n    elements?: Array<LibraryElementDTO>;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementSearchResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementSearchResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof LibraryElementSearchResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the LibraryElementSearchResult interface.\n */\nexport function instanceOfLibraryElementSearchResult(value: object): value is LibraryElementSearchResult {\n    return true;\n}\n\nexport function LibraryElementSearchResultFromJSON(json: any): LibraryElementSearchResult {\n    return LibraryElementSearchResultFromJSONTyped(json, false);\n}\n\nexport function LibraryElementSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementSearchResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'elements': json['elements'] == null ? undefined : ((json['elements'] as Array<any>).map(LibraryElementDTOFromJSON)),\n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function LibraryElementSearchResultToJSON(json: any): LibraryElementSearchResult {\n    return LibraryElementSearchResultToJSONTyped(json, false);\n}\n\nexport function LibraryElementSearchResultToJSONTyped(value?: LibraryElementSearchResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'elements': value['elements'] == null ? undefined : ((value['elements'] as Array<any>).map(LibraryElementDTOToJSON)),\n        'page': value['page'],\n        'perPage': value['perPage'],\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { LibraryElementSearchResult } from './LibraryElementSearchResult';\nimport {\n    LibraryElementSearchResultFromJSON,\n    LibraryElementSearchResultFromJSONTyped,\n    LibraryElementSearchResultToJSON,\n    LibraryElementSearchResultToJSONTyped,\n} from './LibraryElementSearchResult';\n\n/**\n * \n * @export\n * @interface LibraryElementSearchResponse\n */\nexport interface LibraryElementSearchResponse {\n    /**\n     * \n     * @type {LibraryElementSearchResult}\n     * @memberof LibraryElementSearchResponse\n     */\n    result?: LibraryElementSearchResult;\n}\n\n/**\n * Check if a given object implements the LibraryElementSearchResponse interface.\n */\nexport function instanceOfLibraryElementSearchResponse(value: object): value is LibraryElementSearchResponse {\n    return true;\n}\n\nexport function LibraryElementSearchResponseFromJSON(json: any): LibraryElementSearchResponse {\n    return LibraryElementSearchResponseFromJSONTyped(json, false);\n}\n\nexport function LibraryElementSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryElementSearchResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : LibraryElementSearchResultFromJSON(json['result']),\n    };\n}\n\nexport function LibraryElementSearchResponseToJSON(json: any): LibraryElementSearchResponse {\n    return LibraryElementSearchResponseToJSONTyped(json, false);\n}\n\nexport function LibraryElementSearchResponseToJSONTyped(value?: LibraryElementSearchResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': LibraryElementSearchResultToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ListAllProvidersSettings200ResponseInner\n */\nexport interface ListAllProvidersSettings200ResponseInner {\n    /**\n     * \n     * @type {string}\n     * @memberof ListAllProvidersSettings200ResponseInner\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ListAllProvidersSettings200ResponseInner\n     */\n    provider?: string;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof ListAllProvidersSettings200ResponseInner\n     */\n    settings?: { [key: string]: object; };\n    /**\n     * \n     * @type {string}\n     * @memberof ListAllProvidersSettings200ResponseInner\n     */\n    source?: string;\n}\n\n/**\n * Check if a given object implements the ListAllProvidersSettings200ResponseInner interface.\n */\nexport function instanceOfListAllProvidersSettings200ResponseInner(value: object): value is ListAllProvidersSettings200ResponseInner {\n    return true;\n}\n\nexport function ListAllProvidersSettings200ResponseInnerFromJSON(json: any): ListAllProvidersSettings200ResponseInner {\n    return ListAllProvidersSettings200ResponseInnerFromJSONTyped(json, false);\n}\n\nexport function ListAllProvidersSettings200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListAllProvidersSettings200ResponseInner {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'provider': json['provider'] == null ? undefined : json['provider'],\n        'settings': json['settings'] == null ? undefined : json['settings'],\n        'source': json['source'] == null ? undefined : json['source'],\n    };\n}\n\nexport function ListAllProvidersSettings200ResponseInnerToJSON(json: any): ListAllProvidersSettings200ResponseInner {\n    return ListAllProvidersSettings200ResponseInnerToJSONTyped(json, false);\n}\n\nexport function ListAllProvidersSettings200ResponseInnerToJSONTyped(value?: ListAllProvidersSettings200ResponseInner | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'provider': value['provider'],\n        'settings': value['settings'],\n        'source': value['source'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ListSortOptions200Response\n */\nexport interface ListSortOptions200Response {\n    /**\n     * \n     * @type {string}\n     * @memberof ListSortOptions200Response\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ListSortOptions200Response\n     */\n    displayName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ListSortOptions200Response\n     */\n    meta?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ListSortOptions200Response\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the ListSortOptions200Response interface.\n */\nexport function instanceOfListSortOptions200Response(value: object): value is ListSortOptions200Response {\n    return true;\n}\n\nexport function ListSortOptions200ResponseFromJSON(json: any): ListSortOptions200Response {\n    return ListSortOptions200ResponseFromJSONTyped(json, false);\n}\n\nexport function ListSortOptions200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListSortOptions200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'meta': json['meta'] == null ? undefined : json['meta'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function ListSortOptions200ResponseToJSON(json: any): ListSortOptions200Response {\n    return ListSortOptions200ResponseToJSONTyped(json, false);\n}\n\nexport function ListSortOptions200ResponseToJSONTyped(value?: ListSortOptions200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'displayName': value['displayName'],\n        'meta': value['meta'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MassDeleteAnnotationsCmd\n */\nexport interface MassDeleteAnnotationsCmd {\n    /**\n     * \n     * @type {number}\n     * @memberof MassDeleteAnnotationsCmd\n     */\n    annotationId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof MassDeleteAnnotationsCmd\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof MassDeleteAnnotationsCmd\n     */\n    dashboardUID?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof MassDeleteAnnotationsCmd\n     */\n    panelId?: number;\n}\n\n/**\n * Check if a given object implements the MassDeleteAnnotationsCmd interface.\n */\nexport function instanceOfMassDeleteAnnotationsCmd(value: object): value is MassDeleteAnnotationsCmd {\n    return true;\n}\n\nexport function MassDeleteAnnotationsCmdFromJSON(json: any): MassDeleteAnnotationsCmd {\n    return MassDeleteAnnotationsCmdFromJSONTyped(json, false);\n}\n\nexport function MassDeleteAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): MassDeleteAnnotationsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotationId': json['annotationId'] == null ? undefined : json['annotationId'],\n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'dashboardUID': json['dashboardUID'] == null ? undefined : json['dashboardUID'],\n        'panelId': json['panelId'] == null ? undefined : json['panelId'],\n    };\n}\n\nexport function MassDeleteAnnotationsCmdToJSON(json: any): MassDeleteAnnotationsCmd {\n    return MassDeleteAnnotationsCmdToJSONTyped(json, false);\n}\n\nexport function MassDeleteAnnotationsCmdToJSONTyped(value?: MassDeleteAnnotationsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotationId': value['annotationId'],\n        'dashboardId': value['dashboardId'],\n        'dashboardUID': value['dashboardUID'],\n        'panelId': value['panelId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MetricRequest\n */\nexport interface MetricRequest {\n    /**\n     * \n     * @type {boolean}\n     * @memberof MetricRequest\n     */\n    debug?: boolean;\n    /**\n     * From Start time in epoch timestamps in milliseconds or relative using Grafana time units.\n     * @type {string}\n     * @memberof MetricRequest\n     */\n    from: string;\n    /**\n     * queries.refId – Specifies an identifier of the query. Is optional and default to “A”.\n     * queries.datasourceId – Specifies the data source to be queried. Each query in the request must have an unique datasourceId.\n     * queries.maxDataPoints - Species maximum amount of data points that dashboard panel can render. Is optional and default to 100.\n     * queries.intervalMs - Specifies the time interval in milliseconds of time series. Is optional and defaults to 1000.\n     * @type {Array<object>}\n     * @memberof MetricRequest\n     */\n    queries: Array<object>;\n    /**\n     * To End time in epoch timestamps in milliseconds or relative using Grafana time units.\n     * @type {string}\n     * @memberof MetricRequest\n     */\n    to: string;\n}\n\n/**\n * Check if a given object implements the MetricRequest interface.\n */\nexport function instanceOfMetricRequest(value: object): value is MetricRequest {\n    if (!('from' in value) || value['from'] === undefined) return false;\n    if (!('queries' in value) || value['queries'] === undefined) return false;\n    if (!('to' in value) || value['to'] === undefined) return false;\n    return true;\n}\n\nexport function MetricRequestFromJSON(json: any): MetricRequest {\n    return MetricRequestFromJSONTyped(json, false);\n}\n\nexport function MetricRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricRequest {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'debug': json['debug'] == null ? undefined : json['debug'],\n        'from': json['from'],\n        'queries': json['queries'],\n        'to': json['to'],\n    };\n}\n\nexport function MetricRequestToJSON(json: any): MetricRequest {\n    return MetricRequestToJSONTyped(json, false);\n}\n\nexport function MetricRequestToJSONTyped(value?: MetricRequest | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'debug': value['debug'],\n        'from': value['from'],\n        'queries': value['queries'],\n        'to': value['to'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { MigrateDataResponseItemDTO } from './MigrateDataResponseItemDTO';\nimport {\n    MigrateDataResponseItemDTOFromJSON,\n    MigrateDataResponseItemDTOFromJSONTyped,\n    MigrateDataResponseItemDTOToJSON,\n    MigrateDataResponseItemDTOToJSONTyped,\n} from './MigrateDataResponseItemDTO';\n\n/**\n * \n * @export\n * @interface MigrateDataResponseDTO\n */\nexport interface MigrateDataResponseDTO {\n    /**\n     * \n     * @type {Array<MigrateDataResponseItemDTO>}\n     * @memberof MigrateDataResponseDTO\n     */\n    items?: Array<MigrateDataResponseItemDTO>;\n    /**\n     * \n     * @type {string}\n     * @memberof MigrateDataResponseDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the MigrateDataResponseDTO interface.\n */\nexport function instanceOfMigrateDataResponseDTO(value: object): value is MigrateDataResponseDTO {\n    return true;\n}\n\nexport function MigrateDataResponseDTOFromJSON(json: any): MigrateDataResponseDTO {\n    return MigrateDataResponseDTOFromJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MigrateDataResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(MigrateDataResponseItemDTOFromJSON)),\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function MigrateDataResponseDTOToJSON(json: any): MigrateDataResponseDTO {\n    return MigrateDataResponseDTOToJSONTyped(json, false);\n}\n\nexport function MigrateDataResponseDTOToJSONTyped(value?: MigrateDataResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(MigrateDataResponseItemDTOToJSON)),\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * MoveFolderCommand captures the information required by the folder service\n * to move a folder.\n * @export\n * @interface MoveFolderCommand\n */\nexport interface MoveFolderCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof MoveFolderCommand\n     */\n    parentUid?: string;\n}\n\n/**\n * Check if a given object implements the MoveFolderCommand interface.\n */\nexport function instanceOfMoveFolderCommand(value: object): value is MoveFolderCommand {\n    return true;\n}\n\nexport function MoveFolderCommandFromJSON(json: any): MoveFolderCommand {\n    return MoveFolderCommandFromJSONTyped(json, false);\n}\n\nexport function MoveFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): MoveFolderCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'parentUid': json['parentUid'] == null ? undefined : json['parentUid'],\n    };\n}\n\nexport function MoveFolderCommandToJSON(json: any): MoveFolderCommand {\n    return MoveFolderCommandToJSONTyped(json, false);\n}\n\nexport function MoveFolderCommandToJSONTyped(value?: MoveFolderCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'parentUid': value['parentUid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NavbarPreference\n */\nexport interface NavbarPreference {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof NavbarPreference\n     */\n    bookmarkUrls?: Array<string>;\n}\n\n/**\n * Check if a given object implements the NavbarPreference interface.\n */\nexport function instanceOfNavbarPreference(value: object): value is NavbarPreference {\n    return true;\n}\n\nexport function NavbarPreferenceFromJSON(json: any): NavbarPreference {\n    return NavbarPreferenceFromJSONTyped(json, false);\n}\n\nexport function NavbarPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NavbarPreference {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'bookmarkUrls': json['bookmarkUrls'] == null ? undefined : json['bookmarkUrls'],\n    };\n}\n\nexport function NavbarPreferenceToJSON(json: any): NavbarPreference {\n    return NavbarPreferenceToJSONTyped(json, false);\n}\n\nexport function NavbarPreferenceToJSONTyped(value?: NavbarPreference | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'bookmarkUrls': value['bookmarkUrls'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NewApiKeyResult\n */\nexport interface NewApiKeyResult {\n    /**\n     * \n     * @type {number}\n     * @memberof NewApiKeyResult\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof NewApiKeyResult\n     */\n    key?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NewApiKeyResult\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the NewApiKeyResult interface.\n */\nexport function instanceOfNewApiKeyResult(value: object): value is NewApiKeyResult {\n    return true;\n}\n\nexport function NewApiKeyResultFromJSON(json: any): NewApiKeyResult {\n    return NewApiKeyResultFromJSONTyped(json, false);\n}\n\nexport function NewApiKeyResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewApiKeyResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'key': json['key'] == null ? undefined : json['key'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function NewApiKeyResultToJSON(json: any): NewApiKeyResult {\n    return NewApiKeyResultToJSONTyped(json, false);\n}\n\nexport function NewApiKeyResultToJSONTyped(value?: NewApiKeyResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'key': value['key'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NotificationTemplate\n */\nexport interface NotificationTemplate {\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplate\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplate\n     */\n    provenance?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplate\n     */\n    template?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplate\n     */\n    version?: string;\n}\n\n/**\n * Check if a given object implements the NotificationTemplate interface.\n */\nexport function instanceOfNotificationTemplate(value: object): value is NotificationTemplate {\n    return true;\n}\n\nexport function NotificationTemplateFromJSON(json: any): NotificationTemplate {\n    return NotificationTemplateFromJSONTyped(json, false);\n}\n\nexport function NotificationTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTemplate {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'provenance': json['provenance'] == null ? undefined : json['provenance'],\n        'template': json['template'] == null ? undefined : json['template'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function NotificationTemplateToJSON(json: any): NotificationTemplate {\n    return NotificationTemplateToJSONTyped(json, false);\n}\n\nexport function NotificationTemplateToJSONTyped(value?: NotificationTemplate | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'provenance': value['provenance'],\n        'template': value['template'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NotificationTemplateContent\n */\nexport interface NotificationTemplateContent {\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplateContent\n     */\n    template?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof NotificationTemplateContent\n     */\n    version?: string;\n}\n\n/**\n * Check if a given object implements the NotificationTemplateContent interface.\n */\nexport function instanceOfNotificationTemplateContent(value: object): value is NotificationTemplateContent {\n    return true;\n}\n\nexport function NotificationTemplateContentFromJSON(json: any): NotificationTemplateContent {\n    return NotificationTemplateContentFromJSONTyped(json, false);\n}\n\nexport function NotificationTemplateContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationTemplateContent {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'template': json['template'] == null ? undefined : json['template'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function NotificationTemplateContentToJSON(json: any): NotificationTemplateContent {\n    return NotificationTemplateContentToJSONTyped(json, false);\n}\n\nexport function NotificationTemplateContentToJSONTyped(value?: NotificationTemplateContent | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'template': value['template'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NotifierConfig\n */\nexport interface NotifierConfig {\n    /**\n     * \n     * @type {boolean}\n     * @memberof NotifierConfig\n     */\n    sendResolved?: boolean;\n}\n\n/**\n * Check if a given object implements the NotifierConfig interface.\n */\nexport function instanceOfNotifierConfig(value: object): value is NotifierConfig {\n    return true;\n}\n\nexport function NotifierConfigFromJSON(json: any): NotifierConfig {\n    return NotifierConfigFromJSONTyped(json, false);\n}\n\nexport function NotifierConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotifierConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'sendResolved': json['send_resolved'] == null ? undefined : json['send_resolved'],\n    };\n}\n\nexport function NotifierConfigToJSON(json: any): NotifierConfig {\n    return NotifierConfigToJSONTyped(json, false);\n}\n\nexport function NotifierConfigToJSONTyped(value?: NotifierConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'send_resolved': value['sendResolved'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrgDTO\n */\nexport interface OrgDTO {\n    /**\n     * \n     * @type {number}\n     * @memberof OrgDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgDTO\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the OrgDTO interface.\n */\nexport function instanceOfOrgDTO(value: object): value is OrgDTO {\n    return true;\n}\n\nexport function OrgDTOFromJSON(json: any): OrgDTO {\n    return OrgDTOFromJSONTyped(json, false);\n}\n\nexport function OrgDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function OrgDTOToJSON(json: any): OrgDTO {\n    return OrgDTOToJSONTyped(json, false);\n}\n\nexport function OrgDTOToJSONTyped(value?: OrgDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Address } from './Address';\nimport {\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    AddressToJSONTyped,\n} from './Address';\n\n/**\n * \n * @export\n * @interface OrgDetailsDTO\n */\nexport interface OrgDetailsDTO {\n    /**\n     * \n     * @type {Address}\n     * @memberof OrgDetailsDTO\n     */\n    address?: Address;\n    /**\n     * \n     * @type {number}\n     * @memberof OrgDetailsDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgDetailsDTO\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the OrgDetailsDTO interface.\n */\nexport function instanceOfOrgDetailsDTO(value: object): value is OrgDetailsDTO {\n    return true;\n}\n\nexport function OrgDetailsDTOFromJSON(json: any): OrgDetailsDTO {\n    return OrgDetailsDTOFromJSONTyped(json, false);\n}\n\nexport function OrgDetailsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgDetailsDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),\n        'id': json['id'] == null ? undefined : json['id'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function OrgDetailsDTOToJSON(json: any): OrgDetailsDTO {\n    return OrgDetailsDTOToJSONTyped(json, false);\n}\n\nexport function OrgDetailsDTOToJSONTyped(value?: OrgDetailsDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'address': AddressToJSON(value['address']),\n        'id': value['id'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface OrgUserDTO\n */\nexport interface OrgUserDTO {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof OrgUserDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof OrgUserDTO\n     */\n    authLabels?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrgUserDTO\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrgUserDTO\n     */\n    isExternallySynced?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof OrgUserDTO\n     */\n    lastSeenAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    lastSeenAtAge?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrgUserDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrgUserDTO\n     */\n    role?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrgUserDTO\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the OrgUserDTO interface.\n */\nexport function instanceOfOrgUserDTO(value: object): value is OrgUserDTO {\n    return true;\n}\n\nexport function OrgUserDTOFromJSON(json: any): OrgUserDTO {\n    return OrgUserDTOFromJSONTyped(json, false);\n}\n\nexport function OrgUserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrgUserDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'authLabels': json['authLabels'] == null ? undefined : json['authLabels'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'email': json['email'] == null ? undefined : json['email'],\n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'isExternallySynced': json['isExternallySynced'] == null ? undefined : json['isExternallySynced'],\n        'lastSeenAt': json['lastSeenAt'] == null ? undefined : (new Date(json['lastSeenAt'])),\n        'lastSeenAtAge': json['lastSeenAtAge'] == null ? undefined : json['lastSeenAtAge'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function OrgUserDTOToJSON(json: any): OrgUserDTO {\n    return OrgUserDTOToJSONTyped(json, false);\n}\n\nexport function OrgUserDTOToJSONTyped(value?: OrgUserDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'authLabels': value['authLabels'],\n        'avatarUrl': value['avatarUrl'],\n        'email': value['email'],\n        'isDisabled': value['isDisabled'],\n        'isExternallySynced': value['isExternallySynced'],\n        'lastSeenAt': value['lastSeenAt'] == null ? undefined : ((value['lastSeenAt']).toISOString()),\n        'lastSeenAtAge': value['lastSeenAtAge'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'role': value['role'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PatchAnnotationsCmd\n */\nexport interface PatchAnnotationsCmd {\n    /**\n     * \n     * @type {object}\n     * @memberof PatchAnnotationsCmd\n     */\n    data?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof PatchAnnotationsCmd\n     */\n    id?: number;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof PatchAnnotationsCmd\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchAnnotationsCmd\n     */\n    text?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PatchAnnotationsCmd\n     */\n    time?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PatchAnnotationsCmd\n     */\n    timeEnd?: number;\n}\n\n/**\n * Check if a given object implements the PatchAnnotationsCmd interface.\n */\nexport function instanceOfPatchAnnotationsCmd(value: object): value is PatchAnnotationsCmd {\n    return true;\n}\n\nexport function PatchAnnotationsCmdFromJSON(json: any): PatchAnnotationsCmd {\n    return PatchAnnotationsCmdFromJSONTyped(json, false);\n}\n\nexport function PatchAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchAnnotationsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : json['data'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'time': json['time'] == null ? undefined : json['time'],\n        'timeEnd': json['timeEnd'] == null ? undefined : json['timeEnd'],\n    };\n}\n\nexport function PatchAnnotationsCmdToJSON(json: any): PatchAnnotationsCmd {\n    return PatchAnnotationsCmdToJSONTyped(json, false);\n}\n\nexport function PatchAnnotationsCmdToJSONTyped(value?: PatchAnnotationsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': value['data'],\n        'id': value['id'],\n        'tags': value['tags'],\n        'text': value['text'],\n        'time': value['time'],\n        'timeEnd': value['timeEnd'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * PatchLibraryElementCommand is the command for patching a LibraryElement\n * @export\n * @interface PatchLibraryElementCommand\n */\nexport interface PatchLibraryElementCommand {\n    /**\n     * ID of the folder where the library element is stored.\n     * \n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof PatchLibraryElementCommand\n     */\n    folderId?: number;\n    /**\n     * UID of the folder where the library element is stored.\n     * @type {string}\n     * @memberof PatchLibraryElementCommand\n     */\n    folderUid?: string;\n    /**\n     * Kind of element to create, Use 1 for library panels or 2 for c.\n     * Description:\n     * 1 - library panels\n     * 2 - library variables\n     * @type {number}\n     * @memberof PatchLibraryElementCommand\n     */\n    kind?: PatchLibraryElementCommandKindEnum;\n    /**\n     * The JSON model for the library element.\n     * @type {object}\n     * @memberof PatchLibraryElementCommand\n     */\n    model?: object;\n    /**\n     * Name of the library element.\n     * @type {string}\n     * @memberof PatchLibraryElementCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchLibraryElementCommand\n     */\n    uid?: string;\n    /**\n     * Version of the library element you are updating.\n     * @type {number}\n     * @memberof PatchLibraryElementCommand\n     */\n    version?: number;\n}\n\n\n/**\n * @export\n */\nexport const PatchLibraryElementCommandKindEnum = {\n    NUMBER_1: 1,\n    NUMBER_2: 2\n} as const;\nexport type PatchLibraryElementCommandKindEnum = typeof PatchLibraryElementCommandKindEnum[keyof typeof PatchLibraryElementCommandKindEnum];\n\n\n/**\n * Check if a given object implements the PatchLibraryElementCommand interface.\n */\nexport function instanceOfPatchLibraryElementCommand(value: object): value is PatchLibraryElementCommand {\n    return true;\n}\n\nexport function PatchLibraryElementCommandFromJSON(json: any): PatchLibraryElementCommand {\n    return PatchLibraryElementCommandFromJSONTyped(json, false);\n}\n\nexport function PatchLibraryElementCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchLibraryElementCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'model': json['model'] == null ? undefined : json['model'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function PatchLibraryElementCommandToJSON(json: any): PatchLibraryElementCommand {\n    return PatchLibraryElementCommandToJSONTyped(json, false);\n}\n\nexport function PatchLibraryElementCommandToJSONTyped(value?: PatchLibraryElementCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'kind': value['kind'],\n        'model': value['model'],\n        'name': value['name'],\n        'uid': value['uid'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface QueryHistoryPreference\n */\nexport interface QueryHistoryPreference {\n    /**\n     * HomeTab one of: '' | 'query' | 'starred';\n     * @type {string}\n     * @memberof QueryHistoryPreference\n     */\n    homeTab?: string;\n}\n\n/**\n * Check if a given object implements the QueryHistoryPreference interface.\n */\nexport function instanceOfQueryHistoryPreference(value: object): value is QueryHistoryPreference {\n    return true;\n}\n\nexport function QueryHistoryPreferenceFromJSON(json: any): QueryHistoryPreference {\n    return QueryHistoryPreferenceFromJSONTyped(json, false);\n}\n\nexport function QueryHistoryPreferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryPreference {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'homeTab': json['homeTab'] == null ? undefined : json['homeTab'],\n    };\n}\n\nexport function QueryHistoryPreferenceToJSON(json: any): QueryHistoryPreference {\n    return QueryHistoryPreferenceToJSONTyped(json, false);\n}\n\nexport function QueryHistoryPreferenceToJSONTyped(value?: QueryHistoryPreference | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'homeTab': value['homeTab'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { NavbarPreference } from './NavbarPreference';\nimport {\n    NavbarPreferenceFromJSON,\n    NavbarPreferenceFromJSONTyped,\n    NavbarPreferenceToJSON,\n    NavbarPreferenceToJSONTyped,\n} from './NavbarPreference';\nimport type { QueryHistoryPreference } from './QueryHistoryPreference';\nimport {\n    QueryHistoryPreferenceFromJSON,\n    QueryHistoryPreferenceFromJSONTyped,\n    QueryHistoryPreferenceToJSON,\n    QueryHistoryPreferenceToJSONTyped,\n} from './QueryHistoryPreference';\n\n/**\n * \n * @export\n * @interface PatchPrefsCmd\n */\nexport interface PatchPrefsCmd {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof PatchPrefsCmd\n     */\n    cookies?: Array<string>;\n    /**\n     * The numerical :id of a favorited dashboard\n     * @type {number}\n     * @memberof PatchPrefsCmd\n     */\n    homeDashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchPrefsCmd\n     */\n    homeDashboardUID?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchPrefsCmd\n     */\n    language?: string;\n    /**\n     * \n     * @type {NavbarPreference}\n     * @memberof PatchPrefsCmd\n     */\n    navbar?: NavbarPreference;\n    /**\n     * \n     * @type {QueryHistoryPreference}\n     * @memberof PatchPrefsCmd\n     */\n    queryHistory?: QueryHistoryPreference;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchPrefsCmd\n     */\n    theme?: PatchPrefsCmdThemeEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchPrefsCmd\n     */\n    timezone?: PatchPrefsCmdTimezoneEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof PatchPrefsCmd\n     */\n    weekStart?: string;\n}\n\n\n/**\n * @export\n */\nexport const PatchPrefsCmdThemeEnum = {\n    Light: 'light',\n    Dark: 'dark'\n} as const;\nexport type PatchPrefsCmdThemeEnum = typeof PatchPrefsCmdThemeEnum[keyof typeof PatchPrefsCmdThemeEnum];\n\n/**\n * @export\n */\nexport const PatchPrefsCmdTimezoneEnum = {\n    Utc: 'utc',\n    Browser: 'browser'\n} as const;\nexport type PatchPrefsCmdTimezoneEnum = typeof PatchPrefsCmdTimezoneEnum[keyof typeof PatchPrefsCmdTimezoneEnum];\n\n\n/**\n * Check if a given object implements the PatchPrefsCmd interface.\n */\nexport function instanceOfPatchPrefsCmd(value: object): value is PatchPrefsCmd {\n    return true;\n}\n\nexport function PatchPrefsCmdFromJSON(json: any): PatchPrefsCmd {\n    return PatchPrefsCmdFromJSONTyped(json, false);\n}\n\nexport function PatchPrefsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchPrefsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'cookies': json['cookies'] == null ? undefined : json['cookies'],\n        'homeDashboardId': json['homeDashboardId'] == null ? undefined : json['homeDashboardId'],\n        'homeDashboardUID': json['homeDashboardUID'] == null ? undefined : json['homeDashboardUID'],\n        'language': json['language'] == null ? undefined : json['language'],\n        'navbar': json['navbar'] == null ? undefined : NavbarPreferenceFromJSON(json['navbar']),\n        'queryHistory': json['queryHistory'] == null ? undefined : QueryHistoryPreferenceFromJSON(json['queryHistory']),\n        'theme': json['theme'] == null ? undefined : json['theme'],\n        'timezone': json['timezone'] == null ? undefined : json['timezone'],\n        'weekStart': json['weekStart'] == null ? undefined : json['weekStart'],\n    };\n}\n\nexport function PatchPrefsCmdToJSON(json: any): PatchPrefsCmd {\n    return PatchPrefsCmdToJSONTyped(json, false);\n}\n\nexport function PatchPrefsCmdToJSONTyped(value?: PatchPrefsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'cookies': value['cookies'],\n        'homeDashboardId': value['homeDashboardId'],\n        'homeDashboardUID': value['homeDashboardUID'],\n        'language': value['language'],\n        'navbar': NavbarPreferenceToJSON(value['navbar']),\n        'queryHistory': QueryHistoryPreferenceToJSON(value['queryHistory']),\n        'theme': value['theme'],\n        'timezone': value['timezone'],\n        'weekStart': value['weekStart'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * PatchQueryCommentInQueryHistoryCommand is the command for updating comment for query in query history\n * @export\n * @interface PatchQueryCommentInQueryHistoryCommand\n */\nexport interface PatchQueryCommentInQueryHistoryCommand {\n    /**\n     * Updated comment\n     * @type {string}\n     * @memberof PatchQueryCommentInQueryHistoryCommand\n     */\n    comment?: string;\n}\n\n/**\n * Check if a given object implements the PatchQueryCommentInQueryHistoryCommand interface.\n */\nexport function instanceOfPatchQueryCommentInQueryHistoryCommand(value: object): value is PatchQueryCommentInQueryHistoryCommand {\n    return true;\n}\n\nexport function PatchQueryCommentInQueryHistoryCommandFromJSON(json: any): PatchQueryCommentInQueryHistoryCommand {\n    return PatchQueryCommentInQueryHistoryCommandFromJSONTyped(json, false);\n}\n\nexport function PatchQueryCommentInQueryHistoryCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchQueryCommentInQueryHistoryCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'comment': json['comment'] == null ? undefined : json['comment'],\n    };\n}\n\nexport function PatchQueryCommentInQueryHistoryCommandToJSON(json: any): PatchQueryCommentInQueryHistoryCommand {\n    return PatchQueryCommentInQueryHistoryCommandToJSONTyped(json, false);\n}\n\nexport function PatchQueryCommentInQueryHistoryCommandToJSONTyped(value?: PatchQueryCommentInQueryHistoryCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'comment': value['comment'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Playlist model\n * @export\n * @interface Playlist\n */\nexport interface Playlist {\n    /**\n     * \n     * @type {number}\n     * @memberof Playlist\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Playlist\n     */\n    interval?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Playlist\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Playlist\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the Playlist interface.\n */\nexport function instanceOfPlaylist(value: object): value is Playlist {\n    return true;\n}\n\nexport function PlaylistFromJSON(json: any): Playlist {\n    return PlaylistFromJSONTyped(json, false);\n}\n\nexport function PlaylistFromJSONTyped(json: any, ignoreDiscriminator: boolean): Playlist {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PlaylistToJSON(json: any): Playlist {\n    return PlaylistToJSONTyped(json, false);\n}\n\nexport function PlaylistToJSONTyped(value?: Playlist | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'interval': value['interval'],\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PlaylistItemDTO\n */\nexport interface PlaylistItemDTO {\n    /**\n     * Title is an unused property -- it will be removed in the future\n     * @type {string}\n     * @memberof PlaylistItemDTO\n     */\n    title?: string;\n    /**\n     * Type of the item.\n     * @type {string}\n     * @memberof PlaylistItemDTO\n     */\n    type?: string;\n    /**\n     * Value depends on type and describes the playlist item.\n     * \n     * dashboard_by_id: The value is an internal numerical identifier set by Grafana. This\n     * is not portable as the numerical identifier is non-deterministic between different instances.\n     * Will be replaced by dashboard_by_uid in the future. (deprecated)\n     * dashboard_by_tag: The value is a tag which is set on any number of dashboards. All\n     * dashboards behind the tag will be added to the playlist.\n     * dashboard_by_uid: The value is the dashboard UID\n     * @type {string}\n     * @memberof PlaylistItemDTO\n     */\n    value?: string;\n}\n\n/**\n * Check if a given object implements the PlaylistItemDTO interface.\n */\nexport function instanceOfPlaylistItemDTO(value: object): value is PlaylistItemDTO {\n    return true;\n}\n\nexport function PlaylistItemDTOFromJSON(json: any): PlaylistItemDTO {\n    return PlaylistItemDTOFromJSONTyped(json, false);\n}\n\nexport function PlaylistItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistItemDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'title': json['title'] == null ? undefined : json['title'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'value': json['value'] == null ? undefined : json['value'],\n    };\n}\n\nexport function PlaylistItemDTOToJSON(json: any): PlaylistItemDTO {\n    return PlaylistItemDTOToJSONTyped(json, false);\n}\n\nexport function PlaylistItemDTOToJSONTyped(value?: PlaylistItemDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'title': value['title'],\n        'type': value['type'],\n        'value': value['value'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PlaylistItemDTO } from './PlaylistItemDTO';\nimport {\n    PlaylistItemDTOFromJSON,\n    PlaylistItemDTOFromJSONTyped,\n    PlaylistItemDTOToJSON,\n    PlaylistItemDTOToJSONTyped,\n} from './PlaylistItemDTO';\n\n/**\n * \n * @export\n * @interface PlaylistDTO\n */\nexport interface PlaylistDTO {\n    /**\n     * Interval sets the time between switching views in a playlist.\n     * @type {string}\n     * @memberof PlaylistDTO\n     */\n    interval?: string;\n    /**\n     * The ordered list of items that the playlist will iterate over.\n     * @type {Array<PlaylistItemDTO>}\n     * @memberof PlaylistDTO\n     */\n    items?: Array<PlaylistItemDTO>;\n    /**\n     * Name of the playlist.\n     * @type {string}\n     * @memberof PlaylistDTO\n     */\n    name?: string;\n    /**\n     * Unique playlist identifier. Generated on creation, either by the\n     * creator of the playlist of by the application.\n     * @type {string}\n     * @memberof PlaylistDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the PlaylistDTO interface.\n */\nexport function instanceOfPlaylistDTO(value: object): value is PlaylistDTO {\n    return true;\n}\n\nexport function PlaylistDTOFromJSON(json: any): PlaylistDTO {\n    return PlaylistDTOFromJSONTyped(json, false);\n}\n\nexport function PlaylistDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(PlaylistItemDTOFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PlaylistDTOToJSON(json: any): PlaylistDTO {\n    return PlaylistDTOToJSONTyped(json, false);\n}\n\nexport function PlaylistDTOToJSONTyped(value?: PlaylistDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'interval': value['interval'],\n        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(PlaylistItemDTOToJSON)),\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PlaylistDashboard\n */\nexport interface PlaylistDashboard {\n    /**\n     * \n     * @type {number}\n     * @memberof PlaylistDashboard\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PlaylistDashboard\n     */\n    order?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistDashboard\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistDashboard\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistDashboard\n     */\n    uri?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PlaylistDashboard\n     */\n    url?: string;\n}\n\n/**\n * Check if a given object implements the PlaylistDashboard interface.\n */\nexport function instanceOfPlaylistDashboard(value: object): value is PlaylistDashboard {\n    return true;\n}\n\nexport function PlaylistDashboardFromJSON(json: any): PlaylistDashboard {\n    return PlaylistDashboardFromJSONTyped(json, false);\n}\n\nexport function PlaylistDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistDashboard {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'order': json['order'] == null ? undefined : json['order'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uri': json['uri'] == null ? undefined : json['uri'],\n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function PlaylistDashboardToJSON(json: any): PlaylistDashboard {\n    return PlaylistDashboardToJSONTyped(json, false);\n}\n\nexport function PlaylistDashboardToJSONTyped(value?: PlaylistDashboard | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'order': value['order'],\n        'slug': value['slug'],\n        'title': value['title'],\n        'uri': value['uri'],\n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostAnnotation200Response\n */\nexport interface PostAnnotation200Response {\n    /**\n     * ID Identifier of the created annotation.\n     * @type {number}\n     * @memberof PostAnnotation200Response\n     */\n    id: number;\n    /**\n     * Message Message of the created annotation.\n     * @type {string}\n     * @memberof PostAnnotation200Response\n     */\n    message: string;\n}\n\n/**\n * Check if a given object implements the PostAnnotation200Response interface.\n */\nexport function instanceOfPostAnnotation200Response(value: object): value is PostAnnotation200Response {\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('message' in value) || value['message'] === undefined) return false;\n    return true;\n}\n\nexport function PostAnnotation200ResponseFromJSON(json: any): PostAnnotation200Response {\n    return PostAnnotation200ResponseFromJSONTyped(json, false);\n}\n\nexport function PostAnnotation200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAnnotation200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'message': json['message'],\n    };\n}\n\nexport function PostAnnotation200ResponseToJSON(json: any): PostAnnotation200Response {\n    return PostAnnotation200ResponseToJSONTyped(json, false);\n}\n\nexport function PostAnnotation200ResponseToJSONTyped(value?: PostAnnotation200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostAnnotationsCmd\n */\nexport interface PostAnnotationsCmd {\n    /**\n     * \n     * @type {number}\n     * @memberof PostAnnotationsCmd\n     */\n    dashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PostAnnotationsCmd\n     */\n    dashboardUID?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof PostAnnotationsCmd\n     */\n    data?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof PostAnnotationsCmd\n     */\n    panelId?: number;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof PostAnnotationsCmd\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof PostAnnotationsCmd\n     */\n    text: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PostAnnotationsCmd\n     */\n    time?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PostAnnotationsCmd\n     */\n    timeEnd?: number;\n}\n\n/**\n * Check if a given object implements the PostAnnotationsCmd interface.\n */\nexport function instanceOfPostAnnotationsCmd(value: object): value is PostAnnotationsCmd {\n    if (!('text' in value) || value['text'] === undefined) return false;\n    return true;\n}\n\nexport function PostAnnotationsCmdFromJSON(json: any): PostAnnotationsCmd {\n    return PostAnnotationsCmdFromJSONTyped(json, false);\n}\n\nexport function PostAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAnnotationsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dashboardId': json['dashboardId'] == null ? undefined : json['dashboardId'],\n        'dashboardUID': json['dashboardUID'] == null ? undefined : json['dashboardUID'],\n        'data': json['data'] == null ? undefined : json['data'],\n        'panelId': json['panelId'] == null ? undefined : json['panelId'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'text': json['text'],\n        'time': json['time'] == null ? undefined : json['time'],\n        'timeEnd': json['timeEnd'] == null ? undefined : json['timeEnd'],\n    };\n}\n\nexport function PostAnnotationsCmdToJSON(json: any): PostAnnotationsCmd {\n    return PostAnnotationsCmdToJSONTyped(json, false);\n}\n\nexport function PostAnnotationsCmdToJSONTyped(value?: PostAnnotationsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'dashboardId': value['dashboardId'],\n        'dashboardUID': value['dashboardUID'],\n        'data': value['data'],\n        'panelId': value['panelId'],\n        'tags': value['tags'],\n        'text': value['text'],\n        'time': value['time'],\n        'timeEnd': value['timeEnd'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostDashboard200Response\n */\nexport interface PostDashboard200Response {\n    /**\n     * FolderUID The unique identifier (uid) of the folder the dashboard belongs to.\n     * @type {string}\n     * @memberof PostDashboard200Response\n     */\n    folderUid?: string;\n    /**\n     * ID The unique identifier (id) of the created/updated dashboard.\n     * @type {number}\n     * @memberof PostDashboard200Response\n     */\n    id: number;\n    /**\n     * Status status of the response.\n     * @type {string}\n     * @memberof PostDashboard200Response\n     */\n    status: string;\n    /**\n     * Slug The slug of the dashboard.\n     * @type {string}\n     * @memberof PostDashboard200Response\n     */\n    title: string;\n    /**\n     * UID The unique identifier (uid) of the created/updated dashboard.\n     * @type {string}\n     * @memberof PostDashboard200Response\n     */\n    uid: string;\n    /**\n     * URL The relative URL for accessing the created/updated dashboard.\n     * @type {string}\n     * @memberof PostDashboard200Response\n     */\n    url: string;\n    /**\n     * Version The version of the dashboard.\n     * @type {number}\n     * @memberof PostDashboard200Response\n     */\n    version: number;\n}\n\n/**\n * Check if a given object implements the PostDashboard200Response interface.\n */\nexport function instanceOfPostDashboard200Response(value: object): value is PostDashboard200Response {\n    if (!('id' in value) || value['id'] === undefined) return false;\n    if (!('status' in value) || value['status'] === undefined) return false;\n    if (!('title' in value) || value['title'] === undefined) return false;\n    if (!('uid' in value) || value['uid'] === undefined) return false;\n    if (!('url' in value) || value['url'] === undefined) return false;\n    if (!('version' in value) || value['version'] === undefined) return false;\n    return true;\n}\n\nexport function PostDashboard200ResponseFromJSON(json: any): PostDashboard200Response {\n    return PostDashboard200ResponseFromJSONTyped(json, false);\n}\n\nexport function PostDashboard200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDashboard200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'id': json['id'],\n        'status': json['status'],\n        'title': json['title'],\n        'uid': json['uid'],\n        'url': json['url'],\n        'version': json['version'],\n    };\n}\n\nexport function PostDashboard200ResponseToJSON(json: any): PostDashboard200Response {\n    return PostDashboard200ResponseToJSONTyped(json, false);\n}\n\nexport function PostDashboard200ResponseToJSONTyped(value?: PostDashboard200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderUid': value['folderUid'],\n        'id': value['id'],\n        'status': value['status'],\n        'title': value['title'],\n        'uid': value['uid'],\n        'url': value['url'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostGraphiteAnnotationsCmd\n */\nexport interface PostGraphiteAnnotationsCmd {\n    /**\n     * \n     * @type {string}\n     * @memberof PostGraphiteAnnotationsCmd\n     */\n    data?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof PostGraphiteAnnotationsCmd\n     */\n    tags?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof PostGraphiteAnnotationsCmd\n     */\n    what?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof PostGraphiteAnnotationsCmd\n     */\n    when?: number;\n}\n\n/**\n * Check if a given object implements the PostGraphiteAnnotationsCmd interface.\n */\nexport function instanceOfPostGraphiteAnnotationsCmd(value: object): value is PostGraphiteAnnotationsCmd {\n    return true;\n}\n\nexport function PostGraphiteAnnotationsCmdFromJSON(json: any): PostGraphiteAnnotationsCmd {\n    return PostGraphiteAnnotationsCmdFromJSONTyped(json, false);\n}\n\nexport function PostGraphiteAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostGraphiteAnnotationsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : json['data'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'what': json['what'] == null ? undefined : json['what'],\n        'when': json['when'] == null ? undefined : json['when'],\n    };\n}\n\nexport function PostGraphiteAnnotationsCmdToJSON(json: any): PostGraphiteAnnotationsCmd {\n    return PostGraphiteAnnotationsCmdToJSONTyped(json, false);\n}\n\nexport function PostGraphiteAnnotationsCmdToJSONTyped(value?: PostGraphiteAnnotationsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': value['data'],\n        'tags': value['tags'],\n        'what': value['what'],\n        'when': value['when'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostSilencesOKBody\n */\nexport interface PostSilencesOKBody {\n    /**\n     * silence ID\n     * @type {string}\n     * @memberof PostSilencesOKBody\n     */\n    silenceID?: string;\n}\n\n/**\n * Check if a given object implements the PostSilencesOKBody interface.\n */\nexport function instanceOfPostSilencesOKBody(value: object): value is PostSilencesOKBody {\n    return true;\n}\n\nexport function PostSilencesOKBodyFromJSON(json: any): PostSilencesOKBody {\n    return PostSilencesOKBodyFromJSONTyped(json, false);\n}\n\nexport function PostSilencesOKBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostSilencesOKBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'silenceID': json['silenceID'] == null ? undefined : json['silenceID'],\n    };\n}\n\nexport function PostSilencesOKBodyToJSON(json: any): PostSilencesOKBody {\n    return PostSilencesOKBodyToJSONTyped(json, false);\n}\n\nexport function PostSilencesOKBodyToJSONTyped(value?: PostSilencesOKBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'silenceID': value['silenceID'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * PostableAlert postable alert\n * @export\n * @interface PostableAlert\n */\nexport interface PostableAlert {\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof PostableAlert\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * ends at\n     * Format: date-time\n     * @type {Date}\n     * @memberof PostableAlert\n     */\n    endsAt?: Date;\n    /**\n     * generator URL\n     * Format: uri\n     * @type {string}\n     * @memberof PostableAlert\n     */\n    generatorURL?: string;\n    /**\n     * LabelSet label set\n     * @type {{ [key: string]: string; }}\n     * @memberof PostableAlert\n     */\n    labels: { [key: string]: string; };\n    /**\n     * starts at\n     * Format: date-time\n     * @type {Date}\n     * @memberof PostableAlert\n     */\n    startsAt?: Date;\n}\n\n/**\n * Check if a given object implements the PostableAlert interface.\n */\nexport function instanceOfPostableAlert(value: object): value is PostableAlert {\n    if (!('labels' in value) || value['labels'] === undefined) return false;\n    return true;\n}\n\nexport function PostableAlertFromJSON(json: any): PostableAlert {\n    return PostableAlertFromJSONTyped(json, false);\n}\n\nexport function PostableAlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableAlert {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'endsAt': json['endsAt'] == null ? undefined : (new Date(json['endsAt'])),\n        'generatorURL': json['generatorURL'] == null ? undefined : json['generatorURL'],\n        'labels': json['labels'],\n        'startsAt': json['startsAt'] == null ? undefined : (new Date(json['startsAt'])),\n    };\n}\n\nexport function PostableAlertToJSON(json: any): PostableAlert {\n    return PostableAlertToJSONTyped(json, false);\n}\n\nexport function PostableAlertToJSONTyped(value?: PostableAlert | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'endsAt': value['endsAt'] == null ? undefined : ((value['endsAt']).toISOString()),\n        'generatorURL': value['generatorURL'],\n        'labels': value['labels'],\n        'startsAt': value['startsAt'] == null ? undefined : ((value['startsAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertQuery } from './AlertQuery';\nimport {\n    AlertQueryFromJSON,\n    AlertQueryFromJSONTyped,\n    AlertQueryToJSON,\n    AlertQueryToJSONTyped,\n} from './AlertQuery';\nimport type { AlertRuleNotificationSettings } from './AlertRuleNotificationSettings';\nimport {\n    AlertRuleNotificationSettingsFromJSON,\n    AlertRuleNotificationSettingsFromJSONTyped,\n    AlertRuleNotificationSettingsToJSON,\n    AlertRuleNotificationSettingsToJSONTyped,\n} from './AlertRuleNotificationSettings';\nimport type { AlertRuleMetadata } from './AlertRuleMetadata';\nimport {\n    AlertRuleMetadataFromJSON,\n    AlertRuleMetadataFromJSONTyped,\n    AlertRuleMetadataToJSON,\n    AlertRuleMetadataToJSONTyped,\n} from './AlertRuleMetadata';\nimport type { Record } from './Record';\nimport {\n    RecordFromJSON,\n    RecordFromJSONTyped,\n    RecordToJSON,\n    RecordToJSONTyped,\n} from './Record';\n\n/**\n * \n * @export\n * @interface PostableGrafanaRule\n */\nexport interface PostableGrafanaRule {\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaRule\n     */\n    condition?: string;\n    /**\n     * \n     * @type {Array<AlertQuery>}\n     * @memberof PostableGrafanaRule\n     */\n    data?: Array<AlertQuery>;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaRule\n     */\n    execErrState?: PostableGrafanaRuleExecErrStateEnum;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PostableGrafanaRule\n     */\n    isPaused?: boolean;\n    /**\n     * \n     * @type {AlertRuleMetadata}\n     * @memberof PostableGrafanaRule\n     */\n    metadata?: AlertRuleMetadata;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaRule\n     */\n    noDataState?: PostableGrafanaRuleNoDataStateEnum;\n    /**\n     * \n     * @type {AlertRuleNotificationSettings}\n     * @memberof PostableGrafanaRule\n     */\n    notificationSettings?: AlertRuleNotificationSettings;\n    /**\n     * \n     * @type {Record}\n     * @memberof PostableGrafanaRule\n     */\n    record?: Record;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaRule\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableGrafanaRule\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const PostableGrafanaRuleExecErrStateEnum = {\n    Ok: 'OK',\n    Alerting: 'Alerting',\n    Error: 'Error'\n} as const;\nexport type PostableGrafanaRuleExecErrStateEnum = typeof PostableGrafanaRuleExecErrStateEnum[keyof typeof PostableGrafanaRuleExecErrStateEnum];\n\n/**\n * @export\n */\nexport const PostableGrafanaRuleNoDataStateEnum = {\n    Alerting: 'Alerting',\n    NoData: 'NoData',\n    Ok: 'OK'\n} as const;\nexport type PostableGrafanaRuleNoDataStateEnum = typeof PostableGrafanaRuleNoDataStateEnum[keyof typeof PostableGrafanaRuleNoDataStateEnum];\n\n\n/**\n * Check if a given object implements the PostableGrafanaRule interface.\n */\nexport function instanceOfPostableGrafanaRule(value: object): value is PostableGrafanaRule {\n    return true;\n}\n\nexport function PostableGrafanaRuleFromJSON(json: any): PostableGrafanaRule {\n    return PostableGrafanaRuleFromJSONTyped(json, false);\n}\n\nexport function PostableGrafanaRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'condition': json['condition'] == null ? undefined : json['condition'],\n        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(AlertQueryFromJSON)),\n        'execErrState': json['exec_err_state'] == null ? undefined : json['exec_err_state'],\n        'isPaused': json['is_paused'] == null ? undefined : json['is_paused'],\n        'metadata': json['metadata'] == null ? undefined : AlertRuleMetadataFromJSON(json['metadata']),\n        'noDataState': json['no_data_state'] == null ? undefined : json['no_data_state'],\n        'notificationSettings': json['notification_settings'] == null ? undefined : AlertRuleNotificationSettingsFromJSON(json['notification_settings']),\n        'record': json['record'] == null ? undefined : RecordFromJSON(json['record']),\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PostableGrafanaRuleToJSON(json: any): PostableGrafanaRule {\n    return PostableGrafanaRuleToJSONTyped(json, false);\n}\n\nexport function PostableGrafanaRuleToJSONTyped(value?: PostableGrafanaRule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'condition': value['condition'],\n        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(AlertQueryToJSON)),\n        'exec_err_state': value['execErrState'],\n        'is_paused': value['isPaused'],\n        'metadata': AlertRuleMetadataToJSON(value['metadata']),\n        'no_data_state': value['noDataState'],\n        'notification_settings': AlertRuleNotificationSettingsToJSON(value['notificationSettings']),\n        'record': RecordToJSON(value['record']),\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableGrafanaRule } from './PostableGrafanaRule';\nimport {\n    PostableGrafanaRuleFromJSON,\n    PostableGrafanaRuleFromJSONTyped,\n    PostableGrafanaRuleToJSON,\n    PostableGrafanaRuleToJSONTyped,\n} from './PostableGrafanaRule';\n\n/**\n * \n * @export\n * @interface PostableExtendedRuleNode\n */\nexport interface PostableExtendedRuleNode {\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNode\n     */\n    alert?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof PostableExtendedRuleNode\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNode\n     */\n    expr?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNode\n     */\n    _for?: string;\n    /**\n     * \n     * @type {PostableGrafanaRule}\n     * @memberof PostableExtendedRuleNode\n     */\n    grafanaAlert?: PostableGrafanaRule;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNode\n     */\n    keepFiringFor?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof PostableExtendedRuleNode\n     */\n    labels?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNode\n     */\n    record?: string;\n}\n\n/**\n * Check if a given object implements the PostableExtendedRuleNode interface.\n */\nexport function instanceOfPostableExtendedRuleNode(value: object): value is PostableExtendedRuleNode {\n    return true;\n}\n\nexport function PostableExtendedRuleNodeFromJSON(json: any): PostableExtendedRuleNode {\n    return PostableExtendedRuleNodeFromJSONTyped(json, false);\n}\n\nexport function PostableExtendedRuleNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableExtendedRuleNode {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alert': json['alert'] == null ? undefined : json['alert'],\n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'expr': json['expr'] == null ? undefined : json['expr'],\n        '_for': json['for'] == null ? undefined : json['for'],\n        'grafanaAlert': json['grafana_alert'] == null ? undefined : PostableGrafanaRuleFromJSON(json['grafana_alert']),\n        'keepFiringFor': json['keep_firing_for'] == null ? undefined : json['keep_firing_for'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'record': json['record'] == null ? undefined : json['record'],\n    };\n}\n\nexport function PostableExtendedRuleNodeToJSON(json: any): PostableExtendedRuleNode {\n    return PostableExtendedRuleNodeToJSONTyped(json, false);\n}\n\nexport function PostableExtendedRuleNodeToJSONTyped(value?: PostableExtendedRuleNode | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alert': value['alert'],\n        'annotations': value['annotations'],\n        'expr': value['expr'],\n        'for': value['_for'],\n        'grafana_alert': PostableGrafanaRuleToJSON(value['grafanaAlert']),\n        'keep_firing_for': value['keepFiringFor'],\n        'labels': value['labels'],\n        'record': value['record'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableExtendedRuleNode } from './PostableExtendedRuleNode';\nimport {\n    PostableExtendedRuleNodeFromJSON,\n    PostableExtendedRuleNodeFromJSONTyped,\n    PostableExtendedRuleNodeToJSON,\n    PostableExtendedRuleNodeToJSONTyped,\n} from './PostableExtendedRuleNode';\n\n/**\n * \n * @export\n * @interface PostableExtendedRuleNodeExtended\n */\nexport interface PostableExtendedRuleNodeExtended {\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNodeExtended\n     */\n    folderTitle?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNodeExtended\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {PostableExtendedRuleNode}\n     * @memberof PostableExtendedRuleNodeExtended\n     */\n    rule: PostableExtendedRuleNode;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableExtendedRuleNodeExtended\n     */\n    ruleGroup?: string;\n}\n\n/**\n * Check if a given object implements the PostableExtendedRuleNodeExtended interface.\n */\nexport function instanceOfPostableExtendedRuleNodeExtended(value: object): value is PostableExtendedRuleNodeExtended {\n    if (!('rule' in value) || value['rule'] === undefined) return false;\n    return true;\n}\n\nexport function PostableExtendedRuleNodeExtendedFromJSON(json: any): PostableExtendedRuleNodeExtended {\n    return PostableExtendedRuleNodeExtendedFromJSONTyped(json, false);\n}\n\nexport function PostableExtendedRuleNodeExtendedFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableExtendedRuleNodeExtended {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderTitle': json['folderTitle'] == null ? undefined : json['folderTitle'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'rule': PostableExtendedRuleNodeFromJSON(json['rule']),\n        'ruleGroup': json['ruleGroup'] == null ? undefined : json['ruleGroup'],\n    };\n}\n\nexport function PostableExtendedRuleNodeExtendedToJSON(json: any): PostableExtendedRuleNodeExtended {\n    return PostableExtendedRuleNodeExtendedToJSONTyped(json, false);\n}\n\nexport function PostableExtendedRuleNodeExtendedToJSONTyped(value?: PostableExtendedRuleNodeExtended | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderTitle': value['folderTitle'],\n        'folderUid': value['folderUid'],\n        'rule': PostableExtendedRuleNodeToJSON(value['rule']),\n        'ruleGroup': value['ruleGroup'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableGrafanaReceiver } from './PostableGrafanaReceiver';\nimport {\n    PostableGrafanaReceiverFromJSON,\n    PostableGrafanaReceiverFromJSONTyped,\n    PostableGrafanaReceiverToJSON,\n    PostableGrafanaReceiverToJSONTyped,\n} from './PostableGrafanaReceiver';\n\n/**\n * \n * @export\n * @interface PostableGrafanaReceivers\n */\nexport interface PostableGrafanaReceivers {\n    /**\n     * \n     * @type {Array<PostableGrafanaReceiver>}\n     * @memberof PostableGrafanaReceivers\n     */\n    grafanaManagedReceiverConfigs?: Array<PostableGrafanaReceiver>;\n}\n\n/**\n * Check if a given object implements the PostableGrafanaReceivers interface.\n */\nexport function instanceOfPostableGrafanaReceivers(value: object): value is PostableGrafanaReceivers {\n    return true;\n}\n\nexport function PostableGrafanaReceiversFromJSON(json: any): PostableGrafanaReceivers {\n    return PostableGrafanaReceiversFromJSONTyped(json, false);\n}\n\nexport function PostableGrafanaReceiversFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableGrafanaReceivers {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'grafanaManagedReceiverConfigs': json['grafana_managed_receiver_configs'] == null ? undefined : ((json['grafana_managed_receiver_configs'] as Array<any>).map(PostableGrafanaReceiverFromJSON)),\n    };\n}\n\nexport function PostableGrafanaReceiversToJSON(json: any): PostableGrafanaReceivers {\n    return PostableGrafanaReceiversToJSONTyped(json, false);\n}\n\nexport function PostableGrafanaReceiversToJSONTyped(value?: PostableGrafanaReceivers | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'grafana_managed_receiver_configs': value['grafanaManagedReceiverConfigs'] == null ? undefined : ((value['grafanaManagedReceiverConfigs'] as Array<any>).map(PostableGrafanaReceiverToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PostableNGalertConfig\n */\nexport interface PostableNGalertConfig {\n    /**\n     * \n     * @type {string}\n     * @memberof PostableNGalertConfig\n     */\n    alertmanagersChoice?: PostableNGalertConfigAlertmanagersChoiceEnum;\n}\n\n\n/**\n * @export\n */\nexport const PostableNGalertConfigAlertmanagersChoiceEnum = {\n    All: 'all',\n    Internal: 'internal',\n    External: 'external'\n} as const;\nexport type PostableNGalertConfigAlertmanagersChoiceEnum = typeof PostableNGalertConfigAlertmanagersChoiceEnum[keyof typeof PostableNGalertConfigAlertmanagersChoiceEnum];\n\n\n/**\n * Check if a given object implements the PostableNGalertConfig interface.\n */\nexport function instanceOfPostableNGalertConfig(value: object): value is PostableNGalertConfig {\n    return true;\n}\n\nexport function PostableNGalertConfigFromJSON(json: any): PostableNGalertConfig {\n    return PostableNGalertConfigFromJSONTyped(json, false);\n}\n\nexport function PostableNGalertConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableNGalertConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagersChoice': json['alertmanagersChoice'] == null ? undefined : json['alertmanagersChoice'],\n    };\n}\n\nexport function PostableNGalertConfigToJSON(json: any): PostableNGalertConfig {\n    return PostableNGalertConfigToJSONTyped(json, false);\n}\n\nexport function PostableNGalertConfigToJSONTyped(value?: PostableNGalertConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanagersChoice': value['alertmanagersChoice'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableExtendedRuleNode } from './PostableExtendedRuleNode';\nimport {\n    PostableExtendedRuleNodeFromJSON,\n    PostableExtendedRuleNodeFromJSONTyped,\n    PostableExtendedRuleNodeToJSON,\n    PostableExtendedRuleNodeToJSONTyped,\n} from './PostableExtendedRuleNode';\n\n/**\n * \n * @export\n * @interface PostableRuleGroupConfig\n */\nexport interface PostableRuleGroupConfig {\n    /**\n     * \n     * @type {boolean}\n     * @memberof PostableRuleGroupConfig\n     */\n    alignEvaluationTimeOnInterval?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableRuleGroupConfig\n     */\n    evaluationDelay?: string;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof PostableRuleGroupConfig\n     */\n    interval?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PostableRuleGroupConfig\n     */\n    limit?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableRuleGroupConfig\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableRuleGroupConfig\n     */\n    queryOffset?: string;\n    /**\n     * \n     * @type {Array<PostableExtendedRuleNode>}\n     * @memberof PostableRuleGroupConfig\n     */\n    rules?: Array<PostableExtendedRuleNode>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof PostableRuleGroupConfig\n     */\n    sourceTenants?: Array<string>;\n}\n\n/**\n * Check if a given object implements the PostableRuleGroupConfig interface.\n */\nexport function instanceOfPostableRuleGroupConfig(value: object): value is PostableRuleGroupConfig {\n    return true;\n}\n\nexport function PostableRuleGroupConfigFromJSON(json: any): PostableRuleGroupConfig {\n    return PostableRuleGroupConfigFromJSONTyped(json, false);\n}\n\nexport function PostableRuleGroupConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableRuleGroupConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alignEvaluationTimeOnInterval': json['align_evaluation_time_on_interval'] == null ? undefined : json['align_evaluation_time_on_interval'],\n        'evaluationDelay': json['evaluation_delay'] == null ? undefined : json['evaluation_delay'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'queryOffset': json['query_offset'] == null ? undefined : json['query_offset'],\n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(PostableExtendedRuleNodeFromJSON)),\n        'sourceTenants': json['source_tenants'] == null ? undefined : json['source_tenants'],\n    };\n}\n\nexport function PostableRuleGroupConfigToJSON(json: any): PostableRuleGroupConfig {\n    return PostableRuleGroupConfigToJSONTyped(json, false);\n}\n\nexport function PostableRuleGroupConfigToJSONTyped(value?: PostableRuleGroupConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'align_evaluation_time_on_interval': value['alignEvaluationTimeOnInterval'],\n        'evaluation_delay': value['evaluationDelay'],\n        'interval': value['interval'],\n        'limit': value['limit'],\n        'name': value['name'],\n        'query_offset': value['queryOffset'],\n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(PostableExtendedRuleNodeToJSON)),\n        'source_tenants': value['sourceTenants'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * PostableSilence postable silence\n * @export\n * @interface PostableSilence\n */\nexport interface PostableSilence {\n    /**\n     * comment\n     * @type {string}\n     * @memberof PostableSilence\n     */\n    comment: string;\n    /**\n     * created by\n     * @type {string}\n     * @memberof PostableSilence\n     */\n    createdBy: string;\n    /**\n     * ends at\n     * @type {Date}\n     * @memberof PostableSilence\n     */\n    endsAt: Date;\n    /**\n     * id\n     * @type {string}\n     * @memberof PostableSilence\n     */\n    id?: string;\n    /**\n     * Matchers matchers\n     * @type {Array<Matcher>}\n     * @memberof PostableSilence\n     */\n    matchers: Array<Matcher>;\n    /**\n     * starts at\n     * @type {Date}\n     * @memberof PostableSilence\n     */\n    startsAt: Date;\n}\n\n/**\n * Check if a given object implements the PostableSilence interface.\n */\nexport function instanceOfPostableSilence(value: object): value is PostableSilence {\n    if (!('comment' in value) || value['comment'] === undefined) return false;\n    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;\n    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;\n    if (!('matchers' in value) || value['matchers'] === undefined) return false;\n    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;\n    return true;\n}\n\nexport function PostableSilenceFromJSON(json: any): PostableSilence {\n    return PostableSilenceFromJSONTyped(json, false);\n}\n\nexport function PostableSilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableSilence {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'comment': json['comment'],\n        'createdBy': json['createdBy'],\n        'endsAt': (new Date(json['endsAt'])),\n        'id': json['id'] == null ? undefined : json['id'],\n        'matchers': ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'startsAt': (new Date(json['startsAt'])),\n    };\n}\n\nexport function PostableSilenceToJSON(json: any): PostableSilence {\n    return PostableSilenceToJSONTyped(json, false);\n}\n\nexport function PostableSilenceToJSONTyped(value?: PostableSilence | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'comment': value['comment'],\n        'createdBy': value['createdBy'],\n        'endsAt': ((value['endsAt']).toISOString()),\n        'id': value['id'],\n        'matchers': ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'startsAt': ((value['startsAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TimeIntervalItem } from './TimeIntervalItem';\nimport {\n    TimeIntervalItemFromJSON,\n    TimeIntervalItemFromJSONTyped,\n    TimeIntervalItemToJSON,\n    TimeIntervalItemToJSONTyped,\n} from './TimeIntervalItem';\n\n/**\n * \n * @export\n * @interface PostableTimeIntervals\n */\nexport interface PostableTimeIntervals {\n    /**\n     * \n     * @type {string}\n     * @memberof PostableTimeIntervals\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<TimeIntervalItem>}\n     * @memberof PostableTimeIntervals\n     */\n    timeIntervals?: Array<TimeIntervalItem>;\n    /**\n     * \n     * @type {string}\n     * @memberof PostableTimeIntervals\n     */\n    version?: string;\n}\n\n/**\n * Check if a given object implements the PostableTimeIntervals interface.\n */\nexport function instanceOfPostableTimeIntervals(value: object): value is PostableTimeIntervals {\n    return true;\n}\n\nexport function PostableTimeIntervalsFromJSON(json: any): PostableTimeIntervals {\n    return PostableTimeIntervalsFromJSONTyped(json, false);\n}\n\nexport function PostableTimeIntervalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableTimeIntervals {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'timeIntervals': json['time_intervals'] == null ? undefined : ((json['time_intervals'] as Array<any>).map(TimeIntervalItemFromJSON)),\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function PostableTimeIntervalsToJSON(json: any): PostableTimeIntervals {\n    return PostableTimeIntervalsToJSONTyped(json, false);\n}\n\nexport function PostableTimeIntervalsToJSONTyped(value?: PostableTimeIntervals | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'time_intervals': value['timeIntervals'] == null ? undefined : ((value['timeIntervals'] as Array<any>).map(TimeIntervalItemToJSON)),\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableApiAlertingConfig } from './PostableApiAlertingConfig';\nimport {\n    PostableApiAlertingConfigFromJSON,\n    PostableApiAlertingConfigFromJSONTyped,\n    PostableApiAlertingConfigToJSON,\n    PostableApiAlertingConfigToJSONTyped,\n} from './PostableApiAlertingConfig';\n\n/**\n * \n * @export\n * @interface PostableUserConfig\n */\nexport interface PostableUserConfig {\n    /**\n     * \n     * @type {PostableApiAlertingConfig}\n     * @memberof PostableUserConfig\n     */\n    alertmanagerConfig?: PostableApiAlertingConfig;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof PostableUserConfig\n     */\n    templateFiles?: { [key: string]: string; };\n}\n\n/**\n * Check if a given object implements the PostableUserConfig interface.\n */\nexport function instanceOfPostableUserConfig(value: object): value is PostableUserConfig {\n    return true;\n}\n\nexport function PostableUserConfigFromJSON(json: any): PostableUserConfig {\n    return PostableUserConfigFromJSONTyped(json, false);\n}\n\nexport function PostableUserConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostableUserConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alertmanagerConfig': json['alertmanager_config'] == null ? undefined : PostableApiAlertingConfigFromJSON(json['alertmanager_config']),\n        'templateFiles': json['template_files'] == null ? undefined : json['template_files'],\n    };\n}\n\nexport function PostableUserConfigToJSON(json: any): PostableUserConfig {\n    return PostableUserConfigToJSONTyped(json, false);\n}\n\nexport function PostableUserConfigToJSONTyped(value?: PostableUserConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alertmanager_config': PostableApiAlertingConfigToJSON(value['alertmanagerConfig']),\n        'template_files': value['templateFiles'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { NavbarPreference } from './NavbarPreference';\nimport {\n    NavbarPreferenceFromJSON,\n    NavbarPreferenceFromJSONTyped,\n    NavbarPreferenceToJSON,\n    NavbarPreferenceToJSONTyped,\n} from './NavbarPreference';\nimport type { QueryHistoryPreference } from './QueryHistoryPreference';\nimport {\n    QueryHistoryPreferenceFromJSON,\n    QueryHistoryPreferenceFromJSONTyped,\n    QueryHistoryPreferenceToJSON,\n    QueryHistoryPreferenceToJSONTyped,\n} from './QueryHistoryPreference';\nimport type { CookiePreferences } from './CookiePreferences';\nimport {\n    CookiePreferencesFromJSON,\n    CookiePreferencesFromJSONTyped,\n    CookiePreferencesToJSON,\n    CookiePreferencesToJSONTyped,\n} from './CookiePreferences';\n\n/**\n * Spec defines user, team or org Grafana preferences\n * @export\n * @interface Preferences\n */\nexport interface Preferences {\n    /**\n     * \n     * @type {CookiePreferences}\n     * @memberof Preferences\n     */\n    cookiePreferences?: CookiePreferences;\n    /**\n     * UID for the home dashboard\n     * @type {string}\n     * @memberof Preferences\n     */\n    homeDashboardUID?: string;\n    /**\n     * Selected language (beta)\n     * @type {string}\n     * @memberof Preferences\n     */\n    language?: string;\n    /**\n     * \n     * @type {NavbarPreference}\n     * @memberof Preferences\n     */\n    navbar?: NavbarPreference;\n    /**\n     * \n     * @type {QueryHistoryPreference}\n     * @memberof Preferences\n     */\n    queryHistory?: QueryHistoryPreference;\n    /**\n     * Theme light, dark, empty is default\n     * @type {string}\n     * @memberof Preferences\n     */\n    theme?: string;\n    /**\n     * The timezone selection\n     * TODO: this should use the timezone defined in common\n     * @type {string}\n     * @memberof Preferences\n     */\n    timezone?: string;\n    /**\n     * WeekStart day of the week (sunday, monday, etc)\n     * @type {string}\n     * @memberof Preferences\n     */\n    weekStart?: string;\n}\n\n/**\n * Check if a given object implements the Preferences interface.\n */\nexport function instanceOfPreferences(value: object): value is Preferences {\n    return true;\n}\n\nexport function PreferencesFromJSON(json: any): Preferences {\n    return PreferencesFromJSONTyped(json, false);\n}\n\nexport function PreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Preferences {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'cookiePreferences': json['cookiePreferences'] == null ? undefined : CookiePreferencesFromJSON(json['cookiePreferences']),\n        'homeDashboardUID': json['homeDashboardUID'] == null ? undefined : json['homeDashboardUID'],\n        'language': json['language'] == null ? undefined : json['language'],\n        'navbar': json['navbar'] == null ? undefined : NavbarPreferenceFromJSON(json['navbar']),\n        'queryHistory': json['queryHistory'] == null ? undefined : QueryHistoryPreferenceFromJSON(json['queryHistory']),\n        'theme': json['theme'] == null ? undefined : json['theme'],\n        'timezone': json['timezone'] == null ? undefined : json['timezone'],\n        'weekStart': json['weekStart'] == null ? undefined : json['weekStart'],\n    };\n}\n\nexport function PreferencesToJSON(json: any): Preferences {\n    return PreferencesToJSONTyped(json, false);\n}\n\nexport function PreferencesToJSONTyped(value?: Preferences | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'cookiePreferences': CookiePreferencesToJSON(value['cookiePreferences']),\n        'homeDashboardUID': value['homeDashboardUID'],\n        'language': value['language'],\n        'navbar': NavbarPreferenceToJSON(value['navbar']),\n        'queryHistory': QueryHistoryPreferenceToJSON(value['queryHistory']),\n        'theme': value['theme'],\n        'timezone': value['timezone'],\n        'weekStart': value['weekStart'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PrometheusRemoteWriteTargetJSON\n */\nexport interface PrometheusRemoteWriteTargetJSON {\n    /**\n     * \n     * @type {string}\n     * @memberof PrometheusRemoteWriteTargetJSON\n     */\n    dataSourceUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PrometheusRemoteWriteTargetJSON\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PrometheusRemoteWriteTargetJSON\n     */\n    remoteWritePath?: string;\n}\n\n/**\n * Check if a given object implements the PrometheusRemoteWriteTargetJSON interface.\n */\nexport function instanceOfPrometheusRemoteWriteTargetJSON(value: object): value is PrometheusRemoteWriteTargetJSON {\n    return true;\n}\n\nexport function PrometheusRemoteWriteTargetJSONFromJSON(json: any): PrometheusRemoteWriteTargetJSON {\n    return PrometheusRemoteWriteTargetJSONFromJSONTyped(json, false);\n}\n\nexport function PrometheusRemoteWriteTargetJSONFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrometheusRemoteWriteTargetJSON {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'dataSourceUid': json['data_source_uid'] == null ? undefined : json['data_source_uid'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'remoteWritePath': json['remote_write_path'] == null ? undefined : json['remote_write_path'],\n    };\n}\n\nexport function PrometheusRemoteWriteTargetJSONToJSON(json: any): PrometheusRemoteWriteTargetJSON {\n    return PrometheusRemoteWriteTargetJSONToJSONTyped(json, false);\n}\n\nexport function PrometheusRemoteWriteTargetJSONToJSONTyped(value?: PrometheusRemoteWriteTargetJSON | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data_source_uid': value['dataSourceUid'],\n        'id': value['id'],\n        'remote_write_path': value['remoteWritePath'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { URL } from './URL';\nimport {\n    URLFromJSON,\n    URLFromJSONTyped,\n    URLToJSON,\n    URLToJSONTyped,\n} from './URL';\n\n/**\n * \n * @export\n * @interface ProxyConfig\n */\nexport interface ProxyConfig {\n    /**\n     * NoProxy contains addresses that should not use a proxy.\n     * @type {string}\n     * @memberof ProxyConfig\n     */\n    noProxy?: string;\n    /**\n     * \n     * @type {{ [key: string]: Array<string>; }}\n     * @memberof ProxyConfig\n     */\n    proxyConnectHeader?: { [key: string]: Array<string>; };\n    /**\n     * ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function\n     * to determine proxies.\n     * @type {boolean}\n     * @memberof ProxyConfig\n     */\n    proxyFromEnvironment?: boolean;\n    /**\n     * \n     * @type {URL}\n     * @memberof ProxyConfig\n     */\n    proxyUrl?: URL;\n}\n\n/**\n * Check if a given object implements the ProxyConfig interface.\n */\nexport function instanceOfProxyConfig(value: object): value is ProxyConfig {\n    return true;\n}\n\nexport function ProxyConfigFromJSON(json: any): ProxyConfig {\n    return ProxyConfigFromJSONTyped(json, false);\n}\n\nexport function ProxyConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxyConfig {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'noProxy': json['no_proxy'] == null ? undefined : json['no_proxy'],\n        'proxyConnectHeader': json['proxy_connect_header'] == null ? undefined : json['proxy_connect_header'],\n        'proxyFromEnvironment': json['proxy_from_environment'] == null ? undefined : json['proxy_from_environment'],\n        'proxyUrl': json['proxy_url'] == null ? undefined : URLFromJSON(json['proxy_url']),\n    };\n}\n\nexport function ProxyConfigToJSON(json: any): ProxyConfig {\n    return ProxyConfigToJSONTyped(json, false);\n}\n\nexport function ProxyConfigToJSONTyped(value?: ProxyConfig | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'no_proxy': value['noProxy'],\n        'proxy_connect_header': value['proxyConnectHeader'],\n        'proxy_from_environment': value['proxyFromEnvironment'],\n        'proxy_url': URLToJSON(value['proxyUrl']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { EmailDTO } from './EmailDTO';\nimport {\n    EmailDTOFromJSON,\n    EmailDTOFromJSONTyped,\n    EmailDTOToJSON,\n    EmailDTOToJSONTyped,\n} from './EmailDTO';\n\n/**\n * \n * @export\n * @interface PublicDashboard\n */\nexport interface PublicDashboard {\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboard\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboard\n     */\n    annotationsEnabled?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof PublicDashboard\n     */\n    createdAt?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof PublicDashboard\n     */\n    createdBy?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboard\n     */\n    dashboardUid?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboard\n     */\n    isEnabled?: boolean;\n    /**\n     * \n     * @type {Array<EmailDTO>}\n     * @memberof PublicDashboard\n     */\n    recipients?: Array<EmailDTO>;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboard\n     */\n    share?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboard\n     */\n    timeSelectionEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboard\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof PublicDashboard\n     */\n    updatedAt?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof PublicDashboard\n     */\n    updatedBy?: number;\n}\n\n/**\n * Check if a given object implements the PublicDashboard interface.\n */\nexport function instanceOfPublicDashboard(value: object): value is PublicDashboard {\n    return true;\n}\n\nexport function PublicDashboardFromJSON(json: any): PublicDashboard {\n    return PublicDashboardFromJSONTyped(json, false);\n}\n\nexport function PublicDashboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboard {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],\n        'annotationsEnabled': json['annotationsEnabled'] == null ? undefined : json['annotationsEnabled'],\n        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),\n        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],\n        'dashboardUid': json['dashboardUid'] == null ? undefined : json['dashboardUid'],\n        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],\n        'recipients': json['recipients'] == null ? undefined : ((json['recipients'] as Array<any>).map(EmailDTOFromJSON)),\n        'share': json['share'] == null ? undefined : json['share'],\n        'timeSelectionEnabled': json['timeSelectionEnabled'] == null ? undefined : json['timeSelectionEnabled'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),\n        'updatedBy': json['updatedBy'] == null ? undefined : json['updatedBy'],\n    };\n}\n\nexport function PublicDashboardToJSON(json: any): PublicDashboard {\n    return PublicDashboardToJSONTyped(json, false);\n}\n\nexport function PublicDashboardToJSONTyped(value?: PublicDashboard | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessToken': value['accessToken'],\n        'annotationsEnabled': value['annotationsEnabled'],\n        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),\n        'createdBy': value['createdBy'],\n        'dashboardUid': value['dashboardUid'],\n        'isEnabled': value['isEnabled'],\n        'recipients': value['recipients'] == null ? undefined : ((value['recipients'] as Array<any>).map(EmailDTOToJSON)),\n        'share': value['share'],\n        'timeSelectionEnabled': value['timeSelectionEnabled'],\n        'uid': value['uid'],\n        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n        'updatedBy': value['updatedBy'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PublicDashboardDTO\n */\nexport interface PublicDashboardDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardDTO\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboardDTO\n     */\n    annotationsEnabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboardDTO\n     */\n    isEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardDTO\n     */\n    share?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboardDTO\n     */\n    timeSelectionEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the PublicDashboardDTO interface.\n */\nexport function instanceOfPublicDashboardDTO(value: object): value is PublicDashboardDTO {\n    return true;\n}\n\nexport function PublicDashboardDTOFromJSON(json: any): PublicDashboardDTO {\n    return PublicDashboardDTOFromJSONTyped(json, false);\n}\n\nexport function PublicDashboardDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],\n        'annotationsEnabled': json['annotationsEnabled'] == null ? undefined : json['annotationsEnabled'],\n        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],\n        'share': json['share'] == null ? undefined : json['share'],\n        'timeSelectionEnabled': json['timeSelectionEnabled'] == null ? undefined : json['timeSelectionEnabled'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PublicDashboardDTOToJSON(json: any): PublicDashboardDTO {\n    return PublicDashboardDTOToJSONTyped(json, false);\n}\n\nexport function PublicDashboardDTOToJSONTyped(value?: PublicDashboardDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessToken': value['accessToken'],\n        'annotationsEnabled': value['annotationsEnabled'],\n        'isEnabled': value['isEnabled'],\n        'share': value['share'],\n        'timeSelectionEnabled': value['timeSelectionEnabled'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PublicDashboardListResponse\n */\nexport interface PublicDashboardListResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardListResponse\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardListResponse\n     */\n    dashboardUid?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof PublicDashboardListResponse\n     */\n    isEnabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardListResponse\n     */\n    slug?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardListResponse\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof PublicDashboardListResponse\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the PublicDashboardListResponse interface.\n */\nexport function instanceOfPublicDashboardListResponse(value: object): value is PublicDashboardListResponse {\n    return true;\n}\n\nexport function PublicDashboardListResponseFromJSON(json: any): PublicDashboardListResponse {\n    return PublicDashboardListResponseFromJSONTyped(json, false);\n}\n\nexport function PublicDashboardListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardListResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessToken': json['accessToken'] == null ? undefined : json['accessToken'],\n        'dashboardUid': json['dashboardUid'] == null ? undefined : json['dashboardUid'],\n        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function PublicDashboardListResponseToJSON(json: any): PublicDashboardListResponse {\n    return PublicDashboardListResponseToJSONTyped(json, false);\n}\n\nexport function PublicDashboardListResponseToJSONTyped(value?: PublicDashboardListResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessToken': value['accessToken'],\n        'dashboardUid': value['dashboardUid'],\n        'isEnabled': value['isEnabled'],\n        'slug': value['slug'],\n        'title': value['title'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PublicDashboardListResponse } from './PublicDashboardListResponse';\nimport {\n    PublicDashboardListResponseFromJSON,\n    PublicDashboardListResponseFromJSONTyped,\n    PublicDashboardListResponseToJSON,\n    PublicDashboardListResponseToJSONTyped,\n} from './PublicDashboardListResponse';\n\n/**\n * \n * @export\n * @interface PublicDashboardListResponseWithPagination\n */\nexport interface PublicDashboardListResponseWithPagination {\n    /**\n     * \n     * @type {number}\n     * @memberof PublicDashboardListResponseWithPagination\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PublicDashboardListResponseWithPagination\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {Array<PublicDashboardListResponse>}\n     * @memberof PublicDashboardListResponseWithPagination\n     */\n    publicDashboards?: Array<PublicDashboardListResponse>;\n    /**\n     * \n     * @type {number}\n     * @memberof PublicDashboardListResponseWithPagination\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the PublicDashboardListResponseWithPagination interface.\n */\nexport function instanceOfPublicDashboardListResponseWithPagination(value: object): value is PublicDashboardListResponseWithPagination {\n    return true;\n}\n\nexport function PublicDashboardListResponseWithPaginationFromJSON(json: any): PublicDashboardListResponseWithPagination {\n    return PublicDashboardListResponseWithPaginationFromJSONTyped(json, false);\n}\n\nexport function PublicDashboardListResponseWithPaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDashboardListResponseWithPagination {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'publicDashboards': json['publicDashboards'] == null ? undefined : ((json['publicDashboards'] as Array<any>).map(PublicDashboardListResponseFromJSON)),\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function PublicDashboardListResponseWithPaginationToJSON(json: any): PublicDashboardListResponseWithPagination {\n    return PublicDashboardListResponseWithPaginationToJSONTyped(json, false);\n}\n\nexport function PublicDashboardListResponseWithPaginationToJSONTyped(value?: PublicDashboardListResponseWithPagination | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'page': value['page'],\n        'perPage': value['perPage'],\n        'publicDashboards': value['publicDashboards'] == null ? undefined : ((value['publicDashboards'] as Array<any>).map(PublicDashboardListResponseToJSON)),\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DataResponse } from './DataResponse';\nimport {\n    DataResponseFromJSON,\n    DataResponseFromJSONTyped,\n    DataResponseToJSON,\n    DataResponseToJSONTyped,\n} from './DataResponse';\n\n/**\n * It is the return type of a QueryData call.\n * @export\n * @interface QueryDataResponse\n */\nexport interface QueryDataResponse {\n    /**\n     * The QueryData method the QueryDataHandler method will set the RefId\n     * property on the DataResponses' frames based on these RefIDs.\n     * @type {{ [key: string]: DataResponse; }}\n     * @memberof QueryDataResponse\n     */\n    results?: { [key: string]: DataResponse; };\n}\n\n/**\n * Check if a given object implements the QueryDataResponse interface.\n */\nexport function instanceOfQueryDataResponse(value: object): value is QueryDataResponse {\n    return true;\n}\n\nexport function QueryDataResponseFromJSON(json: any): QueryDataResponse {\n    return QueryDataResponseFromJSONTyped(json, false);\n}\n\nexport function QueryDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryDataResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'results': json['results'] == null ? undefined : (mapValues(json['results'], DataResponseFromJSON)),\n    };\n}\n\nexport function QueryDataResponseToJSON(json: any): QueryDataResponse {\n    return QueryDataResponseToJSONTyped(json, false);\n}\n\nexport function QueryDataResponseToJSONTyped(value?: QueryDataResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'results': value['results'] == null ? undefined : (mapValues(value['results'], DataResponseToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface QueryHistoryDTO\n */\nexport interface QueryHistoryDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof QueryHistoryDTO\n     */\n    comment?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistoryDTO\n     */\n    createdAt?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistoryDTO\n     */\n    createdBy?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QueryHistoryDTO\n     */\n    datasourceUid?: string;\n    /**\n     * \n     * @type {object}\n     * @memberof QueryHistoryDTO\n     */\n    queries?: object;\n    /**\n     * \n     * @type {boolean}\n     * @memberof QueryHistoryDTO\n     */\n    starred?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof QueryHistoryDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the QueryHistoryDTO interface.\n */\nexport function instanceOfQueryHistoryDTO(value: object): value is QueryHistoryDTO {\n    return true;\n}\n\nexport function QueryHistoryDTOFromJSON(json: any): QueryHistoryDTO {\n    return QueryHistoryDTOFromJSONTyped(json, false);\n}\n\nexport function QueryHistoryDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'comment': json['comment'] == null ? undefined : json['comment'],\n        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],\n        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],\n        'datasourceUid': json['datasourceUid'] == null ? undefined : json['datasourceUid'],\n        'queries': json['queries'] == null ? undefined : json['queries'],\n        'starred': json['starred'] == null ? undefined : json['starred'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function QueryHistoryDTOToJSON(json: any): QueryHistoryDTO {\n    return QueryHistoryDTOToJSONTyped(json, false);\n}\n\nexport function QueryHistoryDTOToJSONTyped(value?: QueryHistoryDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'comment': value['comment'],\n        'createdAt': value['createdAt'],\n        'createdBy': value['createdBy'],\n        'datasourceUid': value['datasourceUid'],\n        'queries': value['queries'],\n        'starred': value['starred'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * QueryHistoryDeleteQueryResponse is the response struct for deleting a query from query history\n * @export\n * @interface QueryHistoryDeleteQueryResponse\n */\nexport interface QueryHistoryDeleteQueryResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistoryDeleteQueryResponse\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QueryHistoryDeleteQueryResponse\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the QueryHistoryDeleteQueryResponse interface.\n */\nexport function instanceOfQueryHistoryDeleteQueryResponse(value: object): value is QueryHistoryDeleteQueryResponse {\n    return true;\n}\n\nexport function QueryHistoryDeleteQueryResponseFromJSON(json: any): QueryHistoryDeleteQueryResponse {\n    return QueryHistoryDeleteQueryResponseFromJSONTyped(json, false);\n}\n\nexport function QueryHistoryDeleteQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryDeleteQueryResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function QueryHistoryDeleteQueryResponseToJSON(json: any): QueryHistoryDeleteQueryResponse {\n    return QueryHistoryDeleteQueryResponseToJSONTyped(json, false);\n}\n\nexport function QueryHistoryDeleteQueryResponseToJSONTyped(value?: QueryHistoryDeleteQueryResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { QueryHistoryDTO } from './QueryHistoryDTO';\nimport {\n    QueryHistoryDTOFromJSON,\n    QueryHistoryDTOFromJSONTyped,\n    QueryHistoryDTOToJSON,\n    QueryHistoryDTOToJSONTyped,\n} from './QueryHistoryDTO';\n\n/**\n * QueryHistoryResponse is a response struct for QueryHistoryDTO\n * @export\n * @interface QueryHistoryResponse\n */\nexport interface QueryHistoryResponse {\n    /**\n     * \n     * @type {QueryHistoryDTO}\n     * @memberof QueryHistoryResponse\n     */\n    result?: QueryHistoryDTO;\n}\n\n/**\n * Check if a given object implements the QueryHistoryResponse interface.\n */\nexport function instanceOfQueryHistoryResponse(value: object): value is QueryHistoryResponse {\n    return true;\n}\n\nexport function QueryHistoryResponseFromJSON(json: any): QueryHistoryResponse {\n    return QueryHistoryResponseFromJSONTyped(json, false);\n}\n\nexport function QueryHistoryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistoryResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : QueryHistoryDTOFromJSON(json['result']),\n    };\n}\n\nexport function QueryHistoryResponseToJSON(json: any): QueryHistoryResponse {\n    return QueryHistoryResponseToJSONTyped(json, false);\n}\n\nexport function QueryHistoryResponseToJSONTyped(value?: QueryHistoryResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': QueryHistoryDTOToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { QueryHistoryDTO } from './QueryHistoryDTO';\nimport {\n    QueryHistoryDTOFromJSON,\n    QueryHistoryDTOFromJSONTyped,\n    QueryHistoryDTOToJSON,\n    QueryHistoryDTOToJSONTyped,\n} from './QueryHistoryDTO';\n\n/**\n * \n * @export\n * @interface QueryHistorySearchResult\n */\nexport interface QueryHistorySearchResult {\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistorySearchResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistorySearchResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {Array<QueryHistoryDTO>}\n     * @memberof QueryHistorySearchResult\n     */\n    queryHistory?: Array<QueryHistoryDTO>;\n    /**\n     * \n     * @type {number}\n     * @memberof QueryHistorySearchResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the QueryHistorySearchResult interface.\n */\nexport function instanceOfQueryHistorySearchResult(value: object): value is QueryHistorySearchResult {\n    return true;\n}\n\nexport function QueryHistorySearchResultFromJSON(json: any): QueryHistorySearchResult {\n    return QueryHistorySearchResultFromJSONTyped(json, false);\n}\n\nexport function QueryHistorySearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistorySearchResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'queryHistory': json['queryHistory'] == null ? undefined : ((json['queryHistory'] as Array<any>).map(QueryHistoryDTOFromJSON)),\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function QueryHistorySearchResultToJSON(json: any): QueryHistorySearchResult {\n    return QueryHistorySearchResultToJSONTyped(json, false);\n}\n\nexport function QueryHistorySearchResultToJSONTyped(value?: QueryHistorySearchResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'page': value['page'],\n        'perPage': value['perPage'],\n        'queryHistory': value['queryHistory'] == null ? undefined : ((value['queryHistory'] as Array<any>).map(QueryHistoryDTOToJSON)),\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { QueryHistorySearchResult } from './QueryHistorySearchResult';\nimport {\n    QueryHistorySearchResultFromJSON,\n    QueryHistorySearchResultFromJSONTyped,\n    QueryHistorySearchResultToJSON,\n    QueryHistorySearchResultToJSONTyped,\n} from './QueryHistorySearchResult';\n\n/**\n * \n * @export\n * @interface QueryHistorySearchResponse\n */\nexport interface QueryHistorySearchResponse {\n    /**\n     * \n     * @type {QueryHistorySearchResult}\n     * @memberof QueryHistorySearchResponse\n     */\n    result?: QueryHistorySearchResult;\n}\n\n/**\n * Check if a given object implements the QueryHistorySearchResponse interface.\n */\nexport function instanceOfQueryHistorySearchResponse(value: object): value is QueryHistorySearchResponse {\n    return true;\n}\n\nexport function QueryHistorySearchResponseFromJSON(json: any): QueryHistorySearchResponse {\n    return QueryHistorySearchResponseFromJSONTyped(json, false);\n}\n\nexport function QueryHistorySearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHistorySearchResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : QueryHistorySearchResultFromJSON(json['result']),\n    };\n}\n\nexport function QueryHistorySearchResponseToJSON(json: any): QueryHistorySearchResponse {\n    return QueryHistorySearchResponseToJSONTyped(json, false);\n}\n\nexport function QueryHistorySearchResponseToJSONTyped(value?: QueryHistorySearchResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': QueryHistorySearchResultToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface QuotaDTO\n */\nexport interface QuotaDTO {\n    /**\n     * \n     * @type {number}\n     * @memberof QuotaDTO\n     */\n    limit?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof QuotaDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof QuotaDTO\n     */\n    target?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof QuotaDTO\n     */\n    used?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof QuotaDTO\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the QuotaDTO interface.\n */\nexport function instanceOfQuotaDTO(value: object): value is QuotaDTO {\n    return true;\n}\n\nexport function QuotaDTOFromJSON(json: any): QuotaDTO {\n    return QuotaDTOFromJSONTyped(json, false);\n}\n\nexport function QuotaDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuotaDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'orgId': json['org_id'] == null ? undefined : json['org_id'],\n        'target': json['target'] == null ? undefined : json['target'],\n        'used': json['used'] == null ? undefined : json['used'],\n        'userId': json['user_id'] == null ? undefined : json['user_id'],\n    };\n}\n\nexport function QuotaDTOToJSON(json: any): QuotaDTO {\n    return QuotaDTOToJSONTyped(json, false);\n}\n\nexport function QuotaDTOToJSONTyped(value?: QuotaDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'limit': value['limit'],\n        'org_id': value['orgId'],\n        'target': value['target'],\n        'used': value['used'],\n        'user_id': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * RecordingRuleJSON is the external representation of a recording rule\n * @export\n * @interface RecordingRuleJSON\n */\nexport interface RecordingRuleJSON {\n    /**\n     * \n     * @type {boolean}\n     * @memberof RecordingRuleJSON\n     */\n    active?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof RecordingRuleJSON\n     */\n    count?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    destDataSourceUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    id?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof RecordingRuleJSON\n     */\n    interval?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    promName?: string;\n    /**\n     * \n     * @type {Array<{ [key: string]: object; }>}\n     * @memberof RecordingRuleJSON\n     */\n    queries?: Array<{ [key: string]: object; }>;\n    /**\n     * \n     * @type {number}\n     * @memberof RecordingRuleJSON\n     */\n    range?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RecordingRuleJSON\n     */\n    targetRefId?: string;\n}\n\n/**\n * Check if a given object implements the RecordingRuleJSON interface.\n */\nexport function instanceOfRecordingRuleJSON(value: object): value is RecordingRuleJSON {\n    return true;\n}\n\nexport function RecordingRuleJSONFromJSON(json: any): RecordingRuleJSON {\n    return RecordingRuleJSONFromJSONTyped(json, false);\n}\n\nexport function RecordingRuleJSONFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordingRuleJSON {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'active': json['active'] == null ? undefined : json['active'],\n        'count': json['count'] == null ? undefined : json['count'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'destDataSourceUid': json['dest_data_source_uid'] == null ? undefined : json['dest_data_source_uid'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'promName': json['prom_name'] == null ? undefined : json['prom_name'],\n        'queries': json['queries'] == null ? undefined : json['queries'],\n        'range': json['range'] == null ? undefined : json['range'],\n        'targetRefId': json['target_ref_id'] == null ? undefined : json['target_ref_id'],\n    };\n}\n\nexport function RecordingRuleJSONToJSON(json: any): RecordingRuleJSON {\n    return RecordingRuleJSONToJSONTyped(json, false);\n}\n\nexport function RecordingRuleJSONToJSONTyped(value?: RecordingRuleJSON | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'active': value['active'],\n        'count': value['count'],\n        'description': value['description'],\n        'dest_data_source_uid': value['destDataSourceUid'],\n        'id': value['id'],\n        'interval': value['interval'],\n        'name': value['name'],\n        'prom_name': value['promName'],\n        'queries': value['queries'],\n        'range': value['range'],\n        'target_ref_id': value['targetRefId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReportDashboard } from './ReportDashboard';\nimport {\n    ReportDashboardFromJSON,\n    ReportDashboardFromJSONTyped,\n    ReportDashboardToJSON,\n    ReportDashboardToJSONTyped,\n} from './ReportDashboard';\nimport type { ReportSchedule } from './ReportSchedule';\nimport {\n    ReportScheduleFromJSON,\n    ReportScheduleFromJSONTyped,\n    ReportScheduleToJSON,\n    ReportScheduleToJSONTyped,\n} from './ReportSchedule';\nimport type { ReportOptions } from './ReportOptions';\nimport {\n    ReportOptionsFromJSON,\n    ReportOptionsFromJSONTyped,\n    ReportOptionsToJSON,\n    ReportOptionsToJSONTyped,\n} from './ReportOptions';\n\n/**\n * \n * @export\n * @interface Report\n */\nexport interface Report {\n    /**\n     * \n     * @type {Date}\n     * @memberof Report\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Array<ReportDashboard>}\n     * @memberof Report\n     */\n    dashboards?: Array<ReportDashboard>;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Report\n     */\n    enableCsv?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Report\n     */\n    enableDashboardUrl?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Report\n     */\n    formats?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof Report\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Report\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Report\n     */\n    name?: string;\n    /**\n     * \n     * @type {ReportOptions}\n     * @memberof Report\n     */\n    options?: ReportOptions;\n    /**\n     * \n     * @type {number}\n     * @memberof Report\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Report\n     */\n    recipients?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Report\n     */\n    replyTo?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Report\n     */\n    scaleFactor?: number;\n    /**\n     * \n     * @type {ReportSchedule}\n     * @memberof Report\n     */\n    schedule?: ReportSchedule;\n    /**\n     * +enum\n     * @type {string}\n     * @memberof Report\n     */\n    state?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Report\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Report\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof Report\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the Report interface.\n */\nexport function instanceOfReport(value: object): value is Report {\n    return true;\n}\n\nexport function ReportFromJSON(json: any): Report {\n    return ReportFromJSONTyped(json, false);\n}\n\nexport function ReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Report {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'dashboards': json['dashboards'] == null ? undefined : ((json['dashboards'] as Array<any>).map(ReportDashboardFromJSON)),\n        'enableCsv': json['enableCsv'] == null ? undefined : json['enableCsv'],\n        'enableDashboardUrl': json['enableDashboardUrl'] == null ? undefined : json['enableDashboardUrl'],\n        'formats': json['formats'] == null ? undefined : json['formats'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'options': json['options'] == null ? undefined : ReportOptionsFromJSON(json['options']),\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'recipients': json['recipients'] == null ? undefined : json['recipients'],\n        'replyTo': json['replyTo'] == null ? undefined : json['replyTo'],\n        'scaleFactor': json['scaleFactor'] == null ? undefined : json['scaleFactor'],\n        'schedule': json['schedule'] == null ? undefined : ReportScheduleFromJSON(json['schedule']),\n        'state': json['state'] == null ? undefined : json['state'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function ReportToJSON(json: any): Report {\n    return ReportToJSONTyped(json, false);\n}\n\nexport function ReportToJSONTyped(value?: Report | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'dashboards': value['dashboards'] == null ? undefined : ((value['dashboards'] as Array<any>).map(ReportDashboardToJSON)),\n        'enableCsv': value['enableCsv'],\n        'enableDashboardUrl': value['enableDashboardUrl'],\n        'formats': value['formats'],\n        'id': value['id'],\n        'message': value['message'],\n        'name': value['name'],\n        'options': ReportOptionsToJSON(value['options']),\n        'orgId': value['orgId'],\n        'recipients': value['recipients'],\n        'replyTo': value['replyTo'],\n        'scaleFactor': value['scaleFactor'],\n        'schedule': ReportScheduleToJSON(value['schedule']),\n        'state': value['state'],\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReportBrandingOptions\n */\nexport interface ReportBrandingOptions {\n    /**\n     * \n     * @type {string}\n     * @memberof ReportBrandingOptions\n     */\n    emailFooterLink?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportBrandingOptions\n     */\n    emailFooterMode?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportBrandingOptions\n     */\n    emailFooterText?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportBrandingOptions\n     */\n    emailLogoUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ReportBrandingOptions\n     */\n    reportLogoUrl?: string;\n}\n\n/**\n * Check if a given object implements the ReportBrandingOptions interface.\n */\nexport function instanceOfReportBrandingOptions(value: object): value is ReportBrandingOptions {\n    return true;\n}\n\nexport function ReportBrandingOptionsFromJSON(json: any): ReportBrandingOptions {\n    return ReportBrandingOptionsFromJSONTyped(json, false);\n}\n\nexport function ReportBrandingOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportBrandingOptions {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'emailFooterLink': json['emailFooterLink'] == null ? undefined : json['emailFooterLink'],\n        'emailFooterMode': json['emailFooterMode'] == null ? undefined : json['emailFooterMode'],\n        'emailFooterText': json['emailFooterText'] == null ? undefined : json['emailFooterText'],\n        'emailLogoUrl': json['emailLogoUrl'] == null ? undefined : json['emailLogoUrl'],\n        'reportLogoUrl': json['reportLogoUrl'] == null ? undefined : json['reportLogoUrl'],\n    };\n}\n\nexport function ReportBrandingOptionsToJSON(json: any): ReportBrandingOptions {\n    return ReportBrandingOptionsToJSONTyped(json, false);\n}\n\nexport function ReportBrandingOptionsToJSONTyped(value?: ReportBrandingOptions | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'emailFooterLink': value['emailFooterLink'],\n        'emailFooterMode': value['emailFooterMode'],\n        'emailFooterText': value['emailFooterText'],\n        'emailLogoUrl': value['emailLogoUrl'],\n        'reportLogoUrl': value['reportLogoUrl'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ReportEmail\n */\nexport interface ReportEmail {\n    /**\n     * Comma-separated list of emails to which to send the report to.\n     * @type {string}\n     * @memberof ReportEmail\n     */\n    emails?: string;\n    /**\n     * Send the report to the emails specified in the report. Required if emails is not present.\n     * @type {string}\n     * @memberof ReportEmail\n     */\n    id?: string;\n    /**\n     * Send the report to the emails specified in the report. Required if emails is not present.\n     * @type {boolean}\n     * @memberof ReportEmail\n     */\n    useEmailsFromReport?: boolean;\n}\n\n/**\n * Check if a given object implements the ReportEmail interface.\n */\nexport function instanceOfReportEmail(value: object): value is ReportEmail {\n    return true;\n}\n\nexport function ReportEmailFromJSON(json: any): ReportEmail {\n    return ReportEmailFromJSONTyped(json, false);\n}\n\nexport function ReportEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportEmail {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'emails': json['emails'] == null ? undefined : json['emails'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'useEmailsFromReport': json['useEmailsFromReport'] == null ? undefined : json['useEmailsFromReport'],\n    };\n}\n\nexport function ReportEmailToJSON(json: any): ReportEmail {\n    return ReportEmailToJSONTyped(json, false);\n}\n\nexport function ReportEmailToJSONTyped(value?: ReportEmail | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'emails': value['emails'],\n        'id': value['id'],\n        'useEmailsFromReport': value['useEmailsFromReport'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ReportBrandingOptions } from './ReportBrandingOptions';\nimport {\n    ReportBrandingOptionsFromJSON,\n    ReportBrandingOptionsFromJSONTyped,\n    ReportBrandingOptionsToJSON,\n    ReportBrandingOptionsToJSONTyped,\n} from './ReportBrandingOptions';\n\n/**\n * \n * @export\n * @interface ReportSettings\n */\nexport interface ReportSettings {\n    /**\n     * \n     * @type {ReportBrandingOptions}\n     * @memberof ReportSettings\n     */\n    branding?: ReportBrandingOptions;\n    /**\n     * \n     * @type {number}\n     * @memberof ReportSettings\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReportSettings\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof ReportSettings\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the ReportSettings interface.\n */\nexport function instanceOfReportSettings(value: object): value is ReportSettings {\n    return true;\n}\n\nexport function ReportSettingsFromJSON(json: any): ReportSettings {\n    return ReportSettingsFromJSONTyped(json, false);\n}\n\nexport function ReportSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSettings {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'branding': json['branding'] == null ? undefined : ReportBrandingOptionsFromJSON(json['branding']),\n        'id': json['id'] == null ? undefined : json['id'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function ReportSettingsToJSON(json: any): ReportSettings {\n    return ReportSettingsToJSONTyped(json, false);\n}\n\nexport function ReportSettingsToJSONTyped(value?: ReportSettings | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'branding': ReportBrandingOptionsToJSON(value['branding']),\n        'id': value['id'],\n        'orgId': value['orgId'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ResourcePermissionDTO\n */\nexport interface ResourcePermissionDTO {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof ResourcePermissionDTO\n     */\n    actions?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    builtInRole?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResourcePermissionDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ResourcePermissionDTO\n     */\n    isInherited?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ResourcePermissionDTO\n     */\n    isManaged?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ResourcePermissionDTO\n     */\n    isServiceAccount?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    permission?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    roleName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    team?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    teamAvatarUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResourcePermissionDTO\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    userAvatarUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ResourcePermissionDTO\n     */\n    userId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ResourcePermissionDTO\n     */\n    userLogin?: string;\n}\n\n/**\n * Check if a given object implements the ResourcePermissionDTO interface.\n */\nexport function instanceOfResourcePermissionDTO(value: object): value is ResourcePermissionDTO {\n    return true;\n}\n\nexport function ResourcePermissionDTOFromJSON(json: any): ResourcePermissionDTO {\n    return ResourcePermissionDTOFromJSONTyped(json, false);\n}\n\nexport function ResourcePermissionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResourcePermissionDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'actions': json['actions'] == null ? undefined : json['actions'],\n        'builtInRole': json['builtInRole'] == null ? undefined : json['builtInRole'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isInherited': json['isInherited'] == null ? undefined : json['isInherited'],\n        'isManaged': json['isManaged'] == null ? undefined : json['isManaged'],\n        'isServiceAccount': json['isServiceAccount'] == null ? undefined : json['isServiceAccount'],\n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'roleName': json['roleName'] == null ? undefined : json['roleName'],\n        'team': json['team'] == null ? undefined : json['team'],\n        'teamAvatarUrl': json['teamAvatarUrl'] == null ? undefined : json['teamAvatarUrl'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'userAvatarUrl': json['userAvatarUrl'] == null ? undefined : json['userAvatarUrl'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n        'userLogin': json['userLogin'] == null ? undefined : json['userLogin'],\n    };\n}\n\nexport function ResourcePermissionDTOToJSON(json: any): ResourcePermissionDTO {\n    return ResourcePermissionDTOToJSONTyped(json, false);\n}\n\nexport function ResourcePermissionDTOToJSONTyped(value?: ResourcePermissionDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'actions': value['actions'],\n        'builtInRole': value['builtInRole'],\n        'id': value['id'],\n        'isInherited': value['isInherited'],\n        'isManaged': value['isManaged'],\n        'isServiceAccount': value['isServiceAccount'],\n        'permission': value['permission'],\n        'roleName': value['roleName'],\n        'team': value['team'],\n        'teamAvatarUrl': value['teamAvatarUrl'],\n        'teamId': value['teamId'],\n        'userAvatarUrl': value['userAvatarUrl'],\n        'userId': value['userId'],\n        'userLogin': value['userLogin'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ResponseDetails\n */\nexport interface ResponseDetails {\n    /**\n     * \n     * @type {string}\n     * @memberof ResponseDetails\n     */\n    msg?: string;\n}\n\n/**\n * Check if a given object implements the ResponseDetails interface.\n */\nexport function instanceOfResponseDetails(value: object): value is ResponseDetails {\n    return true;\n}\n\nexport function ResponseDetailsFromJSON(json: any): ResponseDetails {\n    return ResponseDetailsFromJSONTyped(json, false);\n}\n\nexport function ResponseDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseDetails {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'msg': json['msg'] == null ? undefined : json['msg'],\n    };\n}\n\nexport function ResponseDetailsToJSON(json: any): ResponseDetails {\n    return ResponseDetailsToJSONTyped(json, false);\n}\n\nexport function ResponseDetailsToJSONTyped(value?: ResponseDetails | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'msg': value['msg'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RestoreDashboardVersionCommand\n */\nexport interface RestoreDashboardVersionCommand {\n    /**\n     * \n     * @type {number}\n     * @memberof RestoreDashboardVersionCommand\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the RestoreDashboardVersionCommand interface.\n */\nexport function instanceOfRestoreDashboardVersionCommand(value: object): value is RestoreDashboardVersionCommand {\n    return true;\n}\n\nexport function RestoreDashboardVersionCommandFromJSON(json: any): RestoreDashboardVersionCommand {\n    return RestoreDashboardVersionCommandFromJSONTyped(json, false);\n}\n\nexport function RestoreDashboardVersionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestoreDashboardVersionCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function RestoreDashboardVersionCommandToJSON(json: any): RestoreDashboardVersionCommand {\n    return RestoreDashboardVersionCommandToJSONTyped(json, false);\n}\n\nexport function RestoreDashboardVersionCommandToJSONTyped(value?: RestoreDashboardVersionCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RestoreDeletedDashboardCommand\n */\nexport interface RestoreDeletedDashboardCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof RestoreDeletedDashboardCommand\n     */\n    folderUid?: string;\n}\n\n/**\n * Check if a given object implements the RestoreDeletedDashboardCommand interface.\n */\nexport function instanceOfRestoreDeletedDashboardCommand(value: object): value is RestoreDeletedDashboardCommand {\n    return true;\n}\n\nexport function RestoreDeletedDashboardCommandFromJSON(json: any): RestoreDeletedDashboardCommand {\n    return RestoreDeletedDashboardCommandFromJSONTyped(json, false);\n}\n\nexport function RestoreDeletedDashboardCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestoreDeletedDashboardCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n    };\n}\n\nexport function RestoreDeletedDashboardCommandToJSON(json: any): RestoreDeletedDashboardCommand {\n    return RestoreDeletedDashboardCommandToJSONTyped(json, false);\n}\n\nexport function RestoreDeletedDashboardCommandToJSONTyped(value?: RestoreDeletedDashboardCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'folderUid': value['folderUid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { JSONWebKey } from './JSONWebKey';\nimport {\n    JSONWebKeyFromJSON,\n    JSONWebKeyFromJSONTyped,\n    JSONWebKeyToJSON,\n    JSONWebKeyToJSONTyped,\n} from './JSONWebKey';\n\n/**\n * \n * @export\n * @interface RetrieveJWKS200Response\n */\nexport interface RetrieveJWKS200Response {\n    /**\n     * \n     * @type {Array<JSONWebKey>}\n     * @memberof RetrieveJWKS200Response\n     */\n    keys?: Array<JSONWebKey>;\n}\n\n/**\n * Check if a given object implements the RetrieveJWKS200Response interface.\n */\nexport function instanceOfRetrieveJWKS200Response(value: object): value is RetrieveJWKS200Response {\n    return true;\n}\n\nexport function RetrieveJWKS200ResponseFromJSON(json: any): RetrieveJWKS200Response {\n    return RetrieveJWKS200ResponseFromJSONTyped(json, false);\n}\n\nexport function RetrieveJWKS200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetrieveJWKS200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'keys': json['keys'] == null ? undefined : ((json['keys'] as Array<any>).map(JSONWebKeyFromJSON)),\n    };\n}\n\nexport function RetrieveJWKS200ResponseToJSON(json: any): RetrieveJWKS200Response {\n    return RetrieveJWKS200ResponseToJSONTyped(json, false);\n}\n\nexport function RetrieveJWKS200ResponseToJSONTyped(value?: RetrieveJWKS200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'keys': value['keys'] == null ? undefined : ((value['keys'] as Array<any>).map(JSONWebKeyToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RevokeAuthTokenCmd\n */\nexport interface RevokeAuthTokenCmd {\n    /**\n     * \n     * @type {number}\n     * @memberof RevokeAuthTokenCmd\n     */\n    authTokenId?: number;\n}\n\n/**\n * Check if a given object implements the RevokeAuthTokenCmd interface.\n */\nexport function instanceOfRevokeAuthTokenCmd(value: object): value is RevokeAuthTokenCmd {\n    return true;\n}\n\nexport function RevokeAuthTokenCmdFromJSON(json: any): RevokeAuthTokenCmd {\n    return RevokeAuthTokenCmdFromJSONTyped(json, false);\n}\n\nexport function RevokeAuthTokenCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevokeAuthTokenCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authTokenId': json['authTokenId'] == null ? undefined : json['authTokenId'],\n    };\n}\n\nexport function RevokeAuthTokenCmdToJSON(json: any): RevokeAuthTokenCmd {\n    return RevokeAuthTokenCmdToJSONTyped(json, false);\n}\n\nexport function RevokeAuthTokenCmdToJSONTyped(value?: RevokeAuthTokenCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'authTokenId': value['authTokenId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RoleAssignmentsDTO\n */\nexport interface RoleAssignmentsDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof RoleAssignmentsDTO\n     */\n    roleUid?: string;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof RoleAssignmentsDTO\n     */\n    serviceAccounts?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof RoleAssignmentsDTO\n     */\n    teams?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof RoleAssignmentsDTO\n     */\n    users?: Array<number>;\n}\n\n/**\n * Check if a given object implements the RoleAssignmentsDTO interface.\n */\nexport function instanceOfRoleAssignmentsDTO(value: object): value is RoleAssignmentsDTO {\n    return true;\n}\n\nexport function RoleAssignmentsDTOFromJSON(json: any): RoleAssignmentsDTO {\n    return RoleAssignmentsDTOFromJSONTyped(json, false);\n}\n\nexport function RoleAssignmentsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleAssignmentsDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'roleUid': json['role_uid'] == null ? undefined : json['role_uid'],\n        'serviceAccounts': json['service_accounts'] == null ? undefined : json['service_accounts'],\n        'teams': json['teams'] == null ? undefined : json['teams'],\n        'users': json['users'] == null ? undefined : json['users'],\n    };\n}\n\nexport function RoleAssignmentsDTOToJSON(json: any): RoleAssignmentsDTO {\n    return RoleAssignmentsDTOToJSONTyped(json, false);\n}\n\nexport function RoleAssignmentsDTOToJSONTyped(value?: RoleAssignmentsDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'role_uid': value['roleUid'],\n        'service_accounts': value['serviceAccounts'],\n        'teams': value['teams'],\n        'users': value['users'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Permission } from './Permission';\nimport {\n    PermissionFromJSON,\n    PermissionFromJSONTyped,\n    PermissionToJSON,\n    PermissionToJSONTyped,\n} from './Permission';\n\n/**\n * \n * @export\n * @interface RoleDTO\n */\nexport interface RoleDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof RoleDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {boolean}\n     * @memberof RoleDTO\n     */\n    delegatable?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleDTO\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleDTO\n     */\n    displayName?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof RoleDTO\n     */\n    global?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleDTO\n     */\n    group?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof RoleDTO\n     */\n    hidden?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<Permission>}\n     * @memberof RoleDTO\n     */\n    permissions?: Array<Permission>;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof RoleDTO\n     */\n    updated?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof RoleDTO\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the RoleDTO interface.\n */\nexport function instanceOfRoleDTO(value: object): value is RoleDTO {\n    return true;\n}\n\nexport function RoleDTOFromJSON(json: any): RoleDTO {\n    return RoleDTOFromJSONTyped(json, false);\n}\n\nexport function RoleDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'delegatable': json['delegatable'] == null ? undefined : json['delegatable'],\n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'global': json['global'] == null ? undefined : json['global'],\n        'group': json['group'] == null ? undefined : json['group'],\n        'hidden': json['hidden'] == null ? undefined : json['hidden'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(PermissionFromJSON)),\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function RoleDTOToJSON(json: any): RoleDTO {\n    return RoleDTOToJSONTyped(json, false);\n}\n\nexport function RoleDTOToJSONTyped(value?: RoleDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'delegatable': value['delegatable'],\n        'description': value['description'],\n        'displayName': value['displayName'],\n        'global': value['global'],\n        'group': value['group'],\n        'hidden': value['hidden'],\n        'name': value['name'],\n        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(PermissionToJSON)),\n        'uid': value['uid'],\n        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface RolesSearchQuery\n */\nexport interface RolesSearchQuery {\n    /**\n     * \n     * @type {boolean}\n     * @memberof RolesSearchQuery\n     */\n    includeHidden?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof RolesSearchQuery\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof RolesSearchQuery\n     */\n    teamIds?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof RolesSearchQuery\n     */\n    userIds?: Array<number>;\n}\n\n/**\n * Check if a given object implements the RolesSearchQuery interface.\n */\nexport function instanceOfRolesSearchQuery(value: object): value is RolesSearchQuery {\n    return true;\n}\n\nexport function RolesSearchQueryFromJSON(json: any): RolesSearchQuery {\n    return RolesSearchQueryFromJSONTyped(json, false);\n}\n\nexport function RolesSearchQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RolesSearchQuery {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'includeHidden': json['includeHidden'] == null ? undefined : json['includeHidden'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'teamIds': json['teamIds'] == null ? undefined : json['teamIds'],\n        'userIds': json['userIds'] == null ? undefined : json['userIds'],\n    };\n}\n\nexport function RolesSearchQueryToJSON(json: any): RolesSearchQuery {\n    return RolesSearchQueryToJSONTyped(json, false);\n}\n\nexport function RolesSearchQueryToJSONTyped(value?: RolesSearchQuery | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'includeHidden': value['includeHidden'],\n        'orgId': value['orgId'],\n        'teamIds': value['teamIds'],\n        'userIds': value['userIds'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Label } from './Label';\nimport {\n    LabelFromJSON,\n    LabelFromJSONTyped,\n    LabelToJSON,\n    LabelToJSONTyped,\n} from './Label';\n\n/**\n * adapted from cortex\n * @export\n * @interface Rule\n */\nexport interface Rule {\n    /**\n     * \n     * @type {number}\n     * @memberof Rule\n     */\n    evaluationTime?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Rule\n     */\n    health: string;\n    /**\n     * Labels is a sorted set of labels. Order has to be guaranteed upon\n     * instantiation.\n     * @type {Array<Label>}\n     * @memberof Rule\n     */\n    labels?: Array<Label>;\n    /**\n     * \n     * @type {string}\n     * @memberof Rule\n     */\n    lastError?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof Rule\n     */\n    lastEvaluation?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof Rule\n     */\n    name: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Rule\n     */\n    query: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Rule\n     */\n    type: string;\n}\n\n/**\n * Check if a given object implements the Rule interface.\n */\nexport function instanceOfRule(value: object): value is Rule {\n    if (!('health' in value) || value['health'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    if (!('query' in value) || value['query'] === undefined) return false;\n    if (!('type' in value) || value['type'] === undefined) return false;\n    return true;\n}\n\nexport function RuleFromJSON(json: any): Rule {\n    return RuleFromJSONTyped(json, false);\n}\n\nexport function RuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Rule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'evaluationTime': json['evaluationTime'] == null ? undefined : json['evaluationTime'],\n        'health': json['health'],\n        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelFromJSON)),\n        'lastError': json['lastError'] == null ? undefined : json['lastError'],\n        'lastEvaluation': json['lastEvaluation'] == null ? undefined : (new Date(json['lastEvaluation'])),\n        'name': json['name'],\n        'query': json['query'],\n        'type': json['type'],\n    };\n}\n\nexport function RuleToJSON(json: any): Rule {\n    return RuleToJSONTyped(json, false);\n}\n\nexport function RuleToJSONTyped(value?: Rule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'evaluationTime': value['evaluationTime'],\n        'health': value['health'],\n        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelToJSON)),\n        'lastError': value['lastError'],\n        'lastEvaluation': value['lastEvaluation'] == null ? undefined : ((value['lastEvaluation']).toISOString()),\n        'name': value['name'],\n        'query': value['query'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertingRule } from './AlertingRule';\nimport {\n    AlertingRuleFromJSON,\n    AlertingRuleFromJSONTyped,\n    AlertingRuleToJSON,\n    AlertingRuleToJSONTyped,\n} from './AlertingRule';\n\n/**\n * \n * @export\n * @interface RuleGroup\n */\nexport interface RuleGroup {\n    /**\n     * \n     * @type {number}\n     * @memberof RuleGroup\n     */\n    evaluationTime?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleGroup\n     */\n    file: string;\n    /**\n     * \n     * @type {number}\n     * @memberof RuleGroup\n     */\n    interval: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof RuleGroup\n     */\n    lastEvaluation?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleGroup\n     */\n    name: string;\n    /**\n     * In order to preserve rule ordering, while exposing type (alerting or recording)\n     * specific properties, both alerting and recording rules are exposed in the\n     * same array.\n     * @type {Array<AlertingRule>}\n     * @memberof RuleGroup\n     */\n    rules: Array<AlertingRule>;\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof RuleGroup\n     */\n    totals?: { [key: string]: number; };\n}\n\n/**\n * Check if a given object implements the RuleGroup interface.\n */\nexport function instanceOfRuleGroup(value: object): value is RuleGroup {\n    if (!('file' in value) || value['file'] === undefined) return false;\n    if (!('interval' in value) || value['interval'] === undefined) return false;\n    if (!('name' in value) || value['name'] === undefined) return false;\n    if (!('rules' in value) || value['rules'] === undefined) return false;\n    return true;\n}\n\nexport function RuleGroupFromJSON(json: any): RuleGroup {\n    return RuleGroupFromJSONTyped(json, false);\n}\n\nexport function RuleGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleGroup {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'evaluationTime': json['evaluationTime'] == null ? undefined : json['evaluationTime'],\n        'file': json['file'],\n        'interval': json['interval'],\n        'lastEvaluation': json['lastEvaluation'] == null ? undefined : (new Date(json['lastEvaluation'])),\n        'name': json['name'],\n        'rules': ((json['rules'] as Array<any>).map(AlertingRuleFromJSON)),\n        'totals': json['totals'] == null ? undefined : json['totals'],\n    };\n}\n\nexport function RuleGroupToJSON(json: any): RuleGroup {\n    return RuleGroupToJSONTyped(json, false);\n}\n\nexport function RuleGroupToJSONTyped(value?: RuleGroup | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'evaluationTime': value['evaluationTime'],\n        'file': value['file'],\n        'interval': value['interval'],\n        'lastEvaluation': value['lastEvaluation'] == null ? undefined : ((value['lastEvaluation']).toISOString()),\n        'name': value['name'],\n        'rules': ((value['rules'] as Array<any>).map(AlertingRuleToJSON)),\n        'totals': value['totals'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { RuleGroup } from './RuleGroup';\nimport {\n    RuleGroupFromJSON,\n    RuleGroupFromJSONTyped,\n    RuleGroupToJSON,\n    RuleGroupToJSONTyped,\n} from './RuleGroup';\n\n/**\n * \n * @export\n * @interface RuleDiscovery\n */\nexport interface RuleDiscovery {\n    /**\n     * \n     * @type {Array<RuleGroup>}\n     * @memberof RuleDiscovery\n     */\n    groups: Array<RuleGroup>;\n    /**\n     * \n     * @type {{ [key: string]: number; }}\n     * @memberof RuleDiscovery\n     */\n    totals?: { [key: string]: number; };\n}\n\n/**\n * Check if a given object implements the RuleDiscovery interface.\n */\nexport function instanceOfRuleDiscovery(value: object): value is RuleDiscovery {\n    if (!('groups' in value) || value['groups'] === undefined) return false;\n    return true;\n}\n\nexport function RuleDiscoveryFromJSON(json: any): RuleDiscovery {\n    return RuleDiscoveryFromJSONTyped(json, false);\n}\n\nexport function RuleDiscoveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleDiscovery {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'groups': ((json['groups'] as Array<any>).map(RuleGroupFromJSON)),\n        'totals': json['totals'] == null ? undefined : json['totals'],\n    };\n}\n\nexport function RuleDiscoveryToJSON(json: any): RuleDiscovery {\n    return RuleDiscoveryToJSONTyped(json, false);\n}\n\nexport function RuleDiscoveryToJSONTyped(value?: RuleDiscovery | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'groups': ((value['groups'] as Array<any>).map(RuleGroupToJSON)),\n        'totals': value['totals'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { GettableExtendedRuleNode } from './GettableExtendedRuleNode';\nimport {\n    GettableExtendedRuleNodeFromJSON,\n    GettableExtendedRuleNodeFromJSONTyped,\n    GettableExtendedRuleNodeToJSON,\n    GettableExtendedRuleNodeToJSONTyped,\n} from './GettableExtendedRuleNode';\n\n/**\n * \n * @export\n * @interface RuleGroupConfigResponse\n */\nexport interface RuleGroupConfigResponse {\n    /**\n     * \n     * @type {boolean}\n     * @memberof RuleGroupConfigResponse\n     */\n    alignEvaluationTimeOnInterval?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleGroupConfigResponse\n     */\n    evaluationDelay?: string;\n    /**\n     * A Duration represents the elapsed time between two instants\n     * as an int64 nanosecond count. The representation limits the\n     * largest representable duration to approximately 290 years.\n     * @type {number}\n     * @memberof RuleGroupConfigResponse\n     */\n    interval?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof RuleGroupConfigResponse\n     */\n    limit?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleGroupConfigResponse\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleGroupConfigResponse\n     */\n    queryOffset?: string;\n    /**\n     * \n     * @type {Array<GettableExtendedRuleNode>}\n     * @memberof RuleGroupConfigResponse\n     */\n    rules?: Array<GettableExtendedRuleNode>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof RuleGroupConfigResponse\n     */\n    sourceTenants?: Array<string>;\n}\n\n/**\n * Check if a given object implements the RuleGroupConfigResponse interface.\n */\nexport function instanceOfRuleGroupConfigResponse(value: object): value is RuleGroupConfigResponse {\n    return true;\n}\n\nexport function RuleGroupConfigResponseFromJSON(json: any): RuleGroupConfigResponse {\n    return RuleGroupConfigResponseFromJSONTyped(json, false);\n}\n\nexport function RuleGroupConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleGroupConfigResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alignEvaluationTimeOnInterval': json['align_evaluation_time_on_interval'] == null ? undefined : json['align_evaluation_time_on_interval'],\n        'evaluationDelay': json['evaluation_delay'] == null ? undefined : json['evaluation_delay'],\n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'queryOffset': json['query_offset'] == null ? undefined : json['query_offset'],\n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(GettableExtendedRuleNodeFromJSON)),\n        'sourceTenants': json['source_tenants'] == null ? undefined : json['source_tenants'],\n    };\n}\n\nexport function RuleGroupConfigResponseToJSON(json: any): RuleGroupConfigResponse {\n    return RuleGroupConfigResponseToJSONTyped(json, false);\n}\n\nexport function RuleGroupConfigResponseToJSONTyped(value?: RuleGroupConfigResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'align_evaluation_time_on_interval': value['alignEvaluationTimeOnInterval'],\n        'evaluation_delay': value['evaluationDelay'],\n        'interval': value['interval'],\n        'limit': value['limit'],\n        'name': value['name'],\n        'query_offset': value['queryOffset'],\n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(GettableExtendedRuleNodeToJSON)),\n        'source_tenants': value['sourceTenants'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { RuleDiscovery } from './RuleDiscovery';\nimport {\n    RuleDiscoveryFromJSON,\n    RuleDiscoveryFromJSONTyped,\n    RuleDiscoveryToJSON,\n    RuleDiscoveryToJSONTyped,\n} from './RuleDiscovery';\n\n/**\n * \n * @export\n * @interface RuleResponse\n */\nexport interface RuleResponse {\n    /**\n     * \n     * @type {RuleDiscovery}\n     * @memberof RuleResponse\n     */\n    data?: RuleDiscovery;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleResponse\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleResponse\n     */\n    errorType?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RuleResponse\n     */\n    status: string;\n}\n\n/**\n * Check if a given object implements the RuleResponse interface.\n */\nexport function instanceOfRuleResponse(value: object): value is RuleResponse {\n    if (!('status' in value) || value['status'] === undefined) return false;\n    return true;\n}\n\nexport function RuleResponseFromJSON(json: any): RuleResponse {\n    return RuleResponseFromJSONTyped(json, false);\n}\n\nexport function RuleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : RuleDiscoveryFromJSON(json['data']),\n        'error': json['error'] == null ? undefined : json['error'],\n        'errorType': json['errorType'] == null ? undefined : json['errorType'],\n        'status': json['status'],\n    };\n}\n\nexport function RuleResponseToJSON(json: any): RuleResponse {\n    return RuleResponseToJSONTyped(json, false);\n}\n\nexport function RuleResponseToJSONTyped(value?: RuleResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': RuleDiscoveryToJSON(value['data']),\n        'error': value['error'],\n        'errorType': value['errorType'],\n        'status': value['status'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Label } from './Label';\nimport {\n    LabelFromJSON,\n    LabelFromJSONTyped,\n    LabelToJSON,\n    LabelToJSONTyped,\n} from './Label';\nimport type { FloatHistogram } from './FloatHistogram';\nimport {\n    FloatHistogramFromJSON,\n    FloatHistogramFromJSONTyped,\n    FloatHistogramToJSON,\n    FloatHistogramToJSONTyped,\n} from './FloatHistogram';\n\n/**\n * Sample is a single sample belonging to a metric. It represents either a float\n * sample or a histogram sample. If H is nil, it is a float sample. Otherwise,\n * it is a histogram sample.\n * @export\n * @interface Sample\n */\nexport interface Sample {\n    /**\n     * \n     * @type {number}\n     * @memberof Sample\n     */\n    f?: number;\n    /**\n     * \n     * @type {FloatHistogram}\n     * @memberof Sample\n     */\n    h?: FloatHistogram;\n    /**\n     * Labels is a sorted set of labels. Order has to be guaranteed upon\n     * instantiation.\n     * @type {Array<Label>}\n     * @memberof Sample\n     */\n    metric?: Array<Label>;\n    /**\n     * \n     * @type {number}\n     * @memberof Sample\n     */\n    t?: number;\n}\n\n/**\n * Check if a given object implements the Sample interface.\n */\nexport function instanceOfSample(value: object): value is Sample {\n    return true;\n}\n\nexport function SampleFromJSON(json: any): Sample {\n    return SampleFromJSONTyped(json, false);\n}\n\nexport function SampleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sample {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'f': json['F'] == null ? undefined : json['F'],\n        'h': json['H'] == null ? undefined : FloatHistogramFromJSON(json['H']),\n        'metric': json['Metric'] == null ? undefined : ((json['Metric'] as Array<any>).map(LabelFromJSON)),\n        't': json['T'] == null ? undefined : json['T'],\n    };\n}\n\nexport function SampleToJSON(json: any): Sample {\n    return SampleToJSONTyped(json, false);\n}\n\nexport function SampleToJSONTyped(value?: Sample | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'F': value['f'],\n        'H': FloatHistogramToJSON(value['h']),\n        'Metric': value['metric'] == null ? undefined : ((value['metric'] as Array<any>).map(LabelToJSON)),\n        'T': value['t'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SaveDashboardCommand\n */\nexport interface SaveDashboardCommand {\n    /**\n     * \n     * @type {Date}\n     * @memberof SaveDashboardCommand\n     */\n    updatedAt?: Date;\n    /**\n     * \n     * @type {object}\n     * @memberof SaveDashboardCommand\n     */\n    dashboard?: object;\n    /**\n     * Deprecated: use FolderUID instead\n     * @type {number}\n     * @memberof SaveDashboardCommand\n     */\n    folderId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof SaveDashboardCommand\n     */\n    folderUid?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SaveDashboardCommand\n     */\n    isFolder?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SaveDashboardCommand\n     */\n    message?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SaveDashboardCommand\n     */\n    overwrite?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof SaveDashboardCommand\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the SaveDashboardCommand interface.\n */\nexport function instanceOfSaveDashboardCommand(value: object): value is SaveDashboardCommand {\n    return true;\n}\n\nexport function SaveDashboardCommandFromJSON(json: any): SaveDashboardCommand {\n    return SaveDashboardCommandFromJSONTyped(json, false);\n}\n\nexport function SaveDashboardCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaveDashboardCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'updatedAt': json['UpdatedAt'] == null ? undefined : (new Date(json['UpdatedAt'])),\n        'dashboard': json['dashboard'] == null ? undefined : json['dashboard'],\n        'folderId': json['folderId'] == null ? undefined : json['folderId'],\n        'folderUid': json['folderUid'] == null ? undefined : json['folderUid'],\n        'isFolder': json['isFolder'] == null ? undefined : json['isFolder'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'overwrite': json['overwrite'] == null ? undefined : json['overwrite'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function SaveDashboardCommandToJSON(json: any): SaveDashboardCommand {\n    return SaveDashboardCommandToJSONTyped(json, false);\n}\n\nexport function SaveDashboardCommandToJSONTyped(value?: SaveDashboardCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'UpdatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n        'dashboard': value['dashboard'],\n        'folderId': value['folderId'],\n        'folderUid': value['folderUid'],\n        'isFolder': value['isFolder'],\n        'message': value['message'],\n        'overwrite': value['overwrite'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SearchDTO\n */\nexport interface SearchDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    action?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    basicRole?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SearchDTO\n     */\n    onlyRoles?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    roleName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    scope?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    teamId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchDTO\n     */\n    userId?: string;\n}\n\n/**\n * Check if a given object implements the SearchDTO interface.\n */\nexport function instanceOfSearchDTO(value: object): value is SearchDTO {\n    return true;\n}\n\nexport function SearchDTOFromJSON(json: any): SearchDTO {\n    return SearchDTOFromJSONTyped(json, false);\n}\n\nexport function SearchDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'action': json['action'] == null ? undefined : json['action'],\n        'basicRole': json['basicRole'] == null ? undefined : json['basicRole'],\n        'onlyRoles': json['onlyRoles'] == null ? undefined : json['onlyRoles'],\n        'roleName': json['roleName'] == null ? undefined : json['roleName'],\n        'scope': json['scope'] == null ? undefined : json['scope'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function SearchDTOToJSON(json: any): SearchDTO {\n    return SearchDTOToJSONTyped(json, false);\n}\n\nexport function SearchDTOToJSONTyped(value?: SearchDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'action': value['action'],\n        'basicRole': value['basicRole'],\n        'onlyRoles': value['onlyRoles'],\n        'roleName': value['roleName'],\n        'scope': value['scope'],\n        'teamId': value['teamId'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DeviceSearchHitDTO } from './DeviceSearchHitDTO';\nimport {\n    DeviceSearchHitDTOFromJSON,\n    DeviceSearchHitDTOFromJSONTyped,\n    DeviceSearchHitDTOToJSON,\n    DeviceSearchHitDTOToJSONTyped,\n} from './DeviceSearchHitDTO';\n\n/**\n * \n * @export\n * @interface SearchDeviceQueryResult\n */\nexport interface SearchDeviceQueryResult {\n    /**\n     * \n     * @type {Array<DeviceSearchHitDTO>}\n     * @memberof SearchDeviceQueryResult\n     */\n    devices?: Array<DeviceSearchHitDTO>;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchDeviceQueryResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchDeviceQueryResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchDeviceQueryResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the SearchDeviceQueryResult interface.\n */\nexport function instanceOfSearchDeviceQueryResult(value: object): value is SearchDeviceQueryResult {\n    return true;\n}\n\nexport function SearchDeviceQueryResultFromJSON(json: any): SearchDeviceQueryResult {\n    return SearchDeviceQueryResultFromJSONTyped(json, false);\n}\n\nexport function SearchDeviceQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchDeviceQueryResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'devices': json['devices'] == null ? undefined : ((json['devices'] as Array<any>).map(DeviceSearchHitDTOFromJSON)),\n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function SearchDeviceQueryResultToJSON(json: any): SearchDeviceQueryResult {\n    return SearchDeviceQueryResultToJSONTyped(json, false);\n}\n\nexport function SearchDeviceQueryResultToJSONTyped(value?: SearchDeviceQueryResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'devices': value['devices'] == null ? undefined : ((value['devices'] as Array<any>).map(DeviceSearchHitDTOToJSON)),\n        'page': value['page'],\n        'perPage': value['perPage'],\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * swagger: model\n * @export\n * @interface ServiceAccountDTO\n */\nexport interface ServiceAccountDTO {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof ServiceAccountDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServiceAccountDTO\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServiceAccountDTO\n     */\n    isExternal?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountDTO\n     */\n    role?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountDTO\n     */\n    tokens?: number;\n}\n\n/**\n * Check if a given object implements the ServiceAccountDTO interface.\n */\nexport function instanceOfServiceAccountDTO(value: object): value is ServiceAccountDTO {\n    return true;\n}\n\nexport function ServiceAccountDTOFromJSON(json: any): ServiceAccountDTO {\n    return ServiceAccountDTOFromJSONTyped(json, false);\n}\n\nexport function ServiceAccountDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceAccountDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'isExternal': json['isExternal'] == null ? undefined : json['isExternal'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'tokens': json['tokens'] == null ? undefined : json['tokens'],\n    };\n}\n\nexport function ServiceAccountDTOToJSON(json: any): ServiceAccountDTO {\n    return ServiceAccountDTOToJSONTyped(json, false);\n}\n\nexport function ServiceAccountDTOToJSONTyped(value?: ServiceAccountDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'avatarUrl': value['avatarUrl'],\n        'id': value['id'],\n        'isDisabled': value['isDisabled'],\n        'isExternal': value['isExternal'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'role': value['role'],\n        'tokens': value['tokens'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ServiceAccountDTO } from './ServiceAccountDTO';\nimport {\n    ServiceAccountDTOFromJSON,\n    ServiceAccountDTOFromJSONTyped,\n    ServiceAccountDTOToJSON,\n    ServiceAccountDTOToJSONTyped,\n} from './ServiceAccountDTO';\n\n/**\n * swagger: model\n * @export\n * @interface SearchOrgServiceAccountsResult\n */\nexport interface SearchOrgServiceAccountsResult {\n    /**\n     * \n     * @type {number}\n     * @memberof SearchOrgServiceAccountsResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchOrgServiceAccountsResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {Array<ServiceAccountDTO>}\n     * @memberof SearchOrgServiceAccountsResult\n     */\n    serviceAccounts?: Array<ServiceAccountDTO>;\n    /**\n     * It can be used for pagination of the user list\n     * E.g. if totalCount is equal to 100 users and\n     * the perpage parameter is set to 10 then there are 10 pages of users.\n     * @type {number}\n     * @memberof SearchOrgServiceAccountsResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the SearchOrgServiceAccountsResult interface.\n */\nexport function instanceOfSearchOrgServiceAccountsResult(value: object): value is SearchOrgServiceAccountsResult {\n    return true;\n}\n\nexport function SearchOrgServiceAccountsResultFromJSON(json: any): SearchOrgServiceAccountsResult {\n    return SearchOrgServiceAccountsResultFromJSONTyped(json, false);\n}\n\nexport function SearchOrgServiceAccountsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgServiceAccountsResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'serviceAccounts': json['serviceAccounts'] == null ? undefined : ((json['serviceAccounts'] as Array<any>).map(ServiceAccountDTOFromJSON)),\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function SearchOrgServiceAccountsResultToJSON(json: any): SearchOrgServiceAccountsResult {\n    return SearchOrgServiceAccountsResultToJSONTyped(json, false);\n}\n\nexport function SearchOrgServiceAccountsResultToJSONTyped(value?: SearchOrgServiceAccountsResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'page': value['page'],\n        'perPage': value['perPage'],\n        'serviceAccounts': value['serviceAccounts'] == null ? undefined : ((value['serviceAccounts'] as Array<any>).map(ServiceAccountDTOToJSON)),\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { OrgUserDTO } from './OrgUserDTO';\nimport {\n    OrgUserDTOFromJSON,\n    OrgUserDTOFromJSONTyped,\n    OrgUserDTOToJSON,\n    OrgUserDTOToJSONTyped,\n} from './OrgUserDTO';\n\n/**\n * \n * @export\n * @interface SearchOrgUsersQueryResult\n */\nexport interface SearchOrgUsersQueryResult {\n    /**\n     * \n     * @type {Array<OrgUserDTO>}\n     * @memberof SearchOrgUsersQueryResult\n     */\n    orgUsers?: Array<OrgUserDTO>;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchOrgUsersQueryResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchOrgUsersQueryResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchOrgUsersQueryResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the SearchOrgUsersQueryResult interface.\n */\nexport function instanceOfSearchOrgUsersQueryResult(value: object): value is SearchOrgUsersQueryResult {\n    return true;\n}\n\nexport function SearchOrgUsersQueryResultFromJSON(json: any): SearchOrgUsersQueryResult {\n    return SearchOrgUsersQueryResultFromJSONTyped(json, false);\n}\n\nexport function SearchOrgUsersQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchOrgUsersQueryResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'orgUsers': json['orgUsers'] == null ? undefined : ((json['orgUsers'] as Array<any>).map(OrgUserDTOFromJSON)),\n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function SearchOrgUsersQueryResultToJSON(json: any): SearchOrgUsersQueryResult {\n    return SearchOrgUsersQueryResultToJSONTyped(json, false);\n}\n\nexport function SearchOrgUsersQueryResultToJSONTyped(value?: SearchOrgUsersQueryResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'orgUsers': value['orgUsers'] == null ? undefined : ((value['orgUsers'] as Array<any>).map(OrgUserDTOToJSON)),\n        'page': value['page'],\n        'perPage': value['perPage'],\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SearchResultItem\n */\nexport interface SearchResultItem {\n    /**\n     * \n     * @type {string}\n     * @memberof SearchResultItem\n     */\n    action?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchResultItem\n     */\n    basicRole?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchResultItem\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchResultItem\n     */\n    roleName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SearchResultItem\n     */\n    scope?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchResultItem\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchResultItem\n     */\n    userId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchResultItem\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the SearchResultItem interface.\n */\nexport function instanceOfSearchResultItem(value: object): value is SearchResultItem {\n    return true;\n}\n\nexport function SearchResultItemFromJSON(json: any): SearchResultItem {\n    return SearchResultItemFromJSONTyped(json, false);\n}\n\nexport function SearchResultItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResultItem {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'action': json['action'] == null ? undefined : json['action'],\n        'basicRole': json['basicRole'] == null ? undefined : json['basicRole'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'roleName': json['roleName'] == null ? undefined : json['roleName'],\n        'scope': json['scope'] == null ? undefined : json['scope'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function SearchResultItemToJSON(json: any): SearchResultItem {\n    return SearchResultItemToJSONTyped(json, false);\n}\n\nexport function SearchResultItemToJSONTyped(value?: SearchResultItem | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'action': value['action'],\n        'basicRole': value['basicRole'],\n        'orgId': value['orgId'],\n        'roleName': value['roleName'],\n        'scope': value['scope'],\n        'teamId': value['teamId'],\n        'userId': value['userId'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SearchResultItem } from './SearchResultItem';\nimport {\n    SearchResultItemFromJSON,\n    SearchResultItemFromJSONTyped,\n    SearchResultItemToJSON,\n    SearchResultItemToJSONTyped,\n} from './SearchResultItem';\n\n/**\n * \n * @export\n * @interface SearchResult\n */\nexport interface SearchResult {\n    /**\n     * \n     * @type {Array<SearchResultItem>}\n     * @memberof SearchResult\n     */\n    result?: Array<SearchResultItem>;\n}\n\n/**\n * Check if a given object implements the SearchResult interface.\n */\nexport function instanceOfSearchResult(value: object): value is SearchResult {\n    return true;\n}\n\nexport function SearchResultFromJSON(json: any): SearchResult {\n    return SearchResultFromJSONTyped(json, false);\n}\n\nexport function SearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'result': json['result'] == null ? undefined : ((json['result'] as Array<any>).map(SearchResultItemFromJSON)),\n    };\n}\n\nexport function SearchResultToJSON(json: any): SearchResult {\n    return SearchResultToJSONTyped(json, false);\n}\n\nexport function SearchResultToJSONTyped(value?: SearchResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'result': value['result'] == null ? undefined : ((value['result'] as Array<any>).map(SearchResultItemToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TeamDTO\n */\nexport interface TeamDTO {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof TeamDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {string}\n     * @memberof TeamDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamDTO\n     */\n    memberCount?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamDTO\n     */\n    permission?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the TeamDTO interface.\n */\nexport function instanceOfTeamDTO(value: object): value is TeamDTO {\n    return true;\n}\n\nexport function TeamDTOFromJSON(json: any): TeamDTO {\n    return TeamDTOFromJSONTyped(json, false);\n}\n\nexport function TeamDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'email': json['email'] == null ? undefined : json['email'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'memberCount': json['memberCount'] == null ? undefined : json['memberCount'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function TeamDTOToJSON(json: any): TeamDTO {\n    return TeamDTOToJSONTyped(json, false);\n}\n\nexport function TeamDTOToJSONTyped(value?: TeamDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'avatarUrl': value['avatarUrl'],\n        'email': value['email'],\n        'id': value['id'],\n        'memberCount': value['memberCount'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'permission': value['permission'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TeamDTO } from './TeamDTO';\nimport {\n    TeamDTOFromJSON,\n    TeamDTOFromJSONTyped,\n    TeamDTOToJSON,\n    TeamDTOToJSONTyped,\n} from './TeamDTO';\n\n/**\n * \n * @export\n * @interface SearchTeamQueryResult\n */\nexport interface SearchTeamQueryResult {\n    /**\n     * \n     * @type {number}\n     * @memberof SearchTeamQueryResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchTeamQueryResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {Array<TeamDTO>}\n     * @memberof SearchTeamQueryResult\n     */\n    teams?: Array<TeamDTO>;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchTeamQueryResult\n     */\n    totalCount?: number;\n}\n\n/**\n * Check if a given object implements the SearchTeamQueryResult interface.\n */\nexport function instanceOfSearchTeamQueryResult(value: object): value is SearchTeamQueryResult {\n    return true;\n}\n\nexport function SearchTeamQueryResultFromJSON(json: any): SearchTeamQueryResult {\n    return SearchTeamQueryResultFromJSONTyped(json, false);\n}\n\nexport function SearchTeamQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchTeamQueryResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'teams': json['teams'] == null ? undefined : ((json['teams'] as Array<any>).map(TeamDTOFromJSON)),\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n    };\n}\n\nexport function SearchTeamQueryResultToJSON(json: any): SearchTeamQueryResult {\n    return SearchTeamQueryResultToJSONTyped(json, false);\n}\n\nexport function SearchTeamQueryResultToJSONTyped(value?: SearchTeamQueryResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'page': value['page'],\n        'perPage': value['perPage'],\n        'teams': value['teams'] == null ? undefined : ((value['teams'] as Array<any>).map(TeamDTOToJSON)),\n        'totalCount': value['totalCount'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UserSearchHitDTO\n */\nexport interface UserSearchHitDTO {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UserSearchHitDTO\n     */\n    authLabels?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserSearchHitDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserSearchHitDTO\n     */\n    isAdmin?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserSearchHitDTO\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof UserSearchHitDTO\n     */\n    lastSeenAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    lastSeenAtAge?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserSearchHitDTO\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the UserSearchHitDTO interface.\n */\nexport function instanceOfUserSearchHitDTO(value: object): value is UserSearchHitDTO {\n    return true;\n}\n\nexport function UserSearchHitDTOFromJSON(json: any): UserSearchHitDTO {\n    return UserSearchHitDTOFromJSONTyped(json, false);\n}\n\nexport function UserSearchHitDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSearchHitDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authLabels': json['authLabels'] == null ? undefined : json['authLabels'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'email': json['email'] == null ? undefined : json['email'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isAdmin': json['isAdmin'] == null ? undefined : json['isAdmin'],\n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'lastSeenAt': json['lastSeenAt'] == null ? undefined : (new Date(json['lastSeenAt'])),\n        'lastSeenAtAge': json['lastSeenAtAge'] == null ? undefined : json['lastSeenAtAge'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function UserSearchHitDTOToJSON(json: any): UserSearchHitDTO {\n    return UserSearchHitDTOToJSONTyped(json, false);\n}\n\nexport function UserSearchHitDTOToJSONTyped(value?: UserSearchHitDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'authLabels': value['authLabels'],\n        'avatarUrl': value['avatarUrl'],\n        'email': value['email'],\n        'id': value['id'],\n        'isAdmin': value['isAdmin'],\n        'isDisabled': value['isDisabled'],\n        'lastSeenAt': value['lastSeenAt'] == null ? undefined : ((value['lastSeenAt']).toISOString()),\n        'lastSeenAtAge': value['lastSeenAtAge'],\n        'login': value['login'],\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { UserSearchHitDTO } from './UserSearchHitDTO';\nimport {\n    UserSearchHitDTOFromJSON,\n    UserSearchHitDTOFromJSONTyped,\n    UserSearchHitDTOToJSON,\n    UserSearchHitDTOToJSONTyped,\n} from './UserSearchHitDTO';\n\n/**\n * \n * @export\n * @interface SearchUserQueryResult\n */\nexport interface SearchUserQueryResult {\n    /**\n     * \n     * @type {number}\n     * @memberof SearchUserQueryResult\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchUserQueryResult\n     */\n    perPage?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SearchUserQueryResult\n     */\n    totalCount?: number;\n    /**\n     * \n     * @type {Array<UserSearchHitDTO>}\n     * @memberof SearchUserQueryResult\n     */\n    users?: Array<UserSearchHitDTO>;\n}\n\n/**\n * Check if a given object implements the SearchUserQueryResult interface.\n */\nexport function instanceOfSearchUserQueryResult(value: object): value is SearchUserQueryResult {\n    return true;\n}\n\nexport function SearchUserQueryResultFromJSON(json: any): SearchUserQueryResult {\n    return SearchUserQueryResultFromJSONTyped(json, false);\n}\n\nexport function SearchUserQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchUserQueryResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'page': json['page'] == null ? undefined : json['page'],\n        'perPage': json['perPage'] == null ? undefined : json['perPage'],\n        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],\n        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserSearchHitDTOFromJSON)),\n    };\n}\n\nexport function SearchUserQueryResultToJSON(json: any): SearchUserQueryResult {\n    return SearchUserQueryResultToJSONTyped(json, false);\n}\n\nexport function SearchUserQueryResultToJSONTyped(value?: SearchUserQueryResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'page': value['page'],\n        'perPage': value['perPage'],\n        'totalCount': value['totalCount'],\n        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserSearchHitDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ServiceAccountProfileDTO\n */\nexport interface ServiceAccountProfileDTO {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof ServiceAccountProfileDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountProfileDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof ServiceAccountProfileDTO\n     */\n    createdAt?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountProfileDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServiceAccountProfileDTO\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof ServiceAccountProfileDTO\n     */\n    isExternal?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountProfileDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountProfileDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountProfileDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountProfileDTO\n     */\n    requiredBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAccountProfileDTO\n     */\n    role?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof ServiceAccountProfileDTO\n     */\n    teams?: Array<string>;\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceAccountProfileDTO\n     */\n    tokens?: number;\n    /**\n     * \n     * @type {Date}\n     * @memberof ServiceAccountProfileDTO\n     */\n    updatedAt?: Date;\n}\n\n/**\n * Check if a given object implements the ServiceAccountProfileDTO interface.\n */\nexport function instanceOfServiceAccountProfileDTO(value: object): value is ServiceAccountProfileDTO {\n    return true;\n}\n\nexport function ServiceAccountProfileDTOFromJSON(json: any): ServiceAccountProfileDTO {\n    return ServiceAccountProfileDTOFromJSONTyped(json, false);\n}\n\nexport function ServiceAccountProfileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceAccountProfileDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'isExternal': json['isExternal'] == null ? undefined : json['isExternal'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'requiredBy': json['requiredBy'] == null ? undefined : json['requiredBy'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'teams': json['teams'] == null ? undefined : json['teams'],\n        'tokens': json['tokens'] == null ? undefined : json['tokens'],\n        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),\n    };\n}\n\nexport function ServiceAccountProfileDTOToJSON(json: any): ServiceAccountProfileDTO {\n    return ServiceAccountProfileDTOToJSONTyped(json, false);\n}\n\nexport function ServiceAccountProfileDTOToJSONTyped(value?: ServiceAccountProfileDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'avatarUrl': value['avatarUrl'],\n        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),\n        'id': value['id'],\n        'isDisabled': value['isDisabled'],\n        'isExternal': value['isExternal'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'requiredBy': value['requiredBy'],\n        'role': value['role'],\n        'teams': value['teams'],\n        'tokens': value['tokens'],\n        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SetPermissionCommand\n */\nexport interface SetPermissionCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof SetPermissionCommand\n     */\n    permission?: string;\n}\n\n/**\n * Check if a given object implements the SetPermissionCommand interface.\n */\nexport function instanceOfSetPermissionCommand(value: object): value is SetPermissionCommand {\n    return true;\n}\n\nexport function SetPermissionCommandFromJSON(json: any): SetPermissionCommand {\n    return SetPermissionCommandFromJSONTyped(json, false);\n}\n\nexport function SetPermissionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPermissionCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'permission': json['permission'] == null ? undefined : json['permission'],\n    };\n}\n\nexport function SetPermissionCommandToJSON(json: any): SetPermissionCommand {\n    return SetPermissionCommandToJSONTyped(json, false);\n}\n\nexport function SetPermissionCommandToJSONTyped(value?: SetPermissionCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'permission': value['permission'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SetResourcePermissionCommand\n */\nexport interface SetResourcePermissionCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof SetResourcePermissionCommand\n     */\n    builtInRole?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SetResourcePermissionCommand\n     */\n    permission?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof SetResourcePermissionCommand\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof SetResourcePermissionCommand\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the SetResourcePermissionCommand interface.\n */\nexport function instanceOfSetResourcePermissionCommand(value: object): value is SetResourcePermissionCommand {\n    return true;\n}\n\nexport function SetResourcePermissionCommandFromJSON(json: any): SetResourcePermissionCommand {\n    return SetResourcePermissionCommandFromJSONTyped(json, false);\n}\n\nexport function SetResourcePermissionCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetResourcePermissionCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'builtInRole': json['builtInRole'] == null ? undefined : json['builtInRole'],\n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function SetResourcePermissionCommandToJSON(json: any): SetResourcePermissionCommand {\n    return SetResourcePermissionCommandToJSONTyped(json, false);\n}\n\nexport function SetResourcePermissionCommandToJSONTyped(value?: SetResourcePermissionCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'builtInRole': value['builtInRole'],\n        'permission': value['permission'],\n        'teamId': value['teamId'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SetResourcePermissionCommand } from './SetResourcePermissionCommand';\nimport {\n    SetResourcePermissionCommandFromJSON,\n    SetResourcePermissionCommandFromJSONTyped,\n    SetResourcePermissionCommandToJSON,\n    SetResourcePermissionCommandToJSONTyped,\n} from './SetResourcePermissionCommand';\n\n/**\n * \n * @export\n * @interface SetPermissionsCommand\n */\nexport interface SetPermissionsCommand {\n    /**\n     * \n     * @type {Array<SetResourcePermissionCommand>}\n     * @memberof SetPermissionsCommand\n     */\n    permissions?: Array<SetResourcePermissionCommand>;\n}\n\n/**\n * Check if a given object implements the SetPermissionsCommand interface.\n */\nexport function instanceOfSetPermissionsCommand(value: object): value is SetPermissionsCommand {\n    return true;\n}\n\nexport function SetPermissionsCommandFromJSON(json: any): SetPermissionsCommand {\n    return SetPermissionsCommandFromJSONTyped(json, false);\n}\n\nexport function SetPermissionsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetPermissionsCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(SetResourcePermissionCommandFromJSON)),\n    };\n}\n\nexport function SetPermissionsCommandToJSON(json: any): SetPermissionsCommand {\n    return SetPermissionsCommandToJSONTyped(json, false);\n}\n\nexport function SetPermissionsCommandToJSONTyped(value?: SetPermissionsCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(SetResourcePermissionCommandToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SetRoleAssignmentsCommand\n */\nexport interface SetRoleAssignmentsCommand {\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof SetRoleAssignmentsCommand\n     */\n    serviceAccounts?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof SetRoleAssignmentsCommand\n     */\n    teams?: Array<number>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof SetRoleAssignmentsCommand\n     */\n    users?: Array<number>;\n}\n\n/**\n * Check if a given object implements the SetRoleAssignmentsCommand interface.\n */\nexport function instanceOfSetRoleAssignmentsCommand(value: object): value is SetRoleAssignmentsCommand {\n    return true;\n}\n\nexport function SetRoleAssignmentsCommandFromJSON(json: any): SetRoleAssignmentsCommand {\n    return SetRoleAssignmentsCommandFromJSONTyped(json, false);\n}\n\nexport function SetRoleAssignmentsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetRoleAssignmentsCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'serviceAccounts': json['service_accounts'] == null ? undefined : json['service_accounts'],\n        'teams': json['teams'] == null ? undefined : json['teams'],\n        'users': json['users'] == null ? undefined : json['users'],\n    };\n}\n\nexport function SetRoleAssignmentsCommandToJSON(json: any): SetRoleAssignmentsCommand {\n    return SetRoleAssignmentsCommandToJSONTyped(json, false);\n}\n\nexport function SetRoleAssignmentsCommandToJSONTyped(value?: SetRoleAssignmentsCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'service_accounts': value['serviceAccounts'],\n        'teams': value['teams'],\n        'users': value['users'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SetTeamMembershipsCommand\n */\nexport interface SetTeamMembershipsCommand {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SetTeamMembershipsCommand\n     */\n    admins?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SetTeamMembershipsCommand\n     */\n    members?: Array<string>;\n}\n\n/**\n * Check if a given object implements the SetTeamMembershipsCommand interface.\n */\nexport function instanceOfSetTeamMembershipsCommand(value: object): value is SetTeamMembershipsCommand {\n    return true;\n}\n\nexport function SetTeamMembershipsCommandFromJSON(json: any): SetTeamMembershipsCommand {\n    return SetTeamMembershipsCommandFromJSONTyped(json, false);\n}\n\nexport function SetTeamMembershipsCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetTeamMembershipsCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'admins': json['admins'] == null ? undefined : json['admins'],\n        'members': json['members'] == null ? undefined : json['members'],\n    };\n}\n\nexport function SetTeamMembershipsCommandToJSON(json: any): SetTeamMembershipsCommand {\n    return SetTeamMembershipsCommandToJSONTyped(json, false);\n}\n\nexport function SetTeamMembershipsCommandToJSONTyped(value?: SetTeamMembershipsCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'admins': value['admins'],\n        'members': value['members'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SetUserRolesCommand\n */\nexport interface SetUserRolesCommand {\n    /**\n     * \n     * @type {boolean}\n     * @memberof SetUserRolesCommand\n     */\n    global?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof SetUserRolesCommand\n     */\n    includeHidden?: boolean;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof SetUserRolesCommand\n     */\n    roleUids?: Array<string>;\n}\n\n/**\n * Check if a given object implements the SetUserRolesCommand interface.\n */\nexport function instanceOfSetUserRolesCommand(value: object): value is SetUserRolesCommand {\n    return true;\n}\n\nexport function SetUserRolesCommandFromJSON(json: any): SetUserRolesCommand {\n    return SetUserRolesCommandFromJSONTyped(json, false);\n}\n\nexport function SetUserRolesCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetUserRolesCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'global': json['global'] == null ? undefined : json['global'],\n        'includeHidden': json['includeHidden'] == null ? undefined : json['includeHidden'],\n        'roleUids': json['roleUids'] == null ? undefined : json['roleUids'],\n    };\n}\n\nexport function SetUserRolesCommandToJSON(json: any): SetUserRolesCommand {\n    return SetUserRolesCommandToJSONTyped(json, false);\n}\n\nexport function SetUserRolesCommandToJSONTyped(value?: SetUserRolesCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'global': value['global'],\n        'includeHidden': value['includeHidden'],\n        'roleUids': value['roleUids'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Matcher } from './Matcher';\nimport {\n    MatcherFromJSON,\n    MatcherFromJSONTyped,\n    MatcherToJSON,\n    MatcherToJSONTyped,\n} from './Matcher';\n\n/**\n * Silence silence\n * @export\n * @interface Silence\n */\nexport interface Silence {\n    /**\n     * comment\n     * @type {string}\n     * @memberof Silence\n     */\n    comment: string;\n    /**\n     * created by\n     * @type {string}\n     * @memberof Silence\n     */\n    createdBy: string;\n    /**\n     * ends at\n     * @type {Date}\n     * @memberof Silence\n     */\n    endsAt: Date;\n    /**\n     * Matchers matchers\n     * @type {Array<Matcher>}\n     * @memberof Silence\n     */\n    matchers: Array<Matcher>;\n    /**\n     * starts at\n     * @type {Date}\n     * @memberof Silence\n     */\n    startsAt: Date;\n}\n\n/**\n * Check if a given object implements the Silence interface.\n */\nexport function instanceOfSilence(value: object): value is Silence {\n    if (!('comment' in value) || value['comment'] === undefined) return false;\n    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;\n    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;\n    if (!('matchers' in value) || value['matchers'] === undefined) return false;\n    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;\n    return true;\n}\n\nexport function SilenceFromJSON(json: any): Silence {\n    return SilenceFromJSONTyped(json, false);\n}\n\nexport function SilenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Silence {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'comment': json['comment'],\n        'createdBy': json['createdBy'],\n        'endsAt': (new Date(json['endsAt'])),\n        'matchers': ((json['matchers'] as Array<any>).map(MatcherFromJSON)),\n        'startsAt': (new Date(json['startsAt'])),\n    };\n}\n\nexport function SilenceToJSON(json: any): Silence {\n    return SilenceToJSONTyped(json, false);\n}\n\nexport function SilenceToJSONTyped(value?: Silence | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'comment': value['comment'],\n        'createdBy': value['createdBy'],\n        'endsAt': ((value['endsAt']).toISOString()),\n        'matchers': ((value['matchers'] as Array<any>).map(MatcherToJSON)),\n        'startsAt': ((value['startsAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Base snapshot without results\n * @export\n * @interface SnapshotDTO\n */\nexport interface SnapshotDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof SnapshotDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof SnapshotDTO\n     */\n    finished?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof SnapshotDTO\n     */\n    sessionUid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof SnapshotDTO\n     */\n    status?: SnapshotDTOStatusEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof SnapshotDTO\n     */\n    uid?: string;\n}\n\n\n/**\n * @export\n */\nexport const SnapshotDTOStatusEnum = {\n    Initializing: 'INITIALIZING',\n    Creating: 'CREATING',\n    PendingUpload: 'PENDING_UPLOAD',\n    Uploading: 'UPLOADING',\n    PendingProcessing: 'PENDING_PROCESSING',\n    Processing: 'PROCESSING',\n    Finished: 'FINISHED',\n    Canceled: 'CANCELED',\n    Error: 'ERROR',\n    Unknown: 'UNKNOWN'\n} as const;\nexport type SnapshotDTOStatusEnum = typeof SnapshotDTOStatusEnum[keyof typeof SnapshotDTOStatusEnum];\n\n\n/**\n * Check if a given object implements the SnapshotDTO interface.\n */\nexport function instanceOfSnapshotDTO(value: object): value is SnapshotDTO {\n    return true;\n}\n\nexport function SnapshotDTOFromJSON(json: any): SnapshotDTO {\n    return SnapshotDTOFromJSONTyped(json, false);\n}\n\nexport function SnapshotDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'finished': json['finished'] == null ? undefined : (new Date(json['finished'])),\n        'sessionUid': json['sessionUid'] == null ? undefined : json['sessionUid'],\n        'status': json['status'] == null ? undefined : json['status'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function SnapshotDTOToJSON(json: any): SnapshotDTO {\n    return SnapshotDTOToJSONTyped(json, false);\n}\n\nexport function SnapshotDTOToJSONTyped(value?: SnapshotDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'finished': value['finished'] == null ? undefined : ((value['finished']).toISOString()),\n        'sessionUid': value['sessionUid'],\n        'status': value['status'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { SnapshotDTO } from './SnapshotDTO';\nimport {\n    SnapshotDTOFromJSON,\n    SnapshotDTOFromJSONTyped,\n    SnapshotDTOToJSON,\n    SnapshotDTOToJSONTyped,\n} from './SnapshotDTO';\n\n/**\n * \n * @export\n * @interface SnapshotListResponseDTO\n */\nexport interface SnapshotListResponseDTO {\n    /**\n     * \n     * @type {Array<SnapshotDTO>}\n     * @memberof SnapshotListResponseDTO\n     */\n    snapshots?: Array<SnapshotDTO>;\n}\n\n/**\n * Check if a given object implements the SnapshotListResponseDTO interface.\n */\nexport function instanceOfSnapshotListResponseDTO(value: object): value is SnapshotListResponseDTO {\n    return true;\n}\n\nexport function SnapshotListResponseDTOFromJSON(json: any): SnapshotListResponseDTO {\n    return SnapshotListResponseDTOFromJSONTyped(json, false);\n}\n\nexport function SnapshotListResponseDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SnapshotListResponseDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'snapshots': json['snapshots'] == null ? undefined : ((json['snapshots'] as Array<any>).map(SnapshotDTOFromJSON)),\n    };\n}\n\nexport function SnapshotListResponseDTOToJSON(json: any): SnapshotListResponseDTO {\n    return SnapshotListResponseDTOToJSONTyped(json, false);\n}\n\nexport function SnapshotListResponseDTOToJSONTyped(value?: SnapshotListResponseDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'snapshots': value['snapshots'] == null ? undefined : ((value['snapshots'] as Array<any>).map(SnapshotDTOToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface SuccessResponseBody\n */\nexport interface SuccessResponseBody {\n    /**\n     * \n     * @type {string}\n     * @memberof SuccessResponseBody\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the SuccessResponseBody interface.\n */\nexport function instanceOfSuccessResponseBody(value: object): value is SuccessResponseBody {\n    return true;\n}\n\nexport function SuccessResponseBodyFromJSON(json: any): SuccessResponseBody {\n    return SuccessResponseBodyFromJSONTyped(json, false);\n}\n\nexport function SuccessResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuccessResponseBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function SuccessResponseBodyToJSON(json: any): SuccessResponseBody {\n    return SuccessResponseBodyToJSONTyped(json, false);\n}\n\nexport function SuccessResponseBodyToJSONTyped(value?: SuccessResponseBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TeamGroupDTO\n */\nexport interface TeamGroupDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof TeamGroupDTO\n     */\n    groupId?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamGroupDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamGroupDTO\n     */\n    teamId?: number;\n}\n\n/**\n * Check if a given object implements the TeamGroupDTO interface.\n */\nexport function instanceOfTeamGroupDTO(value: object): value is TeamGroupDTO {\n    return true;\n}\n\nexport function TeamGroupDTOFromJSON(json: any): TeamGroupDTO {\n    return TeamGroupDTOFromJSONTyped(json, false);\n}\n\nexport function TeamGroupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamGroupDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'groupId': json['groupId'] == null ? undefined : json['groupId'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n    };\n}\n\nexport function TeamGroupDTOToJSON(json: any): TeamGroupDTO {\n    return TeamGroupDTOToJSONTyped(json, false);\n}\n\nexport function TeamGroupDTOToJSONTyped(value?: TeamGroupDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'groupId': value['groupId'],\n        'orgId': value['orgId'],\n        'teamId': value['teamId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TeamGroupMapping\n */\nexport interface TeamGroupMapping {\n    /**\n     * \n     * @type {string}\n     * @memberof TeamGroupMapping\n     */\n    groupId?: string;\n}\n\n/**\n * Check if a given object implements the TeamGroupMapping interface.\n */\nexport function instanceOfTeamGroupMapping(value: object): value is TeamGroupMapping {\n    return true;\n}\n\nexport function TeamGroupMappingFromJSON(json: any): TeamGroupMapping {\n    return TeamGroupMappingFromJSONTyped(json, false);\n}\n\nexport function TeamGroupMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamGroupMapping {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'groupId': json['groupId'] == null ? undefined : json['groupId'],\n    };\n}\n\nexport function TeamGroupMappingToJSON(json: any): TeamGroupMapping {\n    return TeamGroupMappingToJSONTyped(json, false);\n}\n\nexport function TeamGroupMappingToJSONTyped(value?: TeamGroupMapping | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'groupId': value['groupId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TeamLBACRule\n */\nexport interface TeamLBACRule {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TeamLBACRule\n     */\n    rules?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamLBACRule\n     */\n    teamId?: string;\n}\n\n/**\n * Check if a given object implements the TeamLBACRule interface.\n */\nexport function instanceOfTeamLBACRule(value: object): value is TeamLBACRule {\n    return true;\n}\n\nexport function TeamLBACRuleFromJSON(json: any): TeamLBACRule {\n    return TeamLBACRuleFromJSONTyped(json, false);\n}\n\nexport function TeamLBACRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamLBACRule {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'rules': json['rules'] == null ? undefined : json['rules'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n    };\n}\n\nexport function TeamLBACRuleToJSON(json: any): TeamLBACRule {\n    return TeamLBACRuleToJSONTyped(json, false);\n}\n\nexport function TeamLBACRuleToJSONTyped(value?: TeamLBACRule | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'rules': value['rules'],\n        'teamId': value['teamId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TeamLBACRule } from './TeamLBACRule';\nimport {\n    TeamLBACRuleFromJSON,\n    TeamLBACRuleFromJSONTyped,\n    TeamLBACRuleToJSON,\n    TeamLBACRuleToJSONTyped,\n} from './TeamLBACRule';\n\n/**\n * \n * @export\n * @interface TeamLBACRules\n */\nexport interface TeamLBACRules {\n    /**\n     * \n     * @type {Array<TeamLBACRule>}\n     * @memberof TeamLBACRules\n     */\n    rules?: Array<TeamLBACRule>;\n}\n\n/**\n * Check if a given object implements the TeamLBACRules interface.\n */\nexport function instanceOfTeamLBACRules(value: object): value is TeamLBACRules {\n    return true;\n}\n\nexport function TeamLBACRulesFromJSON(json: any): TeamLBACRules {\n    return TeamLBACRulesFromJSONTyped(json, false);\n}\n\nexport function TeamLBACRulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamLBACRules {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(TeamLBACRuleFromJSON)),\n    };\n}\n\nexport function TeamLBACRulesToJSON(json: any): TeamLBACRules {\n    return TeamLBACRulesToJSONTyped(json, false);\n}\n\nexport function TeamLBACRulesToJSONTyped(value?: TeamLBACRules | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(TeamLBACRuleToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TeamMemberDTO\n */\nexport interface TeamMemberDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    authModule?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof TeamMemberDTO\n     */\n    labels?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamMemberDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamMemberDTO\n     */\n    permission?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamMemberDTO\n     */\n    teamId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TeamMemberDTO\n     */\n    teamUID?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TeamMemberDTO\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the TeamMemberDTO interface.\n */\nexport function instanceOfTeamMemberDTO(value: object): value is TeamMemberDTO {\n    return true;\n}\n\nexport function TeamMemberDTOFromJSON(json: any): TeamMemberDTO {\n    return TeamMemberDTOFromJSONTyped(json, false);\n}\n\nexport function TeamMemberDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamMemberDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authModule': json['auth_module'] == null ? undefined : json['auth_module'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'email': json['email'] == null ? undefined : json['email'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'permission': json['permission'] == null ? undefined : json['permission'],\n        'teamId': json['teamId'] == null ? undefined : json['teamId'],\n        'teamUID': json['teamUID'] == null ? undefined : json['teamUID'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function TeamMemberDTOToJSON(json: any): TeamMemberDTO {\n    return TeamMemberDTOToJSONTyped(json, false);\n}\n\nexport function TeamMemberDTOToJSONTyped(value?: TeamMemberDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'auth_module': value['authModule'],\n        'avatarUrl': value['avatarUrl'],\n        'email': value['email'],\n        'labels': value['labels'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'permission': value['permission'],\n        'teamId': value['teamId'],\n        'teamUID': value['teamUID'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TempUserDTO\n */\nexport interface TempUserDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    code?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof TempUserDTO\n     */\n    createdOn?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof TempUserDTO\n     */\n    emailSent?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof TempUserDTO\n     */\n    emailSentOn?: Date;\n    /**\n     * \n     * @type {number}\n     * @memberof TempUserDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    invitedByEmail?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    invitedByLogin?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    invitedByName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TempUserDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    role?: TempUserDTORoleEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TempUserDTO\n     */\n    url?: string;\n}\n\n\n/**\n * @export\n */\nexport const TempUserDTORoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type TempUserDTORoleEnum = typeof TempUserDTORoleEnum[keyof typeof TempUserDTORoleEnum];\n\n\n/**\n * Check if a given object implements the TempUserDTO interface.\n */\nexport function instanceOfTempUserDTO(value: object): value is TempUserDTO {\n    return true;\n}\n\nexport function TempUserDTOFromJSON(json: any): TempUserDTO {\n    return TempUserDTOFromJSONTyped(json, false);\n}\n\nexport function TempUserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TempUserDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'code': json['code'] == null ? undefined : json['code'],\n        'createdOn': json['createdOn'] == null ? undefined : (new Date(json['createdOn'])),\n        'email': json['email'] == null ? undefined : json['email'],\n        'emailSent': json['emailSent'] == null ? undefined : json['emailSent'],\n        'emailSentOn': json['emailSentOn'] == null ? undefined : (new Date(json['emailSentOn'])),\n        'id': json['id'] == null ? undefined : json['id'],\n        'invitedByEmail': json['invitedByEmail'] == null ? undefined : json['invitedByEmail'],\n        'invitedByLogin': json['invitedByLogin'] == null ? undefined : json['invitedByLogin'],\n        'invitedByName': json['invitedByName'] == null ? undefined : json['invitedByName'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'status': json['status'] == null ? undefined : json['status'],\n        'url': json['url'] == null ? undefined : json['url'],\n    };\n}\n\nexport function TempUserDTOToJSON(json: any): TempUserDTO {\n    return TempUserDTOToJSONTyped(json, false);\n}\n\nexport function TempUserDTOToJSONTyped(value?: TempUserDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'code': value['code'],\n        'createdOn': value['createdOn'] == null ? undefined : ((value['createdOn']).toISOString()),\n        'email': value['email'],\n        'emailSent': value['emailSent'],\n        'emailSentOn': value['emailSentOn'] == null ? undefined : ((value['emailSentOn']).toISOString()),\n        'id': value['id'],\n        'invitedByEmail': value['invitedByEmail'],\n        'invitedByLogin': value['invitedByLogin'],\n        'invitedByName': value['invitedByName'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'role': value['role'],\n        'status': value['status'],\n        'url': value['url'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TestReceiverConfigResult\n */\nexport interface TestReceiverConfigResult {\n    /**\n     * \n     * @type {string}\n     * @memberof TestReceiverConfigResult\n     */\n    error?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TestReceiverConfigResult\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TestReceiverConfigResult\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TestReceiverConfigResult\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the TestReceiverConfigResult interface.\n */\nexport function instanceOfTestReceiverConfigResult(value: object): value is TestReceiverConfigResult {\n    return true;\n}\n\nexport function TestReceiverConfigResultFromJSON(json: any): TestReceiverConfigResult {\n    return TestReceiverConfigResultFromJSONTyped(json, false);\n}\n\nexport function TestReceiverConfigResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiverConfigResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'error': json['error'] == null ? undefined : json['error'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'status': json['status'] == null ? undefined : json['status'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function TestReceiverConfigResultToJSON(json: any): TestReceiverConfigResult {\n    return TestReceiverConfigResultToJSONTyped(json, false);\n}\n\nexport function TestReceiverConfigResultToJSONTyped(value?: TestReceiverConfigResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'error': value['error'],\n        'name': value['name'],\n        'status': value['status'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TestReceiverConfigResult } from './TestReceiverConfigResult';\nimport {\n    TestReceiverConfigResultFromJSON,\n    TestReceiverConfigResultFromJSONTyped,\n    TestReceiverConfigResultToJSON,\n    TestReceiverConfigResultToJSONTyped,\n} from './TestReceiverConfigResult';\n\n/**\n * \n * @export\n * @interface TestReceiverResult\n */\nexport interface TestReceiverResult {\n    /**\n     * \n     * @type {Array<TestReceiverConfigResult>}\n     * @memberof TestReceiverResult\n     */\n    grafanaManagedReceiverConfigs?: Array<TestReceiverConfigResult>;\n    /**\n     * \n     * @type {string}\n     * @memberof TestReceiverResult\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the TestReceiverResult interface.\n */\nexport function instanceOfTestReceiverResult(value: object): value is TestReceiverResult {\n    return true;\n}\n\nexport function TestReceiverResultFromJSON(json: any): TestReceiverResult {\n    return TestReceiverResultFromJSONTyped(json, false);\n}\n\nexport function TestReceiverResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiverResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'grafanaManagedReceiverConfigs': json['grafana_managed_receiver_configs'] == null ? undefined : ((json['grafana_managed_receiver_configs'] as Array<any>).map(TestReceiverConfigResultFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function TestReceiverResultToJSON(json: any): TestReceiverResult {\n    return TestReceiverResultToJSONTyped(json, false);\n}\n\nexport function TestReceiverResultToJSONTyped(value?: TestReceiverResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'grafana_managed_receiver_configs': value['grafanaManagedReceiverConfigs'] == null ? undefined : ((value['grafanaManagedReceiverConfigs'] as Array<any>).map(TestReceiverConfigResultToJSON)),\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TestReceiversConfigAlertParams\n */\nexport interface TestReceiversConfigAlertParams {\n    /**\n     * A LabelSet is a collection of LabelName and LabelValue pairs.  The LabelSet\n     * may be fully-qualified down to the point where it may resolve to a single\n     * Metric in the data store or not.  All operations that occur within the realm\n     * of a LabelSet can emit a vector of Metric entities to which the LabelSet may\n     * match.\n     * @type {{ [key: string]: string; }}\n     * @memberof TestReceiversConfigAlertParams\n     */\n    annotations?: { [key: string]: string; };\n    /**\n     * A LabelSet is a collection of LabelName and LabelValue pairs.  The LabelSet\n     * may be fully-qualified down to the point where it may resolve to a single\n     * Metric in the data store or not.  All operations that occur within the realm\n     * of a LabelSet can emit a vector of Metric entities to which the LabelSet may\n     * match.\n     * @type {{ [key: string]: string; }}\n     * @memberof TestReceiversConfigAlertParams\n     */\n    labels?: { [key: string]: string; };\n}\n\n/**\n * Check if a given object implements the TestReceiversConfigAlertParams interface.\n */\nexport function instanceOfTestReceiversConfigAlertParams(value: object): value is TestReceiversConfigAlertParams {\n    return true;\n}\n\nexport function TestReceiversConfigAlertParamsFromJSON(json: any): TestReceiversConfigAlertParams {\n    return TestReceiversConfigAlertParamsFromJSONTyped(json, false);\n}\n\nexport function TestReceiversConfigAlertParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversConfigAlertParams {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'annotations': json['annotations'] == null ? undefined : json['annotations'],\n        'labels': json['labels'] == null ? undefined : json['labels'],\n    };\n}\n\nexport function TestReceiversConfigAlertParamsToJSON(json: any): TestReceiversConfigAlertParams {\n    return TestReceiversConfigAlertParamsToJSONTyped(json, false);\n}\n\nexport function TestReceiversConfigAlertParamsToJSONTyped(value?: TestReceiversConfigAlertParams | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'annotations': value['annotations'],\n        'labels': value['labels'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableApiReceiver } from './PostableApiReceiver';\nimport {\n    PostableApiReceiverFromJSON,\n    PostableApiReceiverFromJSONTyped,\n    PostableApiReceiverToJSON,\n    PostableApiReceiverToJSONTyped,\n} from './PostableApiReceiver';\nimport type { TestReceiversConfigAlertParams } from './TestReceiversConfigAlertParams';\nimport {\n    TestReceiversConfigAlertParamsFromJSON,\n    TestReceiversConfigAlertParamsFromJSONTyped,\n    TestReceiversConfigAlertParamsToJSON,\n    TestReceiversConfigAlertParamsToJSONTyped,\n} from './TestReceiversConfigAlertParams';\n\n/**\n * \n * @export\n * @interface TestReceiversConfigBodyParams\n */\nexport interface TestReceiversConfigBodyParams {\n    /**\n     * \n     * @type {TestReceiversConfigAlertParams}\n     * @memberof TestReceiversConfigBodyParams\n     */\n    alert?: TestReceiversConfigAlertParams;\n    /**\n     * \n     * @type {Array<PostableApiReceiver>}\n     * @memberof TestReceiversConfigBodyParams\n     */\n    receivers?: Array<PostableApiReceiver>;\n}\n\n/**\n * Check if a given object implements the TestReceiversConfigBodyParams interface.\n */\nexport function instanceOfTestReceiversConfigBodyParams(value: object): value is TestReceiversConfigBodyParams {\n    return true;\n}\n\nexport function TestReceiversConfigBodyParamsFromJSON(json: any): TestReceiversConfigBodyParams {\n    return TestReceiversConfigBodyParamsFromJSONTyped(json, false);\n}\n\nexport function TestReceiversConfigBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversConfigBodyParams {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alert': json['alert'] == null ? undefined : TestReceiversConfigAlertParamsFromJSON(json['alert']),\n        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(PostableApiReceiverFromJSON)),\n    };\n}\n\nexport function TestReceiversConfigBodyParamsToJSON(json: any): TestReceiversConfigBodyParams {\n    return TestReceiversConfigBodyParamsToJSONTyped(json, false);\n}\n\nexport function TestReceiversConfigBodyParamsToJSONTyped(value?: TestReceiversConfigBodyParams | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alert': TestReceiversConfigAlertParamsToJSON(value['alert']),\n        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(PostableApiReceiverToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TestReceiverResult } from './TestReceiverResult';\nimport {\n    TestReceiverResultFromJSON,\n    TestReceiverResultFromJSONTyped,\n    TestReceiverResultToJSON,\n    TestReceiverResultToJSONTyped,\n} from './TestReceiverResult';\nimport type { TestReceiversConfigAlertParams } from './TestReceiversConfigAlertParams';\nimport {\n    TestReceiversConfigAlertParamsFromJSON,\n    TestReceiversConfigAlertParamsFromJSONTyped,\n    TestReceiversConfigAlertParamsToJSON,\n    TestReceiversConfigAlertParamsToJSONTyped,\n} from './TestReceiversConfigAlertParams';\n\n/**\n * \n * @export\n * @interface TestReceiversResult\n */\nexport interface TestReceiversResult {\n    /**\n     * \n     * @type {TestReceiversConfigAlertParams}\n     * @memberof TestReceiversResult\n     */\n    alert?: TestReceiversConfigAlertParams;\n    /**\n     * \n     * @type {Date}\n     * @memberof TestReceiversResult\n     */\n    notifiedAt?: Date;\n    /**\n     * \n     * @type {Array<TestReceiverResult>}\n     * @memberof TestReceiversResult\n     */\n    receivers?: Array<TestReceiverResult>;\n}\n\n/**\n * Check if a given object implements the TestReceiversResult interface.\n */\nexport function instanceOfTestReceiversResult(value: object): value is TestReceiversResult {\n    return true;\n}\n\nexport function TestReceiversResultFromJSON(json: any): TestReceiversResult {\n    return TestReceiversResultFromJSONTyped(json, false);\n}\n\nexport function TestReceiversResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestReceiversResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alert': json['alert'] == null ? undefined : TestReceiversConfigAlertParamsFromJSON(json['alert']),\n        'notifiedAt': json['notified_at'] == null ? undefined : (new Date(json['notified_at'])),\n        'receivers': json['receivers'] == null ? undefined : ((json['receivers'] as Array<any>).map(TestReceiverResultFromJSON)),\n    };\n}\n\nexport function TestReceiversResultToJSON(json: any): TestReceiversResult {\n    return TestReceiversResultToJSONTyped(json, false);\n}\n\nexport function TestReceiversResultToJSONTyped(value?: TestReceiversResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alert': TestReceiversConfigAlertParamsToJSON(value['alert']),\n        'notified_at': value['notifiedAt'] == null ? undefined : ((value['notifiedAt']).toISOString()),\n        'receivers': value['receivers'] == null ? undefined : ((value['receivers'] as Array<any>).map(TestReceiverResultToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { EvalAlertConditionCommand } from './EvalAlertConditionCommand';\nimport {\n    EvalAlertConditionCommandFromJSON,\n    EvalAlertConditionCommandFromJSONTyped,\n    EvalAlertConditionCommandToJSON,\n    EvalAlertConditionCommandToJSONTyped,\n} from './EvalAlertConditionCommand';\n\n/**\n * \n * @export\n * @interface TestRulePayload\n */\nexport interface TestRulePayload {\n    /**\n     * \n     * @type {string}\n     * @memberof TestRulePayload\n     */\n    expr?: string;\n    /**\n     * \n     * @type {EvalAlertConditionCommand}\n     * @memberof TestRulePayload\n     */\n    grafanaCondition?: EvalAlertConditionCommand;\n}\n\n/**\n * Check if a given object implements the TestRulePayload interface.\n */\nexport function instanceOfTestRulePayload(value: object): value is TestRulePayload {\n    return true;\n}\n\nexport function TestRulePayloadFromJSON(json: any): TestRulePayload {\n    return TestRulePayloadFromJSONTyped(json, false);\n}\n\nexport function TestRulePayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestRulePayload {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'expr': json['expr'] == null ? undefined : json['expr'],\n        'grafanaCondition': json['grafana_condition'] == null ? undefined : EvalAlertConditionCommandFromJSON(json['grafana_condition']),\n    };\n}\n\nexport function TestRulePayloadToJSON(json: any): TestRulePayload {\n    return TestRulePayloadToJSONTyped(json, false);\n}\n\nexport function TestRulePayloadToJSONTyped(value?: TestRulePayload | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'expr': value['expr'],\n        'grafana_condition': EvalAlertConditionCommandToJSON(value['grafanaCondition']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { AlertInstancesResponse } from './AlertInstancesResponse';\nimport {\n    AlertInstancesResponseFromJSON,\n    AlertInstancesResponseFromJSONTyped,\n    AlertInstancesResponseToJSON,\n    AlertInstancesResponseToJSONTyped,\n} from './AlertInstancesResponse';\nimport type { Sample } from './Sample';\nimport {\n    SampleFromJSON,\n    SampleFromJSONTyped,\n    SampleToJSON,\n    SampleToJSONTyped,\n} from './Sample';\n\n/**\n * \n * @export\n * @interface TestRuleResponse\n */\nexport interface TestRuleResponse {\n    /**\n     * Vector is basically only an alias for []Sample, but the contract is that\n     * in a Vector, all Samples have the same timestamp.\n     * @type {Array<Sample>}\n     * @memberof TestRuleResponse\n     */\n    alerts?: Array<Sample>;\n    /**\n     * \n     * @type {AlertInstancesResponse}\n     * @memberof TestRuleResponse\n     */\n    grafanaAlertInstances?: AlertInstancesResponse;\n}\n\n/**\n * Check if a given object implements the TestRuleResponse interface.\n */\nexport function instanceOfTestRuleResponse(value: object): value is TestRuleResponse {\n    return true;\n}\n\nexport function TestRuleResponseFromJSON(json: any): TestRuleResponse {\n    return TestRuleResponseFromJSONTyped(json, false);\n}\n\nexport function TestRuleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestRuleResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alerts': json['alerts'] == null ? undefined : ((json['alerts'] as Array<any>).map(SampleFromJSON)),\n        'grafanaAlertInstances': json['grafana_alert_instances'] == null ? undefined : AlertInstancesResponseFromJSON(json['grafana_alert_instances']),\n    };\n}\n\nexport function TestRuleResponseToJSON(json: any): TestRuleResponse {\n    return TestRuleResponseToJSONTyped(json, false);\n}\n\nexport function TestRuleResponseToJSONTyped(value?: TestRuleResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alerts': value['alerts'] == null ? undefined : ((value['alerts'] as Array<any>).map(SampleToJSON)),\n        'grafana_alert_instances': AlertInstancesResponseToJSON(value['grafanaAlertInstances']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PostableAlert } from './PostableAlert';\nimport {\n    PostableAlertFromJSON,\n    PostableAlertFromJSONTyped,\n    PostableAlertToJSON,\n    PostableAlertToJSONTyped,\n} from './PostableAlert';\n\n/**\n * \n * @export\n * @interface TestTemplatesConfigBodyParams\n */\nexport interface TestTemplatesConfigBodyParams {\n    /**\n     * Alerts to use as data when testing the template.\n     * @type {Array<PostableAlert>}\n     * @memberof TestTemplatesConfigBodyParams\n     */\n    alerts?: Array<PostableAlert>;\n    /**\n     * Name of the template file.\n     * @type {string}\n     * @memberof TestTemplatesConfigBodyParams\n     */\n    name?: string;\n    /**\n     * Template string to test.\n     * @type {string}\n     * @memberof TestTemplatesConfigBodyParams\n     */\n    template?: string;\n}\n\n/**\n * Check if a given object implements the TestTemplatesConfigBodyParams interface.\n */\nexport function instanceOfTestTemplatesConfigBodyParams(value: object): value is TestTemplatesConfigBodyParams {\n    return true;\n}\n\nexport function TestTemplatesConfigBodyParamsFromJSON(json: any): TestTemplatesConfigBodyParams {\n    return TestTemplatesConfigBodyParamsFromJSONTyped(json, false);\n}\n\nexport function TestTemplatesConfigBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesConfigBodyParams {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'alerts': json['alerts'] == null ? undefined : ((json['alerts'] as Array<any>).map(PostableAlertFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n        'template': json['template'] == null ? undefined : json['template'],\n    };\n}\n\nexport function TestTemplatesConfigBodyParamsToJSON(json: any): TestTemplatesConfigBodyParams {\n    return TestTemplatesConfigBodyParamsToJSONTyped(json, false);\n}\n\nexport function TestTemplatesConfigBodyParamsToJSONTyped(value?: TestTemplatesConfigBodyParams | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'alerts': value['alerts'] == null ? undefined : ((value['alerts'] as Array<any>).map(PostableAlertToJSON)),\n        'name': value['name'],\n        'template': value['template'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TestTemplatesErrorResult\n */\nexport interface TestTemplatesErrorResult {\n    /**\n     * Kind of template error that occurred.\n     * @type {string}\n     * @memberof TestTemplatesErrorResult\n     */\n    kind?: TestTemplatesErrorResultKindEnum;\n    /**\n     * Error message.\n     * @type {string}\n     * @memberof TestTemplatesErrorResult\n     */\n    message?: string;\n    /**\n     * Name of the associated template for this error. Will be empty if the Kind is \"invalid_template\".\n     * @type {string}\n     * @memberof TestTemplatesErrorResult\n     */\n    name?: string;\n}\n\n\n/**\n * @export\n */\nexport const TestTemplatesErrorResultKindEnum = {\n    InvalidTemplate: 'invalid_template',\n    ExecutionError: 'execution_error'\n} as const;\nexport type TestTemplatesErrorResultKindEnum = typeof TestTemplatesErrorResultKindEnum[keyof typeof TestTemplatesErrorResultKindEnum];\n\n\n/**\n * Check if a given object implements the TestTemplatesErrorResult interface.\n */\nexport function instanceOfTestTemplatesErrorResult(value: object): value is TestTemplatesErrorResult {\n    return true;\n}\n\nexport function TestTemplatesErrorResultFromJSON(json: any): TestTemplatesErrorResult {\n    return TestTemplatesErrorResultFromJSONTyped(json, false);\n}\n\nexport function TestTemplatesErrorResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesErrorResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'kind': json['kind'] == null ? undefined : json['kind'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function TestTemplatesErrorResultToJSON(json: any): TestTemplatesErrorResult {\n    return TestTemplatesErrorResultToJSONTyped(json, false);\n}\n\nexport function TestTemplatesErrorResultToJSONTyped(value?: TestTemplatesErrorResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'kind': value['kind'],\n        'message': value['message'],\n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TestTemplatesResult\n */\nexport interface TestTemplatesResult {\n    /**\n     * Name of the associated template definition for this result.\n     * @type {string}\n     * @memberof TestTemplatesResult\n     */\n    name?: string;\n    /**\n     * Interpolated value of the template.\n     * @type {string}\n     * @memberof TestTemplatesResult\n     */\n    text?: string;\n}\n\n/**\n * Check if a given object implements the TestTemplatesResult interface.\n */\nexport function instanceOfTestTemplatesResult(value: object): value is TestTemplatesResult {\n    return true;\n}\n\nexport function TestTemplatesResultFromJSON(json: any): TestTemplatesResult {\n    return TestTemplatesResultFromJSONTyped(json, false);\n}\n\nexport function TestTemplatesResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesResult {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'text': json['text'] == null ? undefined : json['text'],\n    };\n}\n\nexport function TestTemplatesResultToJSON(json: any): TestTemplatesResult {\n    return TestTemplatesResultToJSONTyped(json, false);\n}\n\nexport function TestTemplatesResultToJSONTyped(value?: TestTemplatesResult | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'text': value['text'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TestTemplatesResult } from './TestTemplatesResult';\nimport {\n    TestTemplatesResultFromJSON,\n    TestTemplatesResultFromJSONTyped,\n    TestTemplatesResultToJSON,\n    TestTemplatesResultToJSONTyped,\n} from './TestTemplatesResult';\nimport type { TestTemplatesErrorResult } from './TestTemplatesErrorResult';\nimport {\n    TestTemplatesErrorResultFromJSON,\n    TestTemplatesErrorResultFromJSONTyped,\n    TestTemplatesErrorResultToJSON,\n    TestTemplatesErrorResultToJSONTyped,\n} from './TestTemplatesErrorResult';\n\n/**\n * \n * @export\n * @interface TestTemplatesResults\n */\nexport interface TestTemplatesResults {\n    /**\n     * \n     * @type {Array<TestTemplatesErrorResult>}\n     * @memberof TestTemplatesResults\n     */\n    errors?: Array<TestTemplatesErrorResult>;\n    /**\n     * \n     * @type {Array<TestTemplatesResult>}\n     * @memberof TestTemplatesResults\n     */\n    results?: Array<TestTemplatesResult>;\n}\n\n/**\n * Check if a given object implements the TestTemplatesResults interface.\n */\nexport function instanceOfTestTemplatesResults(value: object): value is TestTemplatesResults {\n    return true;\n}\n\nexport function TestTemplatesResultsFromJSON(json: any): TestTemplatesResults {\n    return TestTemplatesResultsFromJSONTyped(json, false);\n}\n\nexport function TestTemplatesResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestTemplatesResults {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'errors': json['errors'] == null ? undefined : ((json['errors'] as Array<any>).map(TestTemplatesErrorResultFromJSON)),\n        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(TestTemplatesResultFromJSON)),\n    };\n}\n\nexport function TestTemplatesResultsToJSON(json: any): TestTemplatesResults {\n    return TestTemplatesResultsToJSONTyped(json, false);\n}\n\nexport function TestTemplatesResultsToJSONTyped(value?: TestTemplatesResults | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'errors': value['errors'] == null ? undefined : ((value['errors'] as Array<any>).map(TestTemplatesErrorResultToJSON)),\n        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(TestTemplatesResultToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface Token\n */\nexport interface Token {\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    account?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    anonymousRatio?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    company?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    detailsUrl?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    exp?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    iat?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    includedUsers?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    iss?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    jti?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    lexp?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    licExpWarnDays?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    lid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    limitBy?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    maxConcurrentUserSessions?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    nbf?: number;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof Token\n     */\n    prod?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    slug?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    status?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof Token\n     */\n    sub?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    tokExpWarnDays?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Token\n     */\n    trial?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    trialExp?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof Token\n     */\n    updateDays?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof Token\n     */\n    usageBilling?: boolean;\n}\n\n/**\n * Check if a given object implements the Token interface.\n */\nexport function instanceOfToken(value: object): value is Token {\n    return true;\n}\n\nexport function TokenFromJSON(json: any): Token {\n    return TokenFromJSONTyped(json, false);\n}\n\nexport function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'account': json['account'] == null ? undefined : json['account'],\n        'anonymousRatio': json['anonymousRatio'] == null ? undefined : json['anonymousRatio'],\n        'company': json['company'] == null ? undefined : json['company'],\n        'detailsUrl': json['details_url'] == null ? undefined : json['details_url'],\n        'exp': json['exp'] == null ? undefined : json['exp'],\n        'iat': json['iat'] == null ? undefined : json['iat'],\n        'includedUsers': json['included_users'] == null ? undefined : json['included_users'],\n        'iss': json['iss'] == null ? undefined : json['iss'],\n        'jti': json['jti'] == null ? undefined : json['jti'],\n        'lexp': json['lexp'] == null ? undefined : json['lexp'],\n        'licExpWarnDays': json['lic_exp_warn_days'] == null ? undefined : json['lic_exp_warn_days'],\n        'lid': json['lid'] == null ? undefined : json['lid'],\n        'limitBy': json['limit_by'] == null ? undefined : json['limit_by'],\n        'maxConcurrentUserSessions': json['max_concurrent_user_sessions'] == null ? undefined : json['max_concurrent_user_sessions'],\n        'nbf': json['nbf'] == null ? undefined : json['nbf'],\n        'prod': json['prod'] == null ? undefined : json['prod'],\n        'slug': json['slug'] == null ? undefined : json['slug'],\n        'status': json['status'] == null ? undefined : json['status'],\n        'sub': json['sub'] == null ? undefined : json['sub'],\n        'tokExpWarnDays': json['tok_exp_warn_days'] == null ? undefined : json['tok_exp_warn_days'],\n        'trial': json['trial'] == null ? undefined : json['trial'],\n        'trialExp': json['trial_exp'] == null ? undefined : json['trial_exp'],\n        'updateDays': json['update_days'] == null ? undefined : json['update_days'],\n        'usageBilling': json['usage_billing'] == null ? undefined : json['usage_billing'],\n    };\n}\n\nexport function TokenToJSON(json: any): Token {\n    return TokenToJSONTyped(json, false);\n}\n\nexport function TokenToJSONTyped(value?: Token | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'account': value['account'],\n        'anonymousRatio': value['anonymousRatio'],\n        'company': value['company'],\n        'details_url': value['detailsUrl'],\n        'exp': value['exp'],\n        'iat': value['iat'],\n        'included_users': value['includedUsers'],\n        'iss': value['iss'],\n        'jti': value['jti'],\n        'lexp': value['lexp'],\n        'lic_exp_warn_days': value['licExpWarnDays'],\n        'lid': value['lid'],\n        'limit_by': value['limitBy'],\n        'max_concurrent_user_sessions': value['maxConcurrentUserSessions'],\n        'nbf': value['nbf'],\n        'prod': value['prod'],\n        'slug': value['slug'],\n        'status': value['status'],\n        'sub': value['sub'],\n        'tok_exp_warn_days': value['tokExpWarnDays'],\n        'trial': value['trial'],\n        'trial_exp': value['trialExp'],\n        'update_days': value['updateDays'],\n        'usage_billing': value['usageBilling'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface TokenDTO\n */\nexport interface TokenDTO {\n    /**\n     * \n     * @type {Date}\n     * @memberof TokenDTO\n     */\n    created?: Date;\n    /**\n     * \n     * @type {Date}\n     * @memberof TokenDTO\n     */\n    expiration?: Date;\n    /**\n     * \n     * @type {boolean}\n     * @memberof TokenDTO\n     */\n    hasExpired?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof TokenDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof TokenDTO\n     */\n    isRevoked?: boolean;\n    /**\n     * \n     * @type {Date}\n     * @memberof TokenDTO\n     */\n    lastUsedAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof TokenDTO\n     */\n    secondsUntilExpiration?: number;\n}\n\n/**\n * Check if a given object implements the TokenDTO interface.\n */\nexport function instanceOfTokenDTO(value: object): value is TokenDTO {\n    return true;\n}\n\nexport function TokenDTOFromJSON(json: any): TokenDTO {\n    return TokenDTOFromJSONTyped(json, false);\n}\n\nexport function TokenDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : (new Date(json['created'])),\n        'expiration': json['expiration'] == null ? undefined : (new Date(json['expiration'])),\n        'hasExpired': json['hasExpired'] == null ? undefined : json['hasExpired'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isRevoked': json['isRevoked'] == null ? undefined : json['isRevoked'],\n        'lastUsedAt': json['lastUsedAt'] == null ? undefined : (new Date(json['lastUsedAt'])),\n        'name': json['name'] == null ? undefined : json['name'],\n        'secondsUntilExpiration': json['secondsUntilExpiration'] == null ? undefined : json['secondsUntilExpiration'],\n    };\n}\n\nexport function TokenDTOToJSON(json: any): TokenDTO {\n    return TokenDTOToJSONTyped(json, false);\n}\n\nexport function TokenDTOToJSONTyped(value?: TokenDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),\n        'expiration': value['expiration'] == null ? undefined : ((value['expiration']).toISOString()),\n        'hasExpired': value['hasExpired'],\n        'id': value['id'],\n        'isRevoked': value['isRevoked'],\n        'lastUsedAt': value['lastUsedAt'] == null ? undefined : ((value['lastUsedAt']).toISOString()),\n        'name': value['name'],\n        'secondsUntilExpiration': value['secondsUntilExpiration'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * +k8s:deepcopy-gen=false\n * @export\n * @interface TypeMeta\n */\nexport interface TypeMeta {\n    /**\n     * APIVersion defines the versioned schema of this representation of an object.\n     * Servers should convert recognized schemas to the latest internal value, and\n     * may reject unrecognized values.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n     * +optional\n     * @type {string}\n     * @memberof TypeMeta\n     */\n    apiVersion?: string;\n    /**\n     * Kind is a string value representing the REST resource this object represents.\n     * Servers may infer this from the endpoint the client submits requests to.\n     * Cannot be updated.\n     * In CamelCase.\n     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n     * +optional\n     * @type {string}\n     * @memberof TypeMeta\n     */\n    kind?: string;\n}\n\n/**\n * Check if a given object implements the TypeMeta interface.\n */\nexport function instanceOfTypeMeta(value: object): value is TypeMeta {\n    return true;\n}\n\nexport function TypeMetaFromJSON(json: any): TypeMeta {\n    return TypeMetaFromJSONTyped(json, false);\n}\n\nexport function TypeMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypeMeta {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],\n        'kind': json['kind'] == null ? undefined : json['kind'],\n    };\n}\n\nexport function TypeMetaToJSON(json: any): TypeMeta {\n    return TypeMetaToJSONTyped(json, false);\n}\n\nexport function TypeMetaToJSONTyped(value?: TypeMeta | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'apiVersion': value['apiVersion'],\n        'kind': value['kind'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateAnnotationsCmd\n */\nexport interface UpdateAnnotationsCmd {\n    /**\n     * \n     * @type {object}\n     * @memberof UpdateAnnotationsCmd\n     */\n    data?: object;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateAnnotationsCmd\n     */\n    id?: number;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UpdateAnnotationsCmd\n     */\n    tags?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateAnnotationsCmd\n     */\n    text?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateAnnotationsCmd\n     */\n    time?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateAnnotationsCmd\n     */\n    timeEnd?: number;\n}\n\n/**\n * Check if a given object implements the UpdateAnnotationsCmd interface.\n */\nexport function instanceOfUpdateAnnotationsCmd(value: object): value is UpdateAnnotationsCmd {\n    return true;\n}\n\nexport function UpdateAnnotationsCmdFromJSON(json: any): UpdateAnnotationsCmd {\n    return UpdateAnnotationsCmdFromJSONTyped(json, false);\n}\n\nexport function UpdateAnnotationsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAnnotationsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'data': json['data'] == null ? undefined : json['data'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'tags': json['tags'] == null ? undefined : json['tags'],\n        'text': json['text'] == null ? undefined : json['text'],\n        'time': json['time'] == null ? undefined : json['time'],\n        'timeEnd': json['timeEnd'] == null ? undefined : json['timeEnd'],\n    };\n}\n\nexport function UpdateAnnotationsCmdToJSON(json: any): UpdateAnnotationsCmd {\n    return UpdateAnnotationsCmdToJSONTyped(json, false);\n}\n\nexport function UpdateAnnotationsCmdToJSONTyped(value?: UpdateAnnotationsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'data': value['data'],\n        'id': value['id'],\n        'tags': value['tags'],\n        'text': value['text'],\n        'time': value['time'],\n        'timeEnd': value['timeEnd'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { CorrelationConfigUpdateDTO } from './CorrelationConfigUpdateDTO';\nimport {\n    CorrelationConfigUpdateDTOFromJSON,\n    CorrelationConfigUpdateDTOFromJSONTyped,\n    CorrelationConfigUpdateDTOToJSON,\n    CorrelationConfigUpdateDTOToJSONTyped,\n} from './CorrelationConfigUpdateDTO';\n\n/**\n * UpdateCorrelationCommand is the command for updating a correlation\n * @export\n * @interface UpdateCorrelationCommand\n */\nexport interface UpdateCorrelationCommand {\n    /**\n     * \n     * @type {CorrelationConfigUpdateDTO}\n     * @memberof UpdateCorrelationCommand\n     */\n    config?: CorrelationConfigUpdateDTO;\n    /**\n     * Optional description of the correlation\n     * @type {string}\n     * @memberof UpdateCorrelationCommand\n     */\n    description?: string;\n    /**\n     * Optional label identifying the correlation\n     * @type {string}\n     * @memberof UpdateCorrelationCommand\n     */\n    label?: string;\n    /**\n     * the type of correlation, either query for containing query information, or external for containing an external URL\n     * +enum\n     * @type {string}\n     * @memberof UpdateCorrelationCommand\n     */\n    type?: string;\n}\n\n/**\n * Check if a given object implements the UpdateCorrelationCommand interface.\n */\nexport function instanceOfUpdateCorrelationCommand(value: object): value is UpdateCorrelationCommand {\n    return true;\n}\n\nexport function UpdateCorrelationCommandFromJSON(json: any): UpdateCorrelationCommand {\n    return UpdateCorrelationCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateCorrelationCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCorrelationCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'config': json['config'] == null ? undefined : CorrelationConfigUpdateDTOFromJSON(json['config']),\n        'description': json['description'] == null ? undefined : json['description'],\n        'label': json['label'] == null ? undefined : json['label'],\n        'type': json['type'] == null ? undefined : json['type'],\n    };\n}\n\nexport function UpdateCorrelationCommandToJSON(json: any): UpdateCorrelationCommand {\n    return UpdateCorrelationCommandToJSONTyped(json, false);\n}\n\nexport function UpdateCorrelationCommandToJSONTyped(value?: UpdateCorrelationCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'config': CorrelationConfigUpdateDTOToJSON(value['config']),\n        'description': value['description'],\n        'label': value['label'],\n        'type': value['type'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Correlation } from './Correlation';\nimport {\n    CorrelationFromJSON,\n    CorrelationFromJSONTyped,\n    CorrelationToJSON,\n    CorrelationToJSONTyped,\n} from './Correlation';\n\n/**\n * \n * @export\n * @interface UpdateCorrelationResponseBody\n */\nexport interface UpdateCorrelationResponseBody {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateCorrelationResponseBody\n     */\n    message?: string;\n    /**\n     * \n     * @type {Correlation}\n     * @memberof UpdateCorrelationResponseBody\n     */\n    result?: Correlation;\n}\n\n/**\n * Check if a given object implements the UpdateCorrelationResponseBody interface.\n */\nexport function instanceOfUpdateCorrelationResponseBody(value: object): value is UpdateCorrelationResponseBody {\n    return true;\n}\n\nexport function UpdateCorrelationResponseBodyFromJSON(json: any): UpdateCorrelationResponseBody {\n    return UpdateCorrelationResponseBodyFromJSONTyped(json, false);\n}\n\nexport function UpdateCorrelationResponseBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCorrelationResponseBody {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n        'result': json['result'] == null ? undefined : CorrelationFromJSON(json['result']),\n    };\n}\n\nexport function UpdateCorrelationResponseBodyToJSON(json: any): UpdateCorrelationResponseBody {\n    return UpdateCorrelationResponseBodyToJSONTyped(json, false);\n}\n\nexport function UpdateCorrelationResponseBodyToJSONTyped(value?: UpdateCorrelationResponseBody | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n        'result': CorrelationToJSON(value['result']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { DashboardACLUpdateItem } from './DashboardACLUpdateItem';\nimport {\n    DashboardACLUpdateItemFromJSON,\n    DashboardACLUpdateItemFromJSONTyped,\n    DashboardACLUpdateItemToJSON,\n    DashboardACLUpdateItemToJSONTyped,\n} from './DashboardACLUpdateItem';\n\n/**\n * \n * @export\n * @interface UpdateDashboardACLCommand\n */\nexport interface UpdateDashboardACLCommand {\n    /**\n     * \n     * @type {Array<DashboardACLUpdateItem>}\n     * @memberof UpdateDashboardACLCommand\n     */\n    items?: Array<DashboardACLUpdateItem>;\n}\n\n/**\n * Check if a given object implements the UpdateDashboardACLCommand interface.\n */\nexport function instanceOfUpdateDashboardACLCommand(value: object): value is UpdateDashboardACLCommand {\n    return true;\n}\n\nexport function UpdateDashboardACLCommandFromJSON(json: any): UpdateDashboardACLCommand {\n    return UpdateDashboardACLCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateDashboardACLCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDashboardACLCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(DashboardACLUpdateItemFromJSON)),\n    };\n}\n\nexport function UpdateDashboardACLCommandToJSON(json: any): UpdateDashboardACLCommand {\n    return UpdateDashboardACLCommandToJSONTyped(json, false);\n}\n\nexport function UpdateDashboardACLCommandToJSONTyped(value?: UpdateDashboardACLCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(DashboardACLUpdateItemToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * Also acts as api DTO\n * @export\n * @interface UpdateDataSourceCommand\n */\nexport interface UpdateDataSourceCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    access?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateDataSourceCommand\n     */\n    basicAuth?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    basicAuthUser?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    database?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateDataSourceCommand\n     */\n    isDefault?: boolean;\n    /**\n     * \n     * @type {object}\n     * @memberof UpdateDataSourceCommand\n     */\n    jsonData?: object;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {{ [key: string]: string; }}\n     * @memberof UpdateDataSourceCommand\n     */\n    secureJsonData?: { [key: string]: string; };\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    uid?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    url?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateDataSourceCommand\n     */\n    user?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateDataSourceCommand\n     */\n    version?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateDataSourceCommand\n     */\n    withCredentials?: boolean;\n}\n\n/**\n * Check if a given object implements the UpdateDataSourceCommand interface.\n */\nexport function instanceOfUpdateDataSourceCommand(value: object): value is UpdateDataSourceCommand {\n    return true;\n}\n\nexport function UpdateDataSourceCommandFromJSON(json: any): UpdateDataSourceCommand {\n    return UpdateDataSourceCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateDataSourceCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDataSourceCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'access': json['access'] == null ? undefined : json['access'],\n        'basicAuth': json['basicAuth'] == null ? undefined : json['basicAuth'],\n        'basicAuthUser': json['basicAuthUser'] == null ? undefined : json['basicAuthUser'],\n        'database': json['database'] == null ? undefined : json['database'],\n        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],\n        'jsonData': json['jsonData'] == null ? undefined : json['jsonData'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'secureJsonData': json['secureJsonData'] == null ? undefined : json['secureJsonData'],\n        'type': json['type'] == null ? undefined : json['type'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'url': json['url'] == null ? undefined : json['url'],\n        'user': json['user'] == null ? undefined : json['user'],\n        'version': json['version'] == null ? undefined : json['version'],\n        'withCredentials': json['withCredentials'] == null ? undefined : json['withCredentials'],\n    };\n}\n\nexport function UpdateDataSourceCommandToJSON(json: any): UpdateDataSourceCommand {\n    return UpdateDataSourceCommandToJSONTyped(json, false);\n}\n\nexport function UpdateDataSourceCommandToJSONTyped(value?: UpdateDataSourceCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'access': value['access'],\n        'basicAuth': value['basicAuth'],\n        'basicAuthUser': value['basicAuthUser'],\n        'database': value['database'],\n        'isDefault': value['isDefault'],\n        'jsonData': value['jsonData'],\n        'name': value['name'],\n        'secureJsonData': value['secureJsonData'],\n        'type': value['type'],\n        'uid': value['uid'],\n        'url': value['url'],\n        'user': value['user'],\n        'version': value['version'],\n        'withCredentials': value['withCredentials'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * UpdateFolderCommand captures the information required by the folder service\n * to update a folder. Use Move to update a folder's parent folder.\n * @export\n * @interface UpdateFolderCommand\n */\nexport interface UpdateFolderCommand {\n    /**\n     * NewDescription it's an optional parameter used for overriding the existing folder description\n     * @type {string}\n     * @memberof UpdateFolderCommand\n     */\n    description?: string;\n    /**\n     * Overwrite only used by the legacy folder implementation\n     * @type {boolean}\n     * @memberof UpdateFolderCommand\n     */\n    overwrite?: boolean;\n    /**\n     * NewTitle it's an optional parameter used for overriding the existing folder title\n     * @type {string}\n     * @memberof UpdateFolderCommand\n     */\n    title?: string;\n    /**\n     * Version only used by the legacy folder implementation\n     * @type {number}\n     * @memberof UpdateFolderCommand\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the UpdateFolderCommand interface.\n */\nexport function instanceOfUpdateFolderCommand(value: object): value is UpdateFolderCommand {\n    return true;\n}\n\nexport function UpdateFolderCommandFromJSON(json: any): UpdateFolderCommand {\n    return UpdateFolderCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateFolderCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFolderCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'overwrite': json['overwrite'] == null ? undefined : json['overwrite'],\n        'title': json['title'] == null ? undefined : json['title'],\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function UpdateFolderCommandToJSON(json: any): UpdateFolderCommand {\n    return UpdateFolderCommandToJSONTyped(json, false);\n}\n\nexport function UpdateFolderCommandToJSONTyped(value?: UpdateFolderCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'overwrite': value['overwrite'],\n        'title': value['title'],\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateOrgAddressForm\n */\nexport interface UpdateOrgAddressForm {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    address1?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    address2?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    city?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    country?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    state?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgAddressForm\n     */\n    zipcode?: string;\n}\n\n/**\n * Check if a given object implements the UpdateOrgAddressForm interface.\n */\nexport function instanceOfUpdateOrgAddressForm(value: object): value is UpdateOrgAddressForm {\n    return true;\n}\n\nexport function UpdateOrgAddressFormFromJSON(json: any): UpdateOrgAddressForm {\n    return UpdateOrgAddressFormFromJSONTyped(json, false);\n}\n\nexport function UpdateOrgAddressFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgAddressForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'address1': json['address1'] == null ? undefined : json['address1'],\n        'address2': json['address2'] == null ? undefined : json['address2'],\n        'city': json['city'] == null ? undefined : json['city'],\n        'country': json['country'] == null ? undefined : json['country'],\n        'state': json['state'] == null ? undefined : json['state'],\n        'zipcode': json['zipcode'] == null ? undefined : json['zipcode'],\n    };\n}\n\nexport function UpdateOrgAddressFormToJSON(json: any): UpdateOrgAddressForm {\n    return UpdateOrgAddressFormToJSONTyped(json, false);\n}\n\nexport function UpdateOrgAddressFormToJSONTyped(value?: UpdateOrgAddressForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'address1': value['address1'],\n        'address2': value['address2'],\n        'city': value['city'],\n        'country': value['country'],\n        'state': value['state'],\n        'zipcode': value['zipcode'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateOrgForm\n */\nexport interface UpdateOrgForm {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgForm\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the UpdateOrgForm interface.\n */\nexport function instanceOfUpdateOrgForm(value: object): value is UpdateOrgForm {\n    return true;\n}\n\nexport function UpdateOrgFormFromJSON(json: any): UpdateOrgForm {\n    return UpdateOrgFormFromJSONTyped(json, false);\n}\n\nexport function UpdateOrgFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n    };\n}\n\nexport function UpdateOrgFormToJSON(json: any): UpdateOrgForm {\n    return UpdateOrgFormToJSONTyped(json, false);\n}\n\nexport function UpdateOrgFormToJSONTyped(value?: UpdateOrgForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateOrgUserCommand\n */\nexport interface UpdateOrgUserCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateOrgUserCommand\n     */\n    role?: UpdateOrgUserCommandRoleEnum;\n}\n\n\n/**\n * @export\n */\nexport const UpdateOrgUserCommandRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type UpdateOrgUserCommandRoleEnum = typeof UpdateOrgUserCommandRoleEnum[keyof typeof UpdateOrgUserCommandRoleEnum];\n\n\n/**\n * Check if a given object implements the UpdateOrgUserCommand interface.\n */\nexport function instanceOfUpdateOrgUserCommand(value: object): value is UpdateOrgUserCommand {\n    return true;\n}\n\nexport function UpdateOrgUserCommandFromJSON(json: any): UpdateOrgUserCommand {\n    return UpdateOrgUserCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateOrgUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateOrgUserCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'role': json['role'] == null ? undefined : json['role'],\n    };\n}\n\nexport function UpdateOrgUserCommandToJSON(json: any): UpdateOrgUserCommand {\n    return UpdateOrgUserCommandToJSONTyped(json, false);\n}\n\nexport function UpdateOrgUserCommandToJSONTyped(value?: UpdateOrgUserCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'role': value['role'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { PlaylistItem } from './PlaylistItem';\nimport {\n    PlaylistItemFromJSON,\n    PlaylistItemFromJSONTyped,\n    PlaylistItemToJSON,\n    PlaylistItemToJSONTyped,\n} from './PlaylistItem';\n\n/**\n * \n * @export\n * @interface UpdatePlaylistCommand\n */\nexport interface UpdatePlaylistCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePlaylistCommand\n     */\n    interval?: string;\n    /**\n     * \n     * @type {Array<PlaylistItem>}\n     * @memberof UpdatePlaylistCommand\n     */\n    items?: Array<PlaylistItem>;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePlaylistCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePlaylistCommand\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the UpdatePlaylistCommand interface.\n */\nexport function instanceOfUpdatePlaylistCommand(value: object): value is UpdatePlaylistCommand {\n    return true;\n}\n\nexport function UpdatePlaylistCommandFromJSON(json: any): UpdatePlaylistCommand {\n    return UpdatePlaylistCommandFromJSONTyped(json, false);\n}\n\nexport function UpdatePlaylistCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePlaylistCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'interval': json['interval'] == null ? undefined : json['interval'],\n        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(PlaylistItemFromJSON)),\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function UpdatePlaylistCommandToJSON(json: any): UpdatePlaylistCommand {\n    return UpdatePlaylistCommandToJSONTyped(json, false);\n}\n\nexport function UpdatePlaylistCommandToJSONTyped(value?: UpdatePlaylistCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'interval': value['interval'],\n        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(PlaylistItemToJSON)),\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { NavbarPreference } from './NavbarPreference';\nimport {\n    NavbarPreferenceFromJSON,\n    NavbarPreferenceFromJSONTyped,\n    NavbarPreferenceToJSON,\n    NavbarPreferenceToJSONTyped,\n} from './NavbarPreference';\nimport type { QueryHistoryPreference } from './QueryHistoryPreference';\nimport {\n    QueryHistoryPreferenceFromJSON,\n    QueryHistoryPreferenceFromJSONTyped,\n    QueryHistoryPreferenceToJSON,\n    QueryHistoryPreferenceToJSONTyped,\n} from './QueryHistoryPreference';\n\n/**\n * \n * @export\n * @interface UpdatePrefsCmd\n */\nexport interface UpdatePrefsCmd {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UpdatePrefsCmd\n     */\n    cookies?: Array<string>;\n    /**\n     * The numerical :id of a favorited dashboard\n     * @type {number}\n     * @memberof UpdatePrefsCmd\n     */\n    homeDashboardId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePrefsCmd\n     */\n    homeDashboardUID?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePrefsCmd\n     */\n    language?: string;\n    /**\n     * \n     * @type {NavbarPreference}\n     * @memberof UpdatePrefsCmd\n     */\n    navbar?: NavbarPreference;\n    /**\n     * \n     * @type {QueryHistoryPreference}\n     * @memberof UpdatePrefsCmd\n     */\n    queryHistory?: QueryHistoryPreference;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePrefsCmd\n     */\n    theme?: UpdatePrefsCmdThemeEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePrefsCmd\n     */\n    timezone?: UpdatePrefsCmdTimezoneEnum;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdatePrefsCmd\n     */\n    weekStart?: string;\n}\n\n\n/**\n * @export\n */\nexport const UpdatePrefsCmdThemeEnum = {\n    Light: 'light',\n    Dark: 'dark',\n    System: 'system'\n} as const;\nexport type UpdatePrefsCmdThemeEnum = typeof UpdatePrefsCmdThemeEnum[keyof typeof UpdatePrefsCmdThemeEnum];\n\n/**\n * @export\n */\nexport const UpdatePrefsCmdTimezoneEnum = {\n    Utc: 'utc',\n    Browser: 'browser'\n} as const;\nexport type UpdatePrefsCmdTimezoneEnum = typeof UpdatePrefsCmdTimezoneEnum[keyof typeof UpdatePrefsCmdTimezoneEnum];\n\n\n/**\n * Check if a given object implements the UpdatePrefsCmd interface.\n */\nexport function instanceOfUpdatePrefsCmd(value: object): value is UpdatePrefsCmd {\n    return true;\n}\n\nexport function UpdatePrefsCmdFromJSON(json: any): UpdatePrefsCmd {\n    return UpdatePrefsCmdFromJSONTyped(json, false);\n}\n\nexport function UpdatePrefsCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePrefsCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'cookies': json['cookies'] == null ? undefined : json['cookies'],\n        'homeDashboardId': json['homeDashboardId'] == null ? undefined : json['homeDashboardId'],\n        'homeDashboardUID': json['homeDashboardUID'] == null ? undefined : json['homeDashboardUID'],\n        'language': json['language'] == null ? undefined : json['language'],\n        'navbar': json['navbar'] == null ? undefined : NavbarPreferenceFromJSON(json['navbar']),\n        'queryHistory': json['queryHistory'] == null ? undefined : QueryHistoryPreferenceFromJSON(json['queryHistory']),\n        'theme': json['theme'] == null ? undefined : json['theme'],\n        'timezone': json['timezone'] == null ? undefined : json['timezone'],\n        'weekStart': json['weekStart'] == null ? undefined : json['weekStart'],\n    };\n}\n\nexport function UpdatePrefsCmdToJSON(json: any): UpdatePrefsCmd {\n    return UpdatePrefsCmdToJSONTyped(json, false);\n}\n\nexport function UpdatePrefsCmdToJSONTyped(value?: UpdatePrefsCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'cookies': value['cookies'],\n        'homeDashboardId': value['homeDashboardId'],\n        'homeDashboardUID': value['homeDashboardUID'],\n        'language': value['language'],\n        'navbar': NavbarPreferenceToJSON(value['navbar']),\n        'queryHistory': QueryHistoryPreferenceToJSON(value['queryHistory']),\n        'theme': value['theme'],\n        'timezone': value['timezone'],\n        'weekStart': value['weekStart'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateProviderSettingsRequest\n */\nexport interface UpdateProviderSettingsRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateProviderSettingsRequest\n     */\n    id?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateProviderSettingsRequest\n     */\n    provider?: string;\n    /**\n     * \n     * @type {{ [key: string]: object; }}\n     * @memberof UpdateProviderSettingsRequest\n     */\n    settings?: { [key: string]: object; };\n}\n\n/**\n * Check if a given object implements the UpdateProviderSettingsRequest interface.\n */\nexport function instanceOfUpdateProviderSettingsRequest(value: object): value is UpdateProviderSettingsRequest {\n    return true;\n}\n\nexport function UpdateProviderSettingsRequestFromJSON(json: any): UpdateProviderSettingsRequest {\n    return UpdateProviderSettingsRequestFromJSONTyped(json, false);\n}\n\nexport function UpdateProviderSettingsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProviderSettingsRequest {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'provider': json['provider'] == null ? undefined : json['provider'],\n        'settings': json['settings'] == null ? undefined : json['settings'],\n    };\n}\n\nexport function UpdateProviderSettingsRequestToJSON(json: any): UpdateProviderSettingsRequest {\n    return UpdateProviderSettingsRequestToJSONTyped(json, false);\n}\n\nexport function UpdateProviderSettingsRequestToJSONTyped(value?: UpdateProviderSettingsRequest | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'provider': value['provider'],\n        'settings': value['settings'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateQuotaCmd\n */\nexport interface UpdateQuotaCmd {\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateQuotaCmd\n     */\n    limit?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateQuotaCmd\n     */\n    target?: string;\n}\n\n/**\n * Check if a given object implements the UpdateQuotaCmd interface.\n */\nexport function instanceOfUpdateQuotaCmd(value: object): value is UpdateQuotaCmd {\n    return true;\n}\n\nexport function UpdateQuotaCmdFromJSON(json: any): UpdateQuotaCmd {\n    return UpdateQuotaCmdFromJSONTyped(json, false);\n}\n\nexport function UpdateQuotaCmdFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateQuotaCmd {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'limit': json['limit'] == null ? undefined : json['limit'],\n        'target': json['target'] == null ? undefined : json['target'],\n    };\n}\n\nexport function UpdateQuotaCmdToJSON(json: any): UpdateQuotaCmd {\n    return UpdateQuotaCmdToJSONTyped(json, false);\n}\n\nexport function UpdateQuotaCmdToJSONTyped(value?: UpdateQuotaCmd | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'limit': value['limit'],\n        'target': value['target'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { Permission } from './Permission';\nimport {\n    PermissionFromJSON,\n    PermissionFromJSONTyped,\n    PermissionToJSON,\n    PermissionToJSONTyped,\n} from './Permission';\n\n/**\n * \n * @export\n * @interface UpdateRoleCommand\n */\nexport interface UpdateRoleCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRoleCommand\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRoleCommand\n     */\n    displayName?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateRoleCommand\n     */\n    global?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRoleCommand\n     */\n    group?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateRoleCommand\n     */\n    hidden?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRoleCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {Array<Permission>}\n     * @memberof UpdateRoleCommand\n     */\n    permissions?: Array<Permission>;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateRoleCommand\n     */\n    version?: number;\n}\n\n/**\n * Check if a given object implements the UpdateRoleCommand interface.\n */\nexport function instanceOfUpdateRoleCommand(value: object): value is UpdateRoleCommand {\n    return true;\n}\n\nexport function UpdateRoleCommandFromJSON(json: any): UpdateRoleCommand {\n    return UpdateRoleCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateRoleCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRoleCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'description': json['description'] == null ? undefined : json['description'],\n        'displayName': json['displayName'] == null ? undefined : json['displayName'],\n        'global': json['global'] == null ? undefined : json['global'],\n        'group': json['group'] == null ? undefined : json['group'],\n        'hidden': json['hidden'] == null ? undefined : json['hidden'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(PermissionFromJSON)),\n        'version': json['version'] == null ? undefined : json['version'],\n    };\n}\n\nexport function UpdateRoleCommandToJSON(json: any): UpdateRoleCommand {\n    return UpdateRoleCommandToJSONTyped(json, false);\n}\n\nexport function UpdateRoleCommandToJSONTyped(value?: UpdateRoleCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'description': value['description'],\n        'displayName': value['displayName'],\n        'global': value['global'],\n        'group': value['group'],\n        'hidden': value['hidden'],\n        'name': value['name'],\n        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(PermissionToJSON)),\n        'version': value['version'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateRuleGroupResponse\n */\nexport interface UpdateRuleGroupResponse {\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UpdateRuleGroupResponse\n     */\n    created?: Array<string>;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UpdateRuleGroupResponse\n     */\n    deleted?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRuleGroupResponse\n     */\n    message?: string;\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UpdateRuleGroupResponse\n     */\n    updated?: Array<string>;\n}\n\n/**\n * Check if a given object implements the UpdateRuleGroupResponse interface.\n */\nexport function instanceOfUpdateRuleGroupResponse(value: object): value is UpdateRuleGroupResponse {\n    return true;\n}\n\nexport function UpdateRuleGroupResponseFromJSON(json: any): UpdateRuleGroupResponse {\n    return UpdateRuleGroupResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateRuleGroupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRuleGroupResponse {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'created': json['created'] == null ? undefined : json['created'],\n        'deleted': json['deleted'] == null ? undefined : json['deleted'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'updated': json['updated'] == null ? undefined : json['updated'],\n    };\n}\n\nexport function UpdateRuleGroupResponseToJSON(json: any): UpdateRuleGroupResponse {\n    return UpdateRuleGroupResponseToJSONTyped(json, false);\n}\n\nexport function UpdateRuleGroupResponseToJSONTyped(value?: UpdateRuleGroupResponse | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'created': value['created'],\n        'deleted': value['deleted'],\n        'message': value['message'],\n        'updated': value['updated'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { ServiceAccountProfileDTO } from './ServiceAccountProfileDTO';\nimport {\n    ServiceAccountProfileDTOFromJSON,\n    ServiceAccountProfileDTOFromJSONTyped,\n    ServiceAccountProfileDTOToJSON,\n    ServiceAccountProfileDTOToJSONTyped,\n} from './ServiceAccountProfileDTO';\n\n/**\n * \n * @export\n * @interface UpdateServiceAccount200Response\n */\nexport interface UpdateServiceAccount200Response {\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateServiceAccount200Response\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateServiceAccount200Response\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateServiceAccount200Response\n     */\n    name?: string;\n    /**\n     * \n     * @type {ServiceAccountProfileDTO}\n     * @memberof UpdateServiceAccount200Response\n     */\n    serviceaccount?: ServiceAccountProfileDTO;\n}\n\n/**\n * Check if a given object implements the UpdateServiceAccount200Response interface.\n */\nexport function instanceOfUpdateServiceAccount200Response(value: object): value is UpdateServiceAccount200Response {\n    return true;\n}\n\nexport function UpdateServiceAccount200ResponseFromJSON(json: any): UpdateServiceAccount200Response {\n    return UpdateServiceAccount200ResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateServiceAccount200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccount200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'serviceaccount': json['serviceaccount'] == null ? undefined : ServiceAccountProfileDTOFromJSON(json['serviceaccount']),\n    };\n}\n\nexport function UpdateServiceAccount200ResponseToJSON(json: any): UpdateServiceAccount200Response {\n    return UpdateServiceAccount200ResponseToJSONTyped(json, false);\n}\n\nexport function UpdateServiceAccount200ResponseToJSONTyped(value?: UpdateServiceAccount200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'message': value['message'],\n        'name': value['name'],\n        'serviceaccount': ServiceAccountProfileDTOToJSON(value['serviceaccount']),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateServiceAccountForm\n */\nexport interface UpdateServiceAccountForm {\n    /**\n     * \n     * @type {boolean}\n     * @memberof UpdateServiceAccountForm\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateServiceAccountForm\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateServiceAccountForm\n     */\n    role?: UpdateServiceAccountFormRoleEnum;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateServiceAccountForm\n     */\n    serviceAccountId?: number;\n}\n\n\n/**\n * @export\n */\nexport const UpdateServiceAccountFormRoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type UpdateServiceAccountFormRoleEnum = typeof UpdateServiceAccountFormRoleEnum[keyof typeof UpdateServiceAccountFormRoleEnum];\n\n\n/**\n * Check if a given object implements the UpdateServiceAccountForm interface.\n */\nexport function instanceOfUpdateServiceAccountForm(value: object): value is UpdateServiceAccountForm {\n    return true;\n}\n\nexport function UpdateServiceAccountFormFromJSON(json: any): UpdateServiceAccountForm {\n    return UpdateServiceAccountFormFromJSONTyped(json, false);\n}\n\nexport function UpdateServiceAccountFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateServiceAccountForm {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'role': json['role'] == null ? undefined : json['role'],\n        'serviceAccountId': json['serviceAccountId'] == null ? undefined : json['serviceAccountId'],\n    };\n}\n\nexport function UpdateServiceAccountFormToJSON(json: any): UpdateServiceAccountForm {\n    return UpdateServiceAccountFormToJSONTyped(json, false);\n}\n\nexport function UpdateServiceAccountFormToJSONTyped(value?: UpdateServiceAccountForm | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'isDisabled': value['isDisabled'],\n        'name': value['name'],\n        'role': value['role'],\n        'serviceAccountId': value['serviceAccountId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateTeamCommand\n */\nexport interface UpdateTeamCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateTeamCommand\n     */\n    email?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateTeamCommand\n     */\n    iD?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateTeamCommand\n     */\n    name?: string;\n}\n\n/**\n * Check if a given object implements the UpdateTeamCommand interface.\n */\nexport function instanceOfUpdateTeamCommand(value: object): value is UpdateTeamCommand {\n    return true;\n}\n\nexport function UpdateTeamCommandFromJSON(json: any): UpdateTeamCommand {\n    return UpdateTeamCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateTeamCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'email': json['Email'] == null ? undefined : json['Email'],\n        'iD': json['ID'] == null ? undefined : json['ID'],\n        'name': json['Name'] == null ? undefined : json['Name'],\n    };\n}\n\nexport function UpdateTeamCommandToJSON(json: any): UpdateTeamCommand {\n    return UpdateTeamCommandToJSONTyped(json, false);\n}\n\nexport function UpdateTeamCommandToJSONTyped(value?: UpdateTeamCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'Email': value['email'],\n        'ID': value['iD'],\n        'Name': value['name'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TeamLBACRule } from './TeamLBACRule';\nimport {\n    TeamLBACRuleFromJSON,\n    TeamLBACRuleFromJSONTyped,\n    TeamLBACRuleToJSON,\n    TeamLBACRuleToJSONTyped,\n} from './TeamLBACRule';\n\n/**\n * \n * @export\n * @interface UpdateTeamLBACCommand\n */\nexport interface UpdateTeamLBACCommand {\n    /**\n     * \n     * @type {Array<TeamLBACRule>}\n     * @memberof UpdateTeamLBACCommand\n     */\n    rules?: Array<TeamLBACRule>;\n}\n\n/**\n * Check if a given object implements the UpdateTeamLBACCommand interface.\n */\nexport function instanceOfUpdateTeamLBACCommand(value: object): value is UpdateTeamLBACCommand {\n    return true;\n}\n\nexport function UpdateTeamLBACCommandFromJSON(json: any): UpdateTeamLBACCommand {\n    return UpdateTeamLBACCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateTeamLBACCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamLBACCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'rules': json['rules'] == null ? undefined : ((json['rules'] as Array<any>).map(TeamLBACRuleFromJSON)),\n    };\n}\n\nexport function UpdateTeamLBACCommandToJSON(json: any): UpdateTeamLBACCommand {\n    return UpdateTeamLBACCommandToJSONTyped(json, false);\n}\n\nexport function UpdateTeamLBACCommandToJSONTyped(value?: UpdateTeamLBACCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'rules': value['rules'] == null ? undefined : ((value['rules'] as Array<any>).map(TeamLBACRuleToJSON)),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\nimport type { TeamLBACRules } from './TeamLBACRules';\nimport {\n    TeamLBACRulesFromJSON,\n    TeamLBACRulesFromJSONTyped,\n    TeamLBACRulesToJSON,\n    TeamLBACRulesToJSONTyped,\n} from './TeamLBACRules';\n\n/**\n * \n * @export\n * @interface UpdateTeamLBACRulesApi200Response\n */\nexport interface UpdateTeamLBACRulesApi200Response {\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateTeamLBACRulesApi200Response\n     */\n    id?: number;\n    /**\n     * \n     * @type {TeamLBACRules}\n     * @memberof UpdateTeamLBACRulesApi200Response\n     */\n    lbacRules?: TeamLBACRules;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateTeamLBACRulesApi200Response\n     */\n    message?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateTeamLBACRulesApi200Response\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateTeamLBACRulesApi200Response\n     */\n    uid?: string;\n}\n\n/**\n * Check if a given object implements the UpdateTeamLBACRulesApi200Response interface.\n */\nexport function instanceOfUpdateTeamLBACRulesApi200Response(value: object): value is UpdateTeamLBACRulesApi200Response {\n    return true;\n}\n\nexport function UpdateTeamLBACRulesApi200ResponseFromJSON(json: any): UpdateTeamLBACRulesApi200Response {\n    return UpdateTeamLBACRulesApi200ResponseFromJSONTyped(json, false);\n}\n\nexport function UpdateTeamLBACRulesApi200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamLBACRulesApi200Response {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'] == null ? undefined : json['id'],\n        'lbacRules': json['lbacRules'] == null ? undefined : TeamLBACRulesFromJSON(json['lbacRules']),\n        'message': json['message'] == null ? undefined : json['message'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n    };\n}\n\nexport function UpdateTeamLBACRulesApi200ResponseToJSON(json: any): UpdateTeamLBACRulesApi200Response {\n    return UpdateTeamLBACRulesApi200ResponseToJSONTyped(json, false);\n}\n\nexport function UpdateTeamLBACRulesApi200ResponseToJSONTyped(value?: UpdateTeamLBACRulesApi200Response | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'id': value['id'],\n        'lbacRules': TeamLBACRulesToJSON(value['lbacRules']),\n        'message': value['message'],\n        'name': value['name'],\n        'uid': value['uid'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateTeamMemberCommand\n */\nexport interface UpdateTeamMemberCommand {\n    /**\n     * \n     * @type {number}\n     * @memberof UpdateTeamMemberCommand\n     */\n    permission?: number;\n}\n\n/**\n * Check if a given object implements the UpdateTeamMemberCommand interface.\n */\nexport function instanceOfUpdateTeamMemberCommand(value: object): value is UpdateTeamMemberCommand {\n    return true;\n}\n\nexport function UpdateTeamMemberCommandFromJSON(json: any): UpdateTeamMemberCommand {\n    return UpdateTeamMemberCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateTeamMemberCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamMemberCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'permission': json['permission'] == null ? undefined : json['permission'],\n    };\n}\n\nexport function UpdateTeamMemberCommandToJSON(json: any): UpdateTeamMemberCommand {\n    return UpdateTeamMemberCommandToJSONTyped(json, false);\n}\n\nexport function UpdateTeamMemberCommandToJSONTyped(value?: UpdateTeamMemberCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'permission': value['permission'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UpdateUserCommand\n */\nexport interface UpdateUserCommand {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserCommand\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserCommand\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserCommand\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateUserCommand\n     */\n    theme?: string;\n}\n\n/**\n * Check if a given object implements the UpdateUserCommand interface.\n */\nexport function instanceOfUpdateUserCommand(value: object): value is UpdateUserCommand {\n    return true;\n}\n\nexport function UpdateUserCommandFromJSON(json: any): UpdateUserCommand {\n    return UpdateUserCommandFromJSONTyped(json, false);\n}\n\nexport function UpdateUserCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserCommand {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'email': json['email'] == null ? undefined : json['email'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'theme': json['theme'] == null ? undefined : json['theme'],\n    };\n}\n\nexport function UpdateUserCommandToJSON(json: any): UpdateUserCommand {\n    return UpdateUserCommandToJSONTyped(json, false);\n}\n\nexport function UpdateUserCommandToJSONTyped(value?: UpdateUserCommand | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'email': value['email'],\n        'login': value['login'],\n        'name': value['name'],\n        'theme': value['theme'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UserLookupDTO\n */\nexport interface UserLookupDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof UserLookupDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserLookupDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserLookupDTO\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the UserLookupDTO interface.\n */\nexport function instanceOfUserLookupDTO(value: object): value is UserLookupDTO {\n    return true;\n}\n\nexport function UserLookupDTOFromJSON(json: any): UserLookupDTO {\n    return UserLookupDTOFromJSONTyped(json, false);\n}\n\nexport function UserLookupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserLookupDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'userId': json['userId'] == null ? undefined : json['userId'],\n    };\n}\n\nexport function UserLookupDTOToJSON(json: any): UserLookupDTO {\n    return UserLookupDTOToJSONTyped(json, false);\n}\n\nexport function UserLookupDTOToJSONTyped(value?: UserLookupDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'avatarUrl': value['avatarUrl'],\n        'login': value['login'],\n        'userId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UserOrgDTO\n */\nexport interface UserOrgDTO {\n    /**\n     * \n     * @type {string}\n     * @memberof UserOrgDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserOrgDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UserOrgDTO\n     */\n    role?: UserOrgDTORoleEnum;\n}\n\n\n/**\n * @export\n */\nexport const UserOrgDTORoleEnum = {\n    None: 'None',\n    Viewer: 'Viewer',\n    Editor: 'Editor',\n    Admin: 'Admin'\n} as const;\nexport type UserOrgDTORoleEnum = typeof UserOrgDTORoleEnum[keyof typeof UserOrgDTORoleEnum];\n\n\n/**\n * Check if a given object implements the UserOrgDTO interface.\n */\nexport function instanceOfUserOrgDTO(value: object): value is UserOrgDTO {\n    return true;\n}\n\nexport function UserOrgDTOFromJSON(json: any): UserOrgDTO {\n    return UserOrgDTOFromJSONTyped(json, false);\n}\n\nexport function UserOrgDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOrgDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'role': json['role'] == null ? undefined : json['role'],\n    };\n}\n\nexport function UserOrgDTOToJSON(json: any): UserOrgDTO {\n    return UserOrgDTOToJSONTyped(json, false);\n}\n\nexport function UserOrgDTOToJSONTyped(value?: UserOrgDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'name': value['name'],\n        'orgId': value['orgId'],\n        'role': value['role'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UserProfileDTO\n */\nexport interface UserProfileDTO {\n    /**\n     * \n     * @type {{ [key: string]: boolean; }}\n     * @memberof UserProfileDTO\n     */\n    accessControl?: { [key: string]: boolean; };\n    /**\n     * \n     * @type {Array<string>}\n     * @memberof UserProfileDTO\n     */\n    authLabels?: Array<string>;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    avatarUrl?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof UserProfileDTO\n     */\n    createdAt?: Date;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    email?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserProfileDTO\n     */\n    id?: number;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserProfileDTO\n     */\n    isDisabled?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserProfileDTO\n     */\n    isExternal?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserProfileDTO\n     */\n    isExternallySynced?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserProfileDTO\n     */\n    isGrafanaAdmin?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserProfileDTO\n     */\n    isGrafanaAdminExternallySynced?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    login?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    name?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserProfileDTO\n     */\n    orgId?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    theme?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UserProfileDTO\n     */\n    uid?: string;\n    /**\n     * \n     * @type {Date}\n     * @memberof UserProfileDTO\n     */\n    updatedAt?: Date;\n}\n\n/**\n * Check if a given object implements the UserProfileDTO interface.\n */\nexport function instanceOfUserProfileDTO(value: object): value is UserProfileDTO {\n    return true;\n}\n\nexport function UserProfileDTOFromJSON(json: any): UserProfileDTO {\n    return UserProfileDTOFromJSONTyped(json, false);\n}\n\nexport function UserProfileDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfileDTO {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'accessControl': json['accessControl'] == null ? undefined : json['accessControl'],\n        'authLabels': json['authLabels'] == null ? undefined : json['authLabels'],\n        'avatarUrl': json['avatarUrl'] == null ? undefined : json['avatarUrl'],\n        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),\n        'email': json['email'] == null ? undefined : json['email'],\n        'id': json['id'] == null ? undefined : json['id'],\n        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],\n        'isExternal': json['isExternal'] == null ? undefined : json['isExternal'],\n        'isExternallySynced': json['isExternallySynced'] == null ? undefined : json['isExternallySynced'],\n        'isGrafanaAdmin': json['isGrafanaAdmin'] == null ? undefined : json['isGrafanaAdmin'],\n        'isGrafanaAdminExternallySynced': json['isGrafanaAdminExternallySynced'] == null ? undefined : json['isGrafanaAdminExternallySynced'],\n        'login': json['login'] == null ? undefined : json['login'],\n        'name': json['name'] == null ? undefined : json['name'],\n        'orgId': json['orgId'] == null ? undefined : json['orgId'],\n        'theme': json['theme'] == null ? undefined : json['theme'],\n        'uid': json['uid'] == null ? undefined : json['uid'],\n        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),\n    };\n}\n\nexport function UserProfileDTOToJSON(json: any): UserProfileDTO {\n    return UserProfileDTOToJSONTyped(json, false);\n}\n\nexport function UserProfileDTOToJSONTyped(value?: UserProfileDTO | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'accessControl': value['accessControl'],\n        'authLabels': value['authLabels'],\n        'avatarUrl': value['avatarUrl'],\n        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),\n        'email': value['email'],\n        'id': value['id'],\n        'isDisabled': value['isDisabled'],\n        'isExternal': value['isExternal'],\n        'isExternallySynced': value['isExternallySynced'],\n        'isGrafanaAdmin': value['isGrafanaAdmin'],\n        'isGrafanaAdminExternallySynced': value['isGrafanaAdminExternallySynced'],\n        'login': value['login'],\n        'name': value['name'],\n        'orgId': value['orgId'],\n        'theme': value['theme'],\n        'uid': value['uid'],\n        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * UserToken represents a user token\n * @export\n * @interface UserToken\n */\nexport interface UserToken {\n    /**\n     * \n     * @type {string}\n     * @memberof UserToken\n     */\n    authToken?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof UserToken\n     */\n    authTokenSeen?: boolean;\n    /**\n     * \n     * @type {string}\n     * @memberof UserToken\n     */\n    clientIp?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    createdAt?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    externalSessionId?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    id?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UserToken\n     */\n    prevAuthToken?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    revokedAt?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    rotatedAt?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    seenAt?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UserToken\n     */\n    unhashedToken?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    updatedAt?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof UserToken\n     */\n    userAgent?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof UserToken\n     */\n    userId?: number;\n}\n\n/**\n * Check if a given object implements the UserToken interface.\n */\nexport function instanceOfUserToken(value: object): value is UserToken {\n    return true;\n}\n\nexport function UserTokenFromJSON(json: any): UserToken {\n    return UserTokenFromJSONTyped(json, false);\n}\n\nexport function UserTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserToken {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'authToken': json['AuthToken'] == null ? undefined : json['AuthToken'],\n        'authTokenSeen': json['AuthTokenSeen'] == null ? undefined : json['AuthTokenSeen'],\n        'clientIp': json['ClientIp'] == null ? undefined : json['ClientIp'],\n        'createdAt': json['CreatedAt'] == null ? undefined : json['CreatedAt'],\n        'externalSessionId': json['ExternalSessionId'] == null ? undefined : json['ExternalSessionId'],\n        'id': json['Id'] == null ? undefined : json['Id'],\n        'prevAuthToken': json['PrevAuthToken'] == null ? undefined : json['PrevAuthToken'],\n        'revokedAt': json['RevokedAt'] == null ? undefined : json['RevokedAt'],\n        'rotatedAt': json['RotatedAt'] == null ? undefined : json['RotatedAt'],\n        'seenAt': json['SeenAt'] == null ? undefined : json['SeenAt'],\n        'unhashedToken': json['UnhashedToken'] == null ? undefined : json['UnhashedToken'],\n        'updatedAt': json['UpdatedAt'] == null ? undefined : json['UpdatedAt'],\n        'userAgent': json['UserAgent'] == null ? undefined : json['UserAgent'],\n        'userId': json['UserId'] == null ? undefined : json['UserId'],\n    };\n}\n\nexport function UserTokenToJSON(json: any): UserToken {\n    return UserTokenToJSONTyped(json, false);\n}\n\nexport function UserTokenToJSONTyped(value?: UserToken | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'AuthToken': value['authToken'],\n        'AuthTokenSeen': value['authTokenSeen'],\n        'ClientIp': value['clientIp'],\n        'CreatedAt': value['createdAt'],\n        'ExternalSessionId': value['externalSessionId'],\n        'Id': value['id'],\n        'PrevAuthToken': value['prevAuthToken'],\n        'RevokedAt': value['revokedAt'],\n        'RotatedAt': value['rotatedAt'],\n        'SeenAt': value['seenAt'],\n        'UnhashedToken': value['unhashedToken'],\n        'UpdatedAt': value['updatedAt'],\n        'UserAgent': value['userAgent'],\n        'UserId': value['userId'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ValidationError\n */\nexport interface ValidationError {\n    /**\n     * \n     * @type {string}\n     * @memberof ValidationError\n     */\n    message?: string;\n}\n\n/**\n * Check if a given object implements the ValidationError interface.\n */\nexport function instanceOfValidationError(value: object): value is ValidationError {\n    return true;\n}\n\nexport function ValidationErrorFromJSON(json: any): ValidationError {\n    return ValidationErrorFromJSONTyped(json, false);\n}\n\nexport function ValidationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationError {\n    if (json == null) {\n        return json;\n    }\n    return {\n        \n        'message': json['message'] == null ? undefined : json['message'],\n    };\n}\n\nexport function ValidationErrorToJSON(json: any): ValidationError {\n    return ValidationErrorToJSONTyped(json, false);\n}\n\nexport function ValidationErrorToJSONTyped(value?: ValidationError | null, ignoreDiscriminator: boolean = false): any {\n    if (value == null) {\n        return value;\n    }\n\n    return {\n        \n        'message': value['message'],\n    };\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddTeamRoleCommand,\n  AddUserRoleCommand,\n  CreateRoleForm,\n  Description,\n  ErrorResponseBody,\n  ResourcePermissionDTO,\n  RoleAssignmentsDTO,\n  RoleDTO,\n  RolesSearchQuery,\n  SetPermissionCommand,\n  SetPermissionsCommand,\n  SetRoleAssignmentsCommand,\n  SetUserRolesCommand,\n  SuccessResponseBody,\n  UpdateRoleCommand,\n} from '../models/index';\nimport {\n    AddTeamRoleCommandFromJSON,\n    AddTeamRoleCommandToJSON,\n    AddUserRoleCommandFromJSON,\n    AddUserRoleCommandToJSON,\n    CreateRoleFormFromJSON,\n    CreateRoleFormToJSON,\n    DescriptionFromJSON,\n    DescriptionToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    ResourcePermissionDTOFromJSON,\n    ResourcePermissionDTOToJSON,\n    RoleAssignmentsDTOFromJSON,\n    RoleAssignmentsDTOToJSON,\n    RoleDTOFromJSON,\n    RoleDTOToJSON,\n    RolesSearchQueryFromJSON,\n    RolesSearchQueryToJSON,\n    SetPermissionCommandFromJSON,\n    SetPermissionCommandToJSON,\n    SetPermissionsCommandFromJSON,\n    SetPermissionsCommandToJSON,\n    SetRoleAssignmentsCommandFromJSON,\n    SetRoleAssignmentsCommandToJSON,\n    SetUserRolesCommandFromJSON,\n    SetUserRolesCommandToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateRoleCommandFromJSON,\n    UpdateRoleCommandToJSON,\n} from '../models/index';\n\nexport interface AccessControlApiAddTeamRoleRequest {\n    teamId: number;\n    body: AddTeamRoleCommand;\n}\n\nexport interface AccessControlApiAddUserRoleRequest {\n    userId: number;\n    body: AddUserRoleCommand;\n}\n\nexport interface AccessControlApiCreateRoleRequest {\n    body: CreateRoleForm;\n}\n\nexport interface AccessControlApiDeleteRoleRequest {\n    roleUID: string;\n    force?: boolean;\n    global?: boolean;\n}\n\nexport interface AccessControlApiGetResourceDescriptionRequest {\n    resource: string;\n}\n\nexport interface AccessControlApiGetResourcePermissionsRequest {\n    resource: string;\n    resourceID: string;\n}\n\nexport interface AccessControlApiGetRoleRequest {\n    roleUID: string;\n}\n\nexport interface AccessControlApiGetRoleAssignmentsRequest {\n    roleUID: string;\n}\n\nexport interface AccessControlApiListRolesRequest {\n    delegatable?: boolean;\n    includeHidden?: boolean;\n}\n\nexport interface AccessControlApiListTeamRolesRequest {\n    teamId: number;\n}\n\nexport interface AccessControlApiListTeamsRolesRequest {\n    body: RolesSearchQuery;\n}\n\nexport interface AccessControlApiListUserRolesRequest {\n    userId: number;\n}\n\nexport interface AccessControlApiListUsersRolesRequest {\n    body: RolesSearchQuery;\n}\n\nexport interface AccessControlApiRemoveTeamRoleRequest {\n    roleUID: string;\n    teamId: number;\n}\n\nexport interface AccessControlApiRemoveUserRoleRequest {\n    roleUID: string;\n    userId: number;\n    global?: boolean;\n}\n\nexport interface AccessControlApiSetResourcePermissionsRequest {\n    resource: string;\n    resourceID: string;\n    body: SetPermissionsCommand;\n}\n\nexport interface AccessControlApiSetResourcePermissionsForBuiltInRoleRequest {\n    resource: string;\n    resourceID: string;\n    builtInRole: string;\n    body: SetPermissionCommand;\n}\n\nexport interface AccessControlApiSetResourcePermissionsForTeamRequest {\n    resource: string;\n    resourceID: string;\n    teamID: number;\n    body: SetPermissionCommand;\n}\n\nexport interface AccessControlApiSetResourcePermissionsForUserRequest {\n    resource: string;\n    resourceID: string;\n    userID: number;\n    body: SetPermissionCommand;\n}\n\nexport interface AccessControlApiSetRoleAssignmentsRequest {\n    roleUID: string;\n    body: SetRoleAssignmentsCommand;\n}\n\nexport interface AccessControlApiSetTeamRolesRequest {\n    teamId: number;\n}\n\nexport interface AccessControlApiSetUserRolesRequest {\n    userId: number;\n    body: SetUserRolesCommand;\n}\n\nexport interface AccessControlApiUpdateRoleRequest {\n    roleUID: string;\n    body: UpdateRoleCommand;\n}\n\n/**\n * \n */\nexport class AccessControlApi extends runtime.BaseAPI {\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.\n     * Add team role.\n     */\n    async addTeamRoleRaw(requestParameters: AccessControlApiAddTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling addTeamRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addTeamRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddTeamRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.\n     * Add team role.\n     */\n    async addTeamRole(requestParameters: AccessControlApiAddTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addTeamRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Add a user role assignment.\n     */\n    async addUserRoleRaw(requestParameters: AccessControlApiAddUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling addUserRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addUserRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddUserRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Add a user role assignment.\n     */\n    async addUserRole(requestParameters: AccessControlApiAddUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addUserRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.\n     * Create a new custom role.\n     */\n    async createRoleRaw(requestParameters: AccessControlApiCreateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateRoleFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.\n     * Create a new custom role.\n     */\n    async createRole(requestParameters: AccessControlApiCreateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.createRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.\n     * Delete a custom role.\n     */\n    async deleteRoleRaw(requestParameters: AccessControlApiDeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling deleteRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['force'] != null) {\n            queryParameters['force'] = requestParameters['force'];\n        }\n\n        if (requestParameters['global'] != null) {\n            queryParameters['global'] = requestParameters['global'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.\n     * Delete a custom role.\n     */\n    async deleteRole(requestParameters: AccessControlApiDeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.\n     * Get status.\n     */\n    async getAccessControlStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        if (this.isJsonMime(response.headers.get('content-type'))) {\n            return new runtime.JSONApiResponse<number>(response);\n        } else {\n            return new runtime.TextApiResponse(response) as any;\n        }\n    }\n\n    /**\n     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.\n     * Get status.\n     */\n    async getAccessControlStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {\n        const response = await this.getAccessControlStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a description of a resource\\'s access control properties.\n     */\n    async getResourceDescriptionRaw(requestParameters: AccessControlApiGetResourceDescriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Description>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling getResourceDescription().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/description`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DescriptionFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a description of a resource\\'s access control properties.\n     */\n    async getResourceDescription(requestParameters: AccessControlApiGetResourceDescriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Description> {\n        const response = await this.getResourceDescriptionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get permissions for a resource.\n     */\n    async getResourcePermissionsRaw(requestParameters: AccessControlApiGetResourcePermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ResourcePermissionDTO>>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling getResourcePermissions().'\n            );\n        }\n\n        if (requestParameters['resourceID'] == null) {\n            throw new runtime.RequiredError(\n                'resourceID',\n                'Required parameter \"resourceID\" was null or undefined when calling getResourcePermissions().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/{resourceID}`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))).replace(`{${\"resourceID\"}}`, encodeURIComponent(String(requestParameters['resourceID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ResourcePermissionDTOFromJSON));\n    }\n\n    /**\n     * Get permissions for a resource.\n     */\n    async getResourcePermissions(requestParameters: AccessControlApiGetResourcePermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ResourcePermissionDTO>> {\n        const response = await this.getResourcePermissionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.\n     * Get a role.\n     */\n    async getRoleRaw(requestParameters: AccessControlApiGetRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling getRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.\n     * Get a role.\n     */\n    async getRole(requestParameters: AccessControlApiGetRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.getRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get role assignments for the role with the given UID. Does not include role assignments mapped through group attribute sync.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.\n     * Get role assignments.\n     */\n    async getRoleAssignmentsRaw(requestParameters: AccessControlApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleAssignmentsDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling getRoleAssignments().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}/assignments`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleAssignmentsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get role assignments for the role with the given UID. Does not include role assignments mapped through group attribute sync.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.\n     * Get role assignments.\n     */\n    async getRoleAssignments(requestParameters: AccessControlApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleAssignmentsDTO> {\n        const response = await this.getRoleAssignmentsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.\n     * Get all roles.\n     */\n    async listRolesRaw(requestParameters: AccessControlApiListRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RoleDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['delegatable'] != null) {\n            queryParameters['delegatable'] = requestParameters['delegatable'];\n        }\n\n        if (requestParameters['includeHidden'] != null) {\n            queryParameters['includeHidden'] = requestParameters['includeHidden'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RoleDTOFromJSON));\n    }\n\n    /**\n     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.\n     * Get all roles.\n     */\n    async listRoles(requestParameters: AccessControlApiListRolesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RoleDTO>> {\n        const response = await this.listRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.\n     * Get team roles.\n     */\n    async listTeamRolesRaw(requestParameters: AccessControlApiListTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling listTeamRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.\n     * Get team roles.\n     */\n    async listTeamRoles(requestParameters: AccessControlApiListTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.listTeamRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.\n     * List roles assigned to multiple teams.\n     */\n    async listTeamsRolesRaw(requestParameters: AccessControlApiListTeamsRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: Array<RoleDTO>; }>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling listTeamsRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/roles/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RolesSearchQueryToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.\n     * List roles assigned to multiple teams.\n     */\n    async listTeamsRoles(requestParameters: AccessControlApiListTeamsRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: Array<RoleDTO>; }> {\n        const response = await this.listTeamsRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.\n     * List roles assigned to a user.\n     */\n    async listUserRolesRaw(requestParameters: AccessControlApiListUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RoleDTO>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling listUserRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RoleDTOFromJSON));\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.\n     * List roles assigned to a user.\n     */\n    async listUserRoles(requestParameters: AccessControlApiListUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RoleDTO>> {\n        const response = await this.listUserRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.\n     * List roles assigned to multiple users.\n     */\n    async listUsersRolesRaw(requestParameters: AccessControlApiListUsersRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: Array<RoleDTO>; }>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling listUsersRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/roles/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RolesSearchQueryToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.\n     * List roles assigned to multiple users.\n     */\n    async listUsersRoles(requestParameters: AccessControlApiListUsersRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: Array<RoleDTO>; }> {\n        const response = await this.listUsersRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.\n     * Remove team role.\n     */\n    async removeTeamRoleRaw(requestParameters: AccessControlApiRemoveTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling removeTeamRole().'\n            );\n        }\n\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling removeTeamRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))).replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.\n     * Remove team role.\n     */\n    async removeTeamRole(requestParameters: AccessControlApiRemoveTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeTeamRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Remove a user role assignment.\n     */\n    async removeUserRoleRaw(requestParameters: AccessControlApiRemoveUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling removeUserRole().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling removeUserRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['global'] != null) {\n            queryParameters['global'] = requestParameters['global'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))).replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Remove a user role assignment.\n     */\n    async removeUserRole(requestParameters: AccessControlApiRemoveUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeUserRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to one or many assignment types. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions.\n     */\n    async setResourcePermissionsRaw(requestParameters: AccessControlApiSetResourcePermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling setResourcePermissions().'\n            );\n        }\n\n        if (requestParameters['resourceID'] == null) {\n            throw new runtime.RequiredError(\n                'resourceID',\n                'Required parameter \"resourceID\" was null or undefined when calling setResourcePermissions().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setResourcePermissions().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/{resourceID}`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))).replace(`{${\"resourceID\"}}`, encodeURIComponent(String(requestParameters['resourceID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetPermissionsCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to one or many assignment types. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions.\n     */\n    async setResourcePermissions(requestParameters: AccessControlApiSetResourcePermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setResourcePermissionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a built-in role. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a built-in role.\n     */\n    async setResourcePermissionsForBuiltInRoleRaw(requestParameters: AccessControlApiSetResourcePermissionsForBuiltInRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling setResourcePermissionsForBuiltInRole().'\n            );\n        }\n\n        if (requestParameters['resourceID'] == null) {\n            throw new runtime.RequiredError(\n                'resourceID',\n                'Required parameter \"resourceID\" was null or undefined when calling setResourcePermissionsForBuiltInRole().'\n            );\n        }\n\n        if (requestParameters['builtInRole'] == null) {\n            throw new runtime.RequiredError(\n                'builtInRole',\n                'Required parameter \"builtInRole\" was null or undefined when calling setResourcePermissionsForBuiltInRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setResourcePermissionsForBuiltInRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/{resourceID}/builtInRoles/{builtInRole}`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))).replace(`{${\"resourceID\"}}`, encodeURIComponent(String(requestParameters['resourceID']))).replace(`{${\"builtInRole\"}}`, encodeURIComponent(String(requestParameters['builtInRole']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetPermissionCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a built-in role. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a built-in role.\n     */\n    async setResourcePermissionsForBuiltInRole(requestParameters: AccessControlApiSetResourcePermissionsForBuiltInRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setResourcePermissionsForBuiltInRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a team. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a team.\n     */\n    async setResourcePermissionsForTeamRaw(requestParameters: AccessControlApiSetResourcePermissionsForTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling setResourcePermissionsForTeam().'\n            );\n        }\n\n        if (requestParameters['resourceID'] == null) {\n            throw new runtime.RequiredError(\n                'resourceID',\n                'Required parameter \"resourceID\" was null or undefined when calling setResourcePermissionsForTeam().'\n            );\n        }\n\n        if (requestParameters['teamID'] == null) {\n            throw new runtime.RequiredError(\n                'teamID',\n                'Required parameter \"teamID\" was null or undefined when calling setResourcePermissionsForTeam().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setResourcePermissionsForTeam().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/{resourceID}/teams/{teamID}`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))).replace(`{${\"resourceID\"}}`, encodeURIComponent(String(requestParameters['resourceID']))).replace(`{${\"teamID\"}}`, encodeURIComponent(String(requestParameters['teamID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetPermissionCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a team. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a team.\n     */\n    async setResourcePermissionsForTeam(requestParameters: AccessControlApiSetResourcePermissionsForTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setResourcePermissionsForTeamRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a user or a service account. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a user.\n     */\n    async setResourcePermissionsForUserRaw(requestParameters: AccessControlApiSetResourcePermissionsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['resource'] == null) {\n            throw new runtime.RequiredError(\n                'resource',\n                'Required parameter \"resource\" was null or undefined when calling setResourcePermissionsForUser().'\n            );\n        }\n\n        if (requestParameters['resourceID'] == null) {\n            throw new runtime.RequiredError(\n                'resourceID',\n                'Required parameter \"resourceID\" was null or undefined when calling setResourcePermissionsForUser().'\n            );\n        }\n\n        if (requestParameters['userID'] == null) {\n            throw new runtime.RequiredError(\n                'userID',\n                'Required parameter \"userID\" was null or undefined when calling setResourcePermissionsForUser().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setResourcePermissionsForUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/{resource}/{resourceID}/users/{userID}`.replace(`{${\"resource\"}}`, encodeURIComponent(String(requestParameters['resource']))).replace(`{${\"resourceID\"}}`, encodeURIComponent(String(requestParameters['resourceID']))).replace(`{${\"userID\"}}`, encodeURIComponent(String(requestParameters['userID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetPermissionCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assigns permissions for a resource by a given type (`:resource`) and `:resourceID` to a user or a service account. Allowed resources are `datasources`, `teams`, `dashboards`, `folders`, and `serviceaccounts`. Refer to the `/access-control/{resource}/description` endpoint for allowed Permissions.\n     * Set resource permissions for a user.\n     */\n    async setResourcePermissionsForUser(requestParameters: AccessControlApiSetResourcePermissionsForUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setResourcePermissionsForUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.\n     * Set role assignments.\n     */\n    async setRoleAssignmentsRaw(requestParameters: AccessControlApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleAssignmentsDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling setRoleAssignments().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setRoleAssignments().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}/assignments`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetRoleAssignmentsCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleAssignmentsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.\n     * Set role assignments.\n     */\n    async setRoleAssignments(requestParameters: AccessControlApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleAssignmentsDTO> {\n        const response = await this.setRoleAssignmentsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.\n     * Update team role.\n     */\n    async setTeamRolesRaw(requestParameters: AccessControlApiSetTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling setTeamRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.\n     * Update team role.\n     */\n    async setTeamRoles(requestParameters: AccessControlApiSetTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setTeamRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. Roles mapped through group attribute sync are not impacted. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Set user role assignments.\n     */\n    async setUserRolesRaw(requestParameters: AccessControlApiSetUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling setUserRoles().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setUserRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetUserRolesCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. Roles mapped through group attribute sync are not impacted. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Set user role assignments.\n     */\n    async setUserRoles(requestParameters: AccessControlApiSetUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setUserRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\n     * Update a custom role.\n     */\n    async updateRoleRaw(requestParameters: AccessControlApiUpdateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling updateRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\n     * Update a custom role.\n     */\n    async updateRole(requestParameters: AccessControlApiUpdateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.updateRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class AccessControlProvisioningApi extends runtime.BaseAPI {\n\n    /**\n     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.\n     */\n    async adminProvisioningReloadAccessControlRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ErrorResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/provisioning/access-control/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ErrorResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.\n     */\n    async adminProvisioningReloadAccessControl(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ErrorResponseBody> {\n        const response = await this.adminProvisioningReloadAccessControlRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AdminStats,\n  ErrorResponseBody,\n} from '../models/index';\nimport {\n    AdminStatsFromJSON,\n    AdminStatsToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class AdminApi extends runtime.BaseAPI {\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `settings:read` and scopes: `settings:*`, `settings:auth.saml:` and `settings:auth.saml:enabled` (property level).\n     * Fetch settings.\n     */\n    async adminGetSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: { [key: string]: string; }; }>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/settings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `settings:read` and scopes: `settings:*`, `settings:auth.saml:` and `settings:auth.saml:enabled` (property level).\n     * Fetch settings.\n     */\n    async adminGetSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: { [key: string]: string; }; }> {\n        const response = await this.adminGetSettingsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `server:stats:read`.\n     * Fetch Grafana Stats.\n     */\n    async adminGetStatsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminStats>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AdminStatsFromJSON(jsonValue));\n    }\n\n    /**\n     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `server:stats:read`.\n     * Fetch Grafana Stats.\n     */\n    async adminGetStats(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminStats> {\n        const response = await this.adminGetStatsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface AdminLdapApiGetUserFromLDAPRequest {\n    userName: string;\n}\n\nexport interface AdminLdapApiPostSyncUserWithLDAPRequest {\n    userId: number;\n}\n\n/**\n * \n */\nexport class AdminLdapApi extends runtime.BaseAPI {\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.status:read`.\n     * Attempts to connect to all the configured LDAP servers and returns information on whenever they\\'re available or not.\n     */\n    async getLDAPStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.status:read`.\n     * Attempts to connect to all the configured LDAP servers and returns information on whenever they\\'re available or not.\n     */\n    async getLDAPStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.getLDAPStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:read`.\n     * Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.\n     */\n    async getUserFromLDAPRaw(requestParameters: AdminLdapApiGetUserFromLDAPRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userName'] == null) {\n            throw new runtime.RequiredError(\n                'userName',\n                'Required parameter \"userName\" was null or undefined when calling getUserFromLDAP().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap/{user_name}`.replace(`{${\"user_name\"}}`, encodeURIComponent(String(requestParameters['userName']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:read`.\n     * Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.\n     */\n    async getUserFromLDAP(requestParameters: AdminLdapApiGetUserFromLDAPRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.getUserFromLDAPRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:sync`.\n     * Enables a single Grafana user to be synchronized against LDAP.\n     */\n    async postSyncUserWithLDAPRaw(requestParameters: AdminLdapApiPostSyncUserWithLDAPRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling postSyncUserWithLDAP().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap/sync/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:sync`.\n     * Enables a single Grafana user to be synchronized against LDAP.\n     */\n    async postSyncUserWithLDAP(requestParameters: AdminLdapApiPostSyncUserWithLDAPRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.postSyncUserWithLDAPRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.config:reload`.\n     * Reloads the LDAP configuration.\n     */\n    async reloadLDAPCfgRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.config:reload`.\n     * Reloads the LDAP configuration.\n     */\n    async reloadLDAPCfg(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.reloadLDAPCfgRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class AdminProvisioningApi extends runtime.BaseAPI {\n\n    /**\n     * Reloads the provisioning config files for dashboards again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:dashboards`.\n     * Reload dashboard provisioning configurations.\n     */\n    async adminProvisioningReloadDashboardsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/provisioning/dashboards/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Reloads the provisioning config files for dashboards again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:dashboards`.\n     * Reload dashboard provisioning configurations.\n     */\n    async adminProvisioningReloadDashboards(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminProvisioningReloadDashboardsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Reloads the provisioning config files for datasources again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:datasources`.\n     * Reload datasource provisioning configurations.\n     */\n    async adminProvisioningReloadDatasourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/provisioning/datasources/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Reloads the provisioning config files for datasources again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:datasources`.\n     * Reload datasource provisioning configurations.\n     */\n    async adminProvisioningReloadDatasources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminProvisioningReloadDatasourcesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Reloads the provisioning config files for plugins again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:plugin`.\n     * Reload plugin provisioning configurations.\n     */\n    async adminProvisioningReloadPluginsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/provisioning/plugins/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Reloads the provisioning config files for plugins again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:plugin`.\n     * Reload plugin provisioning configurations.\n     */\n    async adminProvisioningReloadPlugins(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminProvisioningReloadPluginsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AdminCreateUserForm,\n  AdminCreateUserResponse,\n  AdminUpdateUserPasswordForm,\n  AdminUpdateUserPermissionsForm,\n  ErrorResponseBody,\n  QuotaDTO,\n  RevokeAuthTokenCmd,\n  SuccessResponseBody,\n  UpdateQuotaCmd,\n  UserToken,\n} from '../models/index';\nimport {\n    AdminCreateUserFormFromJSON,\n    AdminCreateUserFormToJSON,\n    AdminCreateUserResponseFromJSON,\n    AdminCreateUserResponseToJSON,\n    AdminUpdateUserPasswordFormFromJSON,\n    AdminUpdateUserPasswordFormToJSON,\n    AdminUpdateUserPermissionsFormFromJSON,\n    AdminUpdateUserPermissionsFormToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    QuotaDTOFromJSON,\n    QuotaDTOToJSON,\n    RevokeAuthTokenCmdFromJSON,\n    RevokeAuthTokenCmdToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateQuotaCmdFromJSON,\n    UpdateQuotaCmdToJSON,\n    UserTokenFromJSON,\n    UserTokenToJSON,\n} from '../models/index';\n\nexport interface AdminUsersApiAdminCreateUserRequest {\n    body: AdminCreateUserForm;\n}\n\nexport interface AdminUsersApiAdminDeleteUserRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiAdminDisableUserRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiAdminEnableUserRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiAdminGetUserAuthTokensRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiAdminLogoutUserRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiAdminRevokeUserAuthTokenRequest {\n    userId: number;\n    body: RevokeAuthTokenCmd;\n}\n\nexport interface AdminUsersApiAdminUpdateUserPasswordRequest {\n    userId: number;\n    body: AdminUpdateUserPasswordForm;\n}\n\nexport interface AdminUsersApiAdminUpdateUserPermissionsRequest {\n    userId: number;\n    body: AdminUpdateUserPermissionsForm;\n}\n\nexport interface AdminUsersApiGetUserQuotaRequest {\n    userId: number;\n}\n\nexport interface AdminUsersApiUpdateUserQuotaRequest {\n    quotaTarget: string;\n    userId: number;\n    body: UpdateQuotaCmd;\n}\n\n/**\n * \n */\nexport class AdminUsersApi extends runtime.BaseAPI {\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:create`. Note that OrgId is an optional parameter that can be used to assign a new user to a different organization when `auto_assign_org` is set to `true`.\n     * Create new user.\n     */\n    async adminCreateUserRaw(requestParameters: AdminUsersApiAdminCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AdminCreateUserResponse>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling adminCreateUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AdminCreateUserFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AdminCreateUserResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:create`. Note that OrgId is an optional parameter that can be used to assign a new user to a different organization when `auto_assign_org` is set to `true`.\n     * Create new user.\n     */\n    async adminCreateUser(requestParameters: AdminUsersApiAdminCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AdminCreateUserResponse> {\n        const response = await this.adminCreateUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:delete` and scope `global.users:*`.\n     * Delete global User.\n     */\n    async adminDeleteUserRaw(requestParameters: AdminUsersApiAdminDeleteUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminDeleteUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:delete` and scope `global.users:*`.\n     * Delete global User.\n     */\n    async adminDeleteUser(requestParameters: AdminUsersApiAdminDeleteUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminDeleteUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:disable` and scope `global.users:1` (userIDScope).\n     * Disable user.\n     */\n    async adminDisableUserRaw(requestParameters: AdminUsersApiAdminDisableUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminDisableUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/disable`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:disable` and scope `global.users:1` (userIDScope).\n     * Disable user.\n     */\n    async adminDisableUser(requestParameters: AdminUsersApiAdminDisableUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminDisableUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:enable` and scope `global.users:1` (userIDScope).\n     * Enable user.\n     */\n    async adminEnableUserRaw(requestParameters: AdminUsersApiAdminEnableUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminEnableUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/enable`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:enable` and scope `global.users:1` (userIDScope).\n     * Enable user.\n     */\n    async adminEnableUser(requestParameters: AdminUsersApiAdminEnableUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminEnableUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:list` and scope `global.users:*`.\n     * Return a list of all auth tokens (devices) that the user currently have logged in from.\n     */\n    async adminGetUserAuthTokensRaw(requestParameters: AdminUsersApiAdminGetUserAuthTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserToken>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminGetUserAuthTokens().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/auth-tokens`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserTokenFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:list` and scope `global.users:*`.\n     * Return a list of all auth tokens (devices) that the user currently have logged in from.\n     */\n    async adminGetUserAuthTokens(requestParameters: AdminUsersApiAdminGetUserAuthTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserToken>> {\n        const response = await this.adminGetUserAuthTokensRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.logout` and scope `global.users:*`.\n     * Logout user revokes all auth tokens (devices) for the user. User of issued auth tokens (devices) will no longer be logged in and will be required to authenticate again upon next activity.\n     */\n    async adminLogoutUserRaw(requestParameters: AdminUsersApiAdminLogoutUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminLogoutUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/logout`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.logout` and scope `global.users:*`.\n     * Logout user revokes all auth tokens (devices) for the user. User of issued auth tokens (devices) will no longer be logged in and will be required to authenticate again upon next activity.\n     */\n    async adminLogoutUser(requestParameters: AdminUsersApiAdminLogoutUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminLogoutUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Revokes the given auth token (device) for the user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:update` and scope `global.users:*`.\n     * Revoke auth token for user.\n     */\n    async adminRevokeUserAuthTokenRaw(requestParameters: AdminUsersApiAdminRevokeUserAuthTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminRevokeUserAuthToken().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling adminRevokeUserAuthToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/revoke-auth-token`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RevokeAuthTokenCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Revokes the given auth token (device) for the user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:update` and scope `global.users:*`.\n     * Revoke auth token for user.\n     */\n    async adminRevokeUserAuthToken(requestParameters: AdminUsersApiAdminRevokeUserAuthTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminRevokeUserAuthTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.password:update` and scope `global.users:*`.\n     * Set password for user.\n     */\n    async adminUpdateUserPasswordRaw(requestParameters: AdminUsersApiAdminUpdateUserPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminUpdateUserPassword().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling adminUpdateUserPassword().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/password`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AdminUpdateUserPasswordFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.password:update` and scope `global.users:*`.\n     * Set password for user.\n     */\n    async adminUpdateUserPassword(requestParameters: AdminUsersApiAdminUpdateUserPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminUpdateUserPasswordRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.permissions:update` and scope `global.users:*`.\n     * Set permissions for user.\n     */\n    async adminUpdateUserPermissionsRaw(requestParameters: AdminUsersApiAdminUpdateUserPermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling adminUpdateUserPermissions().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling adminUpdateUserPermissions().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/permissions`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AdminUpdateUserPermissionsFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Only works with Basic Authentication (username and password). See introduction for an explanation. If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.permissions:update` and scope `global.users:*`.\n     * Set permissions for user.\n     */\n    async adminUpdateUserPermissions(requestParameters: AdminUsersApiAdminUpdateUserPermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.adminUpdateUserPermissionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:list` and scope `global.users:1` (userIDScope).\n     * Fetch user quota.\n     */\n    async getUserQuotaRaw(requestParameters: AdminUsersApiGetUserQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<QuotaDTO>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling getUserQuota().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/quotas`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(QuotaDTOFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:list` and scope `global.users:1` (userIDScope).\n     * Fetch user quota.\n     */\n    async getUserQuota(requestParameters: AdminUsersApiGetUserQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<QuotaDTO>> {\n        const response = await this.getUserQuotaRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:update` and scope `global.users:1` (userIDScope).\n     * Update user quota.\n     */\n    async updateUserQuotaRaw(requestParameters: AdminUsersApiUpdateUserQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['quotaTarget'] == null) {\n            throw new runtime.RequiredError(\n                'quotaTarget',\n                'Required parameter \"quotaTarget\" was null or undefined when calling updateUserQuota().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling updateUserQuota().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateUserQuota().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/users/{user_id}/quotas/{quota_target}`.replace(`{${\"quota_target\"}}`, encodeURIComponent(String(requestParameters['quotaTarget']))).replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateQuotaCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:update` and scope `global.users:1` (userIDScope).\n     * Update user quota.\n     */\n    async updateUserQuota(requestParameters: AdminUsersApiUpdateUserQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateUserQuotaRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  Annotation,\n  ErrorResponseBody,\n  GetAnnotationTagsResponse,\n  MassDeleteAnnotationsCmd,\n  PatchAnnotationsCmd,\n  PostAnnotation200Response,\n  PostAnnotationsCmd,\n  PostGraphiteAnnotationsCmd,\n  SuccessResponseBody,\n  UpdateAnnotationsCmd,\n} from '../models/index';\nimport {\n    AnnotationFromJSON,\n    AnnotationToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    GetAnnotationTagsResponseFromJSON,\n    GetAnnotationTagsResponseToJSON,\n    MassDeleteAnnotationsCmdFromJSON,\n    MassDeleteAnnotationsCmdToJSON,\n    PatchAnnotationsCmdFromJSON,\n    PatchAnnotationsCmdToJSON,\n    PostAnnotation200ResponseFromJSON,\n    PostAnnotation200ResponseToJSON,\n    PostAnnotationsCmdFromJSON,\n    PostAnnotationsCmdToJSON,\n    PostGraphiteAnnotationsCmdFromJSON,\n    PostGraphiteAnnotationsCmdToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateAnnotationsCmdFromJSON,\n    UpdateAnnotationsCmdToJSON,\n} from '../models/index';\n\nexport interface AnnotationsApiDeleteAnnotationByIDRequest {\n    annotationId: string;\n}\n\nexport interface AnnotationsApiGetAnnotationByIDRequest {\n    annotationId: string;\n}\n\nexport interface AnnotationsApiGetAnnotationTagsRequest {\n    tag?: string;\n    limit?: string;\n}\n\nexport interface AnnotationsApiGetAnnotationsRequest {\n    from?: number;\n    to?: number;\n    userId?: number;\n    alertId?: number;\n    dashboardId?: number;\n    dashboardUID?: string;\n    panelId?: number;\n    limit?: number;\n    tags?: Array<string>;\n    type?: GetAnnotationsTypeEnum;\n    matchAny?: boolean;\n}\n\nexport interface AnnotationsApiMassDeleteAnnotationsRequest {\n    body: MassDeleteAnnotationsCmd;\n}\n\nexport interface AnnotationsApiPatchAnnotationRequest {\n    annotationId: string;\n    body: PatchAnnotationsCmd;\n}\n\nexport interface AnnotationsApiPostAnnotationRequest {\n    body: PostAnnotationsCmd;\n}\n\nexport interface AnnotationsApiPostGraphiteAnnotationRequest {\n    body: PostGraphiteAnnotationsCmd;\n}\n\nexport interface AnnotationsApiUpdateAnnotationRequest {\n    annotationId: string;\n    body: UpdateAnnotationsCmd;\n}\n\n/**\n * \n */\nexport class AnnotationsApi extends runtime.BaseAPI {\n\n    /**\n     * Deletes the annotation that matches the specified ID.\n     * Delete Annotation By ID.\n     */\n    async deleteAnnotationByIDRaw(requestParameters: AnnotationsApiDeleteAnnotationByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['annotationId'] == null) {\n            throw new runtime.RequiredError(\n                'annotationId',\n                'Required parameter \"annotationId\" was null or undefined when calling deleteAnnotationByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/{annotation_id}`.replace(`{${\"annotation_id\"}}`, encodeURIComponent(String(requestParameters['annotationId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes the annotation that matches the specified ID.\n     * Delete Annotation By ID.\n     */\n    async deleteAnnotationByID(requestParameters: AnnotationsApiDeleteAnnotationByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteAnnotationByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Annotation by ID.\n     */\n    async getAnnotationByIDRaw(requestParameters: AnnotationsApiGetAnnotationByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Annotation>> {\n        if (requestParameters['annotationId'] == null) {\n            throw new runtime.RequiredError(\n                'annotationId',\n                'Required parameter \"annotationId\" was null or undefined when calling getAnnotationByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/{annotation_id}`.replace(`{${\"annotation_id\"}}`, encodeURIComponent(String(requestParameters['annotationId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AnnotationFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Annotation by ID.\n     */\n    async getAnnotationByID(requestParameters: AnnotationsApiGetAnnotationByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Annotation> {\n        const response = await this.getAnnotationByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Find all the event tags created in the annotations.\n     * Find Annotations Tags.\n     */\n    async getAnnotationTagsRaw(requestParameters: AnnotationsApiGetAnnotationTagsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAnnotationTagsResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['tag'] != null) {\n            queryParameters['tag'] = requestParameters['tag'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/tags`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetAnnotationTagsResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Find all the event tags created in the annotations.\n     * Find Annotations Tags.\n     */\n    async getAnnotationTags(requestParameters: AnnotationsApiGetAnnotationTagsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAnnotationTagsResponse> {\n        const response = await this.getAnnotationTagsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Starting in Grafana v6.4 regions annotations are now returned in one entity that now includes the timeEnd property.\n     * Find Annotations.\n     */\n    async getAnnotationsRaw(requestParameters: AnnotationsApiGetAnnotationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Annotation>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['from'] != null) {\n            queryParameters['from'] = requestParameters['from'];\n        }\n\n        if (requestParameters['to'] != null) {\n            queryParameters['to'] = requestParameters['to'];\n        }\n\n        if (requestParameters['userId'] != null) {\n            queryParameters['userId'] = requestParameters['userId'];\n        }\n\n        if (requestParameters['alertId'] != null) {\n            queryParameters['alertId'] = requestParameters['alertId'];\n        }\n\n        if (requestParameters['dashboardId'] != null) {\n            queryParameters['dashboardId'] = requestParameters['dashboardId'];\n        }\n\n        if (requestParameters['dashboardUID'] != null) {\n            queryParameters['dashboardUID'] = requestParameters['dashboardUID'];\n        }\n\n        if (requestParameters['panelId'] != null) {\n            queryParameters['panelId'] = requestParameters['panelId'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['tags'] != null) {\n            queryParameters['tags'] = requestParameters['tags'];\n        }\n\n        if (requestParameters['type'] != null) {\n            queryParameters['type'] = requestParameters['type'];\n        }\n\n        if (requestParameters['matchAny'] != null) {\n            queryParameters['matchAny'] = requestParameters['matchAny'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AnnotationFromJSON));\n    }\n\n    /**\n     * Starting in Grafana v6.4 regions annotations are now returned in one entity that now includes the timeEnd property.\n     * Find Annotations.\n     */\n    async getAnnotations(requestParameters: AnnotationsApiGetAnnotationsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Annotation>> {\n        const response = await this.getAnnotationsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete multiple annotations.\n     */\n    async massDeleteAnnotationsRaw(requestParameters: AnnotationsApiMassDeleteAnnotationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling massDeleteAnnotations().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/mass-delete`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MassDeleteAnnotationsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete multiple annotations.\n     */\n    async massDeleteAnnotations(requestParameters: AnnotationsApiMassDeleteAnnotationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.massDeleteAnnotationsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates one or more properties of an annotation that matches the specified ID. This operation currently supports updating of the `text`, `tags`, `time` and `timeEnd` properties. This is available in Grafana 6.0.0-beta2 and above.\n     * Patch Annotation.\n     */\n    async patchAnnotationRaw(requestParameters: AnnotationsApiPatchAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['annotationId'] == null) {\n            throw new runtime.RequiredError(\n                'annotationId',\n                'Required parameter \"annotationId\" was null or undefined when calling patchAnnotation().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling patchAnnotation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/{annotation_id}`.replace(`{${\"annotation_id\"}}`, encodeURIComponent(String(requestParameters['annotationId']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PatchAnnotationsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates one or more properties of an annotation that matches the specified ID. This operation currently supports updating of the `text`, `tags`, `time` and `timeEnd` properties. This is available in Grafana 6.0.0-beta2 and above.\n     * Patch Annotation.\n     */\n    async patchAnnotation(requestParameters: AnnotationsApiPatchAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.patchAnnotationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Creates an annotation in the Grafana database. The dashboardId and panelId fields are optional. If they are not specified then an organization annotation is created and can be queried in any dashboard that adds the Grafana annotations data source. When creating a region annotation include the timeEnd property. The format for `time` and `timeEnd` should be epoch numbers in millisecond resolution. The response for this HTTP request is slightly different in versions prior to v6.4. In prior versions you would also get an endId if you where creating a region. But in 6.4 regions are represented using a single event with time and timeEnd properties.\n     * Create Annotation.\n     */\n    async postAnnotationRaw(requestParameters: AnnotationsApiPostAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostAnnotation200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postAnnotation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PostAnnotationsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostAnnotation200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates an annotation in the Grafana database. The dashboardId and panelId fields are optional. If they are not specified then an organization annotation is created and can be queried in any dashboard that adds the Grafana annotations data source. When creating a region annotation include the timeEnd property. The format for `time` and `timeEnd` should be epoch numbers in millisecond resolution. The response for this HTTP request is slightly different in versions prior to v6.4. In prior versions you would also get an endId if you where creating a region. But in 6.4 regions are represented using a single event with time and timeEnd properties.\n     * Create Annotation.\n     */\n    async postAnnotation(requestParameters: AnnotationsApiPostAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostAnnotation200Response> {\n        const response = await this.postAnnotationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Creates an annotation by using Graphite-compatible event format. The `when` and `data` fields are optional. If `when` is not specified then the current time will be used as annotation’s timestamp. The `tags` field can also be in prior to Graphite `0.10.0` format (string with multiple tags being separated by a space).\n     * Create Annotation in Graphite format.\n     */\n    async postGraphiteAnnotationRaw(requestParameters: AnnotationsApiPostGraphiteAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostAnnotation200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postGraphiteAnnotation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/graphite`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PostGraphiteAnnotationsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostAnnotation200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates an annotation by using Graphite-compatible event format. The `when` and `data` fields are optional. If `when` is not specified then the current time will be used as annotation’s timestamp. The `tags` field can also be in prior to Graphite `0.10.0` format (string with multiple tags being separated by a space).\n     * Create Annotation in Graphite format.\n     */\n    async postGraphiteAnnotation(requestParameters: AnnotationsApiPostGraphiteAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostAnnotation200Response> {\n        const response = await this.postGraphiteAnnotationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates all properties of an annotation that matches the specified id. To only update certain property, consider using the Patch Annotation operation.\n     * Update Annotation.\n     */\n    async updateAnnotationRaw(requestParameters: AnnotationsApiUpdateAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['annotationId'] == null) {\n            throw new runtime.RequiredError(\n                'annotationId',\n                'Required parameter \"annotationId\" was null or undefined when calling updateAnnotation().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateAnnotation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/annotations/{annotation_id}`.replace(`{${\"annotation_id\"}}`, encodeURIComponent(String(requestParameters['annotationId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateAnnotationsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates all properties of an annotation that matches the specified id. To only update certain property, consider using the Patch Annotation operation.\n     * Update Annotation.\n     */\n    async updateAnnotation(requestParameters: AnnotationsApiUpdateAnnotationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateAnnotationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const GetAnnotationsTypeEnum = {\n    Alert: 'alert',\n    Annotation: 'annotation'\n} as const;\nexport type GetAnnotationsTypeEnum = typeof GetAnnotationsTypeEnum[keyof typeof GetAnnotationsTypeEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ApiKeyDTO,\n  ErrorResponseBody,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    ApiKeyDTOFromJSON,\n    ApiKeyDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface ApiKeysApiDeleteAPIkeyRequest {\n    id: number;\n}\n\nexport interface ApiKeysApiGetAPIkeysRequest {\n    includeExpired?: boolean;\n}\n\n/**\n * \n */\nexport class ApiKeysApi extends runtime.BaseAPI {\n\n    /**\n     * Will return details of the created API key.\n     * Creates an API key.\n     * @deprecated\n     */\n    async addAPIkeyRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/auth/keys`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Will return details of the created API key.\n     * Creates an API key.\n     * @deprecated\n     */\n    async addAPIkey(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.addAPIkeyRaw(initOverrides);\n    }\n\n    /**\n     * Deletes an API key. Deprecated. See: https://grafana.com/docs/grafana/next/administration/service-accounts/migrate-api-keys/.\n     * Delete API key.\n     * @deprecated\n     */\n    async deleteAPIkeyRaw(requestParameters: ApiKeysApiDeleteAPIkeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling deleteAPIkey().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/auth/keys/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes an API key. Deprecated. See: https://grafana.com/docs/grafana/next/administration/service-accounts/migrate-api-keys/.\n     * Delete API key.\n     * @deprecated\n     */\n    async deleteAPIkey(requestParameters: ApiKeysApiDeleteAPIkeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteAPIkeyRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Will return auth keys.  Deprecated: true.  Deprecated. Please use GET /api/serviceaccounts and GET /api/serviceaccounts/{id}/tokens instead see https://grafana.com/docs/grafana/next/administration/service-accounts/migrate-api-keys/.\n     * Get auth keys.\n     */\n    async getAPIkeysRaw(requestParameters: ApiKeysApiGetAPIkeysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApiKeyDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['includeExpired'] != null) {\n            queryParameters['includeExpired'] = requestParameters['includeExpired'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/auth/keys`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ApiKeyDTOFromJSON));\n    }\n\n    /**\n     * Will return auth keys.  Deprecated: true.  Deprecated. Please use GET /api/serviceaccounts and GET /api/serviceaccounts/{id}/tokens instead see https://grafana.com/docs/grafana/next/administration/service-accounts/migrate-api-keys/.\n     * Get auth keys.\n     */\n    async getAPIkeys(requestParameters: ApiKeysApiGetAPIkeysRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApiKeyDTO>> {\n        const response = await this.getAPIkeysRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  Correlation,\n  CreateCorrelationCommand,\n  CreateCorrelationResponseBody,\n  DeleteCorrelationResponseBody,\n  ErrorResponseBody,\n  UpdateCorrelationCommand,\n  UpdateCorrelationResponseBody,\n} from '../models/index';\nimport {\n    CorrelationFromJSON,\n    CorrelationToJSON,\n    CreateCorrelationCommandFromJSON,\n    CreateCorrelationCommandToJSON,\n    CreateCorrelationResponseBodyFromJSON,\n    CreateCorrelationResponseBodyToJSON,\n    DeleteCorrelationResponseBodyFromJSON,\n    DeleteCorrelationResponseBodyToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    UpdateCorrelationCommandFromJSON,\n    UpdateCorrelationCommandToJSON,\n    UpdateCorrelationResponseBodyFromJSON,\n    UpdateCorrelationResponseBodyToJSON,\n} from '../models/index';\n\nexport interface CorrelationsApiCreateCorrelationRequest {\n    sourceUID: string;\n    body: CreateCorrelationCommand;\n}\n\nexport interface CorrelationsApiDeleteCorrelationRequest {\n    uid: string;\n    correlationUID: string;\n}\n\nexport interface CorrelationsApiGetCorrelationRequest {\n    sourceUID: string;\n    correlationUID: string;\n}\n\nexport interface CorrelationsApiGetCorrelationsRequest {\n    limit?: number;\n    page?: number;\n    sourceUID?: Array<string>;\n}\n\nexport interface CorrelationsApiGetCorrelationsBySourceUIDRequest {\n    sourceUID: string;\n}\n\nexport interface CorrelationsApiUpdateCorrelationRequest {\n    sourceUID: string;\n    correlationUID: string;\n    body?: UpdateCorrelationCommand;\n}\n\n/**\n * \n */\nexport class CorrelationsApi extends runtime.BaseAPI {\n\n    /**\n     * Add correlation.\n     */\n    async createCorrelationRaw(requestParameters: CorrelationsApiCreateCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateCorrelationResponseBody>> {\n        if (requestParameters['sourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'sourceUID',\n                'Required parameter \"sourceUID\" was null or undefined when calling createCorrelation().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createCorrelation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{sourceUID}/correlations`.replace(`{${\"sourceUID\"}}`, encodeURIComponent(String(requestParameters['sourceUID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateCorrelationCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCorrelationResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Add correlation.\n     */\n    async createCorrelation(requestParameters: CorrelationsApiCreateCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateCorrelationResponseBody> {\n        const response = await this.createCorrelationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete a correlation.\n     */\n    async deleteCorrelationRaw(requestParameters: CorrelationsApiDeleteCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteCorrelationResponseBody>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deleteCorrelation().'\n            );\n        }\n\n        if (requestParameters['correlationUID'] == null) {\n            throw new runtime.RequiredError(\n                'correlationUID',\n                'Required parameter \"correlationUID\" was null or undefined when calling deleteCorrelation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}/correlations/{correlationUID}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))).replace(`{${\"correlationUID\"}}`, encodeURIComponent(String(requestParameters['correlationUID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteCorrelationResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete a correlation.\n     */\n    async deleteCorrelation(requestParameters: CorrelationsApiDeleteCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteCorrelationResponseBody> {\n        const response = await this.deleteCorrelationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets a correlation.\n     */\n    async getCorrelationRaw(requestParameters: CorrelationsApiGetCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Correlation>> {\n        if (requestParameters['sourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'sourceUID',\n                'Required parameter \"sourceUID\" was null or undefined when calling getCorrelation().'\n            );\n        }\n\n        if (requestParameters['correlationUID'] == null) {\n            throw new runtime.RequiredError(\n                'correlationUID',\n                'Required parameter \"correlationUID\" was null or undefined when calling getCorrelation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{sourceUID}/correlations/{correlationUID}`.replace(`{${\"sourceUID\"}}`, encodeURIComponent(String(requestParameters['sourceUID']))).replace(`{${\"correlationUID\"}}`, encodeURIComponent(String(requestParameters['correlationUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CorrelationFromJSON(jsonValue));\n    }\n\n    /**\n     * Gets a correlation.\n     */\n    async getCorrelation(requestParameters: CorrelationsApiGetCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Correlation> {\n        const response = await this.getCorrelationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all correlations.\n     */\n    async getCorrelationsRaw(requestParameters: CorrelationsApiGetCorrelationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Correlation>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['sourceUID'] != null) {\n            queryParameters['sourceUID'] = requestParameters['sourceUID'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/correlations`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CorrelationFromJSON));\n    }\n\n    /**\n     * Gets all correlations.\n     */\n    async getCorrelations(requestParameters: CorrelationsApiGetCorrelationsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Correlation>> {\n        const response = await this.getCorrelationsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all correlations originating from the given data source.\n     */\n    async getCorrelationsBySourceUIDRaw(requestParameters: CorrelationsApiGetCorrelationsBySourceUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Correlation>>> {\n        if (requestParameters['sourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'sourceUID',\n                'Required parameter \"sourceUID\" was null or undefined when calling getCorrelationsBySourceUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{sourceUID}/correlations`.replace(`{${\"sourceUID\"}}`, encodeURIComponent(String(requestParameters['sourceUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CorrelationFromJSON));\n    }\n\n    /**\n     * Gets all correlations originating from the given data source.\n     */\n    async getCorrelationsBySourceUID(requestParameters: CorrelationsApiGetCorrelationsBySourceUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Correlation>> {\n        const response = await this.getCorrelationsBySourceUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates a correlation.\n     */\n    async updateCorrelationRaw(requestParameters: CorrelationsApiUpdateCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateCorrelationResponseBody>> {\n        if (requestParameters['sourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'sourceUID',\n                'Required parameter \"sourceUID\" was null or undefined when calling updateCorrelation().'\n            );\n        }\n\n        if (requestParameters['correlationUID'] == null) {\n            throw new runtime.RequiredError(\n                'correlationUID',\n                'Required parameter \"correlationUID\" was null or undefined when calling updateCorrelation().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{sourceUID}/correlations/{correlationUID}`.replace(`{${\"sourceUID\"}}`, encodeURIComponent(String(requestParameters['sourceUID']))).replace(`{${\"correlationUID\"}}`, encodeURIComponent(String(requestParameters['correlationUID']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateCorrelationCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateCorrelationResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates a correlation.\n     */\n    async updateCorrelation(requestParameters: CorrelationsApiUpdateCorrelationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateCorrelationResponseBody> {\n        const response = await this.updateCorrelationRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  DashboardACLInfoDTO,\n  ErrorResponseBody,\n  SuccessResponseBody,\n  UpdateDashboardACLCommand,\n} from '../models/index';\nimport {\n    DashboardACLInfoDTOFromJSON,\n    DashboardACLInfoDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateDashboardACLCommandFromJSON,\n    UpdateDashboardACLCommandToJSON,\n} from '../models/index';\n\nexport interface DashboardPermissionsApiGetDashboardPermissionsListByIDRequest {\n    dashboardID: number;\n}\n\nexport interface DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest {\n    uid: string;\n}\n\nexport interface DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest {\n    dashboardID: number;\n    body: UpdateDashboardACLCommand;\n}\n\nexport interface DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest {\n    uid: string;\n    body: UpdateDashboardACLCommand;\n}\n\n/**\n * \n */\nexport class DashboardPermissionsApi extends runtime.BaseAPI {\n\n    /**\n     * Please refer to [updated API](#/dashboard_permissions/getDashboardPermissionsListByUID) instead\n     * Gets all existing permissions for the given dashboard.\n     * @deprecated\n     */\n    async getDashboardPermissionsListByIDRaw(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardACLInfoDTO>>> {\n        if (requestParameters['dashboardID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardID',\n                'Required parameter \"dashboardID\" was null or undefined when calling getDashboardPermissionsListByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/id/{DashboardID}/permissions`.replace(`{${\"DashboardID\"}}`, encodeURIComponent(String(requestParameters['dashboardID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardACLInfoDTOFromJSON));\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_permissions/getDashboardPermissionsListByUID) instead\n     * Gets all existing permissions for the given dashboard.\n     * @deprecated\n     */\n    async getDashboardPermissionsListByID(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>> {\n        const response = await this.getDashboardPermissionsListByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all existing permissions for the given dashboard.\n     */\n    async getDashboardPermissionsListByUIDRaw(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardACLInfoDTO>>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getDashboardPermissionsListByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/permissions`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardACLInfoDTOFromJSON));\n    }\n\n    /**\n     * Gets all existing permissions for the given dashboard.\n     */\n    async getDashboardPermissionsListByUID(requestParameters: DashboardPermissionsApiGetDashboardPermissionsListByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>> {\n        const response = await this.getDashboardPermissionsListByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_permissions/updateDashboardPermissionsByUID) instead  This operation will remove existing permissions if they’re not included in the request.\n     * Updates permissions for a dashboard.\n     * @deprecated\n     */\n    async updateDashboardPermissionsByIDRaw(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardID',\n                'Required parameter \"dashboardID\" was null or undefined when calling updateDashboardPermissionsByID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateDashboardPermissionsByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/id/{DashboardID}/permissions`.replace(`{${\"DashboardID\"}}`, encodeURIComponent(String(requestParameters['dashboardID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateDashboardACLCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_permissions/updateDashboardPermissionsByUID) instead  This operation will remove existing permissions if they’re not included in the request.\n     * Updates permissions for a dashboard.\n     * @deprecated\n     */\n    async updateDashboardPermissionsByID(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateDashboardPermissionsByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * This operation will remove existing permissions if they’re not included in the request.\n     * Updates permissions for a dashboard.\n     */\n    async updateDashboardPermissionsByUIDRaw(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling updateDashboardPermissionsByUID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateDashboardPermissionsByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/permissions`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateDashboardACLCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * This operation will remove existing permissions if they’re not included in the request.\n     * Updates permissions for a dashboard.\n     */\n    async updateDashboardPermissionsByUID(requestParameters: DashboardPermissionsApiUpdateDashboardPermissionsByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateDashboardPermissionsByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AnnotationEvent,\n  DashboardFullWithMeta,\n  PublicDashboard,\n  PublicDashboardDTO,\n  PublicDashboardListResponseWithPagination,\n  PublicError,\n  QueryDataResponse,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    AnnotationEventFromJSON,\n    AnnotationEventToJSON,\n    DashboardFullWithMetaFromJSON,\n    DashboardFullWithMetaToJSON,\n    PublicDashboardFromJSON,\n    PublicDashboardToJSON,\n    PublicDashboardDTOFromJSON,\n    PublicDashboardDTOToJSON,\n    PublicDashboardListResponseWithPaginationFromJSON,\n    PublicDashboardListResponseWithPaginationToJSON,\n    PublicErrorFromJSON,\n    PublicErrorToJSON,\n    QueryDataResponseFromJSON,\n    QueryDataResponseToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface DashboardPublicApiCreatePublicDashboardRequest {\n    dashboardUid: string;\n    body: PublicDashboardDTO;\n}\n\nexport interface DashboardPublicApiDeletePublicDashboardRequest {\n    dashboardUid: string;\n    uid: string;\n}\n\nexport interface DashboardPublicApiGetPublicAnnotationsRequest {\n    accessToken: string;\n}\n\nexport interface DashboardPublicApiGetPublicDashboardRequest {\n    dashboardUid: string;\n}\n\nexport interface DashboardPublicApiQueryPublicDashboardRequest {\n    accessToken: string;\n    panelId: number;\n}\n\nexport interface DashboardPublicApiUpdatePublicDashboardRequest {\n    dashboardUid: string;\n    uid: string;\n    body: PublicDashboardDTO;\n}\n\nexport interface DashboardPublicApiViewPublicDashboardRequest {\n    accessToken: string;\n}\n\n/**\n * \n */\nexport class DashboardPublicApi extends runtime.BaseAPI {\n\n    /**\n     * Create public dashboard for a dashboard\n     */\n    async createPublicDashboardRaw(requestParameters: DashboardPublicApiCreatePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicDashboard>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling createPublicDashboard().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createPublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{dashboardUid}/public-dashboards`.replace(`{${\"dashboardUid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PublicDashboardDTOToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PublicDashboardFromJSON(jsonValue));\n    }\n\n    /**\n     * Create public dashboard for a dashboard\n     */\n    async createPublicDashboard(requestParameters: DashboardPublicApiCreatePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicDashboard> {\n        const response = await this.createPublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete public dashboard for a dashboard\n     */\n    async deletePublicDashboardRaw(requestParameters: DashboardPublicApiDeletePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling deletePublicDashboard().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deletePublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{dashboardUid}/public-dashboards/{uid}`.replace(`{${\"dashboardUid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete public dashboard for a dashboard\n     */\n    async deletePublicDashboard(requestParameters: DashboardPublicApiDeletePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deletePublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get annotations for a public dashboard\n     */\n    async getPublicAnnotationsRaw(requestParameters: DashboardPublicApiGetPublicAnnotationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<AnnotationEvent>>> {\n        if (requestParameters['accessToken'] == null) {\n            throw new runtime.RequiredError(\n                'accessToken',\n                'Required parameter \"accessToken\" was null or undefined when calling getPublicAnnotations().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/public/dashboards/{accessToken}/annotations`.replace(`{${\"accessToken\"}}`, encodeURIComponent(String(requestParameters['accessToken']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(AnnotationEventFromJSON));\n    }\n\n    /**\n     * Get annotations for a public dashboard\n     */\n    async getPublicAnnotations(requestParameters: DashboardPublicApiGetPublicAnnotationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<AnnotationEvent>> {\n        const response = await this.getPublicAnnotationsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get public dashboard by dashboardUid\n     */\n    async getPublicDashboardRaw(requestParameters: DashboardPublicApiGetPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicDashboard>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling getPublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{dashboardUid}/public-dashboards`.replace(`{${\"dashboardUid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PublicDashboardFromJSON(jsonValue));\n    }\n\n    /**\n     * Get public dashboard by dashboardUid\n     */\n    async getPublicDashboard(requestParameters: DashboardPublicApiGetPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicDashboard> {\n        const response = await this.getPublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get list of public dashboards\n     */\n    async listPublicDashboardsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicDashboardListResponseWithPagination>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/public-dashboards`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PublicDashboardListResponseWithPaginationFromJSON(jsonValue));\n    }\n\n    /**\n     * Get list of public dashboards\n     */\n    async listPublicDashboards(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicDashboardListResponseWithPagination> {\n        const response = await this.listPublicDashboardsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get results for a given panel on a public dashboard\n     */\n    async queryPublicDashboardRaw(requestParameters: DashboardPublicApiQueryPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryDataResponse>> {\n        if (requestParameters['accessToken'] == null) {\n            throw new runtime.RequiredError(\n                'accessToken',\n                'Required parameter \"accessToken\" was null or undefined when calling queryPublicDashboard().'\n            );\n        }\n\n        if (requestParameters['panelId'] == null) {\n            throw new runtime.RequiredError(\n                'panelId',\n                'Required parameter \"panelId\" was null or undefined when calling queryPublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/public/dashboards/{accessToken}/panels/{panelId}/query`.replace(`{${\"accessToken\"}}`, encodeURIComponent(String(requestParameters['accessToken']))).replace(`{${\"panelId\"}}`, encodeURIComponent(String(requestParameters['panelId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryDataResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Get results for a given panel on a public dashboard\n     */\n    async queryPublicDashboard(requestParameters: DashboardPublicApiQueryPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryDataResponse> {\n        const response = await this.queryPublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update public dashboard for a dashboard\n     */\n    async updatePublicDashboardRaw(requestParameters: DashboardPublicApiUpdatePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicDashboard>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling updatePublicDashboard().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling updatePublicDashboard().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updatePublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{dashboardUid}/public-dashboards/{uid}`.replace(`{${\"dashboardUid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PublicDashboardDTOToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PublicDashboardFromJSON(jsonValue));\n    }\n\n    /**\n     * Update public dashboard for a dashboard\n     */\n    async updatePublicDashboard(requestParameters: DashboardPublicApiUpdatePublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicDashboard> {\n        const response = await this.updatePublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get public dashboard for view\n     */\n    async viewPublicDashboardRaw(requestParameters: DashboardPublicApiViewPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardFullWithMeta>> {\n        if (requestParameters['accessToken'] == null) {\n            throw new runtime.RequiredError(\n                'accessToken',\n                'Required parameter \"accessToken\" was null or undefined when calling viewPublicDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/public/dashboards/{accessToken}`.replace(`{${\"accessToken\"}}`, encodeURIComponent(String(requestParameters['accessToken']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardFullWithMetaFromJSON(jsonValue));\n    }\n\n    /**\n     * Get public dashboard for view\n     */\n    async viewPublicDashboard(requestParameters: DashboardPublicApiViewPublicDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardFullWithMeta> {\n        const response = await this.viewPublicDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  DashboardVersionMeta,\n  ErrorResponseBody,\n  PostDashboard200Response,\n  RestoreDashboardVersionCommand,\n} from '../models/index';\nimport {\n    DashboardVersionMetaFromJSON,\n    DashboardVersionMetaToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PostDashboard200ResponseFromJSON,\n    PostDashboard200ResponseToJSON,\n    RestoreDashboardVersionCommandFromJSON,\n    RestoreDashboardVersionCommandToJSON,\n} from '../models/index';\n\nexport interface DashboardVersionsApiGetDashboardVersionByIDRequest {\n    dashboardID: number;\n    dashboardVersionID: number;\n}\n\nexport interface DashboardVersionsApiGetDashboardVersionByUIDRequest {\n    dashboardVersionID: number;\n    uid: string;\n}\n\nexport interface DashboardVersionsApiGetDashboardVersionsByIDRequest {\n    dashboardID: number;\n}\n\nexport interface DashboardVersionsApiGetDashboardVersionsByUIDRequest {\n    uid: string;\n    limit?: number;\n    start?: number;\n}\n\nexport interface DashboardVersionsApiRestoreDashboardVersionByIDRequest {\n    dashboardID: number;\n    body: RestoreDashboardVersionCommand;\n}\n\nexport interface DashboardVersionsApiRestoreDashboardVersionByUIDRequest {\n    uid: string;\n    body: RestoreDashboardVersionCommand;\n}\n\n/**\n * \n */\nexport class DashboardVersionsApi extends runtime.BaseAPI {\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionByUID) instead\n     * Get a specific dashboard version.\n     * @deprecated\n     */\n    async getDashboardVersionByIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardVersionMeta>> {\n        if (requestParameters['dashboardID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardID',\n                'Required parameter \"dashboardID\" was null or undefined when calling getDashboardVersionByID().'\n            );\n        }\n\n        if (requestParameters['dashboardVersionID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardVersionID',\n                'Required parameter \"dashboardVersionID\" was null or undefined when calling getDashboardVersionByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/id/{DashboardID}/versions/{DashboardVersionID}`.replace(`{${\"DashboardID\"}}`, encodeURIComponent(String(requestParameters['dashboardID']))).replace(`{${\"DashboardVersionID\"}}`, encodeURIComponent(String(requestParameters['dashboardVersionID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardVersionMetaFromJSON(jsonValue));\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionByUID) instead\n     * Get a specific dashboard version.\n     * @deprecated\n     */\n    async getDashboardVersionByID(requestParameters: DashboardVersionsApiGetDashboardVersionByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardVersionMeta> {\n        const response = await this.getDashboardVersionByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a specific dashboard version using UID.\n     */\n    async getDashboardVersionByUIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardVersionMeta>> {\n        if (requestParameters['dashboardVersionID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardVersionID',\n                'Required parameter \"dashboardVersionID\" was null or undefined when calling getDashboardVersionByUID().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getDashboardVersionByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/versions/{DashboardVersionID}`.replace(`{${\"DashboardVersionID\"}}`, encodeURIComponent(String(requestParameters['dashboardVersionID']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardVersionMetaFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a specific dashboard version using UID.\n     */\n    async getDashboardVersionByUID(requestParameters: DashboardVersionsApiGetDashboardVersionByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardVersionMeta> {\n        const response = await this.getDashboardVersionByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionsByUID) instead\n     * Gets all existing versions for the dashboard.\n     * @deprecated\n     */\n    async getDashboardVersionsByIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionsByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardVersionMeta>>> {\n        if (requestParameters['dashboardID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardID',\n                'Required parameter \"dashboardID\" was null or undefined when calling getDashboardVersionsByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/id/{DashboardID}/versions`.replace(`{${\"DashboardID\"}}`, encodeURIComponent(String(requestParameters['dashboardID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardVersionMetaFromJSON));\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/getDashboardVersionsByUID) instead\n     * Gets all existing versions for the dashboard.\n     * @deprecated\n     */\n    async getDashboardVersionsByID(requestParameters: DashboardVersionsApiGetDashboardVersionsByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardVersionMeta>> {\n        const response = await this.getDashboardVersionsByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all existing versions for the dashboard using UID.\n     */\n    async getDashboardVersionsByUIDRaw(requestParameters: DashboardVersionsApiGetDashboardVersionsByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardVersionMeta>>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getDashboardVersionsByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['start'] != null) {\n            queryParameters['start'] = requestParameters['start'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/versions`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardVersionMetaFromJSON));\n    }\n\n    /**\n     * Gets all existing versions for the dashboard using UID.\n     */\n    async getDashboardVersionsByUID(requestParameters: DashboardVersionsApiGetDashboardVersionsByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardVersionMeta>> {\n        const response = await this.getDashboardVersionsByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/restoreDashboardVersionByUID) instead\n     * Restore a dashboard to a given dashboard version.\n     * @deprecated\n     */\n    async restoreDashboardVersionByIDRaw(requestParameters: DashboardVersionsApiRestoreDashboardVersionByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostDashboard200Response>> {\n        if (requestParameters['dashboardID'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardID',\n                'Required parameter \"dashboardID\" was null or undefined when calling restoreDashboardVersionByID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling restoreDashboardVersionByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/id/{DashboardID}/restore`.replace(`{${\"DashboardID\"}}`, encodeURIComponent(String(requestParameters['dashboardID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RestoreDashboardVersionCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostDashboard200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Please refer to [updated API](#/dashboard_versions/restoreDashboardVersionByUID) instead\n     * Restore a dashboard to a given dashboard version.\n     * @deprecated\n     */\n    async restoreDashboardVersionByID(requestParameters: DashboardVersionsApiRestoreDashboardVersionByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostDashboard200Response> {\n        const response = await this.restoreDashboardVersionByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Restore a dashboard to a given dashboard version using UID.\n     */\n    async restoreDashboardVersionByUIDRaw(requestParameters: DashboardVersionsApiRestoreDashboardVersionByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostDashboard200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling restoreDashboardVersionByUID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling restoreDashboardVersionByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/restore`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RestoreDashboardVersionCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostDashboard200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Restore a dashboard to a given dashboard version using UID.\n     */\n    async restoreDashboardVersionByUID(requestParameters: DashboardVersionsApiRestoreDashboardVersionByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostDashboard200Response> {\n        const response = await this.restoreDashboardVersionByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CalculateDashboardDiffRequest,\n  DashboardFullWithMeta,\n  DashboardTagCloudItem,\n  DeleteDashboardByUID200Response,\n  ErrorResponseBody,\n  GetHomeDashboardResponse,\n  ImportDashboardRequest,\n  ImportDashboardResponse,\n  PostDashboard200Response,\n  RestoreDeletedDashboardCommand,\n  SaveDashboardCommand,\n} from '../models/index';\nimport {\n    CalculateDashboardDiffRequestFromJSON,\n    CalculateDashboardDiffRequestToJSON,\n    DashboardFullWithMetaFromJSON,\n    DashboardFullWithMetaToJSON,\n    DashboardTagCloudItemFromJSON,\n    DashboardTagCloudItemToJSON,\n    DeleteDashboardByUID200ResponseFromJSON,\n    DeleteDashboardByUID200ResponseToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    GetHomeDashboardResponseFromJSON,\n    GetHomeDashboardResponseToJSON,\n    ImportDashboardRequestFromJSON,\n    ImportDashboardRequestToJSON,\n    ImportDashboardResponseFromJSON,\n    ImportDashboardResponseToJSON,\n    PostDashboard200ResponseFromJSON,\n    PostDashboard200ResponseToJSON,\n    RestoreDeletedDashboardCommandFromJSON,\n    RestoreDeletedDashboardCommandToJSON,\n    SaveDashboardCommandFromJSON,\n    SaveDashboardCommandToJSON,\n} from '../models/index';\n\nexport interface DashboardsApiCalculateDashboardDiffOperationRequest {\n    body: CalculateDashboardDiffRequest;\n}\n\nexport interface DashboardsApiDeleteDashboardByUIDRequest {\n    uid: string;\n}\n\nexport interface DashboardsApiGetDashboardByUIDRequest {\n    uid: string;\n}\n\nexport interface DashboardsApiHardDeleteDashboardByUIDRequest {\n    uid: string;\n}\n\nexport interface DashboardsApiImportDashboardOperationRequest {\n    body: ImportDashboardRequest;\n}\n\nexport interface DashboardsApiPostDashboardRequest {\n    body: SaveDashboardCommand;\n}\n\nexport interface DashboardsApiRestoreDeletedDashboardByUIDRequest {\n    uid: string;\n    body: RestoreDeletedDashboardCommand;\n}\n\n/**\n * \n */\nexport class DashboardsApi extends runtime.BaseAPI {\n\n    /**\n     * Perform diff on two dashboards.\n     */\n    async calculateDashboardDiffRaw(requestParameters: DashboardsApiCalculateDashboardDiffOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling calculateDashboardDiff().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/calculate-diff`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CalculateDashboardDiffRequestToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Perform diff on two dashboards.\n     */\n    async calculateDashboardDiff(requestParameters: DashboardsApiCalculateDashboardDiffOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.calculateDashboardDiffRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Will delete the dashboard given the specified unique identifier (uid).\n     * Delete dashboard by uid.\n     */\n    async deleteDashboardByUIDRaw(requestParameters: DashboardsApiDeleteDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteDashboardByUID200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deleteDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteDashboardByUID200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Will delete the dashboard given the specified unique identifier (uid).\n     * Delete dashboard by uid.\n     */\n    async deleteDashboardByUID(requestParameters: DashboardsApiDeleteDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteDashboardByUID200Response> {\n        const response = await this.deleteDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Will return the dashboard given the dashboard unique identifier (uid).\n     * Get dashboard by uid.\n     */\n    async getDashboardByUIDRaw(requestParameters: DashboardsApiGetDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardFullWithMeta>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardFullWithMetaFromJSON(jsonValue));\n    }\n\n    /**\n     * Will return the dashboard given the dashboard unique identifier (uid).\n     * Get dashboard by uid.\n     */\n    async getDashboardByUID(requestParameters: DashboardsApiGetDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardFullWithMeta> {\n        const response = await this.getDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get all dashboards tags of an organisation.\n     */\n    async getDashboardTagsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardTagCloudItem>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/tags`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardTagCloudItemFromJSON));\n    }\n\n    /**\n     * Get all dashboards tags of an organisation.\n     */\n    async getDashboardTags(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardTagCloudItem>> {\n        const response = await this.getDashboardTagsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get home dashboard.\n     */\n    async getHomeDashboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetHomeDashboardResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/home`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetHomeDashboardResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Get home dashboard.\n     */\n    async getHomeDashboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetHomeDashboardResponse> {\n        const response = await this.getHomeDashboardRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Will delete the dashboard given the specified unique identifier (uid).\n     * Hard delete dashboard by uid.\n     */\n    async hardDeleteDashboardByUIDRaw(requestParameters: DashboardsApiHardDeleteDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteDashboardByUID200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling hardDeleteDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/trash`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteDashboardByUID200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Will delete the dashboard given the specified unique identifier (uid).\n     * Hard delete dashboard by uid.\n     */\n    async hardDeleteDashboardByUID(requestParameters: DashboardsApiHardDeleteDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteDashboardByUID200Response> {\n        const response = await this.hardDeleteDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Import dashboard.\n     */\n    async importDashboardRaw(requestParameters: DashboardsApiImportDashboardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImportDashboardResponse>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling importDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/import`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ImportDashboardRequestToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ImportDashboardResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Import dashboard.\n     */\n    async importDashboard(requestParameters: DashboardsApiImportDashboardOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImportDashboardResponse> {\n        const response = await this.importDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Creates a new dashboard or updates an existing dashboard. Note: This endpoint is not intended for creating folders, use `POST /api/folders` for that.\n     * Create / Update dashboard\n     */\n    async postDashboardRaw(requestParameters: DashboardsApiPostDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostDashboard200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/db`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SaveDashboardCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostDashboard200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates a new dashboard or updates an existing dashboard. Note: This endpoint is not intended for creating folders, use `POST /api/folders` for that.\n     * Create / Update dashboard\n     */\n    async postDashboard(requestParameters: DashboardsApiPostDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostDashboard200Response> {\n        const response = await this.postDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Restore a dashboard to a given dashboard version using UID.\n     */\n    async restoreDeletedDashboardByUIDRaw(requestParameters: DashboardsApiRestoreDeletedDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostDashboard200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling restoreDeletedDashboardByUID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling restoreDeletedDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboards/uid/{uid}/trash`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RestoreDeletedDashboardCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PostDashboard200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Restore a dashboard to a given dashboard version using UID.\n     */\n    async restoreDeletedDashboardByUID(requestParameters: DashboardsApiRestoreDeletedDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostDashboard200Response> {\n        const response = await this.restoreDeletedDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddDataSource200Response,\n  AddDataSourceCommand,\n  DataSource,\n  DataSourceListItemDTO,\n  DeleteDataSourceByName200Response,\n  ErrorResponseBody,\n  GetDataSourceIdByName200Response,\n  SuccessResponseBody,\n  UpdateDataSourceCommand,\n} from '../models/index';\nimport {\n    AddDataSource200ResponseFromJSON,\n    AddDataSource200ResponseToJSON,\n    AddDataSourceCommandFromJSON,\n    AddDataSourceCommandToJSON,\n    DataSourceFromJSON,\n    DataSourceToJSON,\n    DataSourceListItemDTOFromJSON,\n    DataSourceListItemDTOToJSON,\n    DeleteDataSourceByName200ResponseFromJSON,\n    DeleteDataSourceByName200ResponseToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    GetDataSourceIdByName200ResponseFromJSON,\n    GetDataSourceIdByName200ResponseToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateDataSourceCommandFromJSON,\n    UpdateDataSourceCommandToJSON,\n} from '../models/index';\n\nexport interface DatasourcesApiAddDataSourceRequest {\n    body: AddDataSourceCommand;\n}\n\nexport interface DatasourcesApiCallDatasourceResourceByIDRequest {\n    datasourceProxyRoute: string;\n    id: string;\n}\n\nexport interface DatasourcesApiCallDatasourceResourceWithUIDRequest {\n    datasourceProxyRoute: string;\n    uid: string;\n}\n\nexport interface DatasourcesApiCheckDatasourceHealthByIDRequest {\n    id: string;\n}\n\nexport interface DatasourcesApiCheckDatasourceHealthWithUIDRequest {\n    uid: string;\n}\n\nexport interface DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest {\n    uid: string;\n    datasourceProxyRoute: string;\n}\n\nexport interface DatasourcesApiDatasourceProxyDELETEcallsRequest {\n    id: string;\n    datasourceProxyRoute: string;\n}\n\nexport interface DatasourcesApiDatasourceProxyGETByUIDcallsRequest {\n    datasourceProxyRoute: string;\n    uid: string;\n}\n\nexport interface DatasourcesApiDatasourceProxyGETcallsRequest {\n    datasourceProxyRoute: string;\n    id: string;\n}\n\nexport interface DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest {\n    datasourceProxyRoute: string;\n    uid: string;\n    datasourceProxyParam: object;\n}\n\nexport interface DatasourcesApiDatasourceProxyPOSTcallsRequest {\n    datasourceProxyRoute: string;\n    id: string;\n    datasourceProxyParam: object;\n}\n\nexport interface DatasourcesApiDeleteDataSourceByIDRequest {\n    id: string;\n}\n\nexport interface DatasourcesApiDeleteDataSourceByNameRequest {\n    name: string;\n}\n\nexport interface DatasourcesApiDeleteDataSourceByUIDRequest {\n    uid: string;\n}\n\nexport interface DatasourcesApiGetDataSourceByIDRequest {\n    id: string;\n}\n\nexport interface DatasourcesApiGetDataSourceByNameRequest {\n    name: string;\n}\n\nexport interface DatasourcesApiGetDataSourceByUIDRequest {\n    uid: string;\n}\n\nexport interface DatasourcesApiGetDataSourceIdByNameRequest {\n    name: string;\n}\n\nexport interface DatasourcesApiUpdateDataSourceByIDRequest {\n    id: string;\n    body: UpdateDataSourceCommand;\n}\n\nexport interface DatasourcesApiUpdateDataSourceByUIDRequest {\n    uid: string;\n    body: UpdateDataSourceCommand;\n}\n\n/**\n * \n */\nexport class DatasourcesApi extends runtime.BaseAPI {\n\n    /**\n     * By defining `password` and `basicAuthPassword` under secureJsonData property Grafana encrypts them securely as an encrypted blob in the database. The response then lists the encrypted fields under secureJsonFields.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:create`\n     * Create a data source.\n     */\n    async addDataSourceRaw(requestParameters: DatasourcesApiAddDataSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddDataSource200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addDataSource().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddDataSourceCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddDataSource200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * By defining `password` and `basicAuthPassword` under secureJsonData property Grafana encrypts them securely as an encrypted blob in the database. The response then lists the encrypted fields under secureJsonFields.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:create`\n     * Create a data source.\n     */\n    async addDataSource(requestParameters: DatasourcesApiAddDataSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddDataSource200Response> {\n        const response = await this.addDataSourceRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Please refer to [updated API](#/datasources/callDatasourceResourceWithUID) instead\n     * Fetch data source resources by Id.\n     * @deprecated\n     */\n    async callDatasourceResourceByIDRaw(requestParameters: DatasourcesApiCallDatasourceResourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling callDatasourceResourceByID().'\n            );\n        }\n\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling callDatasourceResourceByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{id}/resources/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Please refer to [updated API](#/datasources/callDatasourceResourceWithUID) instead\n     * Fetch data source resources by Id.\n     * @deprecated\n     */\n    async callDatasourceResourceByID(requestParameters: DatasourcesApiCallDatasourceResourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.callDatasourceResourceByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Fetch data source resources.\n     */\n    async callDatasourceResourceWithUIDRaw(requestParameters: DatasourcesApiCallDatasourceResourceWithUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling callDatasourceResourceWithUID().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling callDatasourceResourceWithUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}/resources/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch data source resources.\n     */\n    async callDatasourceResourceWithUID(requestParameters: DatasourcesApiCallDatasourceResourceWithUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.callDatasourceResourceWithUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Please refer to [updated API](#/datasources/checkDatasourceHealthWithUID) instead\n     * Sends a health check request to the plugin datasource identified by the ID.\n     * @deprecated\n     */\n    async checkDatasourceHealthByIDRaw(requestParameters: DatasourcesApiCheckDatasourceHealthByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling checkDatasourceHealthByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{id}/health`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Please refer to [updated API](#/datasources/checkDatasourceHealthWithUID) instead\n     * Sends a health check request to the plugin datasource identified by the ID.\n     * @deprecated\n     */\n    async checkDatasourceHealthByID(requestParameters: DatasourcesApiCheckDatasourceHealthByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.checkDatasourceHealthByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Sends a health check request to the plugin datasource identified by the UID.\n     */\n    async checkDatasourceHealthWithUIDRaw(requestParameters: DatasourcesApiCheckDatasourceHealthWithUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling checkDatasourceHealthWithUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}/health`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Sends a health check request to the plugin datasource identified by the UID.\n     */\n    async checkDatasourceHealthWithUID(requestParameters: DatasourcesApiCheckDatasourceHealthWithUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.checkDatasourceHealthWithUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Proxies all calls to the actual data source.\n     * Data source proxy DELETE calls.\n     */\n    async datasourceProxyDELETEByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling datasourceProxyDELETEByUIDcalls().'\n            );\n        }\n\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyDELETEByUIDcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/uid/{uid}/{datasource_proxy_route}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))).replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.\n     * Data source proxy DELETE calls.\n     */\n    async datasourceProxyDELETEByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyDELETEByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyDELETEByUIDcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyDELETEByUIDcalls) instead\n     * Data source proxy DELETE calls.\n     * @deprecated\n     */\n    async datasourceProxyDELETEcallsRaw(requestParameters: DatasourcesApiDatasourceProxyDELETEcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling datasourceProxyDELETEcalls().'\n            );\n        }\n\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyDELETEcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/{id}/{datasource_proxy_route}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))).replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyDELETEByUIDcalls) instead\n     * Data source proxy DELETE calls.\n     * @deprecated\n     */\n    async datasourceProxyDELETEcalls(requestParameters: DatasourcesApiDatasourceProxyDELETEcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyDELETEcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.\n     * Data source proxy GET calls.\n     */\n    async datasourceProxyGETByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyGETByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyGETByUIDcalls().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling datasourceProxyGETByUIDcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/uid/{uid}/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.\n     * Data source proxy GET calls.\n     */\n    async datasourceProxyGETByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyGETByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyGETByUIDcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyGETByUIDcalls) instead\n     * Data source proxy GET calls.\n     * @deprecated\n     */\n    async datasourceProxyGETcallsRaw(requestParameters: DatasourcesApiDatasourceProxyGETcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyGETcalls().'\n            );\n        }\n\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling datasourceProxyGETcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/{id}/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source.  Please refer to [updated API](#/datasources/datasourceProxyGETByUIDcalls) instead\n     * Data source proxy GET calls.\n     * @deprecated\n     */\n    async datasourceProxyGETcalls(requestParameters: DatasourcesApiDatasourceProxyGETcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyGETcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined\n     * Data source proxy POST calls.\n     */\n    async datasourceProxyPOSTByUIDcallsRaw(requestParameters: DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyPOSTByUIDcalls().'\n            );\n        }\n\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling datasourceProxyPOSTByUIDcalls().'\n            );\n        }\n\n        if (requestParameters['datasourceProxyParam'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyParam',\n                'Required parameter \"datasourceProxyParam\" was null or undefined when calling datasourceProxyPOSTByUIDcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/uid/{uid}/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters['datasourceProxyParam'] as any,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined\n     * Data source proxy POST calls.\n     */\n    async datasourceProxyPOSTByUIDcalls(requestParameters: DatasourcesApiDatasourceProxyPOSTByUIDcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyPOSTByUIDcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined  Please refer to [updated API](#/datasources/datasourceProxyPOSTByUIDcalls) instead\n     * Data source proxy POST calls.\n     * @deprecated\n     */\n    async datasourceProxyPOSTcallsRaw(requestParameters: DatasourcesApiDatasourceProxyPOSTcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['datasourceProxyRoute'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyRoute',\n                'Required parameter \"datasourceProxyRoute\" was null or undefined when calling datasourceProxyPOSTcalls().'\n            );\n        }\n\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling datasourceProxyPOSTcalls().'\n            );\n        }\n\n        if (requestParameters['datasourceProxyParam'] == null) {\n            throw new runtime.RequiredError(\n                'datasourceProxyParam',\n                'Required parameter \"datasourceProxyParam\" was null or undefined when calling datasourceProxyPOSTcalls().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/proxy/{id}/{datasource_proxy_route}`.replace(`{${\"datasource_proxy_route\"}}`, encodeURIComponent(String(requestParameters['datasourceProxyRoute']))).replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters['datasourceProxyParam'] as any,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined  Please refer to [updated API](#/datasources/datasourceProxyPOSTByUIDcalls) instead\n     * Data source proxy POST calls.\n     * @deprecated\n     */\n    async datasourceProxyPOSTcalls(requestParameters: DatasourcesApiDatasourceProxyPOSTcallsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.datasourceProxyPOSTcallsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/deleteDataSourceByUID) instead\n     * Delete an existing data source by id.\n     * @deprecated\n     */\n    async deleteDataSourceByIDRaw(requestParameters: DatasourcesApiDeleteDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling deleteDataSourceByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/deleteDataSourceByUID) instead\n     * Delete an existing data source by id.\n     * @deprecated\n     */\n    async deleteDataSourceByID(requestParameters: DatasourcesApiDeleteDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteDataSourceByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Delete an existing data source by name.\n     */\n    async deleteDataSourceByNameRaw(requestParameters: DatasourcesApiDeleteDataSourceByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteDataSourceByName200Response>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling deleteDataSourceByName().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/name/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteDataSourceByName200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Delete an existing data source by name.\n     */\n    async deleteDataSourceByName(requestParameters: DatasourcesApiDeleteDataSourceByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteDataSourceByName200Response> {\n        const response = await this.deleteDataSourceByNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\n     * Delete an existing data source by UID.\n     */\n    async deleteDataSourceByUIDRaw(requestParameters: DatasourcesApiDeleteDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deleteDataSourceByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\n     * Delete an existing data source by UID.\n     */\n    async deleteDataSourceByUID(requestParameters: DatasourcesApiDeleteDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteDataSourceByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/getDataSourceByUID) instead\n     * Get a single data source by Id.\n     * @deprecated\n     */\n    async getDataSourceByIDRaw(requestParameters: DatasourcesApiGetDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DataSource>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling getDataSourceByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DataSourceFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/getDataSourceByUID) instead\n     * Get a single data source by Id.\n     * @deprecated\n     */\n    async getDataSourceByID(requestParameters: DatasourcesApiGetDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DataSource> {\n        const response = await this.getDataSourceByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Get a single data source by Name.\n     */\n    async getDataSourceByNameRaw(requestParameters: DatasourcesApiGetDataSourceByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DataSource>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling getDataSourceByName().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/name/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DataSourceFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Get a single data source by Name.\n     */\n    async getDataSourceByName(requestParameters: DatasourcesApiGetDataSourceByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DataSource> {\n        const response = await this.getDataSourceByNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\n     * Get a single data source by UID.\n     */\n    async getDataSourceByUIDRaw(requestParameters: DatasourcesApiGetDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DataSource>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getDataSourceByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DataSourceFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\n     * Get a single data source by UID.\n     */\n    async getDataSourceByUID(requestParameters: DatasourcesApiGetDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DataSource> {\n        const response = await this.getDataSourceByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Get data source Id by Name.\n     */\n    async getDataSourceIdByNameRaw(requestParameters: DatasourcesApiGetDataSourceIdByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetDataSourceIdByName200Response>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling getDataSourceIdByName().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/id/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetDataSourceIdByName200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\n     * Get data source Id by Name.\n     */\n    async getDataSourceIdByName(requestParameters: DatasourcesApiGetDataSourceIdByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetDataSourceIdByName200Response> {\n        const response = await this.getDataSourceIdByNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scope: `datasources:*`.\n     * Get all data sources.\n     */\n    async getDataSourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DataSourceListItemDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DataSourceListItemDTOFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:read` and scope: `datasources:*`.\n     * Get all data sources.\n     */\n    async getDataSources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DataSourceListItemDTO>> {\n        const response = await this.getDataSourcesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/updateDataSourceByUID) instead\n     * Update an existing data source by its sequential ID.\n     * @deprecated\n     */\n    async updateDataSourceByIDRaw(requestParameters: DatasourcesApiUpdateDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddDataSource200Response>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling updateDataSourceByID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateDataSourceByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateDataSourceCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddDataSource200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).  Please refer to [updated API](#/datasources/updateDataSourceByUID) instead\n     * Update an existing data source by its sequential ID.\n     * @deprecated\n     */\n    async updateDataSourceByID(requestParameters: DatasourcesApiUpdateDataSourceByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddDataSource200Response> {\n        const response = await this.updateDataSourceByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:1` (single data source).\n     * Update an existing data source.\n     */\n    async updateDataSourceByUIDRaw(requestParameters: DatasourcesApiUpdateDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AddDataSource200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling updateDataSourceByUID().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateDataSourceByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateDataSourceCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AddDataSource200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Similar to creating a data source, `password` and `basicAuthPassword` should be defined under secureJsonData in order to be stored securely as an encrypted blob in the database. Then, the encrypted fields are listed under secureJsonFields section in the response.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:1` (single data source).\n     * Update an existing data source.\n     */\n    async updateDataSourceByUID(requestParameters: DatasourcesApiUpdateDataSourceByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AddDataSource200Response> {\n        const response = await this.updateDataSourceByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  DeviceDTO,\n  ErrorResponseBody,\n  SearchDeviceQueryResult,\n} from '../models/index';\nimport {\n    DeviceDTOFromJSON,\n    DeviceDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SearchDeviceQueryResultFromJSON,\n    SearchDeviceQueryResultToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class DevicesApi extends runtime.BaseAPI {\n\n    /**\n     * Lists all devices within the last 30 days\n     */\n    async listDevicesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DeviceDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DeviceDTOFromJSON));\n    }\n\n    /**\n     * Lists all devices within the last 30 days\n     */\n    async listDevices(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DeviceDTO>> {\n        const response = await this.listDevicesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists all devices within the last 30 days\n     */\n    async searchDevicesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchDeviceQueryResult>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchDeviceQueryResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Lists all devices within the last 30 days\n     */\n    async searchDevices(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchDeviceQueryResult> {\n        const response = await this.searchDevicesRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  MetricRequest,\n  QueryDataResponse,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    MetricRequestFromJSON,\n    MetricRequestToJSON,\n    QueryDataResponseFromJSON,\n    QueryDataResponseToJSON,\n} from '../models/index';\n\nexport interface DsApiQueryMetricsWithExpressionsRequest {\n    body: MetricRequest;\n}\n\n/**\n * \n */\nexport class DsApi extends runtime.BaseAPI {\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:query`.\n     * DataSource query metrics with expressions.\n     */\n    async queryMetricsWithExpressionsRaw(requestParameters: DsApiQueryMetricsWithExpressionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryDataResponse>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling queryMetricsWithExpressions().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/ds/query`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MetricRequestToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryDataResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `datasources:query`.\n     * DataSource query metrics with expressions.\n     */\n    async queryMetricsWithExpressions(requestParameters: DsApiQueryMetricsWithExpressionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryDataResponse> {\n        const response = await this.queryMetricsWithExpressionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ActiveSyncStatusDTO,\n  ActiveUserStats,\n  AddTeamRoleCommand,\n  AddUserRoleCommand,\n  CacheConfigResponse,\n  CacheConfigSetter,\n  CreateOrUpdateReport,\n  CreateReport200Response,\n  CreateRoleForm,\n  DeleteTokenCommand,\n  ErrorResponseBody,\n  PrometheusRemoteWriteTargetJSON,\n  RecordingRuleJSON,\n  Report,\n  ReportEmail,\n  ReportSettings,\n  RoleAssignmentsDTO,\n  RoleDTO,\n  RolesSearchQuery,\n  SearchResult,\n  SetRoleAssignmentsCommand,\n  SetUserRolesCommand,\n  SuccessResponseBody,\n  TeamGroupDTO,\n  TeamGroupMapping,\n  TeamLBACRules,\n  Token,\n  UpdateRoleCommand,\n  UpdateTeamLBACCommand,\n  UpdateTeamLBACRulesApi200Response,\n} from '../models/index';\nimport {\n    ActiveSyncStatusDTOFromJSON,\n    ActiveSyncStatusDTOToJSON,\n    ActiveUserStatsFromJSON,\n    ActiveUserStatsToJSON,\n    AddTeamRoleCommandFromJSON,\n    AddTeamRoleCommandToJSON,\n    AddUserRoleCommandFromJSON,\n    AddUserRoleCommandToJSON,\n    CacheConfigResponseFromJSON,\n    CacheConfigResponseToJSON,\n    CacheConfigSetterFromJSON,\n    CacheConfigSetterToJSON,\n    CreateOrUpdateReportFromJSON,\n    CreateOrUpdateReportToJSON,\n    CreateReport200ResponseFromJSON,\n    CreateReport200ResponseToJSON,\n    CreateRoleFormFromJSON,\n    CreateRoleFormToJSON,\n    DeleteTokenCommandFromJSON,\n    DeleteTokenCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PrometheusRemoteWriteTargetJSONFromJSON,\n    PrometheusRemoteWriteTargetJSONToJSON,\n    RecordingRuleJSONFromJSON,\n    RecordingRuleJSONToJSON,\n    ReportFromJSON,\n    ReportToJSON,\n    ReportEmailFromJSON,\n    ReportEmailToJSON,\n    ReportSettingsFromJSON,\n    ReportSettingsToJSON,\n    RoleAssignmentsDTOFromJSON,\n    RoleAssignmentsDTOToJSON,\n    RoleDTOFromJSON,\n    RoleDTOToJSON,\n    RolesSearchQueryFromJSON,\n    RolesSearchQueryToJSON,\n    SearchResultFromJSON,\n    SearchResultToJSON,\n    SetRoleAssignmentsCommandFromJSON,\n    SetRoleAssignmentsCommandToJSON,\n    SetUserRolesCommandFromJSON,\n    SetUserRolesCommandToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TeamGroupDTOFromJSON,\n    TeamGroupDTOToJSON,\n    TeamGroupMappingFromJSON,\n    TeamGroupMappingToJSON,\n    TeamLBACRulesFromJSON,\n    TeamLBACRulesToJSON,\n    TokenFromJSON,\n    TokenToJSON,\n    UpdateRoleCommandFromJSON,\n    UpdateRoleCommandToJSON,\n    UpdateTeamLBACCommandFromJSON,\n    UpdateTeamLBACCommandToJSON,\n    UpdateTeamLBACRulesApi200ResponseFromJSON,\n    UpdateTeamLBACRulesApi200ResponseToJSON,\n} from '../models/index';\n\nexport interface EnterpriseApiAddTeamGroupApiRequest {\n    teamId: number;\n    body: TeamGroupMapping;\n}\n\nexport interface EnterpriseApiAddTeamRoleRequest {\n    teamId: number;\n    body: AddTeamRoleCommand;\n}\n\nexport interface EnterpriseApiAddUserRoleRequest {\n    userId: number;\n    body: AddUserRoleCommand;\n}\n\nexport interface EnterpriseApiCleanDataSourceCacheRequest {\n    dataSourceUID: string;\n}\n\nexport interface EnterpriseApiCreateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\nexport interface EnterpriseApiCreateRecordingRuleWriteTargetRequest {\n    body: PrometheusRemoteWriteTargetJSON;\n}\n\nexport interface EnterpriseApiCreateReportRequest {\n    body: CreateOrUpdateReport;\n}\n\nexport interface EnterpriseApiCreateRoleRequest {\n    body: CreateRoleForm;\n}\n\nexport interface EnterpriseApiDeleteLicenseTokenRequest {\n    body: DeleteTokenCommand;\n}\n\nexport interface EnterpriseApiDeleteRecordingRuleRequest {\n    recordingRuleID: number;\n}\n\nexport interface EnterpriseApiDeleteReportRequest {\n    id: number;\n}\n\nexport interface EnterpriseApiDeleteRoleRequest {\n    roleUID: string;\n    force?: boolean;\n    global?: boolean;\n}\n\nexport interface EnterpriseApiDisableDataSourceCacheRequest {\n    dataSourceUID: string;\n}\n\nexport interface EnterpriseApiEnableDataSourceCacheRequest {\n    dataSourceUID: string;\n}\n\nexport interface EnterpriseApiGetDataSourceCacheConfigRequest {\n    dataSourceUID: string;\n}\n\nexport interface EnterpriseApiGetReportRequest {\n    id: number;\n}\n\nexport interface EnterpriseApiGetRoleRequest {\n    roleUID: string;\n}\n\nexport interface EnterpriseApiGetRoleAssignmentsRequest {\n    roleUID: string;\n}\n\nexport interface EnterpriseApiGetTeamGroupsApiRequest {\n    teamId: number;\n}\n\nexport interface EnterpriseApiGetTeamLBACRulesApiRequest {\n    uid: string;\n}\n\nexport interface EnterpriseApiListRolesRequest {\n    delegatable?: boolean;\n    includeHidden?: boolean;\n}\n\nexport interface EnterpriseApiListTeamRolesRequest {\n    teamId: number;\n}\n\nexport interface EnterpriseApiListTeamsRolesRequest {\n    body: RolesSearchQuery;\n}\n\nexport interface EnterpriseApiListUserRolesRequest {\n    userId: number;\n}\n\nexport interface EnterpriseApiListUsersRolesRequest {\n    body: RolesSearchQuery;\n}\n\nexport interface EnterpriseApiPostACSRequest {\n    relayState?: string;\n}\n\nexport interface EnterpriseApiPostLicenseTokenRequest {\n    body: DeleteTokenCommand;\n}\n\nexport interface EnterpriseApiPostRenewLicenseTokenRequest {\n    body: object;\n}\n\nexport interface EnterpriseApiPostSLORequest {\n    sAMLRequest?: string;\n    sAMLResponse?: string;\n}\n\nexport interface EnterpriseApiRemoveTeamGroupApiQueryRequest {\n    teamId: number;\n    groupId?: string;\n}\n\nexport interface EnterpriseApiRemoveTeamRoleRequest {\n    roleUID: string;\n    teamId: number;\n}\n\nexport interface EnterpriseApiRemoveUserRoleRequest {\n    roleUID: string;\n    userId: number;\n    global?: boolean;\n}\n\nexport interface EnterpriseApiRenderReportCSVsRequest {\n    dashboards?: string;\n    title?: string;\n}\n\nexport interface EnterpriseApiRenderReportPDFsRequest {\n    dashboards?: string;\n    orientation?: string;\n    layout?: string;\n    title?: string;\n    scaleFactor?: string;\n    includeTables?: string;\n}\n\nexport interface EnterpriseApiSaveReportSettingsRequest {\n    body: ReportSettings;\n}\n\nexport interface EnterpriseApiSendReportRequest {\n    body: ReportEmail;\n}\n\nexport interface EnterpriseApiSendTestEmailRequest {\n    body: CreateOrUpdateReport;\n}\n\nexport interface EnterpriseApiSetDataSourceCacheConfigRequest {\n    dataSourceUID: string;\n    body: CacheConfigSetter;\n}\n\nexport interface EnterpriseApiSetRoleAssignmentsRequest {\n    roleUID: string;\n    body: SetRoleAssignmentsCommand;\n}\n\nexport interface EnterpriseApiSetTeamRolesRequest {\n    teamId: number;\n}\n\nexport interface EnterpriseApiSetUserRolesRequest {\n    userId: number;\n    body: SetUserRolesCommand;\n}\n\nexport interface EnterpriseApiTestCreateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\nexport interface EnterpriseApiUpdateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\nexport interface EnterpriseApiUpdateReportRequest {\n    id: number;\n    body: CreateOrUpdateReport;\n}\n\nexport interface EnterpriseApiUpdateRoleRequest {\n    roleUID: string;\n    body: UpdateRoleCommand;\n}\n\nexport interface EnterpriseApiUpdateTeamLBACRulesApiRequest {\n    uid: string;\n    body?: UpdateTeamLBACCommand;\n}\n\n/**\n * \n */\nexport class EnterpriseApi extends runtime.BaseAPI {\n\n    /**\n     * Add External Group.\n     */\n    async addTeamGroupApiRaw(requestParameters: EnterpriseApiAddTeamGroupApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling addTeamGroupApi().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addTeamGroupApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: TeamGroupMappingToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Add External Group.\n     */\n    async addTeamGroupApi(requestParameters: EnterpriseApiAddTeamGroupApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addTeamGroupApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.\n     * Add team role.\n     */\n    async addTeamRoleRaw(requestParameters: EnterpriseApiAddTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling addTeamRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addTeamRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddTeamRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.\n     * Add team role.\n     */\n    async addTeamRole(requestParameters: EnterpriseApiAddTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addTeamRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Add a user role assignment.\n     */\n    async addUserRoleRaw(requestParameters: EnterpriseApiAddUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling addUserRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addUserRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddUserRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Assign a role to a specific user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Add a user role assignment.\n     */\n    async addUserRole(requestParameters: EnterpriseApiAddUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addUserRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.\n     */\n    async adminProvisioningReloadAccessControlRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ErrorResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/provisioning/access-control/reload`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ErrorResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.\n     */\n    async adminProvisioningReloadAccessControl(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ErrorResponseBody> {\n        const response = await this.adminProvisioningReloadAccessControlRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * clean cache for a single data source\n     */\n    async cleanDataSourceCacheRaw(requestParameters: EnterpriseApiCleanDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CacheConfigResponse>> {\n        if (requestParameters['dataSourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'dataSourceUID',\n                'Required parameter \"dataSourceUID\" was null or undefined when calling cleanDataSourceCache().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{dataSourceUID}/cache/clean`.replace(`{${\"dataSourceUID\"}}`, encodeURIComponent(String(requestParameters['dataSourceUID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CacheConfigResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * clean cache for a single data source\n     */\n    async cleanDataSourceCache(requestParameters: EnterpriseApiCleanDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CacheConfigResponse> {\n        const response = await this.cleanDataSourceCacheRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create a recording rule that is then registered and started.\n     */\n    async createRecordingRuleRaw(requestParameters: EnterpriseApiCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecordingRuleJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordingRuleJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a recording rule that is then registered and started.\n     */\n    async createRecordingRule(requestParameters: EnterpriseApiCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecordingRuleJSON> {\n        const response = await this.createRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * It returns a 422 if there is not an existing prometheus data source configured.\n     * Create a remote write target.\n     */\n    async createRecordingRuleWriteTargetRaw(requestParameters: EnterpriseApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrometheusRemoteWriteTargetJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRecordingRuleWriteTarget().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PrometheusRemoteWriteTargetJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PrometheusRemoteWriteTargetJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * It returns a 422 if there is not an existing prometheus data source configured.\n     * Create a remote write target.\n     */\n    async createRecordingRuleWriteTarget(requestParameters: EnterpriseApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON> {\n        const response = await this.createRecordingRuleWriteTargetRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.\n     * Create a report.\n     */\n    async createReportRaw(requestParameters: EnterpriseApiCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateReport200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateReport200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.\n     * Create a report.\n     */\n    async createReport(requestParameters: EnterpriseApiCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateReport200Response> {\n        const response = await this.createReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.\n     * Create a new custom role.\n     */\n    async createRoleRaw(requestParameters: EnterpriseApiCreateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateRoleFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.  You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.\n     * Create a new custom role.\n     */\n    async createRole(requestParameters: EnterpriseApiCreateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.createRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.\n     * Remove license from database.\n     */\n    async deleteLicenseTokenRaw(requestParameters: EnterpriseApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ErrorResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling deleteLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeleteTokenCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ErrorResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.\n     * Remove license from database.\n     */\n    async deleteLicenseToken(requestParameters: EnterpriseApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ErrorResponseBody> {\n        const response = await this.deleteLicenseTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete removes the rule from the registry and stops it.\n     */\n    async deleteRecordingRuleRaw(requestParameters: EnterpriseApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['recordingRuleID'] == null) {\n            throw new runtime.RequiredError(\n                'recordingRuleID',\n                'Required parameter \"recordingRuleID\" was null or undefined when calling deleteRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/{recordingRuleID}`.replace(`{${\"recordingRuleID\"}}`, encodeURIComponent(String(requestParameters['recordingRuleID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete removes the rule from the registry and stops it.\n     */\n    async deleteRecordingRule(requestParameters: EnterpriseApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete the remote write target.\n     */\n    async deleteRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete the remote write target.\n     */\n    async deleteRecordingRuleWriteTarget(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRecordingRuleWriteTargetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.\n     * Delete a report.\n     */\n    async deleteReportRaw(requestParameters: EnterpriseApiDeleteReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling deleteReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.\n     * Delete a report.\n     */\n    async deleteReport(requestParameters: EnterpriseApiDeleteReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.\n     * Delete a custom role.\n     */\n    async deleteRoleRaw(requestParameters: EnterpriseApiDeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling deleteRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['force'] != null) {\n            queryParameters['force'] = requestParameters['force'];\n        }\n\n        if (requestParameters['global'] != null) {\n            queryParameters['global'] = requestParameters['global'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.  You need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.\n     * Delete a custom role.\n     */\n    async deleteRole(requestParameters: EnterpriseApiDeleteRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * disable cache for a single data source\n     */\n    async disableDataSourceCacheRaw(requestParameters: EnterpriseApiDisableDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CacheConfigResponse>> {\n        if (requestParameters['dataSourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'dataSourceUID',\n                'Required parameter \"dataSourceUID\" was null or undefined when calling disableDataSourceCache().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{dataSourceUID}/cache/disable`.replace(`{${\"dataSourceUID\"}}`, encodeURIComponent(String(requestParameters['dataSourceUID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CacheConfigResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * disable cache for a single data source\n     */\n    async disableDataSourceCache(requestParameters: EnterpriseApiDisableDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CacheConfigResponse> {\n        const response = await this.disableDataSourceCacheRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * enable cache for a single data source\n     */\n    async enableDataSourceCacheRaw(requestParameters: EnterpriseApiEnableDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CacheConfigResponse>> {\n        if (requestParameters['dataSourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'dataSourceUID',\n                'Required parameter \"dataSourceUID\" was null or undefined when calling enableDataSourceCache().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{dataSourceUID}/cache/enable`.replace(`{${\"dataSourceUID\"}}`, encodeURIComponent(String(requestParameters['dataSourceUID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CacheConfigResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * enable cache for a single data source\n     */\n    async enableDataSourceCache(requestParameters: EnterpriseApiEnableDataSourceCacheRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CacheConfigResponse> {\n        const response = await this.enableDataSourceCacheRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.\n     * Get status.\n     */\n    async getAccessControlStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        if (this.isJsonMime(response.headers.get('content-type'))) {\n            return new runtime.JSONApiResponse<number>(response);\n        } else {\n            return new runtime.TextApiResponse(response) as any;\n        }\n    }\n\n    /**\n     * Returns an indicator to check if fine-grained access control is enabled or not.  You need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.\n     * Get status.\n     */\n    async getAccessControlStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {\n        const response = await this.getAccessControlStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report in CSV format.\n     * @deprecated\n     */\n    async getCustomPermissionsCSVRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/custom-permissions-csv`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report in CSV format.\n     * @deprecated\n     */\n    async getCustomPermissionsCSV(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getCustomPermissionsCSVRaw(initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report.\n     * @deprecated\n     */\n    async getCustomPermissionsReportRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/custom-permissions`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report.\n     * @deprecated\n     */\n    async getCustomPermissionsReport(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getCustomPermissionsReportRaw(initOverrides);\n    }\n\n    /**\n     * get cache config for a single data source\n     */\n    async getDataSourceCacheConfigRaw(requestParameters: EnterpriseApiGetDataSourceCacheConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CacheConfigResponse>> {\n        if (requestParameters['dataSourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'dataSourceUID',\n                'Required parameter \"dataSourceUID\" was null or undefined when calling getDataSourceCacheConfig().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{dataSourceUID}/cache`.replace(`{${\"dataSourceUID\"}}`, encodeURIComponent(String(requestParameters['dataSourceUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CacheConfigResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * get cache config for a single data source\n     */\n    async getDataSourceCacheConfig(requestParameters: EnterpriseApiGetDataSourceCacheConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CacheConfigResponse> {\n        const response = await this.getDataSourceCacheConfigRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Get license token.\n     */\n    async getLicenseTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Get license token.\n     */\n    async getLicenseToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {\n        const response = await this.getLicenseTokenRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * It exposes the SP (Grafana\\'s) metadata for the IdP\\'s consumption.\n     */\n    async getMetadataRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/metadata`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * It exposes the SP (Grafana\\'s) metadata for the IdP\\'s consumption.\n     */\n    async getMetadata(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.getMetadataRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Return the prometheus remote write target.\n     */\n    async getRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrometheusRemoteWriteTargetJSON>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PrometheusRemoteWriteTargetJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Return the prometheus remote write target.\n     */\n    async getRecordingRuleWriteTarget(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON> {\n        const response = await this.getRecordingRuleWriteTargetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.\n     * Get a report.\n     */\n    async getReportRaw(requestParameters: EnterpriseApiGetReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Report>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling getReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ReportFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.\n     * Get a report.\n     */\n    async getReport(requestParameters: EnterpriseApiGetReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Report> {\n        const response = await this.getReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.\n     * Get report settings.\n     */\n    async getReportSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReportSettings>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/settings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ReportSettingsFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.\n     * Get report settings.\n     */\n    async getReportSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReportSettings> {\n        const response = await this.getReportSettingsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.\n     * List reports.\n     */\n    async getReportsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Report>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ReportFromJSON));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.\n     * List reports.\n     */\n    async getReports(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Report>> {\n        const response = await this.getReportsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.\n     * Get a role.\n     */\n    async getRoleRaw(requestParameters: EnterpriseApiGetRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling getRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a role for the given UID.  You need to have a permission with action `roles:read` and scope `roles:*`.\n     * Get a role.\n     */\n    async getRole(requestParameters: EnterpriseApiGetRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.getRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get role assignments for the role with the given UID. Does not include role assignments mapped through group attribute sync.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.\n     * Get role assignments.\n     */\n    async getRoleAssignmentsRaw(requestParameters: EnterpriseApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleAssignmentsDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling getRoleAssignments().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}/assignments`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleAssignmentsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get role assignments for the role with the given UID. Does not include role assignments mapped through group attribute sync.  You need to have a permission with action `teams.roles:list` and scope `teams:id:*` and `users.roles:list` and scope `users:id:*`.\n     * Get role assignments.\n     */\n    async getRoleAssignments(requestParameters: EnterpriseApiGetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleAssignmentsDTO> {\n        const response = await this.getRoleAssignmentsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * GetLogout initiates single logout process.\n     */\n    async getSAMLLogoutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/logout/saml`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * GetLogout initiates single logout process.\n     */\n    async getSAMLLogout(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getSAMLLogoutRaw(initOverrides);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async getSLORaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/slo`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async getSLO(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getSLORaw(initOverrides);\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.\n     * Get custom branding report image.\n     */\n    async getSettingsImageRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/images/:image`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.\n     * Get custom branding report image.\n     */\n    async getSettingsImage(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.getSettingsImageRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Check license availability.\n     */\n    async getStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/check`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Check license availability.\n     */\n    async getStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getStatusRaw(initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `ldap.status:read`.\n     * Returns the current state of the LDAP background sync integration.\n     */\n    async getSyncStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActiveSyncStatusDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap-sync-status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActiveSyncStatusDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `ldap.status:read`.\n     * Returns the current state of the LDAP background sync integration.\n     */\n    async getSyncStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActiveSyncStatusDTO> {\n        const response = await this.getSyncStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get External Groups.\n     */\n    async getTeamGroupsApiRaw(requestParameters: EnterpriseApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamGroupDTO>>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling getTeamGroupsApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamGroupDTOFromJSON));\n    }\n\n    /**\n     * Get External Groups.\n     */\n    async getTeamGroupsApi(requestParameters: EnterpriseApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamGroupDTO>> {\n        const response = await this.getTeamGroupsApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Retrieves LBAC rules for a team.\n     */\n    async getTeamLBACRulesApiRaw(requestParameters: EnterpriseApiGetTeamLBACRulesApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamLBACRules>>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getTeamLBACRulesApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}/lbac/teams`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamLBACRulesFromJSON));\n    }\n\n    /**\n     * Retrieves LBAC rules for a team.\n     */\n    async getTeamLBACRulesApi(requestParameters: EnterpriseApiGetTeamLBACRulesApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamLBACRules>> {\n        const response = await this.getTeamLBACRulesApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists all rules in the database: active or deleted.\n     */\n    async listRecordingRulesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RecordingRuleJSON>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RecordingRuleJSONFromJSON));\n    }\n\n    /**\n     * Lists all rules in the database: active or deleted.\n     */\n    async listRecordingRules(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecordingRuleJSON>> {\n        const response = await this.listRecordingRulesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.\n     * Get all roles.\n     */\n    async listRolesRaw(requestParameters: EnterpriseApiListRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RoleDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['delegatable'] != null) {\n            queryParameters['delegatable'] = requestParameters['delegatable'];\n        }\n\n        if (requestParameters['includeHidden'] != null) {\n            queryParameters['includeHidden'] = requestParameters['includeHidden'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RoleDTOFromJSON));\n    }\n\n    /**\n     * Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.  You need to have a permission with action `roles:read` and scope `roles:*`.  The `delegatable` flag reduces the set of roles to only those for which the signed-in user has permissions to assign.\n     * Get all roles.\n     */\n    async listRoles(requestParameters: EnterpriseApiListRolesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RoleDTO>> {\n        const response = await this.listRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.\n     * Get team roles.\n     */\n    async listTeamRolesRaw(requestParameters: EnterpriseApiListTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling listTeamRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:read` and scope `teams:id:<team ID>`.\n     * Get team roles.\n     */\n    async listTeamRoles(requestParameters: EnterpriseApiListTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.listTeamRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.\n     * List roles assigned to multiple teams.\n     */\n    async listTeamsRolesRaw(requestParameters: EnterpriseApiListTeamsRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: Array<RoleDTO>; }>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling listTeamsRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/roles/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RolesSearchQueryToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given teams.  You need to have a permission with action `teams.roles:read` and scope `teams:id:*`.\n     * List roles assigned to multiple teams.\n     */\n    async listTeamsRoles(requestParameters: EnterpriseApiListTeamsRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: Array<RoleDTO>; }> {\n        const response = await this.listTeamsRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.\n     * List roles assigned to a user.\n     */\n    async listUserRolesRaw(requestParameters: EnterpriseApiListUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RoleDTO>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling listUserRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RoleDTOFromJSON));\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:<user ID>`.\n     * List roles assigned to a user.\n     */\n    async listUserRoles(requestParameters: EnterpriseApiListUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RoleDTO>> {\n        const response = await this.listUserRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.\n     * List roles assigned to multiple users.\n     */\n    async listUsersRolesRaw(requestParameters: EnterpriseApiListUsersRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: Array<RoleDTO>; }>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling listUsersRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/roles/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RolesSearchQueryToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Lists the roles that have been directly assigned to the given users. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.  You need to have a permission with action `users.roles:read` and scope `users:id:*`.\n     * List roles assigned to multiple users.\n     */\n    async listUsersRoles(requestParameters: EnterpriseApiListUsersRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: Array<RoleDTO>; }> {\n        const response = await this.listUsersRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * It performs Assertion Consumer Service (ACS).\n     */\n    async postACSRaw(requestParameters: EnterpriseApiPostACSRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['relayState'] != null) {\n            queryParameters['RelayState'] = requestParameters['relayState'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/acs`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * It performs Assertion Consumer Service (ACS).\n     */\n    async postACS(requestParameters: EnterpriseApiPostACSRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postACSRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing:update`.\n     * Create license token.\n     */\n    async postLicenseTokenRaw(requestParameters: EnterpriseApiPostLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeleteTokenCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:update`.\n     * Create license token.\n     */\n    async postLicenseToken(requestParameters: EnterpriseApiPostLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {\n        const response = await this.postLicenseTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.\n     * Manually force license refresh.\n     */\n    async postRenewLicenseTokenRaw(requestParameters: EnterpriseApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postRenewLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token/renew`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters['body'] as any,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.\n     * Manually force license refresh.\n     */\n    async postRenewLicenseToken(requestParameters: EnterpriseApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postRenewLicenseTokenRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async postSLORaw(requestParameters: EnterpriseApiPostSLORequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['sAMLRequest'] != null) {\n            queryParameters['SAMLRequest'] = requestParameters['sAMLRequest'];\n        }\n\n        if (requestParameters['sAMLResponse'] != null) {\n            queryParameters['SAMLResponse'] = requestParameters['sAMLResponse'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/slo`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async postSLO(requestParameters: EnterpriseApiPostSLORequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postSLORaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Refresh license stats.\n     */\n    async refreshLicenseStatsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActiveUserStats>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/refresh-stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActiveUserStatsFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Refresh license stats.\n     */\n    async refreshLicenseStats(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActiveUserStats> {\n        const response = await this.refreshLicenseStatsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Remove External Group.\n     */\n    async removeTeamGroupApiQueryRaw(requestParameters: EnterpriseApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling removeTeamGroupApiQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['groupId'] != null) {\n            queryParameters['groupId'] = requestParameters['groupId'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Remove External Group.\n     */\n    async removeTeamGroupApiQuery(requestParameters: EnterpriseApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeTeamGroupApiQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.\n     * Remove team role.\n     */\n    async removeTeamRoleRaw(requestParameters: EnterpriseApiRemoveTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling removeTeamRole().'\n            );\n        }\n\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling removeTeamRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))).replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.\n     * Remove team role.\n     */\n    async removeTeamRole(requestParameters: EnterpriseApiRemoveTeamRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeTeamRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Remove a user role assignment.\n     */\n    async removeUserRoleRaw(requestParameters: EnterpriseApiRemoveUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling removeUserRole().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling removeUserRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['global'] != null) {\n            queryParameters['global'] = requestParameters['global'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))).replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Revoke a role from a user. For bulk updates consider Set user role assignments.  You need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Remove a user role assignment.\n     */\n    async removeUserRole(requestParameters: EnterpriseApiRemoveUserRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeUserRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Download a CSV report.\n     */\n    async renderReportCSVsRaw(requestParameters: EnterpriseApiRenderReportCSVsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['dashboards'] != null) {\n            queryParameters['dashboards'] = requestParameters['dashboards'];\n        }\n\n        if (requestParameters['title'] != null) {\n            queryParameters['title'] = requestParameters['title'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/render/csvs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Download a CSV report.\n     */\n    async renderReportCSVs(requestParameters: EnterpriseApiRenderReportCSVsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.renderReportCSVsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Render report for multiple dashboards.\n     */\n    async renderReportPDFsRaw(requestParameters: EnterpriseApiRenderReportPDFsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['dashboards'] != null) {\n            queryParameters['dashboards'] = requestParameters['dashboards'];\n        }\n\n        if (requestParameters['orientation'] != null) {\n            queryParameters['orientation'] = requestParameters['orientation'];\n        }\n\n        if (requestParameters['layout'] != null) {\n            queryParameters['layout'] = requestParameters['layout'];\n        }\n\n        if (requestParameters['title'] != null) {\n            queryParameters['title'] = requestParameters['title'];\n        }\n\n        if (requestParameters['scaleFactor'] != null) {\n            queryParameters['scaleFactor'] = requestParameters['scaleFactor'];\n        }\n\n        if (requestParameters['includeTables'] != null) {\n            queryParameters['includeTables'] = requestParameters['includeTables'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/render/pdfs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Render report for multiple dashboards.\n     */\n    async renderReportPDFs(requestParameters: EnterpriseApiRenderReportPDFsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.renderReportPDFsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.\n     * Save settings.\n     */\n    async saveReportSettingsRaw(requestParameters: EnterpriseApiSaveReportSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling saveReportSettings().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/settings`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ReportSettingsToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.\n     * Save settings.\n     */\n    async saveReportSettings(requestParameters: EnterpriseApiSaveReportSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.saveReportSettingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns the result of the search through access-control role assignments.  You need to have a permission with action `teams.roles:read` on scope `teams:*` and a permission with action `users.roles:read` on scope `users:*`.\n     * Debug permissions.\n     */\n    async searchResultRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchResult>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/assignments/search`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns the result of the search through access-control role assignments.  You need to have a permission with action `teams.roles:read` on scope `teams:*` and a permission with action `users.roles:read` on scope `users:*`.\n     * Debug permissions.\n     */\n    async searchResult(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchResult> {\n        const response = await this.searchResultRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.\n     * Send a report.\n     */\n    async sendReportRaw(requestParameters: EnterpriseApiSendReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling sendReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/email`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ReportEmailToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.\n     * Send a report.\n     */\n    async sendReport(requestParameters: EnterpriseApiSendReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.sendReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.\n     * Send test report via email.\n     */\n    async sendTestEmailRaw(requestParameters: EnterpriseApiSendTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling sendTestEmail().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/test-email`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.\n     * Send test report via email.\n     */\n    async sendTestEmail(requestParameters: EnterpriseApiSendTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.sendTestEmailRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * set cache config for a single data source\n     */\n    async setDataSourceCacheConfigRaw(requestParameters: EnterpriseApiSetDataSourceCacheConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CacheConfigResponse>> {\n        if (requestParameters['dataSourceUID'] == null) {\n            throw new runtime.RequiredError(\n                'dataSourceUID',\n                'Required parameter \"dataSourceUID\" was null or undefined when calling setDataSourceCacheConfig().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setDataSourceCacheConfig().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/{dataSourceUID}/cache`.replace(`{${\"dataSourceUID\"}}`, encodeURIComponent(String(requestParameters['dataSourceUID']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CacheConfigSetterToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CacheConfigResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * set cache config for a single data source\n     */\n    async setDataSourceCacheConfig(requestParameters: EnterpriseApiSetDataSourceCacheConfigRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CacheConfigResponse> {\n        const response = await this.setDataSourceCacheConfigRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.\n     * Set role assignments.\n     */\n    async setRoleAssignmentsRaw(requestParameters: EnterpriseApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleAssignmentsDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling setRoleAssignments().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setRoleAssignments().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}/assignments`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetRoleAssignmentsCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleAssignmentsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Set role assignments for the role with the given UID.  You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate`, and `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate`.\n     * Set role assignments.\n     */\n    async setRoleAssignments(requestParameters: EnterpriseApiSetRoleAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleAssignmentsDTO> {\n        const response = await this.setRoleAssignmentsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.\n     * Update team role.\n     */\n    async setTeamRolesRaw(requestParameters: EnterpriseApiSetTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling setTeamRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/teams/{teamId}/roles`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.\n     * Update team role.\n     */\n    async setTeamRoles(requestParameters: EnterpriseApiSetTeamRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setTeamRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. Roles mapped through group attribute sync are not impacted. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Set user role assignments.\n     */\n    async setUserRolesRaw(requestParameters: EnterpriseApiSetUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling setUserRoles().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setUserRoles().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/users/{userId}/roles`.replace(`{${\"userId\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetUserRolesCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user. Roles mapped through group attribute sync are not impacted. If you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.  You need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.\n     * Set user role assignments.\n     */\n    async setUserRoles(requestParameters: EnterpriseApiSetUserRolesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setUserRolesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Test a recording rule.\n     */\n    async testCreateRecordingRuleRaw(requestParameters: EnterpriseApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling testCreateRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/test`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Test a recording rule.\n     */\n    async testCreateRecordingRule(requestParameters: EnterpriseApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.testCreateRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update the active status of a rule.\n     */\n    async updateRecordingRuleRaw(requestParameters: EnterpriseApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecordingRuleJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordingRuleJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Update the active status of a rule.\n     */\n    async updateRecordingRule(requestParameters: EnterpriseApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecordingRuleJSON> {\n        const response = await this.updateRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.\n     * Update a report.\n     */\n    async updateReportRaw(requestParameters: EnterpriseApiUpdateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling updateReport().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.\n     * Update a report.\n     */\n    async updateReport(requestParameters: EnterpriseApiUpdateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\n     * Update a custom role.\n     */\n    async updateRoleRaw(requestParameters: EnterpriseApiUpdateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RoleDTO>> {\n        if (requestParameters['roleUID'] == null) {\n            throw new runtime.RequiredError(\n                'roleUID',\n                'Required parameter \"roleUID\" was null or undefined when calling updateRole().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateRole().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/access-control/roles/{roleUID}`.replace(`{${\"roleUID\"}}`, encodeURIComponent(String(requestParameters['roleUID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateRoleCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RoleDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\n     * Update a custom role.\n     */\n    async updateRole(requestParameters: EnterpriseApiUpdateRoleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RoleDTO> {\n        const response = await this.updateRoleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates LBAC rules for a team.\n     */\n    async updateTeamLBACRulesApiRaw(requestParameters: EnterpriseApiUpdateTeamLBACRulesApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateTeamLBACRulesApi200Response>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling updateTeamLBACRulesApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/datasources/uid/{uid}/lbac/teams`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateTeamLBACCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateTeamLBACRulesApi200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates LBAC rules for a team.\n     */\n    async updateTeamLBACRulesApi(requestParameters: EnterpriseApiUpdateTeamLBACRulesApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateTeamLBACRulesApi200Response> {\n        const response = await this.updateTeamLBACRulesApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  DashboardACLInfoDTO,\n  ErrorResponseBody,\n  SuccessResponseBody,\n  UpdateDashboardACLCommand,\n} from '../models/index';\nimport {\n    DashboardACLInfoDTOFromJSON,\n    DashboardACLInfoDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateDashboardACLCommandFromJSON,\n    UpdateDashboardACLCommandToJSON,\n} from '../models/index';\n\nexport interface FolderPermissionsApiGetFolderPermissionListRequest {\n    folderUid: string;\n}\n\nexport interface FolderPermissionsApiUpdateFolderPermissionsRequest {\n    folderUid: string;\n    body: UpdateDashboardACLCommand;\n}\n\n/**\n * \n */\nexport class FolderPermissionsApi extends runtime.BaseAPI {\n\n    /**\n     * Gets all existing permissions for the folder with the given `uid`.\n     */\n    async getFolderPermissionListRaw(requestParameters: FolderPermissionsApiGetFolderPermissionListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardACLInfoDTO>>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling getFolderPermissionList().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}/permissions`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardACLInfoDTOFromJSON));\n    }\n\n    /**\n     * Gets all existing permissions for the folder with the given `uid`.\n     */\n    async getFolderPermissionList(requestParameters: FolderPermissionsApiGetFolderPermissionListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardACLInfoDTO>> {\n        const response = await this.getFolderPermissionListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates permissions for a folder. This operation will remove existing permissions if they’re not included in the request.\n     */\n    async updateFolderPermissionsRaw(requestParameters: FolderPermissionsApiUpdateFolderPermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling updateFolderPermissions().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateFolderPermissions().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}/permissions`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateDashboardACLCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates permissions for a folder. This operation will remove existing permissions if they’re not included in the request.\n     */\n    async updateFolderPermissions(requestParameters: FolderPermissionsApiUpdateFolderPermissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateFolderPermissionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreateFolderCommand,\n  DeleteFolder200Response,\n  ErrorResponseBody,\n  Folder,\n  FolderSearchHit,\n  MoveFolderCommand,\n  UpdateFolderCommand,\n} from '../models/index';\nimport {\n    CreateFolderCommandFromJSON,\n    CreateFolderCommandToJSON,\n    DeleteFolder200ResponseFromJSON,\n    DeleteFolder200ResponseToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    FolderFromJSON,\n    FolderToJSON,\n    FolderSearchHitFromJSON,\n    FolderSearchHitToJSON,\n    MoveFolderCommandFromJSON,\n    MoveFolderCommandToJSON,\n    UpdateFolderCommandFromJSON,\n    UpdateFolderCommandToJSON,\n} from '../models/index';\n\nexport interface FoldersApiCreateFolderRequest {\n    body: CreateFolderCommand;\n}\n\nexport interface FoldersApiDeleteFolderRequest {\n    folderUid: string;\n    forceDeleteRules?: boolean;\n}\n\nexport interface FoldersApiGetFolderByIDRequest {\n    folderId: number;\n}\n\nexport interface FoldersApiGetFolderByUIDRequest {\n    folderUid: string;\n}\n\nexport interface FoldersApiGetFolderDescendantCountsRequest {\n    folderUid: string;\n}\n\nexport interface FoldersApiGetFoldersRequest {\n    limit?: number;\n    page?: number;\n    parentUid?: string;\n    permission?: GetFoldersPermissionEnum;\n}\n\nexport interface FoldersApiMoveFolderRequest {\n    folderUid: string;\n    body: MoveFolderCommand;\n}\n\nexport interface FoldersApiUpdateFolderRequest {\n    folderUid: string;\n    body: UpdateFolderCommand;\n}\n\n/**\n * \n */\nexport class FoldersApi extends runtime.BaseAPI {\n\n    /**\n     * If nested folders are enabled then it additionally expects the parent folder UID.\n     * Create folder.\n     */\n    async createFolderRaw(requestParameters: FoldersApiCreateFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createFolder().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateFolderCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FolderFromJSON(jsonValue));\n    }\n\n    /**\n     * If nested folders are enabled then it additionally expects the parent folder UID.\n     * Create folder.\n     */\n    async createFolder(requestParameters: FoldersApiCreateFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder> {\n        const response = await this.createFolderRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes an existing folder identified by UID along with all dashboards (and their alerts) stored in the folder. This operation cannot be reverted. If nested folders are enabled then it also deletes all the subfolders.\n     * Delete folder.\n     */\n    async deleteFolderRaw(requestParameters: FoldersApiDeleteFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeleteFolder200Response>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling deleteFolder().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['forceDeleteRules'] != null) {\n            queryParameters['forceDeleteRules'] = requestParameters['forceDeleteRules'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteFolder200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes an existing folder identified by UID along with all dashboards (and their alerts) stored in the folder. This operation cannot be reverted. If nested folders are enabled then it also deletes all the subfolders.\n     * Delete folder.\n     */\n    async deleteFolder(requestParameters: FoldersApiDeleteFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeleteFolder200Response> {\n        const response = await this.deleteFolderRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns the folder identified by id. This is deprecated. Please refer to [updated API](#/folders/getFolderByUID) instead\n     * Get folder by id.\n     * @deprecated\n     */\n    async getFolderByIDRaw(requestParameters: FoldersApiGetFolderByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder>> {\n        if (requestParameters['folderId'] == null) {\n            throw new runtime.RequiredError(\n                'folderId',\n                'Required parameter \"folderId\" was null or undefined when calling getFolderByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/id/{folder_id}`.replace(`{${\"folder_id\"}}`, encodeURIComponent(String(requestParameters['folderId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FolderFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns the folder identified by id. This is deprecated. Please refer to [updated API](#/folders/getFolderByUID) instead\n     * Get folder by id.\n     * @deprecated\n     */\n    async getFolderByID(requestParameters: FoldersApiGetFolderByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder> {\n        const response = await this.getFolderByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get folder by uid.\n     */\n    async getFolderByUIDRaw(requestParameters: FoldersApiGetFolderByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling getFolderByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FolderFromJSON(jsonValue));\n    }\n\n    /**\n     * Get folder by uid.\n     */\n    async getFolderByUID(requestParameters: FoldersApiGetFolderByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder> {\n        const response = await this.getFolderByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Gets the count of each descendant of a folder by kind. The folder is identified by UID.\n     */\n    async getFolderDescendantCountsRaw(requestParameters: FoldersApiGetFolderDescendantCountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: number; }>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling getFolderDescendantCounts().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}/counts`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Gets the count of each descendant of a folder by kind. The folder is identified by UID.\n     */\n    async getFolderDescendantCounts(requestParameters: FoldersApiGetFolderDescendantCountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: number; }> {\n        const response = await this.getFolderDescendantCountsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * It returns all folders that the authenticated user has permission to view. If nested folders are enabled, it expects an additional query parameter with the parent folder UID and returns the immediate subfolders that the authenticated user has permission to view. If the parameter is not supplied then it returns immediate subfolders under the root that the authenticated user has permission to view.\n     * Get all folders.\n     */\n    async getFoldersRaw(requestParameters: FoldersApiGetFoldersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FolderSearchHit>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['parentUid'] != null) {\n            queryParameters['parentUid'] = requestParameters['parentUid'];\n        }\n\n        if (requestParameters['permission'] != null) {\n            queryParameters['permission'] = requestParameters['permission'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FolderSearchHitFromJSON));\n    }\n\n    /**\n     * It returns all folders that the authenticated user has permission to view. If nested folders are enabled, it expects an additional query parameter with the parent folder UID and returns the immediate subfolders that the authenticated user has permission to view. If the parameter is not supplied then it returns immediate subfolders under the root that the authenticated user has permission to view.\n     * Get all folders.\n     */\n    async getFolders(requestParameters: FoldersApiGetFoldersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FolderSearchHit>> {\n        const response = await this.getFoldersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Move folder.\n     */\n    async moveFolderRaw(requestParameters: FoldersApiMoveFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling moveFolder().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling moveFolder().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}/move`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MoveFolderCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FolderFromJSON(jsonValue));\n    }\n\n    /**\n     * Move folder.\n     */\n    async moveFolder(requestParameters: FoldersApiMoveFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder> {\n        const response = await this.moveFolderRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update folder.\n     */\n    async updateFolderRaw(requestParameters: FoldersApiUpdateFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder>> {\n        if (requestParameters['folderUid'] == null) {\n            throw new runtime.RequiredError(\n                'folderUid',\n                'Required parameter \"folderUid\" was null or undefined when calling updateFolder().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateFolder().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/folders/{folder_uid}`.replace(`{${\"folder_uid\"}}`, encodeURIComponent(String(requestParameters['folderUid']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateFolderCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => FolderFromJSON(jsonValue));\n    }\n\n    /**\n     * Update folder.\n     */\n    async updateFolder(requestParameters: FoldersApiUpdateFolderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder> {\n        const response = await this.updateFolderRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const GetFoldersPermissionEnum = {\n    Edit: 'Edit',\n    View: 'View'\n} as const;\nexport type GetFoldersPermissionEnum = typeof GetFoldersPermissionEnum[keyof typeof GetFoldersPermissionEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  QuotaDTO,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    QuotaDTOFromJSON,\n    QuotaDTOToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class GetCurrentOrgApi extends runtime.BaseAPI {\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).\n     * Fetch Organization quota.\n     */\n    async getCurrentOrgQuotaRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<QuotaDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/quotas`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(QuotaDTOFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).\n     * Fetch Organization quota.\n     */\n    async getCurrentOrgQuota(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<QuotaDTO>> {\n        const response = await this.getCurrentOrgQuotaRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  HealthResponse,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    HealthResponseFromJSON,\n    HealthResponseToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class HealthApi extends runtime.BaseAPI {\n\n    /**\n     * apiHealthHandler will return ok if Grafana\\'s web server is running and it can access the database. If the database cannot be accessed it will return http status code 503.\n     */\n    async getHealthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HealthResponse>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/health`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => HealthResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * apiHealthHandler will return ok if Grafana\\'s web server is running and it can access the database. If the database cannot be accessed it will return http status code 503.\n     */\n    async getHealth(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HealthResponse> {\n        const response = await this.getHealthRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ActiveSyncStatusDTO,\n  ErrorResponseBody,\n} from '../models/index';\nimport {\n    ActiveSyncStatusDTOFromJSON,\n    ActiveSyncStatusDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class LdapDebugApi extends runtime.BaseAPI {\n\n    /**\n     * You need to have a permission with action `ldap.status:read`.\n     * Returns the current state of the LDAP background sync integration.\n     */\n    async getSyncStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActiveSyncStatusDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/admin/ldap-sync-status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActiveSyncStatusDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `ldap.status:read`.\n     * Returns the current state of the LDAP background sync integration.\n     */\n    async getSyncStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActiveSyncStatusDTO> {\n        const response = await this.getSyncStatusRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreateLibraryElementCommand,\n  ErrorResponseBody,\n  LibraryElementArrayResponse,\n  LibraryElementConnectionsResponse,\n  LibraryElementResponse,\n  LibraryElementSearchResponse,\n  PatchLibraryElementCommand,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    CreateLibraryElementCommandFromJSON,\n    CreateLibraryElementCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    LibraryElementArrayResponseFromJSON,\n    LibraryElementArrayResponseToJSON,\n    LibraryElementConnectionsResponseFromJSON,\n    LibraryElementConnectionsResponseToJSON,\n    LibraryElementResponseFromJSON,\n    LibraryElementResponseToJSON,\n    LibraryElementSearchResponseFromJSON,\n    LibraryElementSearchResponseToJSON,\n    PatchLibraryElementCommandFromJSON,\n    PatchLibraryElementCommandToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface LibraryElementsApiCreateLibraryElementRequest {\n    body: CreateLibraryElementCommand;\n}\n\nexport interface LibraryElementsApiDeleteLibraryElementByUIDRequest {\n    libraryElementUid: string;\n}\n\nexport interface LibraryElementsApiGetLibraryElementByNameRequest {\n    libraryElementName: string;\n}\n\nexport interface LibraryElementsApiGetLibraryElementByUIDRequest {\n    libraryElementUid: string;\n}\n\nexport interface LibraryElementsApiGetLibraryElementConnectionsRequest {\n    libraryElementUid: string;\n}\n\nexport interface LibraryElementsApiGetLibraryElementsRequest {\n    searchString?: string;\n    kind?: GetLibraryElementsKindEnum;\n    sortDirection?: GetLibraryElementsSortDirectionEnum;\n    typeFilter?: string;\n    excludeUid?: string;\n    folderFilter?: string;\n    perPage?: number;\n    page?: number;\n}\n\nexport interface LibraryElementsApiUpdateLibraryElementRequest {\n    libraryElementUid: string;\n    body: PatchLibraryElementCommand;\n}\n\n/**\n * \n */\nexport class LibraryElementsApi extends runtime.BaseAPI {\n\n    /**\n     * Creates a new library element.\n     * Create library element.\n     */\n    async createLibraryElementRaw(requestParameters: LibraryElementsApiCreateLibraryElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementResponse>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createLibraryElement().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateLibraryElementCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Creates a new library element.\n     * Create library element.\n     */\n    async createLibraryElement(requestParameters: LibraryElementsApiCreateLibraryElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementResponse> {\n        const response = await this.createLibraryElementRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes an existing library element as specified by the UID. This operation cannot be reverted. You cannot delete a library element that is connected. This operation cannot be reverted.\n     * Delete library element.\n     */\n    async deleteLibraryElementByUIDRaw(requestParameters: LibraryElementsApiDeleteLibraryElementByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['libraryElementUid'] == null) {\n            throw new runtime.RequiredError(\n                'libraryElementUid',\n                'Required parameter \"libraryElementUid\" was null or undefined when calling deleteLibraryElementByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements/{library_element_uid}`.replace(`{${\"library_element_uid\"}}`, encodeURIComponent(String(requestParameters['libraryElementUid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes an existing library element as specified by the UID. This operation cannot be reverted. You cannot delete a library element that is connected. This operation cannot be reverted.\n     * Delete library element.\n     */\n    async deleteLibraryElementByUID(requestParameters: LibraryElementsApiDeleteLibraryElementByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteLibraryElementByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a library element with the given name.\n     * Get library element by name.\n     */\n    async getLibraryElementByNameRaw(requestParameters: LibraryElementsApiGetLibraryElementByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementArrayResponse>> {\n        if (requestParameters['libraryElementName'] == null) {\n            throw new runtime.RequiredError(\n                'libraryElementName',\n                'Required parameter \"libraryElementName\" was null or undefined when calling getLibraryElementByName().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements/name/{library_element_name}`.replace(`{${\"library_element_name\"}}`, encodeURIComponent(String(requestParameters['libraryElementName']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementArrayResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a library element with the given name.\n     * Get library element by name.\n     */\n    async getLibraryElementByName(requestParameters: LibraryElementsApiGetLibraryElementByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementArrayResponse> {\n        const response = await this.getLibraryElementByNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a library element with the given UID.\n     * Get library element by UID.\n     */\n    async getLibraryElementByUIDRaw(requestParameters: LibraryElementsApiGetLibraryElementByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementResponse>> {\n        if (requestParameters['libraryElementUid'] == null) {\n            throw new runtime.RequiredError(\n                'libraryElementUid',\n                'Required parameter \"libraryElementUid\" was null or undefined when calling getLibraryElementByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements/{library_element_uid}`.replace(`{${\"library_element_uid\"}}`, encodeURIComponent(String(requestParameters['libraryElementUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a library element with the given UID.\n     * Get library element by UID.\n     */\n    async getLibraryElementByUID(requestParameters: LibraryElementsApiGetLibraryElementByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementResponse> {\n        const response = await this.getLibraryElementByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of connections for a library element based on the UID specified.\n     * Get library element connections.\n     */\n    async getLibraryElementConnectionsRaw(requestParameters: LibraryElementsApiGetLibraryElementConnectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementConnectionsResponse>> {\n        if (requestParameters['libraryElementUid'] == null) {\n            throw new runtime.RequiredError(\n                'libraryElementUid',\n                'Required parameter \"libraryElementUid\" was null or undefined when calling getLibraryElementConnections().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements/{library_element_uid}/connections/`.replace(`{${\"library_element_uid\"}}`, encodeURIComponent(String(requestParameters['libraryElementUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementConnectionsResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of connections for a library element based on the UID specified.\n     * Get library element connections.\n     */\n    async getLibraryElementConnections(requestParameters: LibraryElementsApiGetLibraryElementConnectionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementConnectionsResponse> {\n        const response = await this.getLibraryElementConnectionsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of all library elements the authenticated user has permission to view. Use the `perPage` query parameter to control the maximum number of library elements returned; the default limit is `100`. You can also use the `page` query parameter to fetch library elements from any page other than the first one.\n     * Get all library elements.\n     */\n    async getLibraryElementsRaw(requestParameters: LibraryElementsApiGetLibraryElementsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementSearchResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['searchString'] != null) {\n            queryParameters['searchString'] = requestParameters['searchString'];\n        }\n\n        if (requestParameters['kind'] != null) {\n            queryParameters['kind'] = requestParameters['kind'];\n        }\n\n        if (requestParameters['sortDirection'] != null) {\n            queryParameters['sortDirection'] = requestParameters['sortDirection'];\n        }\n\n        if (requestParameters['typeFilter'] != null) {\n            queryParameters['typeFilter'] = requestParameters['typeFilter'];\n        }\n\n        if (requestParameters['excludeUid'] != null) {\n            queryParameters['excludeUid'] = requestParameters['excludeUid'];\n        }\n\n        if (requestParameters['folderFilter'] != null) {\n            queryParameters['folderFilter'] = requestParameters['folderFilter'];\n        }\n\n        if (requestParameters['perPage'] != null) {\n            queryParameters['perPage'] = requestParameters['perPage'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementSearchResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of all library elements the authenticated user has permission to view. Use the `perPage` query parameter to control the maximum number of library elements returned; the default limit is `100`. You can also use the `page` query parameter to fetch library elements from any page other than the first one.\n     * Get all library elements.\n     */\n    async getLibraryElements(requestParameters: LibraryElementsApiGetLibraryElementsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementSearchResponse> {\n        const response = await this.getLibraryElementsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates an existing library element identified by uid.\n     * Update library element.\n     */\n    async updateLibraryElementRaw(requestParameters: LibraryElementsApiUpdateLibraryElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LibraryElementResponse>> {\n        if (requestParameters['libraryElementUid'] == null) {\n            throw new runtime.RequiredError(\n                'libraryElementUid',\n                'Required parameter \"libraryElementUid\" was null or undefined when calling updateLibraryElement().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateLibraryElement().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/library-elements/{library_element_uid}`.replace(`{${\"library_element_uid\"}}`, encodeURIComponent(String(requestParameters['libraryElementUid']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PatchLibraryElementCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => LibraryElementResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates an existing library element identified by uid.\n     * Update library element.\n     */\n    async updateLibraryElement(requestParameters: LibraryElementsApiUpdateLibraryElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LibraryElementResponse> {\n        const response = await this.updateLibraryElementRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const GetLibraryElementsKindEnum = {\n    NUMBER_1: 1,\n    NUMBER_2: 2\n} as const;\nexport type GetLibraryElementsKindEnum = typeof GetLibraryElementsKindEnum[keyof typeof GetLibraryElementsKindEnum];\n/**\n * @export\n */\nexport const GetLibraryElementsSortDirectionEnum = {\n    Asc: 'alpha-asc',\n    Desc: 'alpha-desc'\n} as const;\nexport type GetLibraryElementsSortDirectionEnum = typeof GetLibraryElementsSortDirectionEnum[keyof typeof GetLibraryElementsSortDirectionEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ActiveUserStats,\n  DeleteTokenCommand,\n  ErrorResponseBody,\n  Token,\n} from '../models/index';\nimport {\n    ActiveUserStatsFromJSON,\n    ActiveUserStatsToJSON,\n    DeleteTokenCommandFromJSON,\n    DeleteTokenCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    TokenFromJSON,\n    TokenToJSON,\n} from '../models/index';\n\nexport interface LicensingApiDeleteLicenseTokenRequest {\n    body: DeleteTokenCommand;\n}\n\nexport interface LicensingApiPostLicenseTokenRequest {\n    body: DeleteTokenCommand;\n}\n\nexport interface LicensingApiPostRenewLicenseTokenRequest {\n    body: object;\n}\n\n/**\n * \n */\nexport class LicensingApi extends runtime.BaseAPI {\n\n    /**\n     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.\n     * Remove license from database.\n     */\n    async deleteLicenseTokenRaw(requestParameters: LicensingApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ErrorResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling deleteLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeleteTokenCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ErrorResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:delete`.\n     * Remove license from database.\n     */\n    async deleteLicenseToken(requestParameters: LicensingApiDeleteLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ErrorResponseBody> {\n        const response = await this.deleteLicenseTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report in CSV format.\n     * @deprecated\n     */\n    async getCustomPermissionsCSVRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/custom-permissions-csv`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report in CSV format.\n     * @deprecated\n     */\n    async getCustomPermissionsCSV(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getCustomPermissionsCSVRaw(initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report.\n     * @deprecated\n     */\n    async getCustomPermissionsReportRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/custom-permissions`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * You need to have a permission with action `licensing.reports:read`.\n     * Get custom permissions report.\n     * @deprecated\n     */\n    async getCustomPermissionsReport(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getCustomPermissionsReportRaw(initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Get license token.\n     */\n    async getLicenseTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Get license token.\n     */\n    async getLicenseToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {\n        const response = await this.getLicenseTokenRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Check license availability.\n     */\n    async getStatusRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/check`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Check license availability.\n     */\n    async getStatus(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getStatusRaw(initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing:update`.\n     * Create license token.\n     */\n    async postLicenseTokenRaw(requestParameters: LicensingApiPostLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeleteTokenCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:update`.\n     * Create license token.\n     */\n    async postLicenseToken(requestParameters: LicensingApiPostLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {\n        const response = await this.postLicenseTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.\n     * Manually force license refresh.\n     */\n    async postRenewLicenseTokenRaw(requestParameters: LicensingApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling postRenewLicenseToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/token/renew`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters['body'] as any,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.  You need to have a permission with action `licensing:update`.\n     * Manually force license refresh.\n     */\n    async postRenewLicenseToken(requestParameters: LicensingApiPostRenewLicenseTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postRenewLicenseTokenRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Refresh license stats.\n     */\n    async refreshLicenseStatsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ActiveUserStats>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/licensing/refresh-stats`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ActiveUserStatsFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `licensing:read`.\n     * Refresh license stats.\n     */\n    async refreshLicenseStats(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ActiveUserStats> {\n        const response = await this.refreshLicenseStatsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CloudMigrationSessionListResponseDTO,\n  CloudMigrationSessionRequestDTO,\n  CloudMigrationSessionResponseDTO,\n  CreateAccessTokenResponseDTO,\n  CreateSnapshotResponseDTO,\n  ErrorResponseBody,\n  GetAccessTokenResponseDTO,\n  GetSnapshotResponseDTO,\n  SnapshotListResponseDTO,\n} from '../models/index';\nimport {\n    CloudMigrationSessionListResponseDTOFromJSON,\n    CloudMigrationSessionListResponseDTOToJSON,\n    CloudMigrationSessionRequestDTOFromJSON,\n    CloudMigrationSessionRequestDTOToJSON,\n    CloudMigrationSessionResponseDTOFromJSON,\n    CloudMigrationSessionResponseDTOToJSON,\n    CreateAccessTokenResponseDTOFromJSON,\n    CreateAccessTokenResponseDTOToJSON,\n    CreateSnapshotResponseDTOFromJSON,\n    CreateSnapshotResponseDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    GetAccessTokenResponseDTOFromJSON,\n    GetAccessTokenResponseDTOToJSON,\n    GetSnapshotResponseDTOFromJSON,\n    GetSnapshotResponseDTOToJSON,\n    SnapshotListResponseDTOFromJSON,\n    SnapshotListResponseDTOToJSON,\n} from '../models/index';\n\nexport interface MigrationsApiCancelSnapshotRequest {\n    uid: string;\n    snapshotUid: string;\n}\n\nexport interface MigrationsApiCreateSessionRequest {\n    body: CloudMigrationSessionRequestDTO;\n}\n\nexport interface MigrationsApiCreateSnapshotRequest {\n    uid: string;\n}\n\nexport interface MigrationsApiDeleteCloudMigrationTokenRequest {\n    uid: string;\n}\n\nexport interface MigrationsApiDeleteSessionRequest {\n    uid: string;\n}\n\nexport interface MigrationsApiGetSessionRequest {\n    uid: string;\n}\n\nexport interface MigrationsApiGetShapshotListRequest {\n    uid: string;\n    page?: number;\n    limit?: number;\n    sort?: string;\n}\n\nexport interface MigrationsApiGetSnapshotRequest {\n    uid: string;\n    snapshotUid: string;\n    resultPage?: number;\n    resultLimit?: number;\n}\n\nexport interface MigrationsApiUploadSnapshotRequest {\n    uid: string;\n    snapshotUid: string;\n}\n\n/**\n * \n */\nexport class MigrationsApi extends runtime.BaseAPI {\n\n    /**\n     * TODO: Implement\n     * Cancel a snapshot, wherever it is in its processing chain.\n     */\n    async cancelSnapshotRaw(requestParameters: MigrationsApiCancelSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling cancelSnapshot().'\n            );\n        }\n\n        if (requestParameters['snapshotUid'] == null) {\n            throw new runtime.RequiredError(\n                'snapshotUid',\n                'Required parameter \"snapshotUid\" was null or undefined when calling cancelSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}/snapshot/{snapshotUid}/cancel`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))).replace(`{${\"snapshotUid\"}}`, encodeURIComponent(String(requestParameters['snapshotUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * TODO: Implement\n     * Cancel a snapshot, wherever it is in its processing chain.\n     */\n    async cancelSnapshot(requestParameters: MigrationsApiCancelSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.cancelSnapshotRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Create gcom access token.\n     */\n    async createCloudMigrationTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateAccessTokenResponseDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/token`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateAccessTokenResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Create gcom access token.\n     */\n    async createCloudMigrationToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateAccessTokenResponseDTO> {\n        const response = await this.createCloudMigrationTokenRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create a migration session.\n     */\n    async createSessionRaw(requestParameters: MigrationsApiCreateSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CloudMigrationSessionResponseDTO>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createSession().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CloudMigrationSessionRequestDTOToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CloudMigrationSessionResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a migration session.\n     */\n    async createSession(requestParameters: MigrationsApiCreateSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CloudMigrationSessionResponseDTO> {\n        const response = await this.createSessionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If the snapshot initialization is successful, the snapshot uid is returned.\n     * Trigger the creation of an instance snapshot associated with the provided session.\n     */\n    async createSnapshotRaw(requestParameters: MigrationsApiCreateSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateSnapshotResponseDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling createSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}/snapshot`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateSnapshotResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * If the snapshot initialization is successful, the snapshot uid is returned.\n     * Trigger the creation of an instance snapshot associated with the provided session.\n     */\n    async createSnapshot(requestParameters: MigrationsApiCreateSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateSnapshotResponseDTO> {\n        const response = await this.createSnapshotRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes a cloud migration token.\n     */\n    async deleteCloudMigrationTokenRaw(requestParameters: MigrationsApiDeleteCloudMigrationTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deleteCloudMigrationToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/token/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Deletes a cloud migration token.\n     */\n    async deleteCloudMigrationToken(requestParameters: MigrationsApiDeleteCloudMigrationTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.deleteCloudMigrationTokenRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Delete a migration session by its uid.\n     */\n    async deleteSessionRaw(requestParameters: MigrationsApiDeleteSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deleteSession().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete a migration session by its uid.\n     */\n    async deleteSession(requestParameters: MigrationsApiDeleteSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.deleteSessionRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Fetch the cloud migration token if it exists.\n     */\n    async getCloudMigrationTokenRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetAccessTokenResponseDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/token`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetAccessTokenResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Fetch the cloud migration token if it exists.\n     */\n    async getCloudMigrationToken(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetAccessTokenResponseDTO> {\n        const response = await this.getCloudMigrationTokenRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a cloud migration session by its uid.\n     */\n    async getSessionRaw(requestParameters: MigrationsApiGetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CloudMigrationSessionResponseDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getSession().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CloudMigrationSessionResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a cloud migration session by its uid.\n     */\n    async getSession(requestParameters: MigrationsApiGetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CloudMigrationSessionResponseDTO> {\n        const response = await this.getSessionRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a list of all cloud migration sessions that have been created.\n     */\n    async getSessionListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CloudMigrationSessionListResponseDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CloudMigrationSessionListResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a list of all cloud migration sessions that have been created.\n     */\n    async getSessionList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CloudMigrationSessionListResponseDTO> {\n        const response = await this.getSessionListRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a list of snapshots for a session.\n     */\n    async getShapshotListRaw(requestParameters: MigrationsApiGetShapshotListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SnapshotListResponseDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getShapshotList().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['sort'] != null) {\n            queryParameters['sort'] = requestParameters['sort'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}/snapshots`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SnapshotListResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a list of snapshots for a session.\n     */\n    async getShapshotList(requestParameters: MigrationsApiGetShapshotListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SnapshotListResponseDTO> {\n        const response = await this.getShapshotListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get metadata about a snapshot, including where it is in its processing and final results.\n     */\n    async getSnapshotRaw(requestParameters: MigrationsApiGetSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSnapshotResponseDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getSnapshot().'\n            );\n        }\n\n        if (requestParameters['snapshotUid'] == null) {\n            throw new runtime.RequiredError(\n                'snapshotUid',\n                'Required parameter \"snapshotUid\" was null or undefined when calling getSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['resultPage'] != null) {\n            queryParameters['resultPage'] = requestParameters['resultPage'];\n        }\n\n        if (requestParameters['resultLimit'] != null) {\n            queryParameters['resultLimit'] = requestParameters['resultLimit'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}/snapshot/{snapshotUid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))).replace(`{${\"snapshotUid\"}}`, encodeURIComponent(String(requestParameters['snapshotUid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetSnapshotResponseDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get metadata about a snapshot, including where it is in its processing and final results.\n     */\n    async getSnapshot(requestParameters: MigrationsApiGetSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSnapshotResponseDTO> {\n        const response = await this.getSnapshotRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Upload a snapshot to the Grafana Migration Service for processing.\n     */\n    async uploadSnapshotRaw(requestParameters: MigrationsApiUploadSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling uploadSnapshot().'\n            );\n        }\n\n        if (requestParameters['snapshotUid'] == null) {\n            throw new runtime.RequiredError(\n                'snapshotUid',\n                'Required parameter \"snapshotUid\" was null or undefined when calling uploadSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/cloudmigration/migration/{uid}/snapshot/{snapshotUid}/upload`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))).replace(`{${\"snapshotUid\"}}`, encodeURIComponent(String(requestParameters['snapshotUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Upload a snapshot to the Grafana Migration Service for processing.\n     */\n    async uploadSnapshot(requestParameters: MigrationsApiUploadSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.uploadSnapshotRaw(requestParameters, initOverrides);\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddOrgUserCommand,\n  ErrorResponseBody,\n  OrgDetailsDTO,\n  OrgUserDTO,\n  SuccessResponseBody,\n  UpdateOrgAddressForm,\n  UpdateOrgForm,\n  UpdateOrgUserCommand,\n  UserLookupDTO,\n} from '../models/index';\nimport {\n    AddOrgUserCommandFromJSON,\n    AddOrgUserCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    OrgDetailsDTOFromJSON,\n    OrgDetailsDTOToJSON,\n    OrgUserDTOFromJSON,\n    OrgUserDTOToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateOrgAddressFormFromJSON,\n    UpdateOrgAddressFormToJSON,\n    UpdateOrgFormFromJSON,\n    UpdateOrgFormToJSON,\n    UpdateOrgUserCommandFromJSON,\n    UpdateOrgUserCommandToJSON,\n    UserLookupDTOFromJSON,\n    UserLookupDTOToJSON,\n} from '../models/index';\n\nexport interface OrgApiAddOrgUserToCurrentOrgRequest {\n    body: AddOrgUserCommand;\n}\n\nexport interface OrgApiGetOrgUsersForCurrentOrgLookupRequest {\n    query?: string;\n    limit?: number;\n}\n\nexport interface OrgApiRemoveOrgUserForCurrentOrgRequest {\n    userId: number;\n}\n\nexport interface OrgApiUpdateCurrentOrgRequest {\n    body: UpdateOrgForm;\n}\n\nexport interface OrgApiUpdateCurrentOrgAddressRequest {\n    body: UpdateOrgAddressForm;\n}\n\nexport interface OrgApiUpdateOrgUserForCurrentOrgRequest {\n    userId: number;\n    body: UpdateOrgUserCommand;\n}\n\n/**\n * \n */\nexport class OrgApi extends runtime.BaseAPI {\n\n    /**\n     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.\n     * Add a new user to the current organization.\n     */\n    async addOrgUserToCurrentOrgRaw(requestParameters: OrgApiAddOrgUserToCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addOrgUserToCurrentOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/users`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddOrgUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.\n     * Add a new user to the current organization.\n     */\n    async addOrgUserToCurrentOrg(requestParameters: OrgApiAddOrgUserToCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addOrgUserToCurrentOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get current Organization.\n     */\n    async getCurrentOrgRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrgDetailsDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OrgDetailsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get current Organization.\n     */\n    async getCurrentOrg(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrgDetailsDTO> {\n        const response = await this.getCurrentOrgRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns all org users within the current organization. Accessible to users with org admin role. If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Get all users within the current organization.\n     */\n    async getOrgUsersForCurrentOrgRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OrgUserDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/users`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OrgUserDTOFromJSON));\n    }\n\n    /**\n     * Returns all org users within the current organization. Accessible to users with org admin role. If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Get all users within the current organization.\n     */\n    async getOrgUsersForCurrentOrg(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OrgUserDTO>> {\n        const response = await this.getOrgUsersForCurrentOrgRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns all org users within the current organization, but with less detailed information. Accessible to users with org admin role, admin in any folder or admin of any team. Mainly used by Grafana UI for providing list of users when adding team members and when editing folder/dashboard permissions.\n     * Get all users within the current organization (lookup)\n     */\n    async getOrgUsersForCurrentOrgLookupRaw(requestParameters: OrgApiGetOrgUsersForCurrentOrgLookupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserLookupDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/users/lookup`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserLookupDTOFromJSON));\n    }\n\n    /**\n     * Returns all org users within the current organization, but with less detailed information. Accessible to users with org admin role, admin in any folder or admin of any team. Mainly used by Grafana UI for providing list of users when adding team members and when editing folder/dashboard permissions.\n     * Get all users within the current organization (lookup)\n     */\n    async getOrgUsersForCurrentOrgLookup(requestParameters: OrgApiGetOrgUsersForCurrentOrgLookupRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserLookupDTO>> {\n        const response = await this.getOrgUsersForCurrentOrgLookupRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.\n     * Delete user in current organization.\n     */\n    async removeOrgUserForCurrentOrgRaw(requestParameters: OrgApiRemoveOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling removeOrgUserForCurrentOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/users/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.\n     * Delete user in current organization.\n     */\n    async removeOrgUserForCurrentOrg(requestParameters: OrgApiRemoveOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeOrgUserForCurrentOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update current Organization.\n     */\n    async updateCurrentOrgRaw(requestParameters: OrgApiUpdateCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateCurrentOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update current Organization.\n     */\n    async updateCurrentOrg(requestParameters: OrgApiUpdateCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateCurrentOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update current Organization\\'s address.\n     */\n    async updateCurrentOrgAddressRaw(requestParameters: OrgApiUpdateCurrentOrgAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateCurrentOrgAddress().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/address`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgAddressFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update current Organization\\'s address.\n     */\n    async updateCurrentOrgAddress(requestParameters: OrgApiUpdateCurrentOrgAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateCurrentOrgAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.\n     * Updates the given user.\n     */\n    async updateOrgUserForCurrentOrgRaw(requestParameters: OrgApiUpdateOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling updateOrgUserForCurrentOrg().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrgUserForCurrentOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/users/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.\n     * Updates the given user.\n     */\n    async updateOrgUserForCurrentOrg(requestParameters: OrgApiUpdateOrgUserForCurrentOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgUserForCurrentOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddInviteForm,\n  ErrorResponseBody,\n  SuccessResponseBody,\n  TempUserDTO,\n} from '../models/index';\nimport {\n    AddInviteFormFromJSON,\n    AddInviteFormToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TempUserDTOFromJSON,\n    TempUserDTOToJSON,\n} from '../models/index';\n\nexport interface OrgInvitesApiAddOrgInviteRequest {\n    body: AddInviteForm;\n}\n\nexport interface OrgInvitesApiRevokeInviteRequest {\n    invitationCode: string;\n}\n\n/**\n * \n */\nexport class OrgInvitesApi extends runtime.BaseAPI {\n\n    /**\n     * Add invite.\n     */\n    async addOrgInviteRaw(requestParameters: OrgInvitesApiAddOrgInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addOrgInvite().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/invites`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddInviteFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Add invite.\n     */\n    async addOrgInvite(requestParameters: OrgInvitesApiAddOrgInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addOrgInviteRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get pending invites.\n     */\n    async getPendingOrgInvitesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TempUserDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/invites`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TempUserDTOFromJSON));\n    }\n\n    /**\n     * Get pending invites.\n     */\n    async getPendingOrgInvites(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TempUserDTO>> {\n        const response = await this.getPendingOrgInvitesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Revoke invite.\n     */\n    async revokeInviteRaw(requestParameters: OrgInvitesApiRevokeInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['invitationCode'] == null) {\n            throw new runtime.RequiredError(\n                'invitationCode',\n                'Required parameter \"invitationCode\" was null or undefined when calling revokeInvite().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/invites/{invitation_code}/revoke`.replace(`{${\"invitation_code\"}}`, encodeURIComponent(String(requestParameters['invitationCode']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Revoke invite.\n     */\n    async revokeInvite(requestParameters: OrgInvitesApiRevokeInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.revokeInviteRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  PatchPrefsCmd,\n  Preferences,\n  SuccessResponseBody,\n  UpdatePrefsCmd,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PatchPrefsCmdFromJSON,\n    PatchPrefsCmdToJSON,\n    PreferencesFromJSON,\n    PreferencesToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdatePrefsCmdFromJSON,\n    UpdatePrefsCmdToJSON,\n} from '../models/index';\n\nexport interface OrgPreferencesApiPatchOrgPreferencesRequest {\n    body: PatchPrefsCmd;\n}\n\nexport interface OrgPreferencesApiUpdateOrgPreferencesRequest {\n    body: UpdatePrefsCmd;\n}\n\n/**\n * \n */\nexport class OrgPreferencesApi extends runtime.BaseAPI {\n\n    /**\n     * Get Current Org Prefs.\n     */\n    async getOrgPreferencesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Preferences>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/preferences`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PreferencesFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Current Org Prefs.\n     */\n    async getOrgPreferences(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Preferences> {\n        const response = await this.getOrgPreferencesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Patch Current Org Prefs.\n     */\n    async patchOrgPreferencesRaw(requestParameters: OrgPreferencesApiPatchOrgPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling patchOrgPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/preferences`,\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PatchPrefsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Patch Current Org Prefs.\n     */\n    async patchOrgPreferences(requestParameters: OrgPreferencesApiPatchOrgPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.patchOrgPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Current Org Prefs.\n     */\n    async updateOrgPreferencesRaw(requestParameters: OrgPreferencesApiUpdateOrgPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrgPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/org/preferences`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdatePrefsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Current Org Prefs.\n     */\n    async updateOrgPreferences(requestParameters: OrgPreferencesApiUpdateOrgPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddOrgUserCommand,\n  CreateOrg200Response,\n  CreateOrgCommand,\n  ErrorResponseBody,\n  OrgDTO,\n  OrgDetailsDTO,\n  OrgUserDTO,\n  QuotaDTO,\n  SearchOrgUsersQueryResult,\n  SuccessResponseBody,\n  UpdateOrgAddressForm,\n  UpdateOrgForm,\n  UpdateOrgUserCommand,\n  UpdateQuotaCmd,\n} from '../models/index';\nimport {\n    AddOrgUserCommandFromJSON,\n    AddOrgUserCommandToJSON,\n    CreateOrg200ResponseFromJSON,\n    CreateOrg200ResponseToJSON,\n    CreateOrgCommandFromJSON,\n    CreateOrgCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    OrgDTOFromJSON,\n    OrgDTOToJSON,\n    OrgDetailsDTOFromJSON,\n    OrgDetailsDTOToJSON,\n    OrgUserDTOFromJSON,\n    OrgUserDTOToJSON,\n    QuotaDTOFromJSON,\n    QuotaDTOToJSON,\n    SearchOrgUsersQueryResultFromJSON,\n    SearchOrgUsersQueryResultToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateOrgAddressFormFromJSON,\n    UpdateOrgAddressFormToJSON,\n    UpdateOrgFormFromJSON,\n    UpdateOrgFormToJSON,\n    UpdateOrgUserCommandFromJSON,\n    UpdateOrgUserCommandToJSON,\n    UpdateQuotaCmdFromJSON,\n    UpdateQuotaCmdToJSON,\n} from '../models/index';\n\nexport interface OrgsApiAddOrgUserRequest {\n    orgId: number;\n    body: AddOrgUserCommand;\n}\n\nexport interface OrgsApiCreateOrgRequest {\n    body: CreateOrgCommand;\n}\n\nexport interface OrgsApiDeleteOrgByIDRequest {\n    orgId: number;\n}\n\nexport interface OrgsApiGetOrgByIDRequest {\n    orgId: number;\n}\n\nexport interface OrgsApiGetOrgByNameRequest {\n    orgName: string;\n}\n\nexport interface OrgsApiGetOrgQuotaRequest {\n    orgId: number;\n}\n\nexport interface OrgsApiGetOrgUsersRequest {\n    orgId: number;\n}\n\nexport interface OrgsApiRemoveOrgUserRequest {\n    orgId: number;\n    userId: number;\n}\n\nexport interface OrgsApiSearchOrgUsersRequest {\n    orgId: number;\n}\n\nexport interface OrgsApiSearchOrgsRequest {\n    page?: number;\n    perpage?: number;\n    name?: string;\n    query?: string;\n}\n\nexport interface OrgsApiUpdateOrgRequest {\n    orgId: number;\n    body: UpdateOrgForm;\n}\n\nexport interface OrgsApiUpdateOrgAddressRequest {\n    orgId: number;\n    body: UpdateOrgAddressForm;\n}\n\nexport interface OrgsApiUpdateOrgQuotaRequest {\n    quotaTarget: string;\n    orgId: number;\n    body: UpdateQuotaCmd;\n}\n\nexport interface OrgsApiUpdateOrgUserRequest {\n    orgId: number;\n    userId: number;\n    body: UpdateOrgUserCommand;\n}\n\n/**\n * \n */\nexport class OrgsApi extends runtime.BaseAPI {\n\n    /**\n     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.\n     * Add a new user to the current organization.\n     */\n    async addOrgUserRaw(requestParameters: OrgsApiAddOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling addOrgUser().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addOrgUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/users`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddOrgUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Adds a global user to the current organization.  If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:add` with scope `users:*`.\n     * Add a new user to the current organization.\n     */\n    async addOrgUser(requestParameters: OrgsApiAddOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addOrgUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Only works if [users.allow_org_create](https://grafana.com/docs/grafana/latest/administration/configuration/#allow_org_create) is set.\n     * Create Organization.\n     */\n    async createOrgRaw(requestParameters: OrgsApiCreateOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateOrg200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrgCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateOrg200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Only works if [users.allow_org_create](https://grafana.com/docs/grafana/latest/administration/configuration/#allow_org_create) is set.\n     * Create Organization.\n     */\n    async createOrg(requestParameters: OrgsApiCreateOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateOrg200Response> {\n        const response = await this.createOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete Organization.\n     */\n    async deleteOrgByIDRaw(requestParameters: OrgsApiDeleteOrgByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling deleteOrgByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete Organization.\n     */\n    async deleteOrgByID(requestParameters: OrgsApiDeleteOrgByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteOrgByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Organization by ID.\n     */\n    async getOrgByIDRaw(requestParameters: OrgsApiGetOrgByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrgDetailsDTO>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling getOrgByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OrgDetailsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Organization by ID.\n     */\n    async getOrgByID(requestParameters: OrgsApiGetOrgByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrgDetailsDTO> {\n        const response = await this.getOrgByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Organization by ID.\n     */\n    async getOrgByNameRaw(requestParameters: OrgsApiGetOrgByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrgDetailsDTO>> {\n        if (requestParameters['orgName'] == null) {\n            throw new runtime.RequiredError(\n                'orgName',\n                'Required parameter \"orgName\" was null or undefined when calling getOrgByName().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/name/{org_name}`.replace(`{${\"org_name\"}}`, encodeURIComponent(String(requestParameters['orgName']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => OrgDetailsDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Organization by ID.\n     */\n    async getOrgByName(requestParameters: OrgsApiGetOrgByNameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrgDetailsDTO> {\n        const response = await this.getOrgByNameRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).\n     * Fetch Organization quota.\n     */\n    async getOrgQuotaRaw(requestParameters: OrgsApiGetOrgQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<QuotaDTO>>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling getOrgQuota().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/quotas`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(QuotaDTOFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).\n     * Fetch Organization quota.\n     */\n    async getOrgQuota(requestParameters: OrgsApiGetOrgQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<QuotaDTO>> {\n        const response = await this.getOrgQuotaRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Get Users in Organization.\n     */\n    async getOrgUsersRaw(requestParameters: OrgsApiGetOrgUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OrgUserDTO>>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling getOrgUsers().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/users`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OrgUserDTOFromJSON));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Get Users in Organization.\n     */\n    async getOrgUsers(requestParameters: OrgsApiGetOrgUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OrgUserDTO>> {\n        const response = await this.getOrgUsersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.\n     * Delete user in current organization.\n     */\n    async removeOrgUserRaw(requestParameters: OrgsApiRemoveOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling removeOrgUser().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling removeOrgUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/users/{user_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))).replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:remove` with scope `users:*`.\n     * Delete user in current organization.\n     */\n    async removeOrgUser(requestParameters: OrgsApiRemoveOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeOrgUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Search Users in Organization.\n     */\n    async searchOrgUsersRaw(requestParameters: OrgsApiSearchOrgUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchOrgUsersQueryResult>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling searchOrgUsers().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/users/search`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchOrgUsersQueryResultFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users:read` with scope `users:*`.\n     * Search Users in Organization.\n     */\n    async searchOrgUsers(requestParameters: OrgsApiSearchOrgUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchOrgUsersQueryResult> {\n        const response = await this.searchOrgUsersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Search all Organizations.\n     */\n    async searchOrgsRaw(requestParameters: OrgsApiSearchOrgsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OrgDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['perpage'] != null) {\n            queryParameters['perpage'] = requestParameters['perpage'];\n        }\n\n        if (requestParameters['name'] != null) {\n            queryParameters['name'] = requestParameters['name'];\n        }\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OrgDTOFromJSON));\n    }\n\n    /**\n     * Search all Organizations.\n     */\n    async searchOrgs(requestParameters: OrgsApiSearchOrgsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OrgDTO>> {\n        const response = await this.searchOrgsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Organization.\n     */\n    async updateOrgRaw(requestParameters: OrgsApiUpdateOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling updateOrg().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Organization.\n     */\n    async updateOrg(requestParameters: OrgsApiUpdateOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Organization\\'s address.\n     */\n    async updateOrgAddressRaw(requestParameters: OrgsApiUpdateOrgAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling updateOrgAddress().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrgAddress().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/address`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgAddressFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Organization\\'s address.\n     */\n    async updateOrgAddress(requestParameters: OrgsApiUpdateOrgAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgAddressRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:write` and scope `org:id:1` (orgIDScope).\n     * Update user quota.\n     */\n    async updateOrgQuotaRaw(requestParameters: OrgsApiUpdateOrgQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['quotaTarget'] == null) {\n            throw new runtime.RequiredError(\n                'quotaTarget',\n                'Required parameter \"quotaTarget\" was null or undefined when calling updateOrgQuota().'\n            );\n        }\n\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling updateOrgQuota().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrgQuota().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/quotas/{quota_target}`.replace(`{${\"quota_target\"}}`, encodeURIComponent(String(requestParameters['quotaTarget']))).replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateQuotaCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:write` and scope `org:id:1` (orgIDScope).\n     * Update user quota.\n     */\n    async updateOrgQuota(requestParameters: OrgsApiUpdateOrgQuotaRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgQuotaRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.\n     * Update Users in Organization.\n     */\n    async updateOrgUserRaw(requestParameters: OrgsApiUpdateOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling updateOrgUser().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling updateOrgUser().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateOrgUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/orgs/{org_id}/users/{user_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))).replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateOrgUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * If you are running Grafana Enterprise and have Fine-grained access control enabled you need to have a permission with action: `org.users.role:update` with scope `users:*`.\n     * Update Users in Organization.\n     */\n    async updateOrgUser(requestParameters: OrgsApiUpdateOrgUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateOrgUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreatePlaylistCommand,\n  ErrorResponseBody,\n  Playlist,\n  PlaylistDTO,\n  PlaylistItemDTO,\n  SuccessResponseBody,\n  UpdatePlaylistCommand,\n} from '../models/index';\nimport {\n    CreatePlaylistCommandFromJSON,\n    CreatePlaylistCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PlaylistFromJSON,\n    PlaylistToJSON,\n    PlaylistDTOFromJSON,\n    PlaylistDTOToJSON,\n    PlaylistItemDTOFromJSON,\n    PlaylistItemDTOToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdatePlaylistCommandFromJSON,\n    UpdatePlaylistCommandToJSON,\n} from '../models/index';\n\nexport interface PlaylistsApiCreatePlaylistRequest {\n    body: CreatePlaylistCommand;\n}\n\nexport interface PlaylistsApiDeletePlaylistRequest {\n    uid: string;\n}\n\nexport interface PlaylistsApiGetPlaylistRequest {\n    uid: string;\n}\n\nexport interface PlaylistsApiGetPlaylistItemsRequest {\n    uid: string;\n}\n\nexport interface PlaylistsApiSearchPlaylistsRequest {\n    query?: string;\n    limit?: number;\n}\n\nexport interface PlaylistsApiUpdatePlaylistRequest {\n    uid: string;\n    body: UpdatePlaylistCommand;\n}\n\n/**\n * \n */\nexport class PlaylistsApi extends runtime.BaseAPI {\n\n    /**\n     * Create playlist.\n     */\n    async createPlaylistRaw(requestParameters: PlaylistsApiCreatePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Playlist>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createPlaylist().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreatePlaylistCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PlaylistFromJSON(jsonValue));\n    }\n\n    /**\n     * Create playlist.\n     */\n    async createPlaylist(requestParameters: PlaylistsApiCreatePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Playlist> {\n        const response = await this.createPlaylistRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete playlist.\n     */\n    async deletePlaylistRaw(requestParameters: PlaylistsApiDeletePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling deletePlaylist().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete playlist.\n     */\n    async deletePlaylist(requestParameters: PlaylistsApiDeletePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deletePlaylistRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get playlist.\n     */\n    async getPlaylistRaw(requestParameters: PlaylistsApiGetPlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlaylistDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getPlaylist().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PlaylistDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get playlist.\n     */\n    async getPlaylist(requestParameters: PlaylistsApiGetPlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlaylistDTO> {\n        const response = await this.getPlaylistRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get playlist items.\n     */\n    async getPlaylistItemsRaw(requestParameters: PlaylistsApiGetPlaylistItemsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PlaylistItemDTO>>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling getPlaylistItems().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists/{uid}/items`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PlaylistItemDTOFromJSON));\n    }\n\n    /**\n     * Get playlist items.\n     */\n    async getPlaylistItems(requestParameters: PlaylistsApiGetPlaylistItemsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PlaylistItemDTO>> {\n        const response = await this.getPlaylistItemsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get playlists.\n     */\n    async searchPlaylistsRaw(requestParameters: PlaylistsApiSearchPlaylistsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Playlist>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PlaylistFromJSON));\n    }\n\n    /**\n     * Get playlists.\n     */\n    async searchPlaylists(requestParameters: PlaylistsApiSearchPlaylistsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Playlist>> {\n        const response = await this.searchPlaylistsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update playlist.\n     */\n    async updatePlaylistRaw(requestParameters: PlaylistsApiUpdatePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlaylistDTO>> {\n        if (requestParameters['uid'] == null) {\n            throw new runtime.RequiredError(\n                'uid',\n                'Required parameter \"uid\" was null or undefined when calling updatePlaylist().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updatePlaylist().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/playlists/{uid}`.replace(`{${\"uid\"}}`, encodeURIComponent(String(requestParameters['uid']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdatePlaylistCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PlaylistDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Update playlist.\n     */\n    async updatePlaylist(requestParameters: PlaylistsApiUpdatePlaylistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlaylistDTO> {\n        const response = await this.updatePlaylistRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AlertRuleGroup,\n  AlertingFileExport,\n  EmbeddedContactPoint,\n  ForbiddenError,\n  MuteTimeInterval,\n  NotificationTemplate,\n  NotificationTemplateContent,\n  ProvisionedAlertRule,\n  PublicError,\n  Route,\n  ValidationError,\n} from '../models/index';\nimport {\n    AlertRuleGroupFromJSON,\n    AlertRuleGroupToJSON,\n    AlertingFileExportFromJSON,\n    AlertingFileExportToJSON,\n    EmbeddedContactPointFromJSON,\n    EmbeddedContactPointToJSON,\n    ForbiddenErrorFromJSON,\n    ForbiddenErrorToJSON,\n    MuteTimeIntervalFromJSON,\n    MuteTimeIntervalToJSON,\n    NotificationTemplateFromJSON,\n    NotificationTemplateToJSON,\n    NotificationTemplateContentFromJSON,\n    NotificationTemplateContentToJSON,\n    ProvisionedAlertRuleFromJSON,\n    ProvisionedAlertRuleToJSON,\n    PublicErrorFromJSON,\n    PublicErrorToJSON,\n    RouteFromJSON,\n    RouteToJSON,\n    ValidationErrorFromJSON,\n    ValidationErrorToJSON,\n} from '../models/index';\n\nexport interface ProvisioningApiRouteDeleteAlertRuleRequest {\n    uID: string;\n    xDisableProvenance?: string;\n}\n\nexport interface ProvisioningApiRouteDeleteAlertRuleGroupRequest {\n    folderUID: string;\n    group: string;\n}\n\nexport interface ProvisioningApiRouteDeleteContactpointsRequest {\n    uID: string;\n}\n\nexport interface ProvisioningApiRouteDeleteMuteTimingRequest {\n    name: string;\n    version?: string;\n    xDisableProvenance?: string;\n}\n\nexport interface ProvisioningApiRouteDeleteTemplateRequest {\n    name: string;\n    version?: string;\n}\n\nexport interface ProvisioningApiRouteExportMuteTimingRequest {\n    name: string;\n    download?: boolean;\n    format?: RouteExportMuteTimingFormatEnum;\n}\n\nexport interface ProvisioningApiRouteExportMuteTimingsRequest {\n    download?: boolean;\n    format?: RouteExportMuteTimingsFormatEnum;\n}\n\nexport interface ProvisioningApiRouteGetAlertRuleRequest {\n    uID: string;\n}\n\nexport interface ProvisioningApiRouteGetAlertRuleExportRequest {\n    uID: string;\n    download?: boolean;\n    format?: RouteGetAlertRuleExportFormatEnum;\n}\n\nexport interface ProvisioningApiRouteGetAlertRuleGroupRequest {\n    folderUID: string;\n    group: string;\n}\n\nexport interface ProvisioningApiRouteGetAlertRuleGroupExportRequest {\n    folderUID: string;\n    group: string;\n    download?: boolean;\n    format?: RouteGetAlertRuleGroupExportFormatEnum;\n}\n\nexport interface ProvisioningApiRouteGetAlertRulesExportRequest {\n    download?: boolean;\n    format?: RouteGetAlertRulesExportFormatEnum;\n    folderUid?: Array<string>;\n    group?: string;\n    ruleUid?: string;\n}\n\nexport interface ProvisioningApiRouteGetContactpointsRequest {\n    name?: string;\n}\n\nexport interface ProvisioningApiRouteGetContactpointsExportRequest {\n    download?: boolean;\n    format?: RouteGetContactpointsExportFormatEnum;\n    decrypt?: boolean;\n    name?: string;\n}\n\nexport interface ProvisioningApiRouteGetMuteTimingRequest {\n    name: string;\n}\n\nexport interface ProvisioningApiRouteGetTemplateRequest {\n    name: string;\n}\n\nexport interface ProvisioningApiRoutePostAlertRuleRequest {\n    xDisableProvenance?: string;\n    body?: Omit<ProvisionedAlertRule, 'updated'>;\n}\n\nexport interface ProvisioningApiRoutePostContactpointsRequest {\n    xDisableProvenance?: string;\n    body?: Omit<EmbeddedContactPoint, 'provenance'>;\n}\n\nexport interface ProvisioningApiRoutePostMuteTimingRequest {\n    xDisableProvenance?: string;\n    body?: MuteTimeInterval;\n}\n\nexport interface ProvisioningApiRoutePutAlertRuleRequest {\n    uID: string;\n    xDisableProvenance?: string;\n    body?: Omit<ProvisionedAlertRule, 'updated'>;\n}\n\nexport interface ProvisioningApiRoutePutAlertRuleGroupRequest {\n    folderUID: string;\n    group: string;\n    xDisableProvenance?: string;\n    body?: AlertRuleGroup;\n}\n\nexport interface ProvisioningApiRoutePutContactpointRequest {\n    uID: string;\n    xDisableProvenance?: string;\n    body?: Omit<EmbeddedContactPoint, 'provenance'>;\n}\n\nexport interface ProvisioningApiRoutePutMuteTimingRequest {\n    name: string;\n    xDisableProvenance?: string;\n    body?: MuteTimeInterval;\n}\n\nexport interface ProvisioningApiRoutePutPolicyTreeRequest {\n    xDisableProvenance?: string;\n    body?: Route;\n}\n\nexport interface ProvisioningApiRoutePutTemplateRequest {\n    name: string;\n    xDisableProvenance?: string;\n    body?: NotificationTemplateContent;\n}\n\n/**\n * \n */\nexport class ProvisioningApi extends runtime.BaseAPI {\n\n    /**\n     * Delete a specific alert rule by UID.\n     */\n    async routeDeleteAlertRuleRaw(requestParameters: ProvisioningApiRouteDeleteAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routeDeleteAlertRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules/{UID}`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete a specific alert rule by UID.\n     */\n    async routeDeleteAlertRule(requestParameters: ProvisioningApiRouteDeleteAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.routeDeleteAlertRuleRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Delete rule group\n     */\n    async routeDeleteAlertRuleGroupRaw(requestParameters: ProvisioningApiRouteDeleteAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['folderUID'] == null) {\n            throw new runtime.RequiredError(\n                'folderUID',\n                'Required parameter \"folderUID\" was null or undefined when calling routeDeleteAlertRuleGroup().'\n            );\n        }\n\n        if (requestParameters['group'] == null) {\n            throw new runtime.RequiredError(\n                'group',\n                'Required parameter \"group\" was null or undefined when calling routeDeleteAlertRuleGroup().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/folder/{FolderUID}/rule-groups/{Group}`.replace(`{${\"FolderUID\"}}`, encodeURIComponent(String(requestParameters['folderUID']))).replace(`{${\"Group\"}}`, encodeURIComponent(String(requestParameters['group']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete rule group\n     */\n    async routeDeleteAlertRuleGroup(requestParameters: ProvisioningApiRouteDeleteAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.routeDeleteAlertRuleGroupRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Delete a contact point.\n     */\n    async routeDeleteContactpointsRaw(requestParameters: ProvisioningApiRouteDeleteContactpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routeDeleteContactpoints().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/contact-points/{UID}`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete a contact point.\n     */\n    async routeDeleteContactpoints(requestParameters: ProvisioningApiRouteDeleteContactpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.routeDeleteContactpointsRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Delete a mute timing.\n     */\n    async routeDeleteMuteTimingRaw(requestParameters: ProvisioningApiRouteDeleteMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routeDeleteMuteTiming().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['version'] != null) {\n            queryParameters['version'] = requestParameters['version'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete a mute timing.\n     */\n    async routeDeleteMuteTiming(requestParameters: ProvisioningApiRouteDeleteMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.routeDeleteMuteTimingRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Delete a template.\n     */\n    async routeDeleteTemplateRaw(requestParameters: ProvisioningApiRouteDeleteTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routeDeleteTemplate().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['version'] != null) {\n            queryParameters['version'] = requestParameters['version'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/templates/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Delete a template.\n     */\n    async routeDeleteTemplate(requestParameters: ProvisioningApiRouteDeleteTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.routeDeleteTemplateRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Export a mute timing in provisioning format.\n     */\n    async routeExportMuteTimingRaw(requestParameters: ProvisioningApiRouteExportMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routeExportMuteTiming().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings/{name}/export`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export a mute timing in provisioning format.\n     */\n    async routeExportMuteTiming(requestParameters: ProvisioningApiRouteExportMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeExportMuteTimingRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export all mute timings in provisioning format.\n     */\n    async routeExportMuteTimingsRaw(requestParameters: ProvisioningApiRouteExportMuteTimingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings/export`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export all mute timings in provisioning format.\n     */\n    async routeExportMuteTimings(requestParameters: ProvisioningApiRouteExportMuteTimingsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeExportMuteTimingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a specific alert rule by UID.\n     */\n    async routeGetAlertRuleRaw(requestParameters: ProvisioningApiRouteGetAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProvisionedAlertRule>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routeGetAlertRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules/{UID}`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ProvisionedAlertRuleFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a specific alert rule by UID.\n     */\n    async routeGetAlertRule(requestParameters: ProvisioningApiRouteGetAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProvisionedAlertRule> {\n        const response = await this.routeGetAlertRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export an alert rule in provisioning file format.\n     */\n    async routeGetAlertRuleExportRaw(requestParameters: ProvisioningApiRouteGetAlertRuleExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routeGetAlertRuleExport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules/{UID}/export`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export an alert rule in provisioning file format.\n     */\n    async routeGetAlertRuleExport(requestParameters: ProvisioningApiRouteGetAlertRuleExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeGetAlertRuleExportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a rule group.\n     */\n    async routeGetAlertRuleGroupRaw(requestParameters: ProvisioningApiRouteGetAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertRuleGroup>> {\n        if (requestParameters['folderUID'] == null) {\n            throw new runtime.RequiredError(\n                'folderUID',\n                'Required parameter \"folderUID\" was null or undefined when calling routeGetAlertRuleGroup().'\n            );\n        }\n\n        if (requestParameters['group'] == null) {\n            throw new runtime.RequiredError(\n                'group',\n                'Required parameter \"group\" was null or undefined when calling routeGetAlertRuleGroup().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/folder/{FolderUID}/rule-groups/{Group}`.replace(`{${\"FolderUID\"}}`, encodeURIComponent(String(requestParameters['folderUID']))).replace(`{${\"Group\"}}`, encodeURIComponent(String(requestParameters['group']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertRuleGroupFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a rule group.\n     */\n    async routeGetAlertRuleGroup(requestParameters: ProvisioningApiRouteGetAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertRuleGroup> {\n        const response = await this.routeGetAlertRuleGroupRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export an alert rule group in provisioning file format.\n     */\n    async routeGetAlertRuleGroupExportRaw(requestParameters: ProvisioningApiRouteGetAlertRuleGroupExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        if (requestParameters['folderUID'] == null) {\n            throw new runtime.RequiredError(\n                'folderUID',\n                'Required parameter \"folderUID\" was null or undefined when calling routeGetAlertRuleGroupExport().'\n            );\n        }\n\n        if (requestParameters['group'] == null) {\n            throw new runtime.RequiredError(\n                'group',\n                'Required parameter \"group\" was null or undefined when calling routeGetAlertRuleGroupExport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/folder/{FolderUID}/rule-groups/{Group}/export`.replace(`{${\"FolderUID\"}}`, encodeURIComponent(String(requestParameters['folderUID']))).replace(`{${\"Group\"}}`, encodeURIComponent(String(requestParameters['group']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export an alert rule group in provisioning file format.\n     */\n    async routeGetAlertRuleGroupExport(requestParameters: ProvisioningApiRouteGetAlertRuleGroupExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeGetAlertRuleGroupExportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get all the alert rules.\n     */\n    async routeGetAlertRulesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProvisionedAlertRule>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProvisionedAlertRuleFromJSON));\n    }\n\n    /**\n     * Get all the alert rules.\n     */\n    async routeGetAlertRules(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProvisionedAlertRule>> {\n        const response = await this.routeGetAlertRulesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export all alert rules in provisioning file format.\n     */\n    async routeGetAlertRulesExportRaw(requestParameters: ProvisioningApiRouteGetAlertRulesExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        if (requestParameters['folderUid'] != null) {\n            queryParameters['folderUid'] = requestParameters['folderUid']!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n        }\n\n        if (requestParameters['group'] != null) {\n            queryParameters['group'] = requestParameters['group'];\n        }\n\n        if (requestParameters['ruleUid'] != null) {\n            queryParameters['ruleUid'] = requestParameters['ruleUid'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules/export`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export all alert rules in provisioning file format.\n     */\n    async routeGetAlertRulesExport(requestParameters: ProvisioningApiRouteGetAlertRulesExportRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeGetAlertRulesExportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get all the contact points.\n     */\n    async routeGetContactpointsRaw(requestParameters: ProvisioningApiRouteGetContactpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<EmbeddedContactPoint>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['name'] != null) {\n            queryParameters['name'] = requestParameters['name'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/contact-points`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EmbeddedContactPointFromJSON));\n    }\n\n    /**\n     * Get all the contact points.\n     */\n    async routeGetContactpoints(requestParameters: ProvisioningApiRouteGetContactpointsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<EmbeddedContactPoint>> {\n        const response = await this.routeGetContactpointsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export all contact points in provisioning file format.\n     */\n    async routeGetContactpointsExportRaw(requestParameters: ProvisioningApiRouteGetContactpointsExportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['download'] != null) {\n            queryParameters['download'] = requestParameters['download'];\n        }\n\n        if (requestParameters['format'] != null) {\n            queryParameters['format'] = requestParameters['format'];\n        }\n\n        if (requestParameters['decrypt'] != null) {\n            queryParameters['decrypt'] = requestParameters['decrypt'];\n        }\n\n        if (requestParameters['name'] != null) {\n            queryParameters['name'] = requestParameters['name'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/contact-points/export`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export all contact points in provisioning file format.\n     */\n    async routeGetContactpointsExport(requestParameters: ProvisioningApiRouteGetContactpointsExportRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeGetContactpointsExportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a mute timing.\n     */\n    async routeGetMuteTimingRaw(requestParameters: ProvisioningApiRouteGetMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MuteTimeInterval>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routeGetMuteTiming().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MuteTimeIntervalFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a mute timing.\n     */\n    async routeGetMuteTiming(requestParameters: ProvisioningApiRouteGetMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MuteTimeInterval> {\n        const response = await this.routeGetMuteTimingRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get all the mute timings.\n     */\n    async routeGetMuteTimingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MuteTimeInterval>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MuteTimeIntervalFromJSON));\n    }\n\n    /**\n     * Get all the mute timings.\n     */\n    async routeGetMuteTimings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MuteTimeInterval>> {\n        const response = await this.routeGetMuteTimingsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get the notification policy tree.\n     */\n    async routeGetPolicyTreeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Route>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/policies`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RouteFromJSON(jsonValue));\n    }\n\n    /**\n     * Get the notification policy tree.\n     */\n    async routeGetPolicyTree(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Route> {\n        const response = await this.routeGetPolicyTreeRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Export the notification policy tree in provisioning file format.\n     */\n    async routeGetPolicyTreeExportRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertingFileExport>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/policies/export`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertingFileExportFromJSON(jsonValue));\n    }\n\n    /**\n     * Export the notification policy tree in provisioning file format.\n     */\n    async routeGetPolicyTreeExport(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertingFileExport> {\n        const response = await this.routeGetPolicyTreeExportRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a notification template.\n     */\n    async routeGetTemplateRaw(requestParameters: ProvisioningApiRouteGetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTemplate>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routeGetTemplate().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/templates/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NotificationTemplateFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a notification template.\n     */\n    async routeGetTemplate(requestParameters: ProvisioningApiRouteGetTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTemplate> {\n        const response = await this.routeGetTemplateRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get all notification templates.\n     */\n    async routeGetTemplatesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<NotificationTemplate>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/templates`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(NotificationTemplateFromJSON));\n    }\n\n    /**\n     * Get all notification templates.\n     */\n    async routeGetTemplates(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<NotificationTemplate>> {\n        const response = await this.routeGetTemplatesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create a new alert rule.\n     */\n    async routePostAlertRuleRaw(requestParameters: ProvisioningApiRoutePostAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProvisionedAlertRule>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ProvisionedAlertRuleToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ProvisionedAlertRuleFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a new alert rule.\n     */\n    async routePostAlertRule(requestParameters: ProvisioningApiRoutePostAlertRuleRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProvisionedAlertRule> {\n        const response = await this.routePostAlertRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create a contact point.\n     */\n    async routePostContactpointsRaw(requestParameters: ProvisioningApiRoutePostContactpointsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EmbeddedContactPoint>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/contact-points`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EmbeddedContactPointToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EmbeddedContactPointFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a contact point.\n     */\n    async routePostContactpoints(requestParameters: ProvisioningApiRoutePostContactpointsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EmbeddedContactPoint> {\n        const response = await this.routePostContactpointsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create a new mute timing.\n     */\n    async routePostMuteTimingRaw(requestParameters: ProvisioningApiRoutePostMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MuteTimeInterval>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MuteTimeIntervalToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MuteTimeIntervalFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a new mute timing.\n     */\n    async routePostMuteTiming(requestParameters: ProvisioningApiRoutePostMuteTimingRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MuteTimeInterval> {\n        const response = await this.routePostMuteTimingRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update an existing alert rule.\n     */\n    async routePutAlertRuleRaw(requestParameters: ProvisioningApiRoutePutAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProvisionedAlertRule>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routePutAlertRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/alert-rules/{UID}`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ProvisionedAlertRuleToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ProvisionedAlertRuleFromJSON(jsonValue));\n    }\n\n    /**\n     * Update an existing alert rule.\n     */\n    async routePutAlertRule(requestParameters: ProvisioningApiRoutePutAlertRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProvisionedAlertRule> {\n        const response = await this.routePutAlertRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Create or update alert rule group.\n     */\n    async routePutAlertRuleGroupRaw(requestParameters: ProvisioningApiRoutePutAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertRuleGroup>> {\n        if (requestParameters['folderUID'] == null) {\n            throw new runtime.RequiredError(\n                'folderUID',\n                'Required parameter \"folderUID\" was null or undefined when calling routePutAlertRuleGroup().'\n            );\n        }\n\n        if (requestParameters['group'] == null) {\n            throw new runtime.RequiredError(\n                'group',\n                'Required parameter \"group\" was null or undefined when calling routePutAlertRuleGroup().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/folder/{FolderUID}/rule-groups/{Group}`.replace(`{${\"FolderUID\"}}`, encodeURIComponent(String(requestParameters['folderUID']))).replace(`{${\"Group\"}}`, encodeURIComponent(String(requestParameters['group']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AlertRuleGroupToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AlertRuleGroupFromJSON(jsonValue));\n    }\n\n    /**\n     * Create or update alert rule group.\n     */\n    async routePutAlertRuleGroup(requestParameters: ProvisioningApiRoutePutAlertRuleGroupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertRuleGroup> {\n        const response = await this.routePutAlertRuleGroupRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update an existing contact point.\n     */\n    async routePutContactpointRaw(requestParameters: ProvisioningApiRoutePutContactpointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters['uID'] == null) {\n            throw new runtime.RequiredError(\n                'uID',\n                'Required parameter \"uID\" was null or undefined when calling routePutContactpoint().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/contact-points/{UID}`.replace(`{${\"UID\"}}`, encodeURIComponent(String(requestParameters['uID']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EmbeddedContactPointToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Update an existing contact point.\n     */\n    async routePutContactpoint(requestParameters: ProvisioningApiRoutePutContactpointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.routePutContactpointRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Replace an existing mute timing.\n     */\n    async routePutMuteTimingRaw(requestParameters: ProvisioningApiRoutePutMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MuteTimeInterval>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routePutMuteTiming().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/mute-timings/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: MuteTimeIntervalToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => MuteTimeIntervalFromJSON(jsonValue));\n    }\n\n    /**\n     * Replace an existing mute timing.\n     */\n    async routePutMuteTiming(requestParameters: ProvisioningApiRoutePutMuteTimingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MuteTimeInterval> {\n        const response = await this.routePutMuteTimingRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Sets the notification policy tree.\n     */\n    async routePutPolicyTreeRaw(requestParameters: ProvisioningApiRoutePutPolicyTreeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/policies`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RouteToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Sets the notification policy tree.\n     */\n    async routePutPolicyTree(requestParameters: ProvisioningApiRoutePutPolicyTreeRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.routePutPolicyTreeRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates an existing notification template.\n     */\n    async routePutTemplateRaw(requestParameters: ProvisioningApiRoutePutTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NotificationTemplate>> {\n        if (requestParameters['name'] == null) {\n            throw new runtime.RequiredError(\n                'name',\n                'Required parameter \"name\" was null or undefined when calling routePutTemplate().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (requestParameters['xDisableProvenance'] != null) {\n            headerParameters['X-Disable-Provenance'] = String(requestParameters['xDisableProvenance']);\n        }\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/templates/{name}`.replace(`{${\"name\"}}`, encodeURIComponent(String(requestParameters['name']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: NotificationTemplateContentToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NotificationTemplateFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates an existing notification template.\n     */\n    async routePutTemplate(requestParameters: ProvisioningApiRoutePutTemplateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NotificationTemplate> {\n        const response = await this.routePutTemplateRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Clears the notification policy tree.\n     */\n    async routeResetPolicyTreeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/provisioning/policies`,\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Clears the notification policy tree.\n     */\n    async routeResetPolicyTree(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.routeResetPolicyTreeRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const RouteExportMuteTimingFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteExportMuteTimingFormatEnum = typeof RouteExportMuteTimingFormatEnum[keyof typeof RouteExportMuteTimingFormatEnum];\n/**\n * @export\n */\nexport const RouteExportMuteTimingsFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteExportMuteTimingsFormatEnum = typeof RouteExportMuteTimingsFormatEnum[keyof typeof RouteExportMuteTimingsFormatEnum];\n/**\n * @export\n */\nexport const RouteGetAlertRuleExportFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteGetAlertRuleExportFormatEnum = typeof RouteGetAlertRuleExportFormatEnum[keyof typeof RouteGetAlertRuleExportFormatEnum];\n/**\n * @export\n */\nexport const RouteGetAlertRuleGroupExportFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteGetAlertRuleGroupExportFormatEnum = typeof RouteGetAlertRuleGroupExportFormatEnum[keyof typeof RouteGetAlertRuleGroupExportFormatEnum];\n/**\n * @export\n */\nexport const RouteGetAlertRulesExportFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteGetAlertRulesExportFormatEnum = typeof RouteGetAlertRulesExportFormatEnum[keyof typeof RouteGetAlertRulesExportFormatEnum];\n/**\n * @export\n */\nexport const RouteGetContactpointsExportFormatEnum = {\n    Yaml: 'yaml',\n    Json: 'json',\n    Hcl: 'hcl'\n} as const;\nexport type RouteGetContactpointsExportFormatEnum = typeof RouteGetContactpointsExportFormatEnum[keyof typeof RouteGetContactpointsExportFormatEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreateQueryInQueryHistoryCommand,\n  ErrorResponseBody,\n  PatchQueryCommentInQueryHistoryCommand,\n  QueryHistoryDeleteQueryResponse,\n  QueryHistoryResponse,\n  QueryHistorySearchResponse,\n} from '../models/index';\nimport {\n    CreateQueryInQueryHistoryCommandFromJSON,\n    CreateQueryInQueryHistoryCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PatchQueryCommentInQueryHistoryCommandFromJSON,\n    PatchQueryCommentInQueryHistoryCommandToJSON,\n    QueryHistoryDeleteQueryResponseFromJSON,\n    QueryHistoryDeleteQueryResponseToJSON,\n    QueryHistoryResponseFromJSON,\n    QueryHistoryResponseToJSON,\n    QueryHistorySearchResponseFromJSON,\n    QueryHistorySearchResponseToJSON,\n} from '../models/index';\n\nexport interface QueryHistoryApiCreateQueryRequest {\n    body: CreateQueryInQueryHistoryCommand;\n}\n\nexport interface QueryHistoryApiDeleteQueryRequest {\n    queryHistoryUid: string;\n}\n\nexport interface QueryHistoryApiPatchQueryCommentRequest {\n    queryHistoryUid: string;\n    body: PatchQueryCommentInQueryHistoryCommand;\n}\n\nexport interface QueryHistoryApiSearchQueriesRequest {\n    datasourceUid?: Array<string>;\n    searchString?: string;\n    onlyStarred?: boolean;\n    sort?: SearchQueriesSortEnum;\n    page?: number;\n    limit?: number;\n    from?: number;\n    to?: number;\n}\n\nexport interface QueryHistoryApiStarQueryRequest {\n    queryHistoryUid: string;\n}\n\nexport interface QueryHistoryApiUnstarQueryRequest {\n    queryHistoryUid: string;\n}\n\n/**\n * \n */\nexport class QueryHistoryApi extends runtime.BaseAPI {\n\n    /**\n     * Adds new query to query history.\n     * Add query to query history.\n     */\n    async createQueryRaw(requestParameters: QueryHistoryApiCreateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistoryResponse>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateQueryInQueryHistoryCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistoryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Adds new query to query history.\n     * Add query to query history.\n     */\n    async createQuery(requestParameters: QueryHistoryApiCreateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistoryResponse> {\n        const response = await this.createQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes an existing query in query history as specified by the UID. This operation cannot be reverted.\n     * Delete query in query history.\n     */\n    async deleteQueryRaw(requestParameters: QueryHistoryApiDeleteQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistoryDeleteQueryResponse>> {\n        if (requestParameters['queryHistoryUid'] == null) {\n            throw new runtime.RequiredError(\n                'queryHistoryUid',\n                'Required parameter \"queryHistoryUid\" was null or undefined when calling deleteQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history/{query_history_uid}`.replace(`{${\"query_history_uid\"}}`, encodeURIComponent(String(requestParameters['queryHistoryUid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistoryDeleteQueryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes an existing query in query history as specified by the UID. This operation cannot be reverted.\n     * Delete query in query history.\n     */\n    async deleteQuery(requestParameters: QueryHistoryApiDeleteQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistoryDeleteQueryResponse> {\n        const response = await this.deleteQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Updates comment for query in query history as specified by the UID.\n     * Update comment for query in query history.\n     */\n    async patchQueryCommentRaw(requestParameters: QueryHistoryApiPatchQueryCommentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistoryResponse>> {\n        if (requestParameters['queryHistoryUid'] == null) {\n            throw new runtime.RequiredError(\n                'queryHistoryUid',\n                'Required parameter \"queryHistoryUid\" was null or undefined when calling patchQueryComment().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling patchQueryComment().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history/{query_history_uid}`.replace(`{${\"query_history_uid\"}}`, encodeURIComponent(String(requestParameters['queryHistoryUid']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PatchQueryCommentInQueryHistoryCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistoryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Updates comment for query in query history as specified by the UID.\n     * Update comment for query in query history.\n     */\n    async patchQueryComment(requestParameters: QueryHistoryApiPatchQueryCommentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistoryResponse> {\n        const response = await this.patchQueryCommentRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns a list of queries in the query history that matches the search criteria. Query history search supports pagination. Use the `limit` parameter to control the maximum number of queries returned; the default limit is 100. You can also use the `page` query parameter to fetch queries from any page other than the first one.\n     * Query history search.\n     */\n    async searchQueriesRaw(requestParameters: QueryHistoryApiSearchQueriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistorySearchResponse>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['datasourceUid'] != null) {\n            queryParameters['datasourceUid'] = requestParameters['datasourceUid'];\n        }\n\n        if (requestParameters['searchString'] != null) {\n            queryParameters['searchString'] = requestParameters['searchString'];\n        }\n\n        if (requestParameters['onlyStarred'] != null) {\n            queryParameters['onlyStarred'] = requestParameters['onlyStarred'];\n        }\n\n        if (requestParameters['sort'] != null) {\n            queryParameters['sort'] = requestParameters['sort'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['from'] != null) {\n            queryParameters['from'] = requestParameters['from'];\n        }\n\n        if (requestParameters['to'] != null) {\n            queryParameters['to'] = requestParameters['to'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistorySearchResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Returns a list of queries in the query history that matches the search criteria. Query history search supports pagination. Use the `limit` parameter to control the maximum number of queries returned; the default limit is 100. You can also use the `page` query parameter to fetch queries from any page other than the first one.\n     * Query history search.\n     */\n    async searchQueries(requestParameters: QueryHistoryApiSearchQueriesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistorySearchResponse> {\n        const response = await this.searchQueriesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Adds star to query in query history as specified by the UID.\n     * Add star to query in query history.\n     */\n    async starQueryRaw(requestParameters: QueryHistoryApiStarQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistoryResponse>> {\n        if (requestParameters['queryHistoryUid'] == null) {\n            throw new runtime.RequiredError(\n                'queryHistoryUid',\n                'Required parameter \"queryHistoryUid\" was null or undefined when calling starQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history/star/{query_history_uid}`.replace(`{${\"query_history_uid\"}}`, encodeURIComponent(String(requestParameters['queryHistoryUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistoryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Adds star to query in query history as specified by the UID.\n     * Add star to query in query history.\n     */\n    async starQuery(requestParameters: QueryHistoryApiStarQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistoryResponse> {\n        const response = await this.starQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Removes star from query in query history as specified by the UID.\n     * Remove star to query in query history.\n     */\n    async unstarQueryRaw(requestParameters: QueryHistoryApiUnstarQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryHistoryResponse>> {\n        if (requestParameters['queryHistoryUid'] == null) {\n            throw new runtime.RequiredError(\n                'queryHistoryUid',\n                'Required parameter \"queryHistoryUid\" was null or undefined when calling unstarQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/query-history/star/{query_history_uid}`.replace(`{${\"query_history_uid\"}}`, encodeURIComponent(String(requestParameters['queryHistoryUid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => QueryHistoryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Removes star from query in query history as specified by the UID.\n     * Remove star to query in query history.\n     */\n    async unstarQuery(requestParameters: QueryHistoryApiUnstarQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryHistoryResponse> {\n        const response = await this.unstarQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const SearchQueriesSortEnum = {\n    Desc: 'time-desc',\n    Asc: 'time-asc'\n} as const;\nexport type SearchQueriesSortEnum = typeof SearchQueriesSortEnum[keyof typeof SearchQueriesSortEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  PrometheusRemoteWriteTargetJSON,\n  RecordingRuleJSON,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PrometheusRemoteWriteTargetJSONFromJSON,\n    PrometheusRemoteWriteTargetJSONToJSON,\n    RecordingRuleJSONFromJSON,\n    RecordingRuleJSONToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface RecordingRulesApiCreateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\nexport interface RecordingRulesApiCreateRecordingRuleWriteTargetRequest {\n    body: PrometheusRemoteWriteTargetJSON;\n}\n\nexport interface RecordingRulesApiDeleteRecordingRuleRequest {\n    recordingRuleID: number;\n}\n\nexport interface RecordingRulesApiTestCreateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\nexport interface RecordingRulesApiUpdateRecordingRuleRequest {\n    body: RecordingRuleJSON;\n}\n\n/**\n * \n */\nexport class RecordingRulesApi extends runtime.BaseAPI {\n\n    /**\n     * Create a recording rule that is then registered and started.\n     */\n    async createRecordingRuleRaw(requestParameters: RecordingRulesApiCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecordingRuleJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordingRuleJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Create a recording rule that is then registered and started.\n     */\n    async createRecordingRule(requestParameters: RecordingRulesApiCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecordingRuleJSON> {\n        const response = await this.createRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * It returns a 422 if there is not an existing prometheus data source configured.\n     * Create a remote write target.\n     */\n    async createRecordingRuleWriteTargetRaw(requestParameters: RecordingRulesApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrometheusRemoteWriteTargetJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createRecordingRuleWriteTarget().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PrometheusRemoteWriteTargetJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PrometheusRemoteWriteTargetJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * It returns a 422 if there is not an existing prometheus data source configured.\n     * Create a remote write target.\n     */\n    async createRecordingRuleWriteTarget(requestParameters: RecordingRulesApiCreateRecordingRuleWriteTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON> {\n        const response = await this.createRecordingRuleWriteTargetRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete removes the rule from the registry and stops it.\n     */\n    async deleteRecordingRuleRaw(requestParameters: RecordingRulesApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['recordingRuleID'] == null) {\n            throw new runtime.RequiredError(\n                'recordingRuleID',\n                'Required parameter \"recordingRuleID\" was null or undefined when calling deleteRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/{recordingRuleID}`.replace(`{${\"recordingRuleID\"}}`, encodeURIComponent(String(requestParameters['recordingRuleID']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete removes the rule from the registry and stops it.\n     */\n    async deleteRecordingRule(requestParameters: RecordingRulesApiDeleteRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete the remote write target.\n     */\n    async deleteRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete the remote write target.\n     */\n    async deleteRecordingRuleWriteTarget(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteRecordingRuleWriteTargetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Return the prometheus remote write target.\n     */\n    async getRecordingRuleWriteTargetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrometheusRemoteWriteTargetJSON>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/writer`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PrometheusRemoteWriteTargetJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Return the prometheus remote write target.\n     */\n    async getRecordingRuleWriteTarget(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrometheusRemoteWriteTargetJSON> {\n        const response = await this.getRecordingRuleWriteTargetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Lists all rules in the database: active or deleted.\n     */\n    async listRecordingRulesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RecordingRuleJSON>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RecordingRuleJSONFromJSON));\n    }\n\n    /**\n     * Lists all rules in the database: active or deleted.\n     */\n    async listRecordingRules(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecordingRuleJSON>> {\n        const response = await this.listRecordingRulesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Test a recording rule.\n     */\n    async testCreateRecordingRuleRaw(requestParameters: RecordingRulesApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling testCreateRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules/test`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Test a recording rule.\n     */\n    async testCreateRecordingRule(requestParameters: RecordingRulesApiTestCreateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.testCreateRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update the active status of a rule.\n     */\n    async updateRecordingRuleRaw(requestParameters: RecordingRulesApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecordingRuleJSON>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateRecordingRule().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/recording-rules`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RecordingRuleJSONToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RecordingRuleJSONFromJSON(jsonValue));\n    }\n\n    /**\n     * Update the active status of a rule.\n     */\n    async updateRecordingRule(requestParameters: RecordingRulesApiUpdateRecordingRuleRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecordingRuleJSON> {\n        const response = await this.updateRecordingRuleRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreateOrUpdateReport,\n  CreateReport200Response,\n  ErrorResponseBody,\n  Report,\n  ReportEmail,\n  ReportSettings,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    CreateOrUpdateReportFromJSON,\n    CreateOrUpdateReportToJSON,\n    CreateReport200ResponseFromJSON,\n    CreateReport200ResponseToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    ReportFromJSON,\n    ReportToJSON,\n    ReportEmailFromJSON,\n    ReportEmailToJSON,\n    ReportSettingsFromJSON,\n    ReportSettingsToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface ReportsApiCreateReportRequest {\n    body: CreateOrUpdateReport;\n}\n\nexport interface ReportsApiDeleteReportRequest {\n    id: number;\n}\n\nexport interface ReportsApiGetReportRequest {\n    id: number;\n}\n\nexport interface ReportsApiRenderReportCSVsRequest {\n    dashboards?: string;\n    title?: string;\n}\n\nexport interface ReportsApiRenderReportPDFsRequest {\n    dashboards?: string;\n    orientation?: string;\n    layout?: string;\n    title?: string;\n    scaleFactor?: string;\n    includeTables?: string;\n}\n\nexport interface ReportsApiSaveReportSettingsRequest {\n    body: ReportSettings;\n}\n\nexport interface ReportsApiSendReportRequest {\n    body: ReportEmail;\n}\n\nexport interface ReportsApiSendTestEmailRequest {\n    body: CreateOrUpdateReport;\n}\n\nexport interface ReportsApiUpdateReportRequest {\n    id: number;\n    body: CreateOrUpdateReport;\n}\n\n/**\n * \n */\nexport class ReportsApi extends runtime.BaseAPI {\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.\n     * Create a report.\n     */\n    async createReportRaw(requestParameters: ReportsApiCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateReport200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateReport200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports.admin:create`.\n     * Create a report.\n     */\n    async createReport(requestParameters: ReportsApiCreateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateReport200Response> {\n        const response = await this.createReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.\n     * Delete a report.\n     */\n    async deleteReportRaw(requestParameters: ReportsApiDeleteReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling deleteReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.delete` with scope `reports:id:<report ID>`.\n     * Delete a report.\n     */\n    async deleteReport(requestParameters: ReportsApiDeleteReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.\n     * Get a report.\n     */\n    async getReportRaw(requestParameters: ReportsApiGetReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Report>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling getReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ReportFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:id:<report ID>`.\n     * Get a report.\n     */\n    async getReport(requestParameters: ReportsApiGetReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Report> {\n        const response = await this.getReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.\n     * Get report settings.\n     */\n    async getReportSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReportSettings>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/settings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ReportSettingsFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`x.\n     * Get report settings.\n     */\n    async getReportSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReportSettings> {\n        const response = await this.getReportSettingsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.\n     * List reports.\n     */\n    async getReportsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Report>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ReportFromJSON));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports:read` with scope `reports:*`.\n     * List reports.\n     */\n    async getReports(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Report>> {\n        const response = await this.getReportsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.\n     * Get custom branding report image.\n     */\n    async getSettingsImageRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/images/:image`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:read`.\n     * Get custom branding report image.\n     */\n    async getSettingsImage(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.getSettingsImageRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Download a CSV report.\n     */\n    async renderReportCSVsRaw(requestParameters: ReportsApiRenderReportCSVsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['dashboards'] != null) {\n            queryParameters['dashboards'] = requestParameters['dashboards'];\n        }\n\n        if (requestParameters['title'] != null) {\n            queryParameters['title'] = requestParameters['title'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/render/csvs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Download a CSV report.\n     */\n    async renderReportCSVs(requestParameters: ReportsApiRenderReportCSVsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.renderReportCSVsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Render report for multiple dashboards.\n     */\n    async renderReportPDFsRaw(requestParameters: ReportsApiRenderReportPDFsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['dashboards'] != null) {\n            queryParameters['dashboards'] = requestParameters['dashboards'];\n        }\n\n        if (requestParameters['orientation'] != null) {\n            queryParameters['orientation'] = requestParameters['orientation'];\n        }\n\n        if (requestParameters['layout'] != null) {\n            queryParameters['layout'] = requestParameters['layout'];\n        }\n\n        if (requestParameters['title'] != null) {\n            queryParameters['title'] = requestParameters['title'];\n        }\n\n        if (requestParameters['scaleFactor'] != null) {\n            queryParameters['scaleFactor'] = requestParameters['scaleFactor'];\n        }\n\n        if (requestParameters['includeTables'] != null) {\n            queryParameters['includeTables'] = requestParameters['includeTables'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/render/pdfs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Available to all users and with a valid license.\n     * Render report for multiple dashboards.\n     */\n    async renderReportPDFs(requestParameters: ReportsApiRenderReportPDFsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.renderReportPDFsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.\n     * Save settings.\n     */\n    async saveReportSettingsRaw(requestParameters: ReportsApiSaveReportSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling saveReportSettings().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/settings`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ReportSettingsToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.settings:write`xx.\n     * Save settings.\n     */\n    async saveReportSettings(requestParameters: ReportsApiSaveReportSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.saveReportSettingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.\n     * Send a report.\n     */\n    async sendReportRaw(requestParameters: ReportsApiSendReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling sendReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/email`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ReportEmailToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.  Only available in Grafana Enterprise v7.0+. This API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.  You need to have a permission with action `reports:send`.\n     * Send a report.\n     */\n    async sendReport(requestParameters: ReportsApiSendReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.sendReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.\n     * Send test report via email.\n     */\n    async sendTestEmailRaw(requestParameters: ReportsApiSendTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling sendTestEmail().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/test-email`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid license.  You need to have a permission with action `reports:send`.\n     * Send test report via email.\n     */\n    async sendTestEmail(requestParameters: ReportsApiSendTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.sendTestEmailRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.\n     * Update a report.\n     */\n    async updateReportRaw(requestParameters: ReportsApiUpdateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling updateReport().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateReport().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/reports/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateOrUpdateReportToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Available to org admins only and with a valid or expired license.  You need to have a permission with action `reports.admin:write` with scope `reports:id:<report ID>`.\n     * Update a report.\n     */\n    async updateReport(requestParameters: ReportsApiUpdateReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateReportRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n} from '../models/index';\n\nexport interface SamlApiPostACSRequest {\n    relayState?: string;\n}\n\nexport interface SamlApiPostSLORequest {\n    sAMLRequest?: string;\n    sAMLResponse?: string;\n}\n\n/**\n * \n */\nexport class SamlApi extends runtime.BaseAPI {\n\n    /**\n     * It exposes the SP (Grafana\\'s) metadata for the IdP\\'s consumption.\n     */\n    async getMetadataRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<number>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/metadata`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * It exposes the SP (Grafana\\'s) metadata for the IdP\\'s consumption.\n     */\n    async getMetadata(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<number>> {\n        const response = await this.getMetadataRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * GetLogout initiates single logout process.\n     */\n    async getSAMLLogoutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/logout/saml`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * GetLogout initiates single logout process.\n     */\n    async getSAMLLogout(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getSAMLLogoutRaw(initOverrides);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async getSLORaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/slo`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async getSLO(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getSLORaw(initOverrides);\n    }\n\n    /**\n     * It performs Assertion Consumer Service (ACS).\n     */\n    async postACSRaw(requestParameters: SamlApiPostACSRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['relayState'] != null) {\n            queryParameters['RelayState'] = requestParameters['relayState'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/acs`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * It performs Assertion Consumer Service (ACS).\n     */\n    async postACS(requestParameters: SamlApiPostACSRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postACSRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async postSLORaw(requestParameters: SamlApiPostSLORequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['sAMLRequest'] != null) {\n            queryParameters['SAMLRequest'] = requestParameters['sAMLRequest'];\n        }\n\n        if (requestParameters['sAMLResponse'] != null) {\n            queryParameters['SAMLResponse'] = requestParameters['sAMLResponse'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/saml/slo`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * There might be two possible requests: 1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request. 2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana, or in case of IdP-initiated logout.\n     * It performs Single Logout (SLO) callback.\n     */\n    async postSLO(requestParameters: SamlApiPostSLORequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.postSLORaw(requestParameters, initOverrides);\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  Hit,\n  ListSortOptions200Response,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    HitFromJSON,\n    HitToJSON,\n    ListSortOptions200ResponseFromJSON,\n    ListSortOptions200ResponseToJSON,\n} from '../models/index';\n\nexport interface SearchApiSearchRequest {\n    query?: string;\n    tag?: Array<string>;\n    type?: SearchTypeEnum;\n    dashboardIds?: Array<number>;\n    dashboardUIDs?: Array<string>;\n    folderIds?: Array<number>;\n    folderUIDs?: Array<string>;\n    starred?: boolean;\n    limit?: number;\n    page?: number;\n    permission?: SearchPermissionEnum;\n    sort?: SearchSortEnum;\n    deleted?: boolean;\n}\n\n/**\n * \n */\nexport class SearchApi extends runtime.BaseAPI {\n\n    /**\n     * List search sorting options.\n     */\n    async listSortOptionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListSortOptions200Response>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/search/sorting`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ListSortOptions200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * List search sorting options.\n     */\n    async listSortOptions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListSortOptions200Response> {\n        const response = await this.listSortOptionsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     */\n    async searchRaw(requestParameters: SearchApiSearchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Hit>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        if (requestParameters['tag'] != null) {\n            queryParameters['tag'] = requestParameters['tag'];\n        }\n\n        if (requestParameters['type'] != null) {\n            queryParameters['type'] = requestParameters['type'];\n        }\n\n        if (requestParameters['dashboardIds'] != null) {\n            queryParameters['dashboardIds'] = requestParameters['dashboardIds']!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n        }\n\n        if (requestParameters['dashboardUIDs'] != null) {\n            queryParameters['dashboardUIDs'] = requestParameters['dashboardUIDs']!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n        }\n\n        if (requestParameters['folderIds'] != null) {\n            queryParameters['folderIds'] = requestParameters['folderIds']!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n        }\n\n        if (requestParameters['folderUIDs'] != null) {\n            queryParameters['folderUIDs'] = requestParameters['folderUIDs']!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n        }\n\n        if (requestParameters['starred'] != null) {\n            queryParameters['starred'] = requestParameters['starred'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['permission'] != null) {\n            queryParameters['permission'] = requestParameters['permission'];\n        }\n\n        if (requestParameters['sort'] != null) {\n            queryParameters['sort'] = requestParameters['sort'];\n        }\n\n        if (requestParameters['deleted'] != null) {\n            queryParameters['deleted'] = requestParameters['deleted'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(HitFromJSON));\n    }\n\n    /**\n     */\n    async search(requestParameters: SearchApiSearchRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Hit>> {\n        const response = await this.searchRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n\n/**\n * @export\n */\nexport const SearchTypeEnum = {\n    Folder: 'dash-folder',\n    Db: 'dash-db'\n} as const;\nexport type SearchTypeEnum = typeof SearchTypeEnum[keyof typeof SearchTypeEnum];\n/**\n * @export\n */\nexport const SearchPermissionEnum = {\n    Edit: 'Edit',\n    View: 'View'\n} as const;\nexport type SearchPermissionEnum = typeof SearchPermissionEnum[keyof typeof SearchPermissionEnum];\n/**\n * @export\n */\nexport const SearchSortEnum = {\n    Asc: 'alpha-asc',\n    Desc: 'alpha-desc'\n} as const;\nexport type SearchSortEnum = typeof SearchSortEnum[keyof typeof SearchSortEnum];\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddServiceAccountTokenCommand,\n  CreateServiceAccountForm,\n  ErrorResponseBody,\n  NewApiKeyResult,\n  SearchOrgServiceAccountsResult,\n  ServiceAccountDTO,\n  SuccessResponseBody,\n  TokenDTO,\n  UpdateServiceAccount200Response,\n  UpdateServiceAccountForm,\n} from '../models/index';\nimport {\n    AddServiceAccountTokenCommandFromJSON,\n    AddServiceAccountTokenCommandToJSON,\n    CreateServiceAccountFormFromJSON,\n    CreateServiceAccountFormToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    NewApiKeyResultFromJSON,\n    NewApiKeyResultToJSON,\n    SearchOrgServiceAccountsResultFromJSON,\n    SearchOrgServiceAccountsResultToJSON,\n    ServiceAccountDTOFromJSON,\n    ServiceAccountDTOToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TokenDTOFromJSON,\n    TokenDTOToJSON,\n    UpdateServiceAccount200ResponseFromJSON,\n    UpdateServiceAccount200ResponseToJSON,\n    UpdateServiceAccountFormFromJSON,\n    UpdateServiceAccountFormToJSON,\n} from '../models/index';\n\nexport interface ServiceAccountsApiCreateServiceAccountRequest {\n    body?: CreateServiceAccountForm;\n}\n\nexport interface ServiceAccountsApiCreateTokenRequest {\n    serviceAccountId: number;\n    body?: AddServiceAccountTokenCommand;\n}\n\nexport interface ServiceAccountsApiDeleteServiceAccountRequest {\n    serviceAccountId: number;\n}\n\nexport interface ServiceAccountsApiDeleteTokenRequest {\n    tokenId: number;\n    serviceAccountId: number;\n}\n\nexport interface ServiceAccountsApiListTokensRequest {\n    serviceAccountId: number;\n}\n\nexport interface ServiceAccountsApiRetrieveServiceAccountRequest {\n    serviceAccountId: number;\n}\n\nexport interface ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest {\n    disabled?: boolean;\n    expiredTokens?: boolean;\n    query?: string;\n    perpage?: number;\n    page?: number;\n}\n\nexport interface ServiceAccountsApiUpdateServiceAccountRequest {\n    serviceAccountId: number;\n    body?: UpdateServiceAccountForm;\n}\n\n/**\n * \n */\nexport class ServiceAccountsApi extends runtime.BaseAPI {\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:*`  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * Create service account\n     */\n    async createServiceAccountRaw(requestParameters: ServiceAccountsApiCreateServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceAccountDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateServiceAccountFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServiceAccountDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:*`  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * Create service account\n     */\n    async createServiceAccount(requestParameters: ServiceAccountsApiCreateServiceAccountRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceAccountDTO> {\n        const response = await this.createServiceAccountRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\n     * CreateNewToken adds a token to a service account\n     */\n    async createTokenRaw(requestParameters: ServiceAccountsApiCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NewApiKeyResult>> {\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling createToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}/tokens`.replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddServiceAccountTokenCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => NewApiKeyResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\n     * CreateNewToken adds a token to a service account\n     */\n    async createToken(requestParameters: ServiceAccountsApiCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NewApiKeyResult> {\n        const response = await this.createTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:delete` scope: `serviceaccounts:id:1` (single service account)\n     * Delete service account\n     */\n    async deleteServiceAccountRaw(requestParameters: ServiceAccountsApiDeleteServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling deleteServiceAccount().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}`.replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:delete` scope: `serviceaccounts:id:1` (single service account)\n     * Delete service account\n     */\n    async deleteServiceAccount(requestParameters: ServiceAccountsApiDeleteServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteServiceAccountRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * DeleteToken deletes service account tokens\n     */\n    async deleteTokenRaw(requestParameters: ServiceAccountsApiDeleteTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['tokenId'] == null) {\n            throw new runtime.RequiredError(\n                'tokenId',\n                'Required parameter \"tokenId\" was null or undefined when calling deleteToken().'\n            );\n        }\n\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling deleteToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}/tokens/{tokenId}`.replace(`{${\"tokenId\"}}`, encodeURIComponent(String(requestParameters['tokenId']))).replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * DeleteToken deletes service account tokens\n     */\n    async deleteToken(requestParameters: ServiceAccountsApiDeleteTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `global:serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * Get service account tokens\n     */\n    async listTokensRaw(requestParameters: ServiceAccountsApiListTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TokenDTO>>> {\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling listTokens().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}/tokens`.replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TokenDTOFromJSON));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `global:serviceaccounts:id:1` (single service account)  Requires basic authentication and that the authenticated user is a Grafana Admin.\n     * Get service account tokens\n     */\n    async listTokens(requestParameters: ServiceAccountsApiListTokensRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TokenDTO>> {\n        const response = await this.listTokensRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:id:1` (single service account)\n     * Get single serviceaccount by Id\n     */\n    async retrieveServiceAccountRaw(requestParameters: ServiceAccountsApiRetrieveServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ServiceAccountDTO>> {\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling retrieveServiceAccount().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}`.replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ServiceAccountDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:id:1` (single service account)\n     * Get single serviceaccount by Id\n     */\n    async retrieveServiceAccount(requestParameters: ServiceAccountsApiRetrieveServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ServiceAccountDTO> {\n        const response = await this.retrieveServiceAccountRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:*`\n     * Search service accounts with paging\n     */\n    async searchOrgServiceAccountsWithPagingRaw(requestParameters: ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchOrgServiceAccountsResult>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['disabled'] != null) {\n            queryParameters['Disabled'] = requestParameters['disabled'];\n        }\n\n        if (requestParameters['expiredTokens'] != null) {\n            queryParameters['expiredTokens'] = requestParameters['expiredTokens'];\n        }\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        if (requestParameters['perpage'] != null) {\n            queryParameters['perpage'] = requestParameters['perpage'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchOrgServiceAccountsResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:read` scope: `serviceaccounts:*`\n     * Search service accounts with paging\n     */\n    async searchOrgServiceAccountsWithPaging(requestParameters: ServiceAccountsApiSearchOrgServiceAccountsWithPagingRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchOrgServiceAccountsResult> {\n        const response = await this.searchOrgServiceAccountsWithPagingRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\n     * Update service account\n     */\n    async updateServiceAccountRaw(requestParameters: ServiceAccountsApiUpdateServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateServiceAccount200Response>> {\n        if (requestParameters['serviceAccountId'] == null) {\n            throw new runtime.RequiredError(\n                'serviceAccountId',\n                'Required parameter \"serviceAccountId\" was null or undefined when calling updateServiceAccount().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/serviceaccounts/{serviceAccountId}`.replace(`{${\"serviceAccountId\"}}`, encodeURIComponent(String(requestParameters['serviceAccountId']))),\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateServiceAccountFormToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UpdateServiceAccount200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation): action: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\n     * Update service account\n     */\n    async updateServiceAccount(requestParameters: ServiceAccountsApiUpdateServiceAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateServiceAccount200Response> {\n        const response = await this.updateServiceAccountRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ChangeUserPasswordCommand,\n  ClearHelpFlags200Response,\n  ErrorResponseBody,\n  QuotaDTO,\n  RevokeAuthTokenCmd,\n  SuccessResponseBody,\n  TeamDTO,\n  UpdateUserCommand,\n  UserOrgDTO,\n  UserProfileDTO,\n  UserToken,\n} from '../models/index';\nimport {\n    ChangeUserPasswordCommandFromJSON,\n    ChangeUserPasswordCommandToJSON,\n    ClearHelpFlags200ResponseFromJSON,\n    ClearHelpFlags200ResponseToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    QuotaDTOFromJSON,\n    QuotaDTOToJSON,\n    RevokeAuthTokenCmdFromJSON,\n    RevokeAuthTokenCmdToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TeamDTOFromJSON,\n    TeamDTOToJSON,\n    UpdateUserCommandFromJSON,\n    UpdateUserCommandToJSON,\n    UserOrgDTOFromJSON,\n    UserOrgDTOToJSON,\n    UserProfileDTOFromJSON,\n    UserProfileDTOToJSON,\n    UserTokenFromJSON,\n    UserTokenToJSON,\n} from '../models/index';\n\nexport interface SignedInUserApiChangeUserPasswordRequest {\n    body: ChangeUserPasswordCommand;\n}\n\nexport interface SignedInUserApiRevokeUserAuthTokenRequest {\n    body: RevokeAuthTokenCmd;\n}\n\nexport interface SignedInUserApiSetHelpFlagRequest {\n    flagId: string;\n}\n\nexport interface SignedInUserApiStarDashboardRequest {\n    dashboardId: string;\n}\n\nexport interface SignedInUserApiStarDashboardByUIDRequest {\n    dashboardUid: string;\n}\n\nexport interface SignedInUserApiUnstarDashboardRequest {\n    dashboardId: string;\n}\n\nexport interface SignedInUserApiUnstarDashboardByUIDRequest {\n    dashboardUid: string;\n}\n\nexport interface SignedInUserApiUpdateSignedInUserRequest {\n    body: UpdateUserCommand;\n}\n\nexport interface SignedInUserApiUserSetUsingOrgRequest {\n    orgId: number;\n}\n\n/**\n * \n */\nexport class SignedInUserApi extends runtime.BaseAPI {\n\n    /**\n     * Changes the password for the user.\n     * Change Password.\n     */\n    async changeUserPasswordRaw(requestParameters: SignedInUserApiChangeUserPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling changeUserPassword().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/password`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: ChangeUserPasswordCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Changes the password for the user.\n     * Change Password.\n     */\n    async changeUserPassword(requestParameters: SignedInUserApiChangeUserPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.changeUserPasswordRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Clear user help flag.\n     */\n    async clearHelpFlagsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClearHelpFlags200Response>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/helpflags/clear`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ClearHelpFlags200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Clear user help flag.\n     */\n    async clearHelpFlags(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClearHelpFlags200Response> {\n        const response = await this.clearHelpFlagsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get (current authenticated user)\n     */\n    async getSignedInUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProfileDTO>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UserProfileDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get (current authenticated user)\n     */\n    async getSignedInUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProfileDTO> {\n        const response = await this.getSignedInUserRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Return a list of all organizations of the current user.\n     * Organizations of the actual User.\n     */\n    async getSignedInUserOrgListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserOrgDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/orgs`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserOrgDTOFromJSON));\n    }\n\n    /**\n     * Return a list of all organizations of the current user.\n     * Organizations of the actual User.\n     */\n    async getSignedInUserOrgList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserOrgDTO>> {\n        const response = await this.getSignedInUserOrgListRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Return a list of all teams that the current user is member of.\n     * Teams that the actual User is member of.\n     */\n    async getSignedInUserTeamListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/teams`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamDTOFromJSON));\n    }\n\n    /**\n     * Return a list of all teams that the current user is member of.\n     * Teams that the actual User is member of.\n     */\n    async getSignedInUserTeamList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamDTO>> {\n        const response = await this.getSignedInUserTeamListRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Return a list of all auth tokens (devices) that the actual user currently have logged in from.\n     * Auth tokens of the actual User.\n     */\n    async getUserAuthTokensRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserToken>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/auth-tokens`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserTokenFromJSON));\n    }\n\n    /**\n     * Return a list of all auth tokens (devices) that the actual user currently have logged in from.\n     * Auth tokens of the actual User.\n     */\n    async getUserAuthTokens(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserToken>> {\n        const response = await this.getUserAuthTokensRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Fetch user quota.\n     */\n    async getUserQuotasRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<QuotaDTO>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/quotas`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(QuotaDTOFromJSON));\n    }\n\n    /**\n     * Fetch user quota.\n     */\n    async getUserQuotas(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<QuotaDTO>> {\n        const response = await this.getUserQuotasRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Revokes the given auth token (device) for the actual user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.\n     * Revoke an auth token of the actual User.\n     */\n    async revokeUserAuthTokenRaw(requestParameters: SignedInUserApiRevokeUserAuthTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling revokeUserAuthToken().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/revoke-auth-token`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: RevokeAuthTokenCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Revokes the given auth token (device) for the actual user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.\n     * Revoke an auth token of the actual User.\n     */\n    async revokeUserAuthToken(requestParameters: SignedInUserApiRevokeUserAuthTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.revokeUserAuthTokenRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Set user help flag.\n     */\n    async setHelpFlagRaw(requestParameters: SignedInUserApiSetHelpFlagRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClearHelpFlags200Response>> {\n        if (requestParameters['flagId'] == null) {\n            throw new runtime.RequiredError(\n                'flagId',\n                'Required parameter \"flagId\" was null or undefined when calling setHelpFlag().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/helpflags/{flag_id}`.replace(`{${\"flag_id\"}}`, encodeURIComponent(String(requestParameters['flagId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ClearHelpFlags200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Set user help flag.\n     */\n    async setHelpFlag(requestParameters: SignedInUserApiSetHelpFlagRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClearHelpFlags200Response> {\n        const response = await this.setHelpFlagRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Stars the given Dashboard for the actual user.\n     * Star a dashboard.\n     * @deprecated\n     */\n    async starDashboardRaw(requestParameters: SignedInUserApiStarDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardId'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardId',\n                'Required parameter \"dashboardId\" was null or undefined when calling starDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/stars/dashboard/{dashboard_id}`.replace(`{${\"dashboard_id\"}}`, encodeURIComponent(String(requestParameters['dashboardId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Stars the given Dashboard for the actual user.\n     * Star a dashboard.\n     * @deprecated\n     */\n    async starDashboard(requestParameters: SignedInUserApiStarDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.starDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Stars the given Dashboard for the actual user.\n     * Star a dashboard.\n     */\n    async starDashboardByUIDRaw(requestParameters: SignedInUserApiStarDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling starDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/stars/dashboard/uid/{dashboard_uid}`.replace(`{${\"dashboard_uid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Stars the given Dashboard for the actual user.\n     * Star a dashboard.\n     */\n    async starDashboardByUID(requestParameters: SignedInUserApiStarDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.starDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes the starring of the given Dashboard for the actual user.\n     * Unstar a dashboard.\n     * @deprecated\n     */\n    async unstarDashboardRaw(requestParameters: SignedInUserApiUnstarDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardId'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardId',\n                'Required parameter \"dashboardId\" was null or undefined when calling unstarDashboard().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/stars/dashboard/{dashboard_id}`.replace(`{${\"dashboard_id\"}}`, encodeURIComponent(String(requestParameters['dashboardId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes the starring of the given Dashboard for the actual user.\n     * Unstar a dashboard.\n     * @deprecated\n     */\n    async unstarDashboard(requestParameters: SignedInUserApiUnstarDashboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.unstarDashboardRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Deletes the starring of the given Dashboard for the actual user.\n     * Unstar a dashboard.\n     */\n    async unstarDashboardByUIDRaw(requestParameters: SignedInUserApiUnstarDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['dashboardUid'] == null) {\n            throw new runtime.RequiredError(\n                'dashboardUid',\n                'Required parameter \"dashboardUid\" was null or undefined when calling unstarDashboardByUID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/stars/dashboard/uid/{dashboard_uid}`.replace(`{${\"dashboard_uid\"}}`, encodeURIComponent(String(requestParameters['dashboardUid']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Deletes the starring of the given Dashboard for the actual user.\n     * Unstar a dashboard.\n     */\n    async unstarDashboardByUID(requestParameters: SignedInUserApiUnstarDashboardByUIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.unstarDashboardByUIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update signed in User.\n     */\n    async updateSignedInUserRaw(requestParameters: SignedInUserApiUpdateSignedInUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateSignedInUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update signed in User.\n     */\n    async updateSignedInUser(requestParameters: SignedInUserApiUpdateSignedInUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateSignedInUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Switch user context to the given organization.\n     * Switch user context for signed in user.\n     */\n    async userSetUsingOrgRaw(requestParameters: SignedInUserApiUserSetUsingOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['orgId'] == null) {\n            throw new runtime.RequiredError(\n                'orgId',\n                'Required parameter \"orgId\" was null or undefined when calling userSetUsingOrg().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/using/{org_id}`.replace(`{${\"org_id\"}}`, encodeURIComponent(String(requestParameters['orgId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Switch user context to the given organization.\n     * Switch user context for signed in user.\n     */\n    async userSetUsingOrg(requestParameters: SignedInUserApiUserSetUsingOrgRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.userSetUsingOrgRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  RetrieveJWKS200Response,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    RetrieveJWKS200ResponseFromJSON,\n    RetrieveJWKS200ResponseToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class SigningKeysApi extends runtime.BaseAPI {\n\n    /**\n     * Required permissions None\n     * Get JSON Web Key Set (JWKS) with all the keys that can be used to verify tokens (public keys)\n     */\n    async retrieveJWKSRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RetrieveJWKS200Response>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/signing-keys/keys`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => RetrieveJWKS200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Required permissions None\n     * Get JSON Web Key Set (JWKS) with all the keys that can be used to verify tokens (public keys)\n     */\n    async retrieveJWKS(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RetrieveJWKS200Response> {\n        const response = await this.retrieveJWKSRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  CreateDashboardSnapshot200Response,\n  CreateDashboardSnapshotCommand,\n  DashboardSnapshotDTO,\n  ErrorResponseBody,\n  GetSharingOptions200Response,\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    CreateDashboardSnapshot200ResponseFromJSON,\n    CreateDashboardSnapshot200ResponseToJSON,\n    CreateDashboardSnapshotCommandFromJSON,\n    CreateDashboardSnapshotCommandToJSON,\n    DashboardSnapshotDTOFromJSON,\n    DashboardSnapshotDTOToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    GetSharingOptions200ResponseFromJSON,\n    GetSharingOptions200ResponseToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\nexport interface SnapshotsApiCreateDashboardSnapshotRequest {\n    body: CreateDashboardSnapshotCommand;\n}\n\nexport interface SnapshotsApiDeleteDashboardSnapshotRequest {\n    key: string;\n}\n\nexport interface SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest {\n    deleteKey: string;\n}\n\nexport interface SnapshotsApiGetDashboardSnapshotRequest {\n    key: string;\n}\n\nexport interface SnapshotsApiSearchDashboardSnapshotsRequest {\n    query?: string;\n    limit?: number;\n}\n\n/**\n * \n */\nexport class SnapshotsApi extends runtime.BaseAPI {\n\n    /**\n     * Snapshot public mode should be enabled or authentication is required.\n     * When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.\n     */\n    async createDashboardSnapshotRaw(requestParameters: SnapshotsApiCreateDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateDashboardSnapshot200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createDashboardSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/snapshots`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateDashboardSnapshotCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateDashboardSnapshot200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Snapshot public mode should be enabled or authentication is required.\n     * When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.\n     */\n    async createDashboardSnapshot(requestParameters: SnapshotsApiCreateDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateDashboardSnapshot200Response> {\n        const response = await this.createDashboardSnapshotRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete Snapshot by Key.\n     */\n    async deleteDashboardSnapshotRaw(requestParameters: SnapshotsApiDeleteDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['key'] == null) {\n            throw new runtime.RequiredError(\n                'key',\n                'Required parameter \"key\" was null or undefined when calling deleteDashboardSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/snapshots/{key}`.replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete Snapshot by Key.\n     */\n    async deleteDashboardSnapshot(requestParameters: SnapshotsApiDeleteDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteDashboardSnapshotRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Snapshot public mode should be enabled or authentication is required.\n     * Delete Snapshot by deleteKey.\n     */\n    async deleteDashboardSnapshotByDeleteKeyRaw(requestParameters: SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['deleteKey'] == null) {\n            throw new runtime.RequiredError(\n                'deleteKey',\n                'Required parameter \"deleteKey\" was null or undefined when calling deleteDashboardSnapshotByDeleteKey().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/snapshots-delete/{deleteKey}`.replace(`{${\"deleteKey\"}}`, encodeURIComponent(String(requestParameters['deleteKey']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Snapshot public mode should be enabled or authentication is required.\n     * Delete Snapshot by deleteKey.\n     */\n    async deleteDashboardSnapshotByDeleteKey(requestParameters: SnapshotsApiDeleteDashboardSnapshotByDeleteKeyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteDashboardSnapshotByDeleteKeyRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Snapshot by Key.\n     */\n    async getDashboardSnapshotRaw(requestParameters: SnapshotsApiGetDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        if (requestParameters['key'] == null) {\n            throw new runtime.RequiredError(\n                'key',\n                'Required parameter \"key\" was null or undefined when calling getDashboardSnapshot().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/snapshots/{key}`.replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Get Snapshot by Key.\n     */\n    async getDashboardSnapshot(requestParameters: SnapshotsApiGetDashboardSnapshotRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.getDashboardSnapshotRaw(requestParameters, initOverrides);\n    }\n\n    /**\n     * Get snapshot sharing settings.\n     */\n    async getSharingOptionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetSharingOptions200Response>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/snapshot/shared-options`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => GetSharingOptions200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Get snapshot sharing settings.\n     */\n    async getSharingOptions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetSharingOptions200Response> {\n        const response = await this.getSharingOptionsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * List snapshots.\n     */\n    async searchDashboardSnapshotsRaw(requestParameters: SnapshotsApiSearchDashboardSnapshotsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DashboardSnapshotDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        if (requestParameters['limit'] != null) {\n            queryParameters['limit'] = requestParameters['limit'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/dashboard/snapshots`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DashboardSnapshotDTOFromJSON));\n    }\n\n    /**\n     * List snapshots.\n     */\n    async searchDashboardSnapshots(requestParameters: SnapshotsApiSearchDashboardSnapshotsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DashboardSnapshotDTO>> {\n        const response = await this.searchDashboardSnapshotsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  ListAllProvidersSettings200ResponseInner,\n  SuccessResponseBody,\n  UpdateProviderSettingsRequest,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    ListAllProvidersSettings200ResponseInnerFromJSON,\n    ListAllProvidersSettings200ResponseInnerToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdateProviderSettingsRequestFromJSON,\n    UpdateProviderSettingsRequestToJSON,\n} from '../models/index';\n\nexport interface SsoSettingsApiGetProviderSettingsRequest {\n    key: string;\n}\n\nexport interface SsoSettingsApiRemoveProviderSettingsRequest {\n    key: string;\n}\n\nexport interface SsoSettingsApiUpdateProviderSettingsOperationRequest {\n    key: string;\n    body: UpdateProviderSettingsRequest;\n}\n\n/**\n * \n */\nexport class SsoSettingsApi extends runtime.BaseAPI {\n\n    /**\n     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.\n     * Get an SSO Settings entry by Key\n     */\n    async getProviderSettingsRaw(requestParameters: SsoSettingsApiGetProviderSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListAllProvidersSettings200ResponseInner>> {\n        if (requestParameters['key'] == null) {\n            throw new runtime.RequiredError(\n                'key',\n                'Required parameter \"key\" was null or undefined when calling getProviderSettings().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/sso-settings/{key}`.replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => ListAllProvidersSettings200ResponseInnerFromJSON(jsonValue));\n    }\n\n    /**\n     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.\n     * Get an SSO Settings entry by Key\n     */\n    async getProviderSettings(requestParameters: SsoSettingsApiGetProviderSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListAllProvidersSettings200ResponseInner> {\n        const response = await this.getProviderSettingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.\n     * List all SSO Settings entries\n     */\n    async listAllProvidersSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ListAllProvidersSettings200ResponseInner>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/sso-settings`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ListAllProvidersSettings200ResponseInnerFromJSON));\n    }\n\n    /**\n     * You need to have a permission with action `settings:read` with scope `settings:auth.<provider>:*`.\n     * List all SSO Settings entries\n     */\n    async listAllProvidersSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ListAllProvidersSettings200ResponseInner>> {\n        const response = await this.listAllProvidersSettingsRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Removes the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.\n     * Remove SSO Settings\n     */\n    async removeProviderSettingsRaw(requestParameters: SsoSettingsApiRemoveProviderSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['key'] == null) {\n            throw new runtime.RequiredError(\n                'key',\n                'Required parameter \"key\" was null or undefined when calling removeProviderSettings().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/sso-settings/{key}`.replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Removes the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.\n     * Remove SSO Settings\n     */\n    async removeProviderSettings(requestParameters: SsoSettingsApiRemoveProviderSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeProviderSettingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Inserts or updates the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.\n     * Update SSO Settings\n     */\n    async updateProviderSettingsRaw(requestParameters: SsoSettingsApiUpdateProviderSettingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['key'] == null) {\n            throw new runtime.RequiredError(\n                'key',\n                'Required parameter \"key\" was null or undefined when calling updateProviderSettings().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateProviderSettings().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/v1/sso-settings/{key}`.replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateProviderSettingsRequestToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Inserts or updates the SSO Settings for a provider.  You need to have a permission with action `settings:write` and scope `settings:auth.<provider>:*`.\n     * Update SSO Settings\n     */\n    async updateProviderSettings(requestParameters: SsoSettingsApiUpdateProviderSettingsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateProviderSettingsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  SuccessResponseBody,\n  TeamGroupDTO,\n  TeamGroupMapping,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TeamGroupDTOFromJSON,\n    TeamGroupDTOToJSON,\n    TeamGroupMappingFromJSON,\n    TeamGroupMappingToJSON,\n} from '../models/index';\n\nexport interface SyncTeamGroupsApiAddTeamGroupApiRequest {\n    teamId: number;\n    body: TeamGroupMapping;\n}\n\nexport interface SyncTeamGroupsApiGetTeamGroupsApiRequest {\n    teamId: number;\n}\n\nexport interface SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest {\n    teamId: number;\n    groupId?: string;\n}\n\n/**\n * \n */\nexport class SyncTeamGroupsApi extends runtime.BaseAPI {\n\n    /**\n     * Add External Group.\n     */\n    async addTeamGroupApiRaw(requestParameters: SyncTeamGroupsApiAddTeamGroupApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling addTeamGroupApi().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addTeamGroupApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: TeamGroupMappingToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Add External Group.\n     */\n    async addTeamGroupApi(requestParameters: SyncTeamGroupsApiAddTeamGroupApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addTeamGroupApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get External Groups.\n     */\n    async getTeamGroupsApiRaw(requestParameters: SyncTeamGroupsApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamGroupDTO>>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling getTeamGroupsApi().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamGroupDTOFromJSON));\n    }\n\n    /**\n     * Get External Groups.\n     */\n    async getTeamGroupsApi(requestParameters: SyncTeamGroupsApiGetTeamGroupsApiRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamGroupDTO>> {\n        const response = await this.getTeamGroupsApiRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Remove External Group.\n     */\n    async removeTeamGroupApiQueryRaw(requestParameters: SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling removeTeamGroupApiQuery().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['groupId'] != null) {\n            queryParameters['groupId'] = requestParameters['groupId'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{teamId}/groups`.replace(`{${\"teamId\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Remove External Group.\n     */\n    async removeTeamGroupApiQuery(requestParameters: SyncTeamGroupsApiRemoveTeamGroupApiQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeTeamGroupApiQueryRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AddTeamMemberCommand,\n  CreateTeam200Response,\n  CreateTeamCommand,\n  ErrorResponseBody,\n  Preferences,\n  SearchTeamQueryResult,\n  SetTeamMembershipsCommand,\n  SuccessResponseBody,\n  TeamDTO,\n  TeamMemberDTO,\n  UpdatePrefsCmd,\n  UpdateTeamCommand,\n  UpdateTeamMemberCommand,\n} from '../models/index';\nimport {\n    AddTeamMemberCommandFromJSON,\n    AddTeamMemberCommandToJSON,\n    CreateTeam200ResponseFromJSON,\n    CreateTeam200ResponseToJSON,\n    CreateTeamCommandFromJSON,\n    CreateTeamCommandToJSON,\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PreferencesFromJSON,\n    PreferencesToJSON,\n    SearchTeamQueryResultFromJSON,\n    SearchTeamQueryResultToJSON,\n    SetTeamMembershipsCommandFromJSON,\n    SetTeamMembershipsCommandToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TeamDTOFromJSON,\n    TeamDTOToJSON,\n    TeamMemberDTOFromJSON,\n    TeamMemberDTOToJSON,\n    UpdatePrefsCmdFromJSON,\n    UpdatePrefsCmdToJSON,\n    UpdateTeamCommandFromJSON,\n    UpdateTeamCommandToJSON,\n    UpdateTeamMemberCommandFromJSON,\n    UpdateTeamMemberCommandToJSON,\n} from '../models/index';\n\nexport interface TeamsApiAddTeamMemberRequest {\n    teamId: string;\n    body: AddTeamMemberCommand;\n}\n\nexport interface TeamsApiCreateTeamRequest {\n    body: CreateTeamCommand;\n}\n\nexport interface TeamsApiDeleteTeamByIDRequest {\n    teamId: string;\n}\n\nexport interface TeamsApiGetTeamByIDRequest {\n    teamId: string;\n}\n\nexport interface TeamsApiGetTeamMembersRequest {\n    teamId: string;\n}\n\nexport interface TeamsApiGetTeamPreferencesRequest {\n    teamId: string;\n}\n\nexport interface TeamsApiRemoveTeamMemberRequest {\n    teamId: string;\n    userId: number;\n}\n\nexport interface TeamsApiSearchTeamsRequest {\n    page?: number;\n    perpage?: number;\n    name?: string;\n    query?: string;\n}\n\nexport interface TeamsApiSetTeamMembershipsRequest {\n    teamId: string;\n    body: SetTeamMembershipsCommand;\n}\n\nexport interface TeamsApiUpdateTeamRequest {\n    teamId: string;\n    body: UpdateTeamCommand;\n}\n\nexport interface TeamsApiUpdateTeamMemberRequest {\n    teamId: string;\n    userId: number;\n    body: UpdateTeamMemberCommand;\n}\n\nexport interface TeamsApiUpdateTeamPreferencesRequest {\n    teamId: string;\n    body: UpdatePrefsCmd;\n}\n\n/**\n * \n */\nexport class TeamsApi extends runtime.BaseAPI {\n\n    /**\n     * Add Team Member.\n     */\n    async addTeamMemberRaw(requestParameters: TeamsApiAddTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling addTeamMember().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling addTeamMember().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/members`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: AddTeamMemberCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Add Team Member.\n     */\n    async addTeamMember(requestParameters: TeamsApiAddTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.addTeamMemberRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Add Team.\n     */\n    async createTeamRaw(requestParameters: TeamsApiCreateTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateTeam200Response>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling createTeam().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: CreateTeamCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CreateTeam200ResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Add Team.\n     */\n    async createTeam(requestParameters: TeamsApiCreateTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateTeam200Response> {\n        const response = await this.createTeamRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Delete Team By ID.\n     */\n    async deleteTeamByIDRaw(requestParameters: TeamsApiDeleteTeamByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling deleteTeamByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Delete Team By ID.\n     */\n    async deleteTeamByID(requestParameters: TeamsApiDeleteTeamByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.deleteTeamByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Team By ID.\n     */\n    async getTeamByIDRaw(requestParameters: TeamsApiGetTeamByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TeamDTO>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling getTeamByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TeamDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Team By ID.\n     */\n    async getTeamByID(requestParameters: TeamsApiGetTeamByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TeamDTO> {\n        const response = await this.getTeamByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Team Members.\n     */\n    async getTeamMembersRaw(requestParameters: TeamsApiGetTeamMembersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamMemberDTO>>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling getTeamMembers().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/members`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamMemberDTOFromJSON));\n    }\n\n    /**\n     * Get Team Members.\n     */\n    async getTeamMembers(requestParameters: TeamsApiGetTeamMembersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamMemberDTO>> {\n        const response = await this.getTeamMembersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get Team Preferences.\n     */\n    async getTeamPreferencesRaw(requestParameters: TeamsApiGetTeamPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Preferences>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling getTeamPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/preferences`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PreferencesFromJSON(jsonValue));\n    }\n\n    /**\n     * Get Team Preferences.\n     */\n    async getTeamPreferences(requestParameters: TeamsApiGetTeamPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Preferences> {\n        const response = await this.getTeamPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Remove Member From Team.\n     */\n    async removeTeamMemberRaw(requestParameters: TeamsApiRemoveTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling removeTeamMember().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling removeTeamMember().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/members/{user_id}`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))).replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Remove Member From Team.\n     */\n    async removeTeamMember(requestParameters: TeamsApiRemoveTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.removeTeamMemberRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Team Search With Paging.\n     */\n    async searchTeamsRaw(requestParameters: TeamsApiSearchTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchTeamQueryResult>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        if (requestParameters['perpage'] != null) {\n            queryParameters['perpage'] = requestParameters['perpage'];\n        }\n\n        if (requestParameters['name'] != null) {\n            queryParameters['name'] = requestParameters['name'];\n        }\n\n        if (requestParameters['query'] != null) {\n            queryParameters['query'] = requestParameters['query'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchTeamQueryResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Team Search With Paging.\n     */\n    async searchTeams(requestParameters: TeamsApiSearchTeamsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchTeamQueryResult> {\n        const response = await this.searchTeamsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Takes user emails, and updates team members and admins to the provided lists of users. Any current team members and admins not in the provided lists will be removed.\n     * Set team memberships.\n     */\n    async setTeamMembershipsRaw(requestParameters: TeamsApiSetTeamMembershipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling setTeamMemberships().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling setTeamMemberships().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/members`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SetTeamMembershipsCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Takes user emails, and updates team members and admins to the provided lists of users. Any current team members and admins not in the provided lists will be removed.\n     * Set team memberships.\n     */\n    async setTeamMemberships(requestParameters: TeamsApiSetTeamMembershipsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.setTeamMembershipsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Team.\n     */\n    async updateTeamRaw(requestParameters: TeamsApiUpdateTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling updateTeam().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateTeam().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateTeamCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Team.\n     */\n    async updateTeam(requestParameters: TeamsApiUpdateTeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateTeamRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Team Member.\n     */\n    async updateTeamMemberRaw(requestParameters: TeamsApiUpdateTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling updateTeamMember().'\n            );\n        }\n\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling updateTeamMember().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateTeamMember().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/members/{user_id}`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))).replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateTeamMemberCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Team Member.\n     */\n    async updateTeamMember(requestParameters: TeamsApiUpdateTeamMemberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateTeamMemberRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update Team Preferences.\n     */\n    async updateTeamPreferencesRaw(requestParameters: TeamsApiUpdateTeamPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['teamId'] == null) {\n            throw new runtime.RequiredError(\n                'teamId',\n                'Required parameter \"teamId\" was null or undefined when calling updateTeamPreferences().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateTeamPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/teams/{team_id}/preferences`.replace(`{${\"team_id\"}}`, encodeURIComponent(String(requestParameters['teamId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdatePrefsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update Team Preferences.\n     */\n    async updateTeamPreferences(requestParameters: TeamsApiUpdateTeamPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateTeamPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  SuccessResponseBody,\n} from '../models/index';\nimport {\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n} from '../models/index';\n\n/**\n * \n */\nexport class UserApi extends runtime.BaseAPI {\n\n    /**\n     * Update the email of user given a verification code.\n     * Update user email.\n     */\n    async updateUserEmailRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/email/update`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.VoidApiResponse(response);\n    }\n\n    /**\n     * Update the email of user given a verification code.\n     * Update user email.\n     */\n    async updateUserEmail(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {\n        await this.updateUserEmailRaw(initOverrides);\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  PatchPrefsCmd,\n  Preferences,\n  SuccessResponseBody,\n  UpdatePrefsCmd,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    PatchPrefsCmdFromJSON,\n    PatchPrefsCmdToJSON,\n    PreferencesFromJSON,\n    PreferencesToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    UpdatePrefsCmdFromJSON,\n    UpdatePrefsCmdToJSON,\n} from '../models/index';\n\nexport interface UserPreferencesApiPatchUserPreferencesRequest {\n    body: PatchPrefsCmd;\n}\n\nexport interface UserPreferencesApiUpdateUserPreferencesRequest {\n    body: UpdatePrefsCmd;\n}\n\n/**\n * \n */\nexport class UserPreferencesApi extends runtime.BaseAPI {\n\n    /**\n     * Get user preferences.\n     */\n    async getUserPreferencesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Preferences>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/preferences`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => PreferencesFromJSON(jsonValue));\n    }\n\n    /**\n     * Get user preferences.\n     */\n    async getUserPreferences(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Preferences> {\n        const response = await this.getUserPreferencesRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Patch user preferences.\n     */\n    async patchUserPreferencesRaw(requestParameters: UserPreferencesApiPatchUserPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling patchUserPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/preferences`,\n            method: 'PATCH',\n            headers: headerParameters,\n            query: queryParameters,\n            body: PatchPrefsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Patch user preferences.\n     */\n    async patchUserPreferences(requestParameters: UserPreferencesApiPatchUserPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.patchUserPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Omitting a key (`theme`, `homeDashboardId`, `timezone`) will cause the current value to be replaced with the system default value.\n     * Update user preferences.\n     */\n    async updateUserPreferencesRaw(requestParameters: UserPreferencesApiUpdateUserPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateUserPreferences().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/user/preferences`,\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdatePrefsCmdToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Omitting a key (`theme`, `homeDashboardId`, `timezone`) will cause the current value to be replaced with the system default value.\n     * Update user preferences.\n     */\n    async updateUserPreferences(requestParameters: UserPreferencesApiUpdateUserPreferencesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateUserPreferencesRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Grafana HTTP API.\n * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.\n *\n * The version of the OpenAPI document: 0.0.1\n * Contact: hello@grafana.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  ErrorResponseBody,\n  SearchUserQueryResult,\n  SuccessResponseBody,\n  TeamDTO,\n  UpdateUserCommand,\n  UserOrgDTO,\n  UserProfileDTO,\n  UserSearchHitDTO,\n} from '../models/index';\nimport {\n    ErrorResponseBodyFromJSON,\n    ErrorResponseBodyToJSON,\n    SearchUserQueryResultFromJSON,\n    SearchUserQueryResultToJSON,\n    SuccessResponseBodyFromJSON,\n    SuccessResponseBodyToJSON,\n    TeamDTOFromJSON,\n    TeamDTOToJSON,\n    UpdateUserCommandFromJSON,\n    UpdateUserCommandToJSON,\n    UserOrgDTOFromJSON,\n    UserOrgDTOToJSON,\n    UserProfileDTOFromJSON,\n    UserProfileDTOToJSON,\n    UserSearchHitDTOFromJSON,\n    UserSearchHitDTOToJSON,\n} from '../models/index';\n\nexport interface UsersApiGetUserByIDRequest {\n    userId: number;\n}\n\nexport interface UsersApiGetUserByLoginOrEmailRequest {\n    loginOrEmail: string;\n}\n\nexport interface UsersApiGetUserOrgListRequest {\n    userId: number;\n}\n\nexport interface UsersApiGetUserTeamsRequest {\n    userId: number;\n}\n\nexport interface UsersApiSearchUsersRequest {\n    perpage?: number;\n    page?: number;\n}\n\nexport interface UsersApiUpdateUserRequest {\n    userId: number;\n    body: UpdateUserCommand;\n}\n\n/**\n * \n */\nexport class UsersApi extends runtime.BaseAPI {\n\n    /**\n     * Get user by id.\n     */\n    async getUserByIDRaw(requestParameters: UsersApiGetUserByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProfileDTO>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling getUserByID().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UserProfileDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get user by id.\n     */\n    async getUserByID(requestParameters: UsersApiGetUserByIDRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProfileDTO> {\n        const response = await this.getUserByIDRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get user by login or email.\n     */\n    async getUserByLoginOrEmailRaw(requestParameters: UsersApiGetUserByLoginOrEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProfileDTO>> {\n        if (requestParameters['loginOrEmail'] == null) {\n            throw new runtime.RequiredError(\n                'loginOrEmail',\n                'Required parameter \"loginOrEmail\" was null or undefined when calling getUserByLoginOrEmail().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters['loginOrEmail'] != null) {\n            queryParameters['loginOrEmail'] = requestParameters['loginOrEmail'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/lookup`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UserProfileDTOFromJSON(jsonValue));\n    }\n\n    /**\n     * Get user by login or email.\n     */\n    async getUserByLoginOrEmail(requestParameters: UsersApiGetUserByLoginOrEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProfileDTO> {\n        const response = await this.getUserByLoginOrEmailRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get organizations for user identified by id.\n     * Get organizations for user.\n     */\n    async getUserOrgListRaw(requestParameters: UsersApiGetUserOrgListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserOrgDTO>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling getUserOrgList().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/{user_id}/orgs`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserOrgDTOFromJSON));\n    }\n\n    /**\n     * Get organizations for user identified by id.\n     * Get organizations for user.\n     */\n    async getUserOrgList(requestParameters: UsersApiGetUserOrgListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserOrgDTO>> {\n        const response = await this.getUserOrgListRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get teams for user identified by id.\n     * Get teams for user.\n     */\n    async getUserTeamsRaw(requestParameters: UsersApiGetUserTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<TeamDTO>>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling getUserTeams().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/{user_id}/teams`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TeamDTOFromJSON));\n    }\n\n    /**\n     * Get teams for user identified by id.\n     * Get teams for user.\n     */\n    async getUserTeams(requestParameters: UsersApiGetUserTeamsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<TeamDTO>> {\n        const response = await this.getUserTeamsRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Returns all users that the authenticated user has permission to view, admin permission required.\n     * Get users.\n     */\n    async searchUsersRaw(requestParameters: UsersApiSearchUsersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserSearchHitDTO>>> {\n        const queryParameters: any = {};\n\n        if (requestParameters['perpage'] != null) {\n            queryParameters['perpage'] = requestParameters['perpage'];\n        }\n\n        if (requestParameters['page'] != null) {\n            queryParameters['page'] = requestParameters['page'];\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserSearchHitDTOFromJSON));\n    }\n\n    /**\n     * Returns all users that the authenticated user has permission to view, admin permission required.\n     * Get users.\n     */\n    async searchUsers(requestParameters: UsersApiSearchUsersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserSearchHitDTO>> {\n        const response = await this.searchUsersRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get users with paging.\n     */\n    async searchUsersWithPagingRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchUserQueryResult>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SearchUserQueryResultFromJSON(jsonValue));\n    }\n\n    /**\n     * Get users with paging.\n     */\n    async searchUsersWithPaging(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchUserQueryResult> {\n        const response = await this.searchUsersWithPagingRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Update the user identified by id.\n     * Update user.\n     */\n    async updateUserRaw(requestParameters: UsersApiUpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SuccessResponseBody>> {\n        if (requestParameters['userId'] == null) {\n            throw new runtime.RequiredError(\n                'userId',\n                'Required parameter \"userId\" was null or undefined when calling updateUser().'\n            );\n        }\n\n        if (requestParameters['body'] == null) {\n            throw new runtime.RequiredError(\n                'body',\n                'Required parameter \"body\" was null or undefined when calling updateUser().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        if (this.configuration && this.configuration.apiKey) {\n            headerParameters[\"Authorization\"] = await this.configuration.apiKey(\"Authorization\"); // api_key authentication\n        }\n\n        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {\n            headerParameters[\"Authorization\"] = \"Basic \" + btoa(this.configuration.username + \":\" + this.configuration.password);\n        }\n        const response = await this.request({\n            path: `/users/{user_id}`.replace(`{${\"user_id\"}}`, encodeURIComponent(String(requestParameters['userId']))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: UpdateUserCommandToJSON(requestParameters['body']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessResponseBodyFromJSON(jsonValue));\n    }\n\n    /**\n     * Update the user identified by id.\n     * Update user.\n     */\n    async updateUser(requestParameters: UsersApiUpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SuccessResponseBody> {\n        const response = await this.updateUserRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n"]}